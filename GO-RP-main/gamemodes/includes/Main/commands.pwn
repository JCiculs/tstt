#if defined event_chancegambler
#define             Time_sleep                        60

CMD:test(playerid)	return 1;
CMD:tuido(playerid)
{
    if(gPlayerLogged{playerid} != 0) ShowInventoryy(playerid, playerid);
    return 1;
}

new VoNha[MAX_PLAYERS];
CMD:skinshop123(playerid)
{
	for(new i = 0; i < 22; i++)
	{
		TextDrawShowForPlayer(playerid, Buyskin_TD[i]);
		SelectTextDraw(playerid, COLOR_ORANGE);
		TextDrawShowForPlayer(playerid, Buyskin_TD[32]);
		TextDrawShowForPlayer(playerid, Buyskin_TD[33]);
		SetPVarInt(playerid, "Skinshop", 1);
	}
    return 1;
}

CMD:myskin(playerid)
{
    for(new i = 11; i < 32; i++)
	{
		TextDrawShowForPlayer(playerid, Buyskin_TD[0]);
		TextDrawShowForPlayer(playerid, Buyskin_TD[i]);
		SelectTextDraw(playerid, COLOR_ORANGE);
		TextDrawShowForPlayer(playerid, Buyskin_TD[32]);
		TextDrawShowForPlayer(playerid, Buyskin_TD[33]);
		SetPVarInt(playerid, "Selecskin", 1);
	}
    return 1;
}

/*CMD:guivitri(playerid, params[])
{
	new string[128], playa, string[150],Float:posx,Float:pos, szZone[MAX_ZONE_NAME];
	if(sscanf(params, "ud", playa, )) return SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG:{FFFFFF} /guivitri [playerid]");
	{
		GetPlayerPos(playerid,posx, posy, posz);
		GetPlayer3DZone(playerid, szZone, sizeof(szZone));
		format(string, sizeof(string), "Ban da gui vi tri cho %s", GetPlayerNameEx(giveplayerid));
		SendClientMessage(playerid, COLOR_WHITE, string)
	}	
	return 1;
}*/


/*CMD:xemvitri(playerid, params[])
{

}
*/
CMD:toadocuatoi(playerid, params[])
{
	new
	szZone[MAX_ZONE_NAME],
	string[150],
	Float:posx,
	Float:posy,
	Float:posz;
	GetPlayerPos(playerid,posx, posy, posz);
	GetPlayer3DZone(playerid, szZone, sizeof(szZone));
	format(string, sizeof(string), "TOA DO CUA BAN: Toa do cua ban la: %s (Toa do: %0.2f, %0.2f, %0.2f).", szZone,posx,posy,posz);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:toado(playerid, params[])
{
	new Float: pos[3];
	if(sscanf(params, "fff", pos[0], pos[1], pos[2])) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /toado [x] [y] [z]");
	SetPlayerCheckpoint(playerid, pos[0], pos[1], pos[2], 5.0);
	CP[playerid] = 1;
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	SendClientMessage(playerid, COLOR_WHITE, "Ban da danh dau vi tri tren ban do");
	return 1;
}

CMD:ngu(playerid ,params[])
{
	if(VoNha[playerid] == 1)
	{
		TogglePlayerControllable(playerid,0);
		ApplyAnimation(playerid, "CRACK", "crckdeth4", 4.0, 0, 1, 1, 1, 0, 1);
		SetTimerEx("sleeping", 100000, 0, "ii", playerid);
	}
	else {
		SendClientMessage(playerid,COLOR_WHITE,"Ban khong o nha");
		return 1;
	}
	return 1;
}

CMD:settrangthai1(playerid ,params[])
{
	if(PlayerInfo[playerid][pAdmin] > 1)
	{
		PlayerInfo[playerid][pBuonngu] = 0;
		PlayerInfo[playerid][pHunger] = 0;
		PlayerInfo[playerid][pKhatNuoc] = 0;
	}
	else SendClientMessage(playerid, COLOR_WHITE,"Ban khong duoc phep su dung lenh nay");
	return 1;
}

CMD:settrangthai(playerid ,params[])
{
	if(PlayerInfo[playerid][pAdmin] > 1)
	{
//		new string[128];
		PlayerInfo[playerid][pKhatNuoc] = 100;
		PlayerInfo[playerid][pHunger] = 100;
		PlayerInfo[playerid][pBuonngu] = 100;
	}
	else SendClientMessage(playerid, COLOR_WHITE,"Ban khong duoc phep su dung lenh nay");
	return 1;
}

CMD:chetaoxe(playerid, params[])
{
    if(PlayerInfo[playerid][pLevel] > 0)
	{
	   ShowPlayerDialog(playerid, DIALOG_GHEPXE, DIALOG_STYLE_LIST,"HE THONG CHE TAO","Che Tao Phuong Tien\t5000 Sat\t1000 Ruby\t50 Vang","Dong Y","Huy");
 }
 else
	{
	   SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay.");
	}
	return 1;
}

CMD:xetnghiem(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid, 3.0, 158.3771,-23.1119,1254.9158))
	{
	   ShowPlayerDialog(playerid, DIALOG_MUAMAU,DIALOG_STYLE_LIST,"Xet nghiem","100$\t100hp","Chon","Huy");
	}
	else
	{
	   SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay.");
	}
	return 1;
}

CMD:checkcar(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 2)
	{
		new carid;
		if(sscanf(params, "d", carid)) return SendClientMessageEx(playerid, COLOR_LIGHTRED, "SU DUNG:{FFFFFF} /checkcar [carid]");

		new Float:cwx2,Float:cwy2,Float:cwz2;
		GetVehiclePos(carid, cwx2, cwy2, cwz2);
		new string[128],zone[MAX_ZONE_NAME];
		GetPlayer3DZone(playerid, zone, sizeof(zone));
		format(string, sizeof(string), "CHECK CAR: %s, %0.2f %0.2f %0.2f, World: %d.", zone,cwx2, cwy2, cwz2, GetVehicleVirtualWorld(carid));
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:setthoigian(playerid, params[])
{
	new string[128], playa, health;
	if(sscanf(params, "ud", playa, health)) return SendClientMessageEx(playerid, COLOR_LIGHTRED, "SU DUNG:{FFFFFF} /setthoigian [Player] [0-60]");
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(IsPlayerConnected(playa))
		{
			if(playa != INVALID_PLAYER_ID)
			{
				PlayerInfo[playa][pConnectSeconds] = health;
				format(string, sizeof(string), "[MAYCHU] Ban da set thoi gian online cho %s la %d phut.", GetPlayerNameEx(playa), health);
				SendClientMessageEx(playerid, COLOR_LIGHTRED, string);
			}
		}
		else return SendClientMessageEx(playerid,COLOR_LIGHTRED,"Nguoi choi khong hop le.");
	}
	return 1;
}

CMD:takeoffgarage(playerid, params[]) {
	if(PlayerInfo[playerid][pChutiemxang] != 1)
	{
	    return 1;
	}
	ShowPlayerDialog(playerid, DIALOG_TAKEOFFGARAGE,DIALOG_STYLE_INPUT,"{FFFFFF}Take Garage", "{FFFFFF} Ghi Ten Nhan Vien Garage Muon Take Vao.","Ok","");
	return 1;
}
CMD:takeoffadmin(playerid, params[]) { //trang 3
    if(PlayerInfo[playerid][pAdmin] != 8)
    {
        return 1;
    }
    ShowPlayerDialog(playerid, DIALOG_TAKEOFFADMIN,DIALOG_STYLE_INPUT,"{FFFFFF}Take Admin", "{FFFFFF}Ghi ten admin muon take vao.","Ok","");
    return 1;
}
CMD:setsuaxe(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 7){

        new giveplayerid;

        if(sscanf(params, "u", giveplayerid)) {
            SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /setsuaxe [player]");
        }
        else if(IsPlayerConnected(giveplayerid)) {
            if(PlayerInfo[giveplayerid][pChutiemxang] == 1) return SendClientMessageEx(playerid,-1,"Nguoi nay da co PW Garage roi");
            PlayerInfo[giveplayerid][pChutiemxang] = 1;
            PlayerInfo[giveplayerid][pNhanvienxang] = 1;
            new string[128];
            format(string,sizeof(string),"Ban da cap leader cho Mechanic cho %s",GetPlayerNameEx(giveplayerid));
            SendClientMessageEx(playerid,-1,string);
            format(string,sizeof(string),"Ban da duoc cap leader Mechanic boi %s",GetPlayerNameEx(playerid));
            SendClientMessageEx(giveplayerid,COLOR_LIGHTBLUE,string);
        }
        else return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
    }
    return 1;
}

CMD:capneon(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 7){

        new giveplayerid;

        if(sscanf(params, "u", giveplayerid)) {
            SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /capneon [player]");
        }
        else if(IsPlayerConnected(giveplayerid)) {
            if(PlayerInfo[giveplayerid][pNeon] == 1) return SendClientMessageEx(playerid,-1,"Nguoi nay da co den neon roi");
            PlayerInfo[giveplayerid][pNeon] = 1;
            new string[128];
            format(string,sizeof(string),"Ban da cap neon cho %s",GetPlayerNameEx(giveplayerid));
            SendClientMessageEx(playerid,-1,string);
            format(string,sizeof(string),"Ban da duoc cap den neon tu %s",GetPlayerNameEx(playerid));
            SendClientMessageEx(giveplayerid,COLOR_LIGHTBLUE,string);
        }
        else return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
    }
    return 1;
}

CMD:deleteneon(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 7) {

        new giveplayerid;

        if(sscanf(params, "u", giveplayerid)) {
            SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /deleteneon [player]");
        }
        else if(IsPlayerConnected(giveplayerid)) {
            if(PlayerInfo[giveplayerid][pNeon] == 0) return SendClientMessageEx(playerid,-1,"Nguoi choi nay khong co den neon");
            PlayerInfo[giveplayerid][pNeon] = 0;
            new string[128];
            format(string,sizeof(string),"Ban da xoa neon cua %s",GetPlayerNameEx(giveplayerid));
            SendClientMessageEx(playerid,-1,string);
        }
        else return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
    }
    return 1;
}

CMD:xoaneon(playerid,params[])
{
    if(Player_Neon[playerid] == 0) return SendClientMessageEx(playerid,-1,"{F81414}Loi: {FFFFFF}Ban khong gan den neon tren xe nao!");
    StopBlinkNeons(Player_Neon[playerid]);
    Player_Neon[playerid] = 0;
    SendClientMessageEx(playerid,COLOR_LIGHTBLUE,"Ban da xoa den neon tren chiec xe cua ban!");
    return 1;
}

CMD:neon(playerid,params[])
{
    if(PlayerInfo[playerid][pNeon] != 1) return SendClientMessage(playerid,-1,"{F81414}Loi: {FFFFFF}Ban chua mua den Neon!");
    if(Player_Neon[playerid] != GetPlayerVehicleID(playerid) && Player_Neon[playerid] != 0) return SendClientMessageEx(playerid,-1,"{F81414}Loi: {FFFFFF}Ban da gan neon cho mot chiec xe khac, hay dung kenh [/xoaneon]");
    if(!IsVehicleValid(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SendClientMessage(playerid, -1, "{F81414}Loi: {FFFFFF}Ban khong the su dung neon len phuong tien nay.");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "{F81414}Loi: {FFFFFF}Ban phai la nguoi lai moi co the lap dat neon.");
    ShowPlayerDialog(playerid, DIALOG_NEONTYPES, DIALOG_STYLE_LIST, "Neon Settings", "Neon binh thuong\nNeon nhap nhay deu mau\nNeon nhap nhay xen ke\nRemove All Neon", "Select", "Cancel");
    return 1;
}

CMD:chapnhancauhoi(playerid, params[])
{
    if(PlayerInfo[playerid][pHelper] >= 2 || PlayerInfo[playerid][pAdmin] >= 2) {
        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la Helper.");
	}
	else {

		new Player, string[128];

		if(sscanf(params, "u", Player)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /chapnhancauhoi [PlayerID]");
		}
		else if(Player == playerid) {
		    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the tra loi cau hoi cua chinh minh.");
		}
		else if(!IsPlayerConnected(Player)) {
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		}
		else if(GetPVarInt(Player, "CAUHOINEWB") == 0) {
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong co cau hoi nao.");
		}
		else {
            new advert[256];
            GetPVarString(Player, "CAUHOINEWBTEXT", advert, 256);
            ShowPlayerDialog(playerid, TRALOICAUHOI, DIALOG_STYLE_INPUT, "Tra loi cau hoi", advert, "Tra Loi", "Tu choi");
            strcpy(TraLoiCauHoi[playerid], advert, 256);
            SetPVarString(playerid, "TRALOICAUHOITEXT", TraLoiCauHoi[playerid]);
            SetPVarInt(playerid, "CAUHOINEWBID", Player);
		    format(string, sizeof(string), "* %s da chap nhan cau hoi cua %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(Player));
			SendHelperMessage(TEAM_AZTECAS_COLOR, string);
			format(string, sizeof(string), "* Helper %s da chap nhan cau hoi cua ban.",GetPlayerNameEx(playerid));
			SendClientMessageEx(Player, COLOR_LIGHTBLUE, string);
			DeletePVar(Player, "CAUHOINEWB");
			DeletePVar(Player, "CAUHOINEWBTEXT");
			ReportCount[playerid]++;
			ReportHourCount[playerid]++;
			AddCAReportToken(playerid);
			return 1;

		}
	}
	return 1;
}


CMD:xemcauhoi(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] >= 2)
	{
		new string[128];
		SendClientMessageEx(playerid, COLOR_GREEN, "____________________ YEU CAU TRA LOI _____________________");
		foreach(new i: Player)
		{
			if(GetPVarInt(i, "CAUHOINEWB"))
			{
				format(string, sizeof(string), "%s  | ID: %i dang co cau hoi chua duoc tra loi.", GetPlayerNameEx(i), i);
				SendClientMessageEx(playerid, COLOR_REPORT, string);
			}
		}
		SendClientMessageEx(playerid, COLOR_GREEN, "_________________________________________________________");
	}
	return 1;
}

/*CMD:newb(playerid, params[])
{
	if(gPlayerLogged{playerid} == 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban chua dang nhap.");
	if(PlayerInfo[playerid][pTut] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
	if((nonewbie) && PlayerInfo[playerid][pAdmin] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Kenh hoi dap newbie dang tat!");
	if(PlayerInfo[playerid][pNMute] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ban da bi cam noi chuyen tren kenh hoi dap.");
	if(gNewbie[playerid] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ban da tat kenh hoi dap, /tognewbie de mo!");

	new string[128];
	if(gettime() < NewbieTimer[playerid])
	{
		format(string, sizeof(string), "Ban phai cho %d giay de tiep tuc hoi dap tren kenh nay.", NewbieTimer[playerid]-gettime());
		SendClientMessageEx(playerid, COLOR_GREY, string);
		return 1;
	}
	if(PlayerInfo[playerid][pHelper] >= 1 && PlayerInfo[playerid][pAdmin] < 2) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung kenh nay!");
	if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1)
	{
		ShowPlayerDialog(playerid, CAUHOINEWB, DIALOG_STYLE_INPUT, "{3399FF}Nhap cau hoi", "{FFFFFF}Hay nhap cau hoi ma ban can hoi.", "Dong y", "Bo qua");
		return 1;
	}
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/newb)ie [noi dung]");
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	format(string, sizeof(string), "** Admin %s: %s", GetPlayerNameEx(playerid), params);
	}
	foreach(new n: Player)
	{
		if (gNewbie[n]==0)
		{
			SendClientMessageEx(n, COLOR_NEWBIE, string);
		}
	}
	return 1;
}*/

CMD:inventory(playerid, params[])
{
	if(gPlayerLogged{playerid} != 0) ShowInventory(playerid, playerid);
	return 1;
}
CMD:muasungvip(playerid,params[])
{
	ShowPlayerDialog(playerid, DIALOG_BUYWEAPONS,DIALOG_STYLE_LIST,"MUA SUNG","Vu khi\nDan","Chon","Huy");
	return 1;
}
CMD:nhatvukhi(playerid, const params[])
{
	if(GetPVarInt(playerid, "IsInArena") >= 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Ban khong the lam viec do bay gio, ban dang trong arena!");
		return 1;
	}
	if(GetPVarInt( playerid, "EventToken") != 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang trong event.");
		return 1;
	}
	new Float:health;
	GetPlayerHealth(playerid, health);
	if (health < 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ban khong the nhat sung khi mau nho hon 20!");
		return 1;
	}

	if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||PlayerInfo[playerid][pHospital]!=0||GetPlayerState(playerid) == 7)
	{
		SendClientMessage (playerid, COLOR_GRAD2, "Ban khong the lam dieu do bay gio.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
		SendClientMessage (playerid, COLOR_GRAD2, "Ban khong the dua sung trong xe!");
		return 1;
	}
	if(PlayerInfo[playerid][pLawyerFreeTime] > 1)
	{
	  SendClientMessage(playerid, COLOR_LIGHTRED, "Ban can phai doi 10s tu lan chuyen doi vu khi de co the tiep tuc nhat sung sung!");
	  return 1;
	}
	if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		new string[58];
		format(string, sizeof(string), "Ban phai cho %d giay truoc khi tiep tuc nhat sung.", GetPVarInt(playerid, "GiveWeaponTimer"));
		SendClientMessage(playerid,COLOR_GREY,string);
		return 1;
	}
    for(new i = 0; i < sizeof(DropInfo); i++)
    {
        if (IsPlayerInRangeOfPoint(playerid, 2.0,DropInfo[i][DropGunPosX],DropInfo[i][DropGunPosY],DropInfo[i][DropGunPosZ]))
        {
            if(GetPlayerVirtualWorld(playerid) == DropInfo[i][DropGunVWorld] && GetPlayerInterior(playerid) == DropInfo[i][DropGunVWorld])
            {
                DestroyDynamicObject(DropObject[i]);
                DropInfo[i][DropGunPosX] = 0.0;
                DropInfo[i][DropGunPosY] = 0.0;
                DropInfo[i][DropGunPosZ] = 0.0;
                GivePlayerValidWeapon(playerid, DropInfo[i][DropGunModel], 1);
				new string3[128];
   		        format(string3, sizeof(string3), "* %s da nhat sung tu duoi dat len.", GetPlayerNameEx(playerid));
                ProxDetector(15.0, playerid, string3, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, false, false, false, false, 0);
                return 1;
            }
        }
    }
    return 1;
}

CMD:vutvukhi(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ban dang Onduty, ban khong the lam dieu nay!");
	if(isnull(params))
	{
		SendClientMessage(playerid, COLOR_GREY, "Su dung: /vutvukhi [weapon name]");
		SendClientMessage(playerid, COLOR_GRAD2, "Ten Co San: sdpistol, shotgun, 9mm, mp5, uzi, tec9, rifle, deagle, ak47, m4, spas12, camera");
		SendClientMessage(playerid, COLOR_GRAD2, "Ten Co San: flowers, knuckles, baseballbat, cane, shovel, poolcue, golfclub, katana, dildo, parachute");
		if(PlayerInfo[playerid][pMember] == 8)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Ten Co San: knife");
		}
		if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 ||  PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pDivision] == 2 || (PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] >= 5) || PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pMember] == 11)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Ten Co San: nitestick, mace, smoke, chainsaw, fire");
		}
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
		SendClientMessage (playerid, COLOR_GRAD2, "Ban khong the vut sung trong xe!");
		return 1;
	}
	if(GetPVarInt(playerid, "IsInArena") >= 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Ban khong the lam viec do bay gio, ban dang trong Dau Truong!");
		return 1;
	}
	if(GetPVarInt( playerid, "EventToken") != 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang trong event.");
		return 1;
	}
	new string[128];
	if(strcmp(params, "sdpistol", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 2 ] == 23)
		{
			if(pTazer{playerid} == 1) return SendClientMessage(playerid, COLOR_RED, "Ban khong the vut bo sung dien.");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo silenced pistol.");
			format(string, sizeof(string), "* %s da vut bo silenced pistol.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 23);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 23;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "camera", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 9 ] == 43)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo camera.");
			format(string, sizeof(string), "* %s da vut bo camera.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 43);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 43;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "nitestick", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 3)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo nitestick.");
			format(string, sizeof(string), "* %s da vut bo nitestick.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 3);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 3;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "mace", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][9] == 41)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo mace.");
			format(string, sizeof(string), "* %s da vut bo mace.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 41);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 41;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "knife", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 4)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo dao.");
			format(string, sizeof(string), "* %s da vut bo dao.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 4);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 4;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "9mm", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 2 ] == 22)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo 9mm pistol.");
			format(string, sizeof(string), "* %s da vut bo 9mm pistol.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 22);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 22;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "shotgun", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 3 ] == 25)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo shotgun.");
			format(string, sizeof(string), "* %s da vut bo shotgun.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 25);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 25;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "mp5", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 4 ] == 29)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo MP5.");
			format(string, sizeof(string), "* %s da vut bo MP5.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 29);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 29;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "uzi", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 4 ] == 28)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo Micro SMG.");
			format(string, sizeof(string), "* %s da vut bo Micro SMG.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 28);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 28;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "uzi", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 4 ] == 32)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo Tec-9.");
			format(string, sizeof(string), "* %s da vut bo Tec-9.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 32);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 32;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "deagle", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 2 ] == 24)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo Desert Eagle.");
			format(string, sizeof(string), "* %s da vut bo Desert Eagle.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 24);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 24;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "rifle", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 6 ] == 33)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo rifle.");
			format(string, sizeof(string), "* %s da vut bo rifle.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 33);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 33;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "ak47", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 5 ] == 30)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo AK-47.");
			format(string, sizeof(string), "* %s da vut bo AK-47.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 30);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 30;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "m4", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 5 ] == 31)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo M4.");
			format(string, sizeof(string), "* %s da vut bo M4.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 31);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 31;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "spas12", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 3 ] == 27)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo SPAS-12.");
			format(string, sizeof(string), "* %s da vut bo SPAS-12.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 27);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 27;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "flowers", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 10 ] == 14)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo flowers.");
			format(string, sizeof(string), "* %s da vut bo flowers.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 14);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 14;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "knuckles", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 0 ] == 1)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo brass knuckles.");
			format(string, sizeof(string), "* %s da vut bo brass knuckles.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 1);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 1;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "baseballbat", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 5)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo baseball bat.");
			format(string, sizeof(string), "* %s da vut bo baseball bat.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 5);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 5;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "cane", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 10 ] == 15)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo cane.");
			format(string, sizeof(string), "* %s da vut bo cane.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pGuns][ 10 ] = 0;
			RemovePlayerWeapon(playerid, 15);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 15;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "shovel", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 6)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo shovel.");
			format(string, sizeof(string), "* %s da vut bo shovel.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 6);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 6;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "golfclub", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 2)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo golf club.");
			format(string, sizeof(string), "* %s da vut bo golf club.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 2);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 2;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "katana") == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 8)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo katana.");
			format(string, sizeof(string), "* %s da vut bo katana.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 8);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 8;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "dildo", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 10 ] == 10)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo dildo.");
			format(string, sizeof(string), "* %s da vut bo dildo.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 10);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 10;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "parachute", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 11 ] == 46)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo parachute.");
			format(string, sizeof(string), "* %s da vut bo parachute.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 46);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 46;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "smoke", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 8 ] == 17)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo smoke grenade.");
			format(string, sizeof(string), "* %s da vut bo smoke grenade.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 17);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 17;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "chainsaw", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 9)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo chainsaw.");
			format(string, sizeof(string), "* %s da vut bo chainsaw.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 9);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 9;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "fire", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 9 ] == 42)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo fire extinguisher.");
			format(string, sizeof(string), "* %s da vut bo fire extinguisher.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 42);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 42;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "minigun", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 7 ] == 38)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo minigun.");
			format(string, sizeof(string), "* %s da vut bo minigun.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 38);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 38;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else if(strcmp(params, "poolcue", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 7)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ban da vut bo pool cue.");
			format(string, sizeof(string), "* %s da vut bo pool cue.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 7);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            new GunID = 7;
            DropGun(playerid, GunID,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban khong co loai vu khi do!");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ten vu khi khong hop le.");
	}
	return 1;
}
/*CMD:thaydan(playerid, params[])
{
	new choice[32];
	new weapon, ammosd;
	if(sscanf(params, "s[32]", choice))
	{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /thaydan [name]");
	        SendClientMessageEx(playerid, COLOR_YELLOW,"- - - - - - - - - - - - - - - - - - -");
	        SendClientMessageEx(playerid, COLOR_WHITE,"Deagle, Shotgun, Mp5, Sdpistol");
	        SendClientMessageEx(playerid, COLOR_WHITE,"9mm, Uzi, Tec-9, Spass-12");
	        SendClientMessageEx(playerid, COLOR_WHITE,"Sniper, M4, Ak-47, Rilfe");
	        SendClientMessageEx(playerid, COLOR_YELLOW,"- - - - - - - - - - - - - - - - - - -");
			return 1;
	}

	if(PlayerInfo[playerid][pJailTime] > 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the su dung trong nha tu.");
		return 1;
	}

	else if(strcmp(choice,"9mm",true) == 0)///
	{

        GetPlayerWeaponData(playerid, 2, weapon, ammosd);
        if(weapon == 22)
        {
        if(PlayerInfo[playerid][pBangDan][ 0 ] > 0)
        {
        if(PlayerInfo[playerid][pAmmo][ 1 ] >= 80) return SendClientMessageEx(playerid, -1,"Chi co the nap dan duoi 80 vien");
        if(PlayerInfo[playerid][pAmmo][ 1 ] > 80) PlayerInfo[playerid][pAmmo][ 1 ] = 80;
        
        //PlayerInfo[playerid][pAmmo][ 1 ] = 0;
        //GivePlayerAmmoEx(playerid, weapon, 8);
        //SetPlayerArmedWeapon(playerid, 0);
        PlayerInfo[playerid][pBangDan][ 0 ] -= 1;
        SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban da thay 1 bang dan 9mm thanh cong.");
        ApplyAnimation(playerid, "PYTHON", "python_reload", 4.0, 0, 0, 0, 0, 0, 1);
        GameTextForPlayer(playerid, "Dang Nap Dan", 2000, 3);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bang dan 9mm.");
        }
        else SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban khong co so huu vu khi nay nen khong the thay dan.");
		return 1;
	}


	else if(strcmp(choice,"sdpistol",true) == 0)///
	{

        GetPlayerWeaponData(playerid, 2, weapon, ammosd);
        if(weapon == 23)
        {
        if(PlayerInfo[playerid][pBangDan][ 0 ] > 0)
        {
        if(PlayerInfo[playerid][pAmmo][ 1 ] >= 80) return SendClientMessageEx(playerid, -1,"Chi co the nap dan duoi 80 vien");
        if(PlayerInfo[playerid][pAmmo][ 1 ] > 80) PlayerInfo[playerid][pAmmo][ 1 ] = 80;
        //PlayerInfo[playerid][pAmmo][ 1 ] = 0;
        //GivePlayerAmmoEx(playerid, weapon, 8);
        //SetPlayerArmedWeapon(playerid, 0);
        PlayerInfo[playerid][pBangDan][ 0 ] -= 1;
        SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban da thay 1 bang dan Sdpistol thanh cong.");
        ApplyAnimation(playerid, "PYTHON", "python_reload", 4.0, 0, 0, 0, 0, 0, 1);
        GameTextForPlayer(playerid, "Dang Nap Dan", 2000, 3);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bang dan Sdpistol.");
        }
        else SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban khong co so huu vu khi nay nen khong the thay dan.");
		return 1;
	}
 	else if(strcmp(choice,"shotgun",true) == 0)///
	{
        GetPlayerWeaponData(playerid, 3, weapon, ammosd);
        if(weapon == 25)
        {
        if(PlayerInfo[playerid][pBangDan][ 2 ] > 0)
        {
        if(PlayerInfo[playerid][pAmmo][ 2 ] >= 80) return SendClientMessageEx(playerid, -1,"Chi co the nap dan duoi 80 vien");
        if(PlayerInfo[playerid][pAmmo][ 2 ] > 80) PlayerInfo[playerid][pAmmo][ 2 ] = 80;
        
        //PlayerInfo[playerid][pAmmo][ 2 ] = 0;
        //GivePlayerAmmoEx(playerid, weapon, 12);
        //SetPlayerArmedWeapon(playerid, 25);
        PlayerInfo[playerid][pBangDan][ 2 ] -= 1;
        SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban da thay 1 bang dan Shotgun thanh cong.");
        ApplyAnimation(playerid, "BUDDY", "buddy_reload", 4.0, 0, 0, 0, 0, 0, 1);
        GameTextForPlayer(playerid, "Dang Nap Dan", 2000, 3);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bang dan Shotgun.");
        }
        else SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban khong co so huu vu khi nay nen khong the thay dan.");
		return 1;
	}

	else if(strcmp(choice,"m4",true) == 0)///
	{
        GetPlayerWeaponData(playerid, 5, weapon, ammosd);
        if(weapon == 31)
        {
        if(PlayerInfo[playerid][pBangDan][ 4 ] > 0)
        {
        if(PlayerInfo[playerid][pAmmo][ 4 ] >= 250) return SendClientMessageEx(playerid, -1,"Chi co the nap dan duoi 250 vien");
        if(PlayerInfo[playerid][pAmmo][ 4 ] > 250) PlayerInfo[playerid][pAmmo][ 4 ] = 250;
        
        //PlayerInfo[playerid][pAmmo][ 4 ] = 0;
        //GivePlayerAmmoEx(playerid, weapon, 12);
        //SetPlayerArmedWeapon(playerid, 0);
        PlayerInfo[playerid][pBangDan][ 4 ] -= 1;
        SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban da thay 1 bang dan M4 thanh cong.");
        ApplyAnimation(playerid, "PYTHON", "python_reload", 4.0, 0, 0, 0, 0, 0, 1);
        GameTextForPlayer(playerid, "Dang Nap Dan", 2000, 3);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bang dan M4.");
        }
        else SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban khong co so huu vu khi nay nen khong the thay dan.");
		return 1;
	}

    else if(strcmp(choice,"ak47",true) == 0)///
	{
        GetPlayerWeaponData(playerid, 5, weapon, ammosd);
        if(weapon == 30)
        {
        if(PlayerInfo[playerid][pBangDan][ 4 ] > 0)
        {
        if(PlayerInfo[playerid][pAmmo][ 4 ] >= 250) return SendClientMessageEx(playerid, -1,"Chi co the nap dan duoi 250 vien");
        if(PlayerInfo[playerid][pAmmo][ 4 ] > 250) PlayerInfo[playerid][pAmmo][ 4 ] = 250;
        
        //PlayerInfo[playerid][pAmmo][ 4 ] = 0;
        //GivePlayerAmmoEx(playerid, weapon, 12);
        //SetPlayerArmedWeapon(playerid, 0);
        PlayerInfo[playerid][pBangDan][ 8 ] -= 1;
        SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban da thay 1 bang dan Ak-47 thanh cong.");
        ApplyAnimation(playerid, "PYTHON", "python_reload", 4.0, 0, 0, 0, 0, 0, 1);
        GameTextForPlayer(playerid, "Dang Nap Dan", 2000, 3);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bang dan Ak-47.");
        }
        else SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban khong co so huu vu khi nay nen khong the thay dan.");
		return 1;
	}

    else if(strcmp(choice,"Uzi",true) == 0)////
	{
        GetPlayerWeaponData(playerid, 4, weapon, ammosd);
        if(weapon == 28)
        {
        if(PlayerInfo[playerid][pBangDan][ 3 ] > 0)
        {
        if(PlayerInfo[playerid][pAmmo][ 3 ] >= 250) return SendClientMessageEx(playerid, -1,"Chi co the nap dan duoi 250 vien");
        if(PlayerInfo[playerid][pAmmo][ 3 ] > 250) PlayerInfo[playerid][pAmmo][ 3 ] = 250;
        
        //PlayerInfo[playerid][pAmmo][ 3 ] = 0;
        //GivePlayerAmmoEx(playerid, weapon, 12);
        //SetPlayerArmedWeapon(playerid, 0);
        PlayerInfo[playerid][pBangDan][ 3 ] -= 1;
        SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban da thay 1 bang dan Uzi thanh cong.");
        ApplyAnimation(playerid, "PYTHON", "python_reload", 4.0, 0, 0, 0, 0, 0, 1);
        GameTextForPlayer(playerid, "Dang Nap Dan", 2000, 3);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bang dan Uzi.");
        }
        else SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban khong co so huu vu khi nay nen khong the thay dan.");
		return 1;
	}

    else if(strcmp(choice,"Tec9",true) == 0) ///
	{
        GetPlayerWeaponData(playerid, 4, weapon, ammosd);
        if(weapon == 32)
        {
        if(PlayerInfo[playerid][pBangDan][ 3 ] > 0)
        {
        if(PlayerInfo[playerid][pAmmo][ 3 ] >= 250) return SendClientMessageEx(playerid, -1,"Chi co the nap dan duoi 250 vien");
        if(PlayerInfo[playerid][pAmmo][ 3 ] > 250) PlayerInfo[playerid][pAmmo][ 3 ] = 250;
        
        //PlayerInfo[playerid][pAmmo][ 3 ] = 0;
       // G//ivePlayerAmmoEx(playerid, weapon, 12);
        //SetPlayerArmedWeapon(playerid, 0);
        PlayerInfo[playerid][pBangDan][ 3 ] -= 1;
        SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban da thay 1 bang dan Tec-9 thanh cong.");
        ApplyAnimation(playerid, "PYTHON", "python_reload", 4.0, 0, 0, 0, 0, 0, 1);
        GameTextForPlayer(playerid, "Dang Nap Dan", 2000, 3);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bang dan Tec-9.");
        }
        else SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban khong co so huu vu khi nay nen khong the thay dan.");
		return 1;
	}

	else if(strcmp(choice,"spass-12",true) == 0) ///
	{
        GetPlayerWeaponData(playerid, 3, weapon, ammosd);
        if(weapon == 27)
        {
        if(PlayerInfo[playerid][pBangDan][ 10 ] > 0)
        {
        if(PlayerInfo[playerid][pAmmo][ 2 ] >= 120) return SendClientMessageEx(playerid, -1,"Chi co the nap dan duoi 120 vien");
        if(PlayerInfo[playerid][pAmmo][ 2 ] > 120) PlayerInfo[playerid][pAmmo][ 2 ] = 120;
        
        //PlayerInfo[playerid][pAmmo][ 2 ] = 0;
        //GivePlayerAmmoEx(playerid, weapon, 12);
        //SetPlayerArmedWeapon(playerid, 0);
        PlayerInfo[playerid][pBangDan][ 2 ] -= 1;
        SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban da thay 1 bang dan Spas-12 thanh cong.");
        ApplyAnimation(playerid, "BUDDY", "buddy_reload", 4.0, 0, 0, 0, 0, 0, 1);
        GameTextForPlayer(playerid, "Dang Nap Dan", 2000, 3);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bang dan Spas-12.");
        }
        else SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban khong co so huu vu khi nay nen khong the thay dan.");
		return 1;
	}

    else if(strcmp(choice,"sniper",true) == 0)
	{
        GetPlayerWeaponData(playerid, 6, weapon, ammosd);
        if(weapon == 34)
        {
        if(PlayerInfo[playerid][pBangDan][ 5 ] > 0)
        {
        if(PlayerInfo[playerid][pAmmo][ 5 ] >= 35) return SendClientMessageEx(playerid, -1,"Chi co the nap dan duoi 35 vien");
        if(PlayerInfo[playerid][pAmmo][ 5 ] > 35) PlayerInfo[playerid][pAmmo][ 5 ] = 35;
        
        //PlayerInfo[playerid][pAmmo][ 5 ] = 0;
       // GivePlayerAmmoEx(playerid, weapon, 5);
        //SetPlayerArmedWeapon(playerid, 0);
        PlayerInfo[playerid][pBangDan][ 5 ] -= 1;
        SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban da thay 1 bang dan Sniper thanh cong.");
        ApplyAnimation(playerid, "BUDDY", "buddy_reload", 4.0, 0, 0, 0, 0, 0, 1);
        GameTextForPlayer(playerid, "Dang Nap Dan", 2000, 3);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bang dan Sniper.");
        }
        else SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban khong co so huu vu khi nay nen khong the thay dan.");
		return 1;
	}

    else if(strcmp(choice,"rilfe",true) == 0)
	{
        GetPlayerWeaponData(playerid, 6, weapon, ammosd);
        if(weapon == 33)
        {
        if(PlayerInfo[playerid][pBangDan][ 5 ] > 0)
        {
        if(PlayerInfo[playerid][pAmmo][ 5 ] >= 45) return SendClientMessageEx(playerid, -1,"Chi co the nap dan duoi 45 vien");
        if(PlayerInfo[playerid][pAmmo][ 5 ] > 45) PlayerInfo[playerid][pAmmo][ 5 ] = 45;
        
        //PlayerInfo[playerid][pAmmo][ 5 ] = 0;
        //GivePlayerAmmoEx(playerid, weapon, 5);
        //SetPlayerArmedWeapon(playerid, 0);
        PlayerInfo[playerid][pBangDan][ 5 ] -= 1;
        SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban da thay 1 bang dan Rilfe thanh cong.");
        ApplyAnimation(playerid, "BUDDY", "buddy_reload", 4.0, 0, 0, 0, 0, 0, 1);
        GameTextForPlayer(playerid, "Dang Nap Dan", 2000, 3);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bang dan Rilfe.");
        }
        else SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban khong co so huu vu khi nay nen khong the thay dan.");
		return 1;
	}

    else if(strcmp(choice,"deagle",true) == 0)///
	{
        GetPlayerWeaponData(playerid, 2, weapon, ammosd);
        if(weapon == 24)
        {
        if(PlayerInfo[playerid][pBangDan][ 1 ] > 0)
        {
        if(PlayerInfo[playerid][pAmmo][ 1 ] >= 80) return SendClientMessageEx(playerid, -1,"Chi co the nap dan duoi 80 vien");
        if(PlayerInfo[playerid][pAmmo][ 1 ] > 80) PlayerInfo[playerid][pAmmo][ 1 ] = 80;
        //PlayerInfo[playerid][pAmmo][ 1 ] = 0;
        //GivePlayerAmmoEx(playerid, weapon, 8);
       // //SetPlayerArmedWeapon(playerid, 0);
        PlayerInfo[playerid][pBangDan][ 1 ] -= 1;
        SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban da thay 1 bang dan Deagle thanh cong.");
        ApplyAnimation(playerid, "PYTHON", "python_reload", 4.0, 0, 0, 0, 0, 0, 1);
        GameTextForPlayer(playerid, "Dang Nap Dan", 2000, 3);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bang dan Deagle.");
        }
        else SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban khong co so huu vu khi nay nen khong the thay dan.");
		return 1;
	}

 	else if(strcmp(choice,"mp5",true) == 0)///
	{
    	GetPlayerWeaponData(playerid, 4, weapon, ammosd);
    	if(weapon == 29)
    	{
    		if(PlayerInfo[playerid][pBangDan][ 3 ] > 0)
    		{
    			if(PlayerInfo[playerid][pAmmo][ 3 ] >= 250) return SendClientMessageEx(playerid, -1,"Chi co the nap dan duoi 250 vien");
    			if(PlayerInfo[playerid][pAmmo][ 3 ] > 250) PlayerInfo[playerid][pAmmo][ 3 ] = 250;
    
    			//PlayerInfo[playerid][pAmmo][ 3 ] = 0;
    			//GivePlayerAmmoEx(playerid, weapon, 31);
    			//SetPlayerArmedWeapon(playerid, 0);
    			PlayerInfo[playerid][pBangDan][ 3 ] -= 1;
    			SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban da thay 1 bang dan Mp5 thanh cong.");
    			ApplyAnimation(playerid, "BUDDY", "buddy_reload", 4.0, 0, 0, 0, 0, 0, 1);
    			GameTextForPlayer(playerid, "Dang Nap Dan", 2000, 3);
 			}
    		else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bang dan Mp5.");
    	}
    	else SendClientMessageEx(playerid, COLOR_GREEN, "[!] Ban khong co so huu vu khi nay nen khong the thay dan.");
    }
	return 1;
}

CMD:duabangdan(playerid, params[])
{
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lam dieu nay khi dang trong su kien Hunger Games!");
	if(GetPVarInt(playerid, "IsInArena") >= 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay trong dau truong!");
		return 1;
	}
	if(GetPVarInt( playerid, "EventToken") != 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang trong su kien.");
		return 1;
	}
	new Float:health;
	GetPlayerHealth(playerid, health);
	if (health < 80)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Khong the dua bang dan khi mau duoi 80");
		return 1;
	}

	if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||PlayerInfo[playerid][pHospital]!=0||GetPlayerState(playerid) == 7)
	{
		SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong the lam dieu nay vao luc nay.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
		SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong co the dua bang dan khi dang tren xe!");
		return 1;
	}

	if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		new string[58];
		format(string, sizeof(string), "Ban phai doi  %d giay moi co the dua bang dan.", GetPVarInt(playerid, "GiveWeaponTimer"));
		SendClientMessageEx(playerid,COLOR_GREY,string);
		return 1;
	}

	new string[128], giveplayerid, weapon[64];
	if(sscanf(params, "us[64]", giveplayerid, weapon))
	{
	        SendClientMessageEx(playerid, COLOR_GREY,"/duabangdan [playerid] [ten bang dan]");
	        SendClientMessageEx(playerid, COLOR_WHITE,"Sdpistol,Deagle,Caliber,SMG,Dan7,300M");
			return 1;
	}
	if (!IsPlayerConnected(giveplayerid)) {
		return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	if(IsPlayerInAnyVehicle(giveplayerid))
	{
		SendClientMessageEx (playerid, COLOR_GRAD2, "You can not give weapons to players in vehicles!");
		return 1;
	}
	if(giveplayerid == playerid)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give a weapon to yourself!");
		return 1;
	}
	if(!ProxDetectorS(3.0, playerid, giveplayerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
		return 1;
	}
	if(PlayerInfo[playerid][pMember] != PlayerInfo[giveplayerid][pMember] && PlayerInfo[playerid][pMember] != INVALID_GROUP_ID)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give weapons to players outside your faction!");
		return 1;
	}
	if(PlayerInfo[giveplayerid][pConnectHours] < 2 || PlayerInfo[giveplayerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "That person is currently restricted from possessing weapons");
	if(IsPlayerInAnyVehicle(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Please exit the vehicle, before using this command.");
	if(strcmp(weapon, "spidstol", true) == 0)
	{
		if(PlayerInfo[playerid][pBangDan][ 0 ] > 1)
		{
			if(PlayerInfo[playerid][pBangDan][ 0 ] > 1)
			{
                PlayerInfo[playerid][pBangDan][ 0 ] -= 1;
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da dua cho anh ta bang dan [Spidstol]");
				format(string, sizeof(string), "* %s da dua cho %s mot bang dan [Spidstol]", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[giveplayerid][pBangDan][ 0 ] += 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "ban khong co bang dan Spidstol!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du bang dan!");
		}
	}
	else if(strcmp(weapon, "Deagle", true) == 0)
	{
		if(PlayerInfo[playerid][pBangDan][ 1 ] > 1)
		{
			if(PlayerInfo[playerid][pBangDan][ 1 ] > 1)
			{
                PlayerInfo[playerid][pBangDan][ 1 ] -= 1;
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da dua cho anh ta bang dan [Deagle]");
				format(string, sizeof(string), "* %s da dua cho %s mot bang dan [Deagle]", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[giveplayerid][pBangDan][ 1 ] += 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "ban khong co bang dan Deagle!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du bang dan!");
		}
	}
 	else if(strcmp(weapon, "Caliber", true) == 0)
	{
		if(PlayerInfo[playerid][pBangDan][ 2 ] > 1)
		{
			if(PlayerInfo[playerid][pBangDan][ 2 ] > 1)
			{
                PlayerInfo[playerid][pBangDan][ 2 ] -= 1;
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da dua cho anh ta bang dan [Caliber]");
				format(string, sizeof(string), "* %s da dua cho %s mot bang dan [Caliber]", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[giveplayerid][pBangDan][ 2 ] += 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "ban khong co bang dan Caliber!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du bang dan!");
		}
	}
	else if(strcmp(weapon, "sdpistol", true) == 0)
	{
		if(PlayerInfo[playerid][pBangDan][ 3 ] > 1)
		{
			if(PlayerInfo[playerid][pBangDan][ 3 ] > 1)
			{
                PlayerInfo[playerid][pBangDan][ 3 ] -= 1;
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da dua cho anh ta bang dan [SMG]");
				format(string, sizeof(string), "* %s da dua cho %s mot bang dan [SMG]", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[giveplayerid][pBangDan][ 3 ] += 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "ban khong co bang dan SMG!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du bang dan!");
		}
	}
	else if(strcmp(weapon, "Dan7", true) == 0)
	{
		if(PlayerInfo[playerid][pBangDan][ 4 ] > 1)
		{
			if(PlayerInfo[playerid][pBangDan][ 4 ] > 1)
			{
                PlayerInfo[playerid][pBangDan][ 4 ] -= 1;
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da dua cho anh ta bang dan [7.62 mm]");
				format(string, sizeof(string), "* %s da dua cho %s mot bang dan [7.62 mm]", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[giveplayerid][pBangDan][ 4 ] += 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "ban khong co bang dan 7.62 mm!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du bang dan!");
		}
	}
 	else if(strcmp(weapon, "300M", true) == 0)
	{
		if(PlayerInfo[playerid][pBangDan][ 5 ] > 1)
		{
			if(PlayerInfo[playerid][pBangDan][ 5 ] > 1)
			{
                PlayerInfo[playerid][pBangDan][ 5 ] -= 1;
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da dua cho anh ta bang dan [300 Magnum]");
				format(string, sizeof(string), "* %s da dua cho %s mot bang dan [300 Magnum]", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[giveplayerid][pBangDan][ 5 ] += 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "ban khong co bang dan 300 Magnum!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du bang dan!");
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban da sai ten bang dan vui long nhap lai");
	return 1;
}*/


/*CMD:bangdan(playerid, params[])
{
    new str[2460], str1[1280], str2[1280], str3[1280], str4[1280], str5[1280], str6[1280],name[123];
    format(str1, sizeof(str), "{FFFFFF}[Spidstol][8 vien] - 9mm, Sdpistol: %d/30 {FFFF33}Bang Dan" , PlayerInfo[playerid][pBangDan][ 0 ]);
    format(str2, sizeof(str), "{FFFFFF}[Deagle][8 vien] - Deagle: %d/30 {FFFF33}Bang Dan" , PlayerInfo[playerid][pBangDan][ 1 ]);
    format(str3, sizeof(str), "{FFFFFF}[Caliber][12 vien] - Shotgun,Spass,SO-Shot: %d/30 {FFFF33}Bang Dan", PlayerInfo[playerid][pBangDan][ 2 ]);
    format(str4, sizeof(str), "{FFFFFF}[SMG][12 vien] - Mp5,Tec-9,UZI: %d/30 {FFFF33}Bang Dan", PlayerInfo[playerid][pBangDan][ 3 ]);
    format(str5, sizeof(str), "{FFFFFF}[7.62 mm][12 vien] - M4,AK47: %d/30 {FFFF33}Bang Dan", PlayerInfo[playerid][pBangDan][ 4 ]);
    format(str6, sizeof(str), "{FFFFFF}[300 Magnum][5 vien] - Rift,Sniper: %d/30 {FFFF33}Bang Dan", PlayerInfo[playerid][pBangDan][ 5 ]);
    format(str, sizeof(str), "%s\n\n%s\n\n%s\n\n%s\n\n%s\n\n%s\n", str1,str2,str3,str4,str5,str6);
    format(name, sizeof(name), "Tui Bang Dan Cua %s",GetPlayerNameEx(playerid));
	ShowPlayerDialog(playerid, DIALOG_NOTHING, DIALOG_STYLE_MSGBOX, name, str, "Dong Lai", "");
	return 1;
}*/
CMD:khongthayxe(playerid)
{
	SetPlayerVirtualWorld(playerid, 1);
	SetPlayerVirtualWorld(playerid, 0);
	return 1;
}

CMD:locklogin(playerid){
	if(login == 0){
		login = 1;
		SendClientMessage(playerid, -1, "Da bat login");
	}
	else
	{
		login = 0;
		SendClientMessage(playerid, -1, "Da tat login");
	}
	return 1;
}
CMD:usemedkit(playerid,params[])
{
	if(PlayerInfo[playerid][pMedkit] < 1) return ChatHoTro(playerid,255,"Ban khong co medkit",5000);
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health  > 99) return ChatHoTro(playerid,255,"Suc khoe cua ban dang tot, chua can hoi phuc",5000);
	TogglePlayerControllable(playerid,0);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 1, 0, 0, 0, 0, 1);
	cmd_me(playerid, "Mo hop medkit ra va tien hanh bang bo ban than minh...");
	// await task_ms(30000);
	SetTimerEx("UseMedkitEx", 30000, false, "d", playerid);
	return 1;
}
forward UseMedkitEx(playerid);
public UseMedkitEx(playerid)
{
	TogglePlayerControllable(playerid,1);
	SetPlayerHealth(playerid, 100);
	PlayerInfo[playerid][pMedkit] -= 1;
	ClearAnimations(playerid);
	cmd_do(playerid, "Bang Bo Thanh Cong...");
	ChatHoTro(playerid,255,"Ban da hoi mau thanh cong",5000);
}
CMD:banmedkit(playerid,params[])
{
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return SendClientMessageEx(playerid,-1,"Su dung: /banmedkit [ID/NAME]");
	if(giveplayerid == playerid) return ChatHoTro(playerid,255,"Ban khong the tu ban cho minh",5000);
	if(!IsPlayerConnected(giveplayerid)) return ChatHoTro(playerid,255,"Nguoi choi do khong online",5000);
	if(PlayerInfo[playerid][pMedkit] < 1) return ChatHoTro(playerid,255,"Ban da het medkit",5000);
	new Float:Pos[3];
	GetPlayerPos(giveplayerid, Pos[0], Pos[1], Pos[2]);
	if(IsPlayerInRangeOfPoint(playerid,5.0,Pos[0],Pos[1],Pos[2]))
	{
		//if(IsAMedic(playerid))
		{
			new str[128], string[128];
			SetPVarInt(giveplayerid, "muamedkit", playerid);
			format(str,sizeof(str),"Bac si %s da de nghi ban mua 1 medkit voi gia 500$",GetPlayerNameEx(playerid));
			ShowPlayerDialog(giveplayerid,DIALOG_BANMEDKIT,DIALOG_STYLE_MSGBOX,"De nghi mua medkit",str,"Mua","Tu choi");
			format(string, sizeof(string), " Ban da ban 1 medkit voi 500$ cho %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		//else return ChatHoTro(playerid,255,"Ban khong phai bac si",5000);
	}
	else return ChatHoTro(playerid,255,"Nguoi choi do khong o gan ban",5000);
	return 1;
}
/*CMD:trian(playerid)
{
	if(PlayerInfo[playerid][pDonateRank] >= 1){
		return SendClientMessage(playerid, COLOR_GREY, "Ban da nhan qua roi");
	}
	PlayerInfo[playerid][pDonateRank] = 3;
	PlayerInfo[playerid][pTempVIP] = 0;
	PlayerInfo[playerid][pBuddyInvited] = 0;
	PlayerInfo[playerid][pVIPSellable] = 1;
	PlayerInfo[playerid][pVIPExpire] = gettime()+604800*1;
	SendClientMessage(playerid, COLOR_YELLOW, "Ban da nhan duoc vip vang 7 ngay de su dung");
	if(PlayerInfo[playerid][pVIPM] == 0)
	{
		PlayerInfo[playerid][pVIPM] = VIPM;
		VIPM++;
	}
	LoadPlayerDisabledVehicles(playerid);
	OnPlayerStatsUpdate(playerid);
	new str[128];
	format(str,sizeof(str),"%s Vua nhan vip gold 7 ngay",GetPlayerNameEx(playerid));
	foreach(new i: Player)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			SendClientMessage(playerid, -1, str);
		}
	}
	return 1;
}*/
CMD:trangthai(playerid)
{
	if(TrangThaiDoi[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Ban da bat thanh trang thai");
		TrangThaiDoi[playerid] = 1;
	}
	else
	{
		TrangThaiDoi[playerid] = 0;
		SendClientMessage(playerid, -1, "Ban da tat trang thai doi");
	}
	return 1;
}
CMD:capgiayphep(playerid, params[])
{
	new
		str[128],
		giveplayerid;
	if(IsACop(playerid))
	{
		if(sscanf(params, "i",giveplayerid)) return SendClientMessage(playerid, -1, "/capgiayphep [ID/NAME]");
		if(PlayerInfo[playerid][pRank] >= 6)
		{

			if(PlayerInfo[giveplayerid][pGpvk] == 1) return SendClientMessage(playerid, COLOR_GREY, "Nguoi nay da co giay phep vu khi");
			PlayerInfo[giveplayerid][pGpvk] = 1;
			format(str, sizeof(str),"{116dd4}[LAW] {FFFFFF}Ban da cap giay phep cho %s",GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, -1, str);
			format(str, sizeof(str), "{116dd4}%s da cap giay phep cho ban",GetPlayerNameEx(playerid));
			SendClientMessage(giveplayerid, -1, str);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Ban khong du chuc vu de cap");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Ban khong du quyen han");
	return 1;
}
CMD:togpm(playerid, params[])
{
	if(TogPm[playerid] == 0){
		TogPm[playerid] = 1;
		SendClientMessage(playerid, -1, "Ban tat kenh [PM] /togpm lan nua de bat");
	}
	else
	{
		TogPm[playerid] = 0;
		SendClientMessage(playerid, -1, "Ban da bat kenh [PM]");
	}
	return 1;
}
/*CMD:bomxang(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(TruckerOwner[playerid][Player_Vehicle_ID] == vehicleid)
		{
			VehicleFuel[vehicleid] = VehicleFuel[vehicleid] + 100.0;
			if(VehicleFuel[vehicleid] > 100.0) VehicleFuel[vehicleid] = 100.0;
			SendClientMessage(playerid, -1, "Ban da bom xang cho phuong tien cua ban");	
		}
		else if(PizzaPlayer[playerid][Player_Vehicle_ID] == vehicleid)
		{
			VehicleFuel[vehicleid] = VehicleFuel[vehicleid] + 100.0;
			if(VehicleFuel[vehicleid] > 100.0) VehicleFuel[vehicleid] = 100.0;
			SendClientMessage(playerid, -1, "Ban da bom xang cho phuong tien cua ban");
		}
		else return SendClientMessage(playerid, -1, "Ban khong so huu phuong tien nao");
	}
	else SendClientMessage(playerid, COLOR_GREY,"Ban can tren xe");
	SendClientMessage(playerid, COLOR_GREY,"Ban phai den cay xang de do xang!");
	return 1;
}*/
CMD:togn(playerid, params[])
{
	if(TogN[playerid] == 0)
	{
		TogN[playerid] = 1;
		SendClientMessage(playerid, -1, "Ban da tat kenh chat newbie neu muon bat lai hay /togn");
	}
	else
	{
		TogN[playerid] = 0;
		SendClientMessage(playerid, -1, "Ban da bat kenh chat newbie neu muon tat hay /togn lan una");
	}
	return 1;
}
/*CMD:n(playerid, params[])
{
	new str[128];
	if(PlayerInfo[playerid][pLevel] >= 2 && PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1)
	{
		return SendClientMessage(playerid, -1, "Ban khong du quyen han de su dung kenh chat nay");
	}
	if(isnull(params))
	{
		return SendClientMessage(playerid, -1, "USE: /n [NOIDUNG]");
	}
	if(gettime() < HelperTimer[playerid])
	{
		format(str, sizeof(str), "Ban phai doi %d giay de tiep truc tro chuyen tren kenh nay.", HelperTimer[playerid]-gettime());
		SendClientMessageEx(playerid, COLOR_GREY, str);
		return 1;
	}
	if(PlayerInfo[playerid][pHelper]<1&&PlayerInfo[playerid][pAdmin] < 2)
	{
		HelperTimer[playerid] = gettime()+10;
	}
	else if(PlayerInfo[playerid][pHelper]==1&&PlayerInfo[playerid][pAdmin] < 2)
	{
		HelperTimer[playerid] = gettime()+5;
	}
	else if(PlayerInfo[playerid][pAdmin] == 1)
	{
		HelperTimer[playerid] = gettime()+5;
	}
	else if(PlayerInfo[playerid][pHelper]>=2&&PlayerInfo[playerid][pAdmin] < 2)
	{
		HelperTimer[playerid] = gettime()+5;
	}
	format(str, sizeof(str),"{3399FF}'Newbie'{FFFFFF} %s [%d] %s",GetPlayerNameEx(playerid),playerid,params);
	foreach(new i: Player)
	{
		if(TogN[playerid] == 0 && PlayerInfo[playerid][pLevel] <= 1)
		{
			SendClientMessage(i, -1, str);
		}
	}
	return 1;
}*/
CMD:suckhoe(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 20.0, 1402.7172,-38.3610,1000.8640))
	{
		return ShowPlayerDialog(playerid, DIALOG_SUCKHOE,DIALOG_STYLE_LIST,"Benh vien","Suc khoe 50\nSuc khoe 75\nSuc khoe 100","{ae0202 }Chon","{FFFFFF}Huy");
	}
	else SendClientMessage(playerid, -1, "Ban khong o trong benh vien");
	return 1;
}
CMD:trogiup(playerid, parmas[])
{
	return ShowPlayerDialog(playerid, DIALOG_TROGIUP, DIALOG_STYLE_LIST,"Cac cau hoi trong game","Jobs\nCau lenh\nFaction - Family","{ae0202 }Chon","{FFFFFF}Huy");
}
CMD:fixketvw(playerid, params[])
{
	new string[128];
	//if (PlayerInfo)
	if (PlayerInfo[playerid][pJailTime] > 0)
	{
		SendClientMessageEx(playerid,COLOR_GREY,"Ban khong the su dung khi dang o trong tu.");
		return 1;
	}
	if(GetPVarInt(playerid, "IsInArena") >= 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang o dau truong!");
	if(PlayerTied[playerid] != 0 || PlayerCuffed[playerid] != 0)
	{
		SendClientMessageEx(playerid,COLOR_GREY,"Ban khong the su dung");
		return 1;
	}
	if(gettime() < VwTimer[playerid])
	{
		format(string, sizeof(string), "Ban phai cho %d giay de tiep tuc su dung", VwTimer[playerid]-gettime());
		SendClientMessageEx(playerid, COLOR_GREY, string);
		return 1;
	}
	VwTimer[playerid] = gettime()+60;
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	PlayerInfo[playerid][pVW] = 0;
	PlayerInfo[playerid][pInt] = 0;
	SendClientMessage(playerid, -1, "Ban da ve the gioi hien tai");
	return 1;
}
CMD:pm(playerid, params[])
{
	new str[128], giveplayerid;
	if(sscanf(params,"us[128]",giveplayerid,params)) return SendClientMessage(playerid, -1, "/pm [playerid/maskid] [noi dung]");
	if(gettime() < HelperTimer[playerid])
	{
		format(str, sizeof(str), "Ban phai doi %d giay de tiep truc tro chuyen tren kenh nay.", HelperTimer[playerid]-gettime());
		SendClientMessageEx(playerid, COLOR_GREY, str);
		return 1;
	}
	if(PlayerInfo[playerid][pHelper]<1&&PlayerInfo[playerid][pAdmin] < 2)
	{
		HelperTimer[playerid] = gettime()+15;
	}
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, -1, "Doi phuong khong truy cap");
	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Ban khong the tu PM ban than minh");
	if(TogPm[giveplayerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Doi phuong da tat kenh PM");
	format(str, sizeof(str),"{d5d657}[PM] %s da gui tin nhan tu xa cho ban noi dung la:%s {FFFFFF}%s ",GetPlayerNameEx(playerid),params);
	SendClientMessage(giveplayerid, -1, str);
	format(str, sizeof(str),"(( PM gui den {E88707}%s{FFE661} (%d): %s )): %s",GetPlayerNameEx(giveplayerid), playerid, params);
	SendClientMessage(playerid, -1, str);
	return 1;
}

CMD:setrank(playerid, params[])
{
	new str[128], giveplayerid, namerank[64];
	if(PlayerInfo[playerid][pLeader] == INVALID_GROUP_ID)
	{
		return SendClientMessage(playerid, -1, "Ban khong phai la mot lanh dao");
	}
	if(sscanf(params, "us[64]",giveplayerid,namerank)) return SendClientMessage(playerid, -1, "/setrank [ID/NAME] [TEXT]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, -1, "Nguoi choi khong truy cap");
	if(IsACop(giveplayerid))
	{
		format(PlayerInfo[giveplayerid][pNameRank], sizeof(str), namerank);
		format(str,sizeof(str),"%s da dieu chinh chuc vu cua ban thanh %s",GetPlayerNameEx(playerid),namerank);
		SendClientMessage(giveplayerid, -1, str);
		format(str,sizeof(str),"Ban da cap nhap cho %s chuc vu la %s",GetPlayerNameEx(giveplayerid),namerank);
		SendClientMessage(playerid, -1, str);
	}
	else SendClientMessage(playerid, -1, "Day khong phai la nguoi cua to chuc");
	return 1;
}

CMD:setzone(playerid, params[])
{
	new str[128], khuvuc[32], giveplayerid;
	if(PlayerInfo[playerid][pLeader] == INVALID_GROUP_ID)
		return SendClientMessage(playerid, COLOR_GREY,"Ban khong du quyen han");
	if(sscanf(params, "us[32]",giveplayerid,khuvuc)) return SendClientMessage(playerid, -1, "/setzone [ID/NAME] [Khu vuc]");
	if(!IsPlayerConnected(giveplayerid))
		return SendClientMessageEx(playerid,COLOR_GREY,"Nguoi choi khong truy cap");
	if(IsACop(giveplayerid))
	{
		format(PlayerInfo[giveplayerid][pKhuVuc], sizeof(str), khuvuc);
		print(PlayerInfo[giveplayerid][pKhuVuc]);
		format(str, sizeof(str),"%s da cap nhap cho ban khu vuc la %s",GetPlayerNameEx(playerid),khuvuc);
		SendClientMessage(giveplayerid, -1, str);
		format(str, sizeof(str), "Ban da cap nhap cho %s khu vuc la %s",GetPlayerNameEx(giveplayerid),khuvuc);
		SendClientMessage(playerid, -1, str);
	}
	else SendClientMessage(playerid, COLOR_GREY,"Doi phuong khong phai la nguoi cua to chuc");
	return 1;
}
/*CMD:tuidan(playerid, params[])
{
    new str[2460], str1[1280], str2[1280], str3[1280], str4[1280], str5[1280], str6[1280], str7[1280], str8[1280], name[1280];
    format(str1, sizeof(str), "{FFFFFF}Ammo - 9mm, Sdpid, DE: {e34646}%d {FFFFFF}Vien", PlayerInfo[playerid][pAmmo][ 1 ]); // 9mm, sdpid, DE
    format(str2, sizeof(str), "Ammo - Shotgun, Spawn-off, Combat shotgun : {e34646}%d {FFFFFF}Vien", PlayerInfo[playerid][pAmmo][ 2 ]);// Shotgun, spawn-off, combat shotgun
    format(str3, sizeof(str), "Ammo - Uzi, Tec9, Mp5: {e34646}%d {FFFFFF}Vien", PlayerInfo[playerid][pAmmo][ 3 ]);// Uzi, Tec9, Mp5
    format(str4, sizeof(str), "Ammo - M4, Ak 47: {e34646}%d {FFFFFF}Vien", PlayerInfo[playerid][pAmmo][ 4 ]);// M4, Ak 47
    format(str5, sizeof(str), "Ammo - Rifle, Sniper: {e34646}%d {FFFFFF}Vien", PlayerInfo[playerid][pAmmo][ 5 ]);// rifle, sniper
    format(str6, sizeof(str), "Ammo - HS Rocket, RPG, Flamethrower, Minigun: {e34646}%d {FFFFFF}Vien", PlayerInfo[playerid][pAmmo][ 6 ]);// Bazoka, RPG, Firegun, minigun
    format(str, sizeof(str), "%s\n\n%s\n\n%s\n\n%s\n\n%s\n\n%s\n\n%s\n\n%s", str1,str2,str3,str4,str5,str6,str7,str8);
    format(name, sizeof(name), "So Dan Cua:%s",GetPlayerNameEx(playerid));
	ShowPlayerDialog(playerid, DIALOG_NOTHING, DIALOG_STYLE_MSGBOX, name, str, "Dong Lai", "");
	return 1;
}*/

CMD:setmph(playerid, const params[])
{
	new giveplayerid, str[3000], amount;
	if(PlayerInfo[playerid][pLeader] == INVALID_GROUP_ID)
		return SendClientMessage(playerid, COLOR_GREY,"* Ban khong the su dung lenh nay.");

	if(!IsPlayerConnected(giveplayerid))
		return SendClientMessage(playerid, COLOR_GREY,"* Nguoi choi khong hop le.");

	if(sscanf(params, "ud", giveplayerid ,amount)) return SendClientMessage(playerid, -1, "SU DUNG: /setmph [ID/NAME] [Ma Phu Hieu]");

	if(PlayerInfo[giveplayerid][pMph] > 1)
		return SendClientMessage(playerid, COLOR_GREY,"* Nguoi do da co ma phu hieu roi.");
	
	if(IsACop(giveplayerid))
	{
		PlayerInfo[giveplayerid][pMph] = amount;
		format(str, sizeof(str),"> Ban da duoc cap ma phu hieu, ma phu hieu cua ban la: %d.",PlayerInfo[giveplayerid][pMph]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, str);
	}
	else SendClientMessage(playerid, COLOR_GREY, "* Nguoi do khong phai la canh sat.");
	
	return 1;
}
CMD:ntv22ntv(playerid,params[])
{
	Kick(playerid);
	return 1;
}
CMD:goicapcuu(playerid,params[])
{
	if(GetPVarInt(playerid, "Injured") == 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong bi thuong, ban khong the goi EMS!");
		return 1;
	}

	if(gettime() < PlayerInfo[playerid][pServiceTime]) return SendClientMessage(playerid, COLOR_WHITE, "Ban phai cho 30 giay truoc khi su dung lenh nay mot lan nua. " );
	new zone[MAX_ZONE_NAME], string[300];
	GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
	SetPVarInt(playerid, "EMSAttempt", 1);
	SendClientMessageEx(playerid, COLOR_WHITE, "EMS da  duoc thong bao ve vi tri hien tai cua ban va dang tren duong.");
	format(string, sizeof(string), "Cong Van khuan cap (%d) %s duoc nguoi bi thuong tai %s, Ho yeu cau van chuyen cap cuu ngay lam tuc.",playerid, GetPlayerNameEx(playerid), zone);
	SendGroupMessage(3, TEAM_MED_COLOR, string);
	PlayerInfo[playerid][pServiceTime] = gettime()+30;
	return 1;
}


CMD:chetaovukhi(playerid,params[])
{
	if(isnull(params))
	{
		SendClientMessageEx(playerid, -1, "SU DUNG: /chetaovukhi [noidung]");
		SendClientMessageEx(playerid, -1, "9mm: Gia:5500 Vat lieu");
		SendClientMessageEx(playerid, -1, "Shotgun: Gia:8200 Vat lieu");
		SendClientMessageEx(playerid, -1, "mp5: Gia:8000 Vat lieu");
		SendClientMessageEx(playerid, -1, "Uzi: Gia:6700 Vat lieu");
		SendClientMessageEx(playerid, -1, "Bat: Gia:100 Vat lieu");
		SendClientMessageEx(playerid, -1, "Katana: Gia:120 Vat lieu");
		return 1;
	}
	if(PlayerInfo[playerid][pConnectHours] < 2)
		return SendClientMessage(playerid, COLOR_GREY, "Ban chua co the su dung vu khi");
	//if(PlayerInfo[playerid][pFMember] > INVALID_FAMILY_ID)
	{

		if(strcmp(params,"9mm",true) == 0)
		{

			if(PlayerInfo[playerid][pMats] < 5500)
				return SendClientMessage(playerid, COLOR_GREY, "Ban khong du 5500 vat lieu");
			PlayerInfo[playerid][pMats] -= 5500;
			GivePlayerValidWeapon(playerid, 22, 60000);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da rap duoc mot khau sung luc 9mm");

		}
		else if(strcmp(params,"shotgun",true) == 0)
		{

			if(PlayerInfo[playerid][pMats] < 8200)
				return SendClientMessage(playerid, COLOR_GREY, "Ban khong du 8200 vat lieu");
			PlayerInfo[playerid][pMats] -= 8200;
			GivePlayerValidWeapon(playerid, 25, 60000);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da rap duoc mot khau sung shotgun"); 

		}
		else if(strcmp(params,"uzi",true) == 0)
		{

			if(PlayerInfo[playerid][pMats] < 6700)
				return SendClientMessage(playerid, COLOR_GREY, "Ban khong du 6700 vat lieu");
			PlayerInfo[playerid][pMats] -= 6700;
			GivePlayerValidWeapon(playerid, 28, 60000);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da rap duoc mot khau sung Uzi"); 

		}
		else if(strcmp(params,"bat",true) == 0)
		{

			if(PlayerInfo[playerid][pMats] < 100)
				return SendClientMessage(playerid, COLOR_GREY, "Ban khong du 100 vat lieu");
			PlayerInfo[playerid][pMats] -= 100;
			GivePlayerValidWeapon(playerid, 5, 60000);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban Da Che Tao Thanh Cong Gay Bong Chay.");
		}
		else if(strcmp(params,"mp5",true) == 0)
		{

			if(PlayerInfo[playerid][pMats] < 8000)
				return SendClientMessage(playerid, COLOR_GREY, "Ban khong du 8000 vat lieu");
			PlayerInfo[playerid][pMats] -= 8000;
			GivePlayerValidWeapon(playerid, 29, 60000);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban Da Che Tao Thanh Cong Mp5.");
		}
		else if(strcmp(params,"katana",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] < 120)
				return SendClientMessage(playerid, COLOR_GREY, "Ban khong du 120 vat lieu");
			PlayerInfo[playerid][pMats] -= 120;
			GivePlayerValidWeapon(playerid, 8, 60000);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban Da Che Tao Thanh Cong Katana.");


		}
	}
//	else SendClientMessage(playerid, -1, "Ban khong phai la mot thanh vien bang dang nao do");
    return 1;
}
/*
CMD:chetaodanzzzzzzz(playerid, params[])
{
	if(isnull(params))
	{
		SendClientMessageEx(playerid, -1, "SU DUNG: /chetaodan [ten vu khi]");
		SendClientMessageEx(playerid, -1, "Pistols: (10 vien) vat pham: 1 thuoc sung");
		SendClientMessageEx(playerid, -1, "Rifles: (10 vien) vat pham: 1 thuoc sung");
		SendClientMessageEx(playerid, -1, "smg: (10 vien) vat pham: 1 thuoc sung");
		SendClientMessageEx(playerid, -1, "Shotgun: (10 vien) vat pham: 1 thuoc sung");
		return 1;
	}
    if(strcmp(params,"Pistols",true) == 0)
    {
    	new weapon, ammosd;
		GetPlayerWeaponData(playerid, 2, weapon, ammosd);
		if(PlayerInfo[playerid][pThuocSung] < 1)
			return SendClientMessage(playerid, -1, "Co ve ban khong co thuoc sung");

     	if(weapon == 23)
    	{
			GivePlayerAmmoEx(playerid, weapon, 10);
			SetPlayerArmedWeapon(playerid, weapon);
			PlayerInfo[playerid][pThuocSung] -= 1;    		
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da mua 10 vien dan Pistols (Silenced)");
    	}     
    	if(weapon == 22)
    	{
			GivePlayerAmmoEx(playerid, weapon, 10);
			SetPlayerArmedWeapon(playerid, weapon);
			PlayerInfo[playerid][pThuocSung] -= 1;    		
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da mua 10 vien dan Pistols (9mm)");
    	}
    	if(weapon == 24)
    	{
			GivePlayerAmmoEx(playerid, weapon, 10);
			SetPlayerArmedWeapon(playerid, weapon);
			PlayerInfo[playerid][pThuocSung] -= 1;    		
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da mua 10 vien dan Pistols (Deagle)");
    	}
    	else
    		SendClientMessage(playerid, COLOR_GREY, "Co the ban khong co vu khi trong nguoi");
    }
    else if(strcmp(params,"smg",true) == 0)
    {
    	new weapon, ammosd;
		GetPlayerWeaponData(playerid, 4, weapon, ammosd);
		if(PlayerInfo[playerid][pThuocSung] < 1)
			return SendClientMessage(playerid, -1, "Co ve ban khong du co thuoc sung");

     	if(weapon == 29)
    	{
			GivePlayerAmmoEx(playerid, weapon, 10);
			SetPlayerArmedWeapon(playerid, weapon);
			PlayerInfo[playerid][pThuocSung] -= 1;    		
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da mua 10 vien dan SMG (MP5)");
    	}     
    	else
    	{
    		SendClientMessage(playerid, COLOR_GREY, "Co the ban khong co vu khi trong nguoi");
    	}
    }
    else if(strcmp(params,"rifles",true) == 0)
    {
    	new weapon, ammosd;
		GetPlayerWeaponData(playerid, 5, weapon, ammosd);
		if(PlayerInfo[playerid][pThuocSung] < 1)
		{
			SendClientMessage(playerid, -1, "Co ve ban khong co thuoc sung");
		}
     	if(weapon == 31)
    	{
			PlayerInfo[playerid][pThuocSung] -= 1;    		
			GivePlayerAmmoEx(playerid, weapon, 10);
			SetPlayerArmedWeapon(playerid, weapon);    		
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da mua 10 vien dan Rifles (M4)");
    	}
    	if(weapon == 30)
    	{
			PlayerInfo[playerid][pThuocSung] -= 1;    		
			GivePlayerAmmoEx(playerid, weapon, 10);
			SetPlayerArmedWeapon(playerid, weapon);    		
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da mua 10 vien dan Rifles (Ak47)");
    	}     
    	else
    		SendClientMessage(playerid, COLOR_GREY, "Co the ban khong co vu khi trong nguoi");
    }
    else if(strcmp(params,"shotgun",true) == 0)
    {
    	new weapon, ammosd;
		GetPlayerWeaponData(playerid, 3, weapon, ammosd);
		if(PlayerInfo[playerid][pThuocSung] < 1)
			return SendClientMessage(playerid, -1, "Co ve ban khong co thuoc sung");

     	if(weapon == 25)
    	{
			PlayerInfo[playerid][pThuocSung] -= 1;    		
			GivePlayerAmmoEx(playerid, weapon, 10);
			SetPlayerArmedWeapon(playerid, weapon);    		
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da mua 10 vien dan Shotguns (Shotgun)");
    	}     
    	else
    		SendClientMessage(playerid, COLOR_GREY, "Co the ban khong co vu khi trong nguoi");
    }
   	return 1;
}*/

CMD:lanhluong(playerid,params[])
{
	if(!IsAtATM(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban phai o ATM!");
		return 1;
	}
	if(PlayerInfo[playerid][pConnectSeconds] == 3600)
	{
		return ShowPlayerDialog(playerid, DIALOG_PAYCHECK, DIALOG_STYLE_INPUT, "PAYCHECK", "Hay nhap [DONG Y] de co the nhan luong nhe", "Nhap", "Huy");
	}
	if(paychecklog[playerid] == 1)
	{
		return ShowPlayerDialog(playerid, DIALOG_PAYCHECK, DIALOG_STYLE_INPUT, "PAYCHECK", "Hay nhap [DONG Y] de co the nhan luong nhe", "Nhap", "Huy");
	}
	else
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban chua online du 1h");
	}

}

CMD:mks(playerid, params[])
{
	return cmd_makiemsoat(playerid, params);
}
CMD:makiemsoat(playerid,params[])
{	
	if(!IsACop(playerid) && !IsAHitman(playerid) && !IsAMedic(playerid) && !IsAReporter(playerid) && !IsAGovernment(playerid) && !IsAJudge(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la nhan vien chinh phu.");
		return 1;
	}	
	new iGroupID = PlayerInfo[playerid][pMember];
	new zone[MAX_ZONE_NAME];
    new
	veh = GetPlayerVehicleID(playerid);
	if (0 <= PlayerInfo[playerid][pMember] < MAX_GROUPS)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	    	new string[128], mks[128];
	    	if(makiemsoat[playerid] == 1) return ChatHoTro(playerid,255, "Ban dang co mot ma kiem soat duoc gan len phuong tien, '~y~/dcallsign~w~' de xoa",5000);
			if(sscanf(params, "s[100]", mks)) return SendClientMessageEx(playerid, COLOR_LIGHTRED, "SU DUNG:{FFFFFF}{FFFFFF} /makiemsoat [noi dung]");
	        if(!veicolo_callsign_status[veh])
	        {

	        	new Float:X, Float:Y, Float:Z;
				GetVehicleModelInfo(GetVehicleModel(veh), VEHICLE_MODEL_INFO_SIZE, X, Y, Z);
	       		format(mks,sizeof(mks), "%s", mks);
	       		//Create3DTextLabel(string, 0xFFFFFFFF, 0.0, 0.0, 0.0, 50.0, 0, 1);
	            if(PlayerInfo[playerid][pMember] == 0) format(string, sizeof(string), "* HQ: %s %s %s is now under %s from %s! *", arrGroupData[iGroupID][g_szGroupName],arrGroupRanks[iGroupID][PlayerInfo[playerid][pRank]],GetPlayerNameEx(playerid),params,zone);
	            else if(PlayerInfo[playerid][pMember] == 1) format(string, sizeof(string), "* HQ: %s %s %s is now under %s from %s! *", arrGroupData[iGroupID][g_szGroupName],arrGroupRanks[iGroupID][PlayerInfo[playerid][pRank]],GetPlayerNameEx(playerid),params,zone);
				else if(PlayerInfo[playerid][pMember] == 3) format(string, sizeof(string), "* HQ: %s %s %s is now under %s from %s! *", arrGroupData[iGroupID][g_szGroupName],arrGroupRanks[iGroupID][PlayerInfo[playerid][pRank]],GetPlayerNameEx(playerid),params,zone);
	            veicolo_callsign_testo[veh] = Create3DTextLabel(mks, arrGroupData[PlayerInfo[playerid][pMember]][g_hRadioColour] * 256 + 255, 0.0, (-Y + 1.6) / 2.0, -0.2, 50.0, 0, 1);
	            foreach(new i : Player)
				{
					new iRank = PlayerInfo[playerid][pRank];
					if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && iRank >= arrGroupData[PlayerInfo[playerid][pMember]][g_iRadioAccess]) {
						SendClientMessageEx(i, arrGroupData[PlayerInfo[playerid][pMember]][g_hRadioColour] * 256 + 255, string);
					}
				}
	            Attach3DTextLabelToVehicle(veicolo_callsign_testo[veh], veh, -0.7, -1.9, -0.3);
	            veicolo_callsign_status[veh] = 1;
	        }
	        else
	        {
	        	Delete3DTextLabel(veicolo_callsign_testo[veh]);
	        	DestroyDynamic3DTextLabel(veicolo_callsign_testo[veh]);
	            veicolo_callsign_status[veh] = 0;
	            veicolo_callsign_testo[veh] = INVALID_VEHICLE_ID;
	            return 1;
	        }
	    }
	    else return SendClientMessageEx(playerid,COLOR_LIGHTRED, "[ ! ]{ffffff} Ban can phai o tren chiec xe.");
	}
	//else return SendClientMessageEx(playerid,COLOR_GREY," Ban khong the su dung lenh nay!");
    return 1;
}
CMD:makiemsasdsaoat(playerid,params[])
{
    new veh = GetPlayerVehicleID(playerid);
	new iGroupID = PlayerInfo[playerid][pMember];
	new zone[MAX_ZONE_NAME];
	if(!IsACop(playerid) && !IsAHitman(playerid) && !IsAMedic(playerid) && !IsAReporter(playerid) && !IsAGovernment(playerid) && !IsAJudge(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la nhan vien chinh phu.");
		return 1;
	}	
    if(IsPlayerInAnyVehicle(playerid))
    {
        if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "/makiemsoat [text]");
        if(!veicolo_callsign_status[veh])
        {
            new string[128];
            GetPlayer3DZone(playerid, zone, sizeof(zone));
			format(string,sizeof(string), "%s",params);
            veicolo_callsign_testo[veh] = Create3DTextLabel(string, COLOR_WHITE, 0.0, 0.0, 0.0, 50.0, 0, 1);
            Attach3DTextLabelToVehicle( veicolo_callsign_testo[veh], veh, -0.7, -1.9, -0.3);
            veicolo_callsign_status[veh] = 1;
			
			format(string,sizeof(string), "HQ: %s %s %s is now under %s from %s!",arrGroupData[iGroupID][g_szGroupName],arrGroupRanks[iGroupID][PlayerInfo[playerid][pRank]],GetPlayerNameEx(playerid),params,zone);
			foreach(new i:Player)
			{
				if(PlayerInfo[playerid][pMember] == PlayerInfo[i][pMember])
				{
					SendClientMessageEx(i, arrGroupData[PlayerInfo[playerid][pMember]][g_hRadioColour] * 256 + 255, string);
				}
			}
        }
        else
        {
            Delete3DTextLabel(veicolo_callsign_testo[veh]);
            veicolo_callsign_status[veh] = 0;
            return 1;
        }
    }
    else
    {
        SendClientMessageEx(playerid, COLOR_GREY, "Ban can phai tren xe moi co the lam dieu nay.");
        return 1;
    }
    return 1;
}

CMD:xmks(playerid, params[])
{
	return cmd_xoamakiemsoat(playerid, params);
}
CMD:xoamakiemsoat(playerid,params[])
{
	new iGroupID = PlayerInfo[playerid][pMember];
    new veh = GetPlayerVehicleID(playerid);
	if(!IsACop(playerid) && !IsAHitman(playerid) && !IsAMedic(playerid) && !IsAReporter(playerid) && !IsAGovernment(playerid) && !IsAJudge(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la nhan vien chinh phu.");
		return 1;
	}
    if (0 <= PlayerInfo[playerid][pMember] < MAX_GROUPS)
	{
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        if(veicolo_callsign_status[veh])
		{
	        new string[128];
		    format(string, sizeof(string), "* HQ: %s %s end of watching *", arrGroupRanks[iGroupID][PlayerInfo[playerid][pRank]], GetPlayerNameEx(playerid));
	        foreach(new i : Player)
			{
                new iRank = PlayerInfo[playerid][pRank];
				if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && iRank >= arrGroupData[PlayerInfo[playerid][pMember]][g_iRadioAccess]) {
					SendClientMessageEx(i, arrGroupData[PlayerInfo[playerid][pMember]][g_hRadioColour] * 256 + 255, string);
				}
			}
	        Delete3DTextLabel(veicolo_callsign_testo[veh]);
	        veicolo_callsign_status[veh] = Text3D:INVALID_3DTEXT_ID;
	        veicolo_callsign_testo[veh] = INVALID_VEHICLE_ID;
        }
       // else return SendClientMessageEx(playerid,COLOR_GREY,"Ban khong su dung ma kiem soat nao");
    }
    else return SendClientMessageEx(playerid,COLOR_LIGHTRED, "[ ! ]{ffffff} Ban can phai o tren phuong tien co ma kiem soat.");
    }
   // else return SendClientMessageEx(playerid,COLOR_GREY,"Ban khong the su dung lenh nay");
    return 1;
}

/*CMD:trangthai(playerid, params[])
{
	if(isnull(params))
	{
		SendClientMessageEx(playerid, -1, "SU DUNG: /trangthai [noidung]");
		SendClientMessageEx(playerid, COLOR_GRAD1, "Suc khoe: khatnuoc");
		SendClientMessageEx(playerid, COLOR_GRAD1, "NAME SEVER: logo");
		return 1;
	}
    else if(strcmp(params,"khatnuoc",true) == 0)
    {
     	if (_thirstTextVisible[playerid] == 1)
    	{
    		PlayerTextDrawHide(playerid, _thirstText[playerid]);
    		_thirstTextVisible[playerid] = 0;
    		PlayerInfo[playerid][pTogKhatNuoc] = 0;
    		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da tat thanh trang thai khat nuoc.");
    	}
    	else
    	{
    		PlayerTextDrawShow(playerid, _thirstText[playerid]);
     		_thirstTextVisible[playerid] = 1;
     		PlayerInfo[playerid][pTogKhatNuoc] = 1;
    		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da bat thanh trang thai khat nuoc.");
	    }
	}
	else if(strcmp(params,"logo",true) == 0)
    {
     	if (Logooff[playerid] == 1)
    	{
    		PlayerTextDrawHide(playerid, logo1[playerid]);
    		PlayerTextDrawHide(playerid, logo[playerid]);
    		Logooff[playerid] = 0;
    		PlayerInfo[playerid][pTogLogo] = 0;
    		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da tat thanh trang thai logo sever");
    	}
    	else
  	  	{
    		PlayerTextDrawShow(playerid, logo1[playerid]);
    		PlayerTextDrawShow(playerid, logo[playerid]);
     		Logooff[playerid] = 1;
     		PlayerInfo[playerid][pTogLogo] = 1;
    		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da bat thanh trang thai logo sever");
	    }
	}
   	return 1;
}*/
CMD:tatvoice(playerid, params[])
{
	if (!Voice[playerid])
	{
		Voice[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GREY, "Bam lan nua de bat");
		SendClientMessageEx(playerid, COLOR_GREY, "Ban da tat Voice");
	}
	else
	{
		Voice[playerid] = 0;
		SendClientMessageEx(playerid, -1, "Ban da mo Voice");
	}
	return 1;
}

CMD:thibanglaidasd(playerid, params[])
{
	if(CheckPointCheck(playerid))
	{
	    SendClientMessageEx(playerid, COLOR_GRAD2, "Ban dang co danh dau (/xoamuctieu)");
	   	return 1;
	}
	if (GetPVarInt(playerid, "ThiBangLai") >= 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban dang thi khong the thi tiep");
		return 1;
	}
	if(PlayerInfo[playerid][pCarLic] >= 1) return SendClientMessage(playerid, COLOR_GREY, "Ban da co giay phep lai xe");
	if(PlayerInfo[playerid][pCash] <= 5000) return SendClientMessage(playerid, COLOR_GREY, "Ban khong du 5000$ ");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid , X,Y,Z);
	CreateVehicle(458, X,Y,Z, 0, 0, 0 , -1);
	SetVehicleVirtualWorld(playerid, 455);
	PlayerInfo[playerid][pCash] -= 5000;
	SetPVarInt(playerid, "ThiBangLai", 1);
	SetPlayerVirtualWorld(playerid,  445);
	SendClientMessage(playerid, -1, "Hay len xe tien hanh xuat phat");
	SendClientMessage(playerid, -1, "Hay chay tutu neu ban va cham se bi loai");
	PlayerInfo[playerid][pVW] = 455;
	SetPlayerPos(playerid, 1512.5577,-1732.3334,13.3828);
	SetPlayerCheckpoint(playerid, 1508.0159,-1747.5369,13.2740, 2.0);
	return 1;
}

CMD:timvieclam(playerid, params[])
{
	return SendClientMessageEx(playerid,COLOR_LIGHTRED,"> Hay su dung [/map] thay vi lenh nay");
}

CMD:doxe(playerid, params[])
{
	if(IsAMechanic(playerid)) {
		new playerstate = GetPlayerState(playerid);
		if(!IsPlayerInRangeOfPoint(playerid, 6.0, 1849.4199,-1775.2780,13.5669))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban Khong O Vi Tri De Do Xe");
			if(PlayerInfo[playerid][pSat] <= 5000) return SendClientMessage(playerid, -1, "Ban khong du 5000 Sat");
		}
		if(playerstate == PLAYER_STATE_DRIVER)
		{
			PlayerInfo[playerid][pSat] -= 5000;
			ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "GO-RP Tuning Garage", "Tem Xe\nMau Xe\nCa-Po\nThong Hoi\nDen Xe\nPo-Xe\nCang Xe Truoc\nCang Xe Sau\nNoc-Xe\nCang Gio\nChan' Bun\nTrang Tri Xe Classic\nBanh Xe\nCar Stereo\nHydraulics\nNitrous\nRepair Car", "Enter", "Close");
			return 1;
		}
		else SendClientMessage(playerid, COLOR_RED, "[Do Xe] Ban Can Phai Ngoi Tren Phuong Tien Cua Minh.");        
	}
	return 1;
}
CMD:kcp(playerid, params[]) return cmd_xoamuctieu(playerid, params);


CMD:map(playerid, params[]) return cmd_timduong(playerid, params);
CMD:timduong(playerid, params[])
{
	if(timduong[playerid]) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da danh dau 1 vi tri tren ban do,/kcp de tat vi tri do");
	ShowPlayerDialog(playerid, TIMDUONG1, DIALOG_STYLE_LIST, "He thong tim duong", "Tim kiem viec lam\nTim kiem cac khu vuc lan can\n{ff0000}Job Kiem Vat Pham\n{0388fc}Tat/mo {ffffff}GPS", "{ae0202}Chon","{FFFFFF}Huy");
	return 1;
}

CMD:thanhvien(playerid,params[])
{
	if(PlayerInfo[playerid][pLeader] == INVALID_GROUP_ID) return 0;
	new Cache:Result,LastLogin[255],pNameget[60],vzstr[15000];
	Result = mysql_query(MainPipeline, "SELECT `LastLogin`, `Username`, `Member` FROM `accounts` WHERE `Member` >= 0");
	new count;
	if(cache_num_rows())
	{
		for(new i = 0; i < cache_num_rows(); i++)
		{
			cache_get_field_content(i, "Username", pNameget);
			cache_get_field_content(i, "LastLogin", LastLogin);
			count = cache_get_field_content_int(i, "Member");
			if(count == PlayerInfo[playerid][pLeader])	{
				format(vzstr, 15000, "%s\n%d. Ten: %s\tLast Login: %s", vzstr,i,pNameget,LastLogin);
			}
		}
	}
	else
	{
		return SendClientMessage(playerid, COLOR_WHITE, "Khong xu ly duoc du lieu");
	}
	cache_delete(Result);
	ShowPlayerDialog(playerid, DIALOG_NOTHING, DIALOG_STYLE_LIST, "List Member Faction", vzstr, "Thoat", "");
	return 1;
}

/*CMD:timduong(playerid, params[]) {
   	if(CheckPointCheck(playerid))
    {
    SendClientMessageEx(playerid, COLOR_WHITE, "Hay xoa checkpoint hien co tren ban do de tiep tuc tim viec lam (/xoamuctieu).");
    return 1;
    }
    return ShowPlayerDialog(playerid, TIMDUONG, DIALOG_STYLE_LIST, "GPS","Tru so canh sat\nBenh vien All Saints\nBenh vien County\nTram xang Idlewood\nCua hang 24/7 Idlewood\nCua hang Pizza\nGanton Gym\nGanton Binco\nCua hang 24/7 Commerce\nAmmu-Nation\nMarket\nVIP\nNgan hang\nTaxi Company\nMechanic Company", "Chon", "Thoat");
}*/
	
/*CMD:addgcode(playerid,params[])
{
	new codestring[128],type;
	if(sscanf(params,"s[128]i",codestring,type)) return SendClientMessage(playerid,-1,"/addgcode [GiftCode] [type]");
 	if(!fexist("GiftCode.ini"))
 	{
 	file_Create("GiftCode.ini");
 	}
 	file_Open("GiftCode.ini");
 	file_SetVal(codestring,type);
 	file_Save();
 	file_Close();
 	new string[128];
 	format(string,sizeof(string),"%s |Type :%d",codestring,type);
 	SendClientMessage(playerid,-1,"Ban da add gift code: ");
	SendClientMessage(playerid,-1,string);
	return 1;
}
CMD:removegcode(playerid,params[])
{
    new codestring[128];
	if(sscanf(params,"s[128]",codestring)) return SendClientMessage(playerid,-1,"/removegcode [GiftCode]");
	file_Open("GiftCode.ini");
	if(file_IsKey(codestring))
	{
	SendClientMessage(playerid,-1,"Da remove ma giftcode");
	file_RemoveKey(codestring);
	}
	else
	{
	SendClientMessage(playerid,-1,"Ma khong hop le");
	}
	file_Save();
	file_Close();
	return 1;
}
*/

/*CMD:timduong(playerid, params[]) {
   	if(CheckPointCheck(playerid))
    {
    SendClientMessageEx(playerid, COLOR_WHITE, "Hay xoa checkpoint hien co tren ban do de tiep tuc tim viec lam (/xoamuctieu).");
    return 1;
    }
    return ShowPlayerDialog(playerid, TIMDUONG, DIALOG_STYLE_LIST, "GPS","Tru so canh sat\nBenh vien All Saints\nBenh vien County\nTram xang Idlewood\nCua hang 24/7 Idlewood\nCua hang Pizza\nGanton Gym\nGanton Binco\nCua hang 24/7 Commerce\nAmmu-Nation\nMarket\nVIP\nNgan hang\nTaxi Company\nMechanic Company", "Chon", "Thoat");
}*/


CMD:gamblechances(playerid, params[])
{
	if(chancegambler == 1)
	{
		new iChances = PlayerInfo[playerid][pRewardDrawChance] / 3;

		if(iChances < 1)
			return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bat ky co hoi nao.");

		if(!IsPlayerInRangeOfPoint(playerid, 20, 1479.1448,-1675.6207,14.0469))
			return SendClientMessageEx(playerid, COLOR_GREY, "You aren't at pershing square.");

		ShowPlayerDialog(playerid, DIALOG_ROLL, DIALOG_STYLE_MSGBOX, "Chance Gambler! - All or Nothing","You must roll a number greater than 4 to double your chances.", "Roll", "Cancel");
	}
	else return 0;
	return 1;
}
#endif

CMD:chances(playerid, params[])
{
	if(chancegambler == 1)
	{
		new szMessage[128],
			iChances = PlayerInfo[playerid][pRewardDrawChance] / 3;
		format(szMessage, sizeof(szMessage), "Chances: %d", iChances);
		SendClientMessageEx(playerid, COLOR_CYAN, szMessage);
	}
	else return 0;
	return 1;
}

CMD:clearbugs(playerid, params[])
{
	if(IsACop(playerid))
	{
		if(PlayerInfo[playerid][pLeader] == PlayerInfo[playerid][pMember] && PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBugAccess]) // has leader flag
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "Tat ca bug da duoc an toan.");
			foreach(new i : Player)
			{
				if(PlayerInfo[i][pBugged] == PlayerInfo[playerid][pMember]){
					PlayerInfo[i][pBugged] = INVALID_GROUP_ID;
				}
			}
			new query[256];
			format(query, sizeof(query), "UPDATE accounts SET `Bugged` = %d WHERE `Bugged` > %d AND `Online` = 0", INVALID_GROUP_ID, INVALID_GROUP_ID);
			mysql_function_query(MainPipeline, query, false, "OnQueryFinish", "i", SENDDATA_THREAD);
			return 1;
		}
	}
	return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay.");
}

CMD:listbugs(playerid, params[])
{
	if(IsACop(playerid))
	{
		if(PlayerInfo[playerid][pLeader] == PlayerInfo[playerid][pMember] && PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBugAccess]) // has leader flag
		{
			SendClientMessageEx(playerid, COLOR_GREEN, "List of deployed Bugs:");
			foreach(new i : Player)
			{
				if(PlayerInfo[i][pBugged] == PlayerInfo[playerid][pMember]){
					SendClientMessageEx(playerid, COLOR_GREEN, GetPlayerNameEx(i));
				}
			}
			new query[256];
			format(query, sizeof(query), "SELECT `Username`, `Bugged` FROM `accounts`  WHERE `Bugged` = %d AND `Online` = 0", PlayerInfo[playerid][pMember]);
			mysql_function_query(MainPipeline, query, true, "OnQueryFinish", "iii", BUG_LIST_THREAD, playerid, g_arrQueryHandle{playerid});
			return 1;
		}
	}
	return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay.");
}

CMD:thamgiapoker(playerid, params[]) {
	return cmd_jointable(playerid, params);
}

CMD:jointable(playerid, params[])
{
	if(PlayerInfo[playerid][pConnectHours] < 5) {
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban can toi thieu 5 gio choi moi tham gia duoc vao ban poker.");
	    return 1;
	}
	if(GetPVarType(playerid, "pkrTableID") == 0) {
		for(new t = 0; t < MAX_POKERTABLES; t++) {
			if(IsPlayerInRangeOfPoint(playerid, 5.0, PokerTable[t][pkrX], PokerTable[t][pkrY], PokerTable[t][pkrZ])) {
				if(PokerTable[t][pkrPass][0] != EOS) {
					if(!strcmp(params, PokerTable[t][pkrPass], false, 32)) {
						JoinPokerTable(playerid, t);
					} else {
						return SendClientMessage(playerid, COLOR_WHITE, "SU DUNG: /thamgiapoker (matkhau)");
					}
				} else {
					JoinPokerTable(playerid, t);
				}
				return 1;
			}
		}
	} else {
		SendClientMessage(playerid, COLOR_WHITE, "Ban khong o 1 ban Poker phai /thoatpoker truoc khi ban tham gia vao poker khac!");
	}
	return 1;
}

CMD:thoatpoker(playerid, params[]) {
	return cmd_leavetable(playerid, params);
}

CMD:leavetable(playerid, params[])
{
	if(GetPVarType(playerid, "pkrTableID")) {
		LeavePokerTable(playerid);
	}
	return 1;
}

CMD:taobanpoker(playerid, params[]) {
	return cmd_placetable(playerid, params);
}

CMD:placetable(playerid, params[])
{
	if(PlayerInfo[playerid][pTable] == 1 || PlayerInfo[playerid][pAdmin] >= 4)
	{
	    if(GetPVarInt(playerid, "IsInArena") >= 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang o dau truong!");
		if(WatchingTV[playerid] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang xem TV!");
		if(GetPVarInt(playerid, "Injured") == 1 || PlayerInfo[playerid][pHospital] > 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam the bay gio.");
		//if(PlayerInfo[playerid][pVW] == 0 || PlayerInfo[playerid][pInt] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong de dat mot ban poker ben trong noi that'.");
		if(GetPVarType(playerid, "pTable")) return SendClientMessageEx(playerid, COLOR_GREY, "Ban da co mot ban poker ra, su dung /xoapoker de pha huy.");

		foreach(new i: Player)
	    {
	        if(GetPVarType(i, "pTable"))
	        {
    			if(IsPlayerInRangeOfPoint(playerid, 7.0, PokerTable[GetPVarInt(i, "pTable")][pkrX], PokerTable[GetPVarInt(i, "pTable")][pkrY], PokerTable[GetPVarInt(i, "pTable")][pkrZ]))
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ban dang trong pham vi cua mot ban poker, ban khong the dat mot ban o day!");
				    return 1;
				}
			}
		}


		new string[128];
		format(string, sizeof(string), "%s da dat mot ban poker!", GetPlayerNameEx(playerid));
	    ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);

	    new Float:x, Float:y, Float:z, Float:a;
	    GetPlayerPos(playerid, x, y, z);
	    GetPlayerFacingAngle(playerid, a);
	    ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_In", 4.0, 0, 0, 0, 0, 0, 1);
	    x += (2 * floatsin(-a, degrees));
    	y += (2 * floatcos(-a, degrees));
		z -= 0.5;

        for(new i = 0; i < MAX_POKERTABLES; i++) {
		    if(PokerTable[i][pkrPlaced] == 0) {
				PlacePokerTable(i, 1, x, y, z, 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
				SetPVarInt(playerid, "pTable", i);
				break;
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co ban poker!");
	}
	return 1;
}

CMD:xoapoker(playerid, params[]) {
	return cmd_destroytable(playerid, params);
}

CMD:destroytable(playerid, params[])
{
	if(GetPVarType(playerid, "pTable"))
	{
	    if(PokerTable[GetPVarType(playerid, "pTable")][pkrPlayers] != 0)
			return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the pha huy ban cua ban trong khi mot tro choi dang duoc tien hanh.");

	    DestroyPokerTable(GetPVarInt(playerid, "pTable"));
		DeletePVar(playerid, "pTable");
		SendClientMessage(playerid, COLOR_GREY, "Ban da pha huy ban poker cua ban!");
	}
	return 1;
}


CMD:speedcam(playerid, params[])
{
	if (IsPlayerInAnyVehicle(playerid))
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the speedcam khi dang tren xe.");

	if (IsACop(playerid) && PlayerInfo[playerid][pRank] == Group_GetMaxRank(PlayerInfo[playerid][pLeader]) || PlayerInfo[playerid][pAdmin] >= 5)
	{
		ShowPlayerDialog(playerid, SPEEDCAM_DIALOG_MAIN, DIALOG_STYLE_LIST, "{FFFF00}Speed Cameras", "Tao mot speed camera\nChinh sua speed camera\nXoa speed camera\n\
			Nhan speedcamera gan nhat", "Lua chon", "Huy bo");
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong duoc phep su dung lenh nay.");
		return 1;
	}

	return 1;
}

CMD:loadkit(playerid, params[]) {
	if(IsACop(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid)) { SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay khi dang trong xe!"); return 1; }
		if(GetPVarInt(playerid, "EMSAttempt") != 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay!");
		new string[128];
		new vehicleid = GetClosestCar(playerid, INVALID_VEHICLE_ID, 10.0);
		if( vehicleid != INVALID_VEHICLE_ID && GetDistanceToCar(playerid, vehicleid) < 10 )
		{
		    if(GetPVarInt(playerid, "CarVestKit"))
		    {
		    	if(!IsABike(vehicleid) && !IsAPlane(vehicleid)) {
					new engine,lights,alarm,doors,bonnet,boot,objective;
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET)
					{
						SendClientMessageEx(playerid, COLOR_GRAD1, "Than cua xe phai duoc mo ra de tim kiem no.");
						return 1;
					}
				}
				if(CrateVehicleLoad[vehicleid][vCarVestKit] == 2)
		        {
					return SendClientMessageEx(playerid, COLOR_GRAD1, "Chiec xe nay da co hai bo dung cu nap.");
		        }
		        format(string, sizeof(string), "{FF8000}** {C2A2DA}%s tua vao mot thang cay va dat mot Kevlar Vest & First Aid Kit ben trong.", GetPlayerNameEx(playerid));
            	SendClientMessageEx(playerid, COLOR_WHITE, "Ban da tai xe hoi vao cac xe trunk. /usekit de su dung no.");
            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                SetPVarInt(playerid, "CarVestKit", 0);
            	CrateVehicleLoad[vehicleid][vCarVestKit] += 1;

		    }
		    else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban phai mang theo bo do sua xe.");
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o gan mot chiec xe.");
	}
	return 1;
}

CMD:usekit(playerid, params[]) {
	if(IsACop(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid)) { SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam the khi dang trong xe!"); return 1; }
		if(GetPVarInt(playerid, "EMSAttempt") != 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay!");
		new string[128];
		new vehicleid = GetClosestCar(playerid, INVALID_VEHICLE_ID, 10.0);
		if( vehicleid != INVALID_VEHICLE_ID && GetDistanceToCar(playerid, vehicleid) < 10 )
		{
		    if(CrateVehicleLoad[vehicleid][vCarVestKit] > 0)
		    {
		    	if(!IsABike(vehicleid) && !IsAPlane(vehicleid)) {
					new engine,lights,alarm,doors,bonnet,boot,objective;
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET)
					{
						SendClientMessageEx(playerid, COLOR_GRAD1, "Than xe cua no phai duoc mo ra de tim kiem no.");
						return 1;
					}
				}
		        format(string, sizeof(string), "{FF8000}** {C2A2DA}%s tua vao than cay va lay ra mot Kevlar Vest & First Aid Kit.", GetPlayerNameEx(playerid));
            	SendClientMessageEx(playerid, COLOR_WHITE, "Ban da su dung Car Kit tu Vehicle Trunk.");
            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerHealth(playerid, 100);
				SetPlayerArmor(playerid, 100);
            	CrateVehicleLoad[vehicleid][vCarVestKit] -= 1;
		    }
		    else return SendClientMessageEx(playerid, COLOR_GRAD1, "Khong co bo nap.");
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o gan mot chiec xe.");
	}
	return 1;
}

CMD:crates(playerid, params[]) {
	if(IsACop(playerid))
	{
	    new string[128], zone[64];
	    format(string, sizeof(string), "Danh sach cac thung se duoc van chuyen(GIOI HAN : %d):", MAXCRATES);
	    SendClientMessage(playerid, COLOR_GREEN, string);
	    for(new i = 0; i < sizeof(CrateInfo); i++)
	    {
	        if(CrateInfo[i][crActive])
	        {
				if(CrateInfo[i][InVehicle] == INVALID_VEHICLE_ID)
				{
				    GetDynamicObjectPos(CrateInfo[i][crObject], CrateInfo[i][crX],CrateInfo[i][crY],CrateInfo[i][crZ]);
				}
				else
				{
					GetVehiclePos(CrateInfo[i][InVehicle],CrateInfo[i][crX],CrateInfo[i][crY],CrateInfo[i][crZ]);
					CrateInfo[i][crVW] = GetVehicleVirtualWorld(CrateInfo[i][InVehicle]);
				}
	            if(CrateInfo[i][crInt] != 0 || CrateInfo[i][crVW] != 0 || CrateInfo[i][crZ] > 500)
	            {
	                format(zone, sizeof(zone), "*Weak Signal* (( Garage / Interior ))");
	            }
	            else Get3DZone(CrateInfo[i][crX],CrateInfo[i][crY],CrateInfo[i][crZ],zone, sizeof(zone));
	        	format(string, sizeof(string), "So serial thung: #%d  Noi den: %s  Trong xe: %s", i, zone,(CrateInfo[i][InVehicle] != INVALID_VEHICLE_ID) ? ("Dong y") : ("Khong"));
	        	SendClientMessageEx(playerid, COLOR_GRAD2, string);
	       	}
	    }
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GRAD2, " Ban khong co quyen truy cap thong tin nay. ");
	}
	return 1;
}
CMD:destroycrate(playerid, params[]) {
	if(IsACop(playerid))
	{
	    if(servernumber == 2)
		{
		    SendClientMessage(playerid, COLOR_WHITE, "Lenh nay bi vo hieu hoa!");
		    return 1;
		}
	    new string[128], CrateFound;
	    new Float:cX, Float: cY, Float: cZ;
		for(new i = 0; i < sizeof(CrateInfo); i++)
	    {
	    	if(CrateInfo[i][crActive])
	    	{
	    		GetDynamicObjectPos(CrateInfo[i][crObject], cX, cY, cZ);
	    		if(IsPlayerInRangeOfPoint(playerid, 5.0, cX, cY, cZ))
	    		{
	    		    DestroyDynamicObject(CrateInfo[i][crObject]);
	    		    DestroyDynamic3DTextLabel(CrateInfo[i][crLabel]);
	    		    CrateInfo[i][crActive] = 0;
	    		    CrateInfo[i][InVehicle] = INVALID_VEHICLE_ID;
				    CrateInfo[i][crObject] = INVALID_OBJECT_ID;
				    CrateInfo[i][crX] = 0;
				    CrateInfo[i][crY] = 0;
				    CrateInfo[i][crZ] = 0;
					CrateFound = 1;
					mysql_SaveCrates();
					break;
	    		}
	    	}
	    }
	    if(!CrateFound) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban dang khong o gan bat ky thung!");
		format(string, sizeof(string), "* %s nam bat cac thung vu khi.", GetPlayerNameEx(playerid));
		ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GRAD2, " Ban khong duoc phep. ");
	}
	return 1;
}

CMD:cargo(playerid, params[]) {
	new vehicleid = GetPlayerVehicleID(playerid);
	new string[128];
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o trong xe.");
	if((DynVeh[vehicleid] != -1 && DynVehicleInfo[DynVeh[vehicleid]][gv_iType] == 1))
	{
	    format(string, sizeof(string), "Nap Cargo: (Cong suat: %d)", DynVehicleInfo[DynVeh[vehicleid]][gv_iLoadMax]);
	    SendClientMessage(playerid, COLOR_GREEN, string);
	    if(GetVehicleModel(vehicleid) == 592)
	    {
	 	    for(new i = 0; i < 6; i++)
		    {
		        if(CrateVehicleLoad[vehicleid][vCrateID][i] != -1)
		        {
		            if(CrateInfo[CrateVehicleLoad[vehicleid][vCrateID][i]][InVehicle] == vehicleid)
		            {
						format(string, sizeof(string), "Thung SN: #%d  High Grade Materials: %d", CrateVehicleLoad[vehicleid][vCrateID][i], CrateInfo[CrateVehicleLoad[vehicleid][vCrateID][i]][GunQuantity]);
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					else
					{
					    printf("Thung nghe trom ID %d xoa khoi xe id %d tu dong thong qua %s",  CrateVehicleLoad[vehicleid][vCrateID][i], vehicleid, GetPlayerNameEx(playerid));
					    CrateVehicleLoad[vehicleid][vCrateID][i] = -1;
					}
		        }
		    }
		}
		else
		{
		    for(new i = 0; i < DynVehicleInfo[DynVeh[vehicleid]][gv_iLoadMax]; i++)
		    {
		        if(CrateVehicleLoad[vehicleid][vCrateID][i] != -1)
		        {
		            if(CrateInfo[CrateVehicleLoad[vehicleid][vCrateID][i]][InVehicle] == vehicleid)
		            {
						format(string, sizeof(string), "Thung SN: #%d  High Grade Materials: %d", CrateVehicleLoad[vehicleid][vCrateID][i], CrateInfo[CrateVehicleLoad[vehicleid][vCrateID][i]][GunQuantity]);
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					else
					{
					    printf("Thung nghe trom ID %d xoa khoi xe id %d tu dong thong qua %s",  CrateVehicleLoad[vehicleid][vCrateID][i], vehicleid, GetPlayerNameEx(playerid));
					    CrateVehicleLoad[vehicleid][vCrateID][i] = -1;
					}
				}
		    }
		}
	}
	else
	{
	    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o trong xe boc thep hoac may bay.");
	}
	return 1;
}

CMD:delivercrate(playerid, params[])
{
    if(servernumber == 2)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "Lenh nay bi vo hieu hoa!");
	    return 1;
	}
	new vehicleid = GetPlayerVehicleID(playerid);
	if(DynVeh[vehicleid] != -1 && DynVehicleInfo[DynVeh[vehicleid]][gv_iType] == 1)
	{
	    for(new group; group < MAX_GROUPS; group++)
	    {

		    if(IsPlayerInRangeOfPoint(playerid, 6, arrGroupData[group][g_fCratePos][0], arrGroupData[group][g_fCratePos][1], arrGroupData[group][g_fCratePos][2]))
		    {
		        if(arrGroupData[group][g_iLockerStock] >= MAX_LOCKER_STOCK)
		        {
		            SendClientMessageEx(playerid, COLOR_GRAD2, "This locker is at full capacity and does not require a delivery.");
		            return 1;
		        }
		        if(arrGroupData[group][g_iBudget] < floatround(CRATE_COST * 1.2))
		        {
		            SendClientMessageEx(playerid, COLOR_GRAD2, "This agency cannot afford a crate delivery.");
		            return 1;
		        }
		        if(arrGroupData[group][g_iCratesOrder] == 0)
		        {
		            SendClientMessageEx(playerid, COLOR_GRAD2, "This agency has not placed any crate orders.");
		            return 1;
		        }
		        if(arrGroupData[group][g_iLockerCostType] != 0)
		        {
		            SendClientMessageEx(playerid, COLOR_GRAD2, "This agency is not accepting crate deliveries.");
		            return 1;
		        }
				for(new i = 0; i < DynVehicleInfo[DynVeh[vehicleid]][gv_iLoadMax]; i++)
			    {
			        if(CrateVehicleLoad[vehicleid][vCrateID][i] != -1)
			        {
			            TogglePlayerControllable(playerid, 0);
			            SetTimerEx("DeliverCrate", 1000, 0, "d", playerid);
			            SetPVarInt(playerid, "dc_CrateFound", 1);
			            SetPVarInt(playerid, "delivercratecrateid", CrateVehicleLoad[vehicleid][vCrateID][i]);
                        SetPVarInt(playerid, "DeliverCrateTime", 8);
                        SetPVarInt(playerid, "SecuricarID", vehicleid);
                        SetPVarInt(playerid, "dc_GroupID", group);
                        SetPVarInt(playerid, "dc_i", i);
						break;
			        }
			    }
				break;
		    }
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o trong xe van chuyen hang hoa.");
	return 1;
}

CMD:loadcrate(playerid, params[]) {
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) == 530)
	{
		if(CrateVehicleLoad[vehicleid][vForkLoaded])
		{
		    new TruckFound, FreeSlot;
		    TruckFound = INVALID_VEHICLE_ID;
		    FreeSlot = -1;
		    new Float:vx, Float:vy, Float:vz;
		    for(new i = 0; i < sizeof(DynVehicleInfo); i++)
		    {
		        GetPosBehindVehicle(DynVehicleInfo[i][gv_iSpawnedID], vx, vy, vz, -2);
				if(IsPlayerInRangeOfPoint(playerid, 6, vx, vy, vz))
		        {
		            if(DynVehicleInfo[i][gv_iType] == 1 && DynVehicleInfo[i][gv_iSpawnedID] != vehicleid && GetVehicleModel(DynVehicleInfo[i][gv_iSpawnedID]) != 592)
		            {
						TruckFound = DynVehicleInfo[i][gv_iSpawnedID];
						break;
				    }
		        }
		    }
		    if(TruckFound != INVALID_VEHICLE_ID)
		    {
		        new iDvSlotID = DynVeh[TruckFound];
			    for(new i = 0; i < DynVehicleInfo[iDvSlotID][gv_iLoadMax]; i++)
			    {
			        if(CrateVehicleLoad[TruckFound][vCrateID][i] == -1)
			        {
						FreeSlot = i;
						break;
			        }
			    }
			}
			if(TruckFound == INVALID_VEHICLE_ID) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o gan noi lay thung hang len xe!");
			if(FreeSlot == -1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Xe da duoc nap day!");
		    DestroyDynamicObject(CrateVehicleLoad[vehicleid][vForkObject]);
		    CrateVehicleLoad[vehicleid][vForkLoaded] = 0;
		    CrateVehicleLoad[vehicleid][vForkObject] = INVALID_OBJECT_ID;
			CrateVehicleLoad[TruckFound][vCrateID][FreeSlot] = CrateVehicleLoad[vehicleid][vCrateID][0];
			CrateInfo[CrateVehicleLoad[TruckFound][vCrateID][FreeSlot]][InVehicle] = TruckFound;
		    CrateVehicleLoad[vehicleid][vCrateID][0] = -1;
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Ban tai mot thung vao xe!");
		}
		else
		{
		    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co mot thung nap!");
		}
	}
	else
	{
	    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o trong mot chiec xe nang!");
	}
	return 1;
}

CMD:unloadcrate(playerid, params[]) {
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) == 530)
	{
		if(!CrateVehicleLoad[vehicleid][vForkLoaded])
		{
		    new TruckFound, UsedSlot;
		    TruckFound = INVALID_VEHICLE_ID;
		    UsedSlot = -1;
		    new Float:vx, Float:vy, Float:vz;
		    for(new i = 0; i < sizeof(DynVehicleInfo); i++)
		    {
		        GetPosBehindVehicle(DynVehicleInfo[i][gv_iSpawnedID], vx, vy, vz, -2);
				if(IsPlayerInRangeOfPoint(playerid, 6, vx, vy, vz))
		        {
		            if(DynVehicleInfo[i][gv_iType] == 1 && DynVehicleInfo[i][gv_iSpawnedID] != vehicleid && GetVehicleModel(DynVehicleInfo[i][gv_iSpawnedID]) != 592)
		            {
						TruckFound = DynVehicleInfo[i][gv_iSpawnedID];
						break;
				    }
		        }
		    }
		    if(TruckFound != INVALID_VEHICLE_ID)
		    {
		        new iDvSlotID = DynVeh[TruckFound];
			    for(new i = 0; i < DynVehicleInfo[iDvSlotID][gv_iLoadMax]; i++)
			    {
			        if(CrateVehicleLoad[TruckFound][vCrateID][i] != -1)
			        {
			            if(CrateInfo[CrateVehicleLoad[TruckFound][vCrateID][i]][InVehicle] == TruckFound)
			            {
							UsedSlot = i;
							break;
						}
						else
						{
						    CrateVehicleLoad[TruckFound][vCrateID][i] = -1;
						}
			        }
			    }
			}
			if(TruckFound == INVALID_VEHICLE_ID) return SendClientMessageEx(playerid, COLOR_GRAD2, "You're not near a Loaded Crate Vehicle!");
			if(UsedSlot == -1) return SendClientMessageEx(playerid, COLOR_GRAD2, "The Truck is empty!");
		    CrateVehicleLoad[vehicleid][vForkLoaded] = 1;
		    CrateInfo[CrateVehicleLoad[TruckFound][vCrateID][UsedSlot]][InVehicle] = vehicleid;
		    CrateVehicleLoad[vehicleid][vCrateID][0] = CrateVehicleLoad[TruckFound][vCrateID][UsedSlot];
		    CrateVehicleLoad[vehicleid][vForkObject] = CreateDynamicObject(964,-1077.59997559,4274.39990234,3.40000010,0.00000000,0.00000000,0.00000000);
			AttachDynamicObjectToVehicle(CrateVehicleLoad[vehicleid][vForkObject], vehicleid, 0, 0.9, 0, 0, 0, 0);
			CrateVehicleLoad[TruckFound][vCrateID][UsedSlot] = -1;
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da do mot thung tu xe!");
		}
		else
		{

		    SendClientMessageEx(playerid, COLOR_GRAD2, "Do bo xe nang dau tien cua ban!");
		    return 1;

		}
	}
	else
	{
	    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o trong mot chiec xe nang!");
	}
	return 1;
}

CMD:loadplane(playerid, params[]) {
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) == 530)
	{
		if(CrateVehicleLoad[vehicleid][vForkLoaded])
		{
		    new PlaneFound, FreeSlot;
		    PlaneFound = INVALID_VEHICLE_ID;
		    FreeSlot = -1;
		    new Float:vx, Float:vy, Float:vz;
		    for(new i = 0; i < sizeof(DynVehicleInfo); i++)
		    {
		        if(DynVehicleInfo[i][gv_iSpawnedID] != INVALID_VEHICLE_ID) { GetPosBehindVehicle(DynVehicleInfo[i][gv_iSpawnedID], vx, vy, vz, -8); }
		        else continue;
				if(IsPlayerInRangeOfPoint(playerid, 6, vx, vy, vz))
		        {
		            if(GetVehicleModel(DynVehicleInfo[i][gv_iSpawnedID]) == 592 && DynVehicleInfo[i][gv_iType] == 1)
		            {
						PlaneFound = DynVehicleInfo[i][gv_iSpawnedID];
						break;
				    }
		        }
		    }
		    if(PlaneFound != INVALID_VEHICLE_ID)
		    {
			    for(new i = 0; i < 6; i++)
			    {
			        if(CrateVehicleLoad[PlaneFound][vCrateID][i] == -1)
			        {
						FreeSlot = i;
						break;
			        }
			    }
			}
			if(PlaneFound == INVALID_VEHICLE_ID) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o gan may bay!");
			if(FreeSlot == -1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Cac may bay duoc nap day du!");
		    DestroyDynamicObject(CrateVehicleLoad[vehicleid][vForkObject]);
		    CrateVehicleLoad[vehicleid][vForkLoaded] = 0;
		    CrateVehicleLoad[vehicleid][vForkObject] = INVALID_OBJECT_ID;
			CrateVehicleLoad[PlaneFound][vCrateID][FreeSlot] = CrateVehicleLoad[vehicleid][vCrateID][0];
			CrateInfo[CrateVehicleLoad[PlaneFound][vCrateID][FreeSlot]][InVehicle] = PlaneFound;
		    CrateVehicleLoad[vehicleid][vCrateID][0] = -1;
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Ban tai mot thung len may bay!");
		}
		else
		{
		    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co thung nao de nap vao may bay!");
		}
	}
	else
	{
	    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban dang khong o mot chiec xe nang!");
	}
	return 1;
}

CMD:planeinfo(playerid, params[]) {
    new PlaneFound, string[128];
    PlaneFound = INVALID_VEHICLE_ID;
    new Float:vx, Float:vy, Float:vz;
    for(new i = 0; i < sizeof(DynVehicleInfo); i++)
    {
        GetPosBehindVehicle(DynVehicleInfo[i][gv_iSpawnedID], vx, vy, vz, -8);
		if(IsPlayerInRangeOfPoint(playerid, 10, vx, vy, vz))
        {
            if(GetVehicleModel(DynVehicleInfo[i][gv_iSpawnedID]) == 592 && DynVehicleInfo[i][gv_iType] == 1)
            {
				PlaneFound = DynVehicleInfo[i][gv_iSpawnedID];
				format(string, sizeof(string), "May bay ID: %d Thong tin hang hoa", PlaneFound);
				SendClientMessage(playerid, COLOR_GREEN, string);
				break;
		    }
        }
    }
    if(PlaneFound != INVALID_VEHICLE_ID)
    {
	    for(new i = 0; i < 6; i++)
	    {
			format(string, sizeof(string), "Cargo Slot %d Crate SN %d",i, CrateVehicleLoad[PlaneFound][vCrateID][i]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
	    }
	}
	if(PlaneFound == INVALID_VEHICLE_ID) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o gan mot chiec may bay!");
	return 1;
}

CMD:unloadplane(playerid, params[]) {
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) == 530)
	{
		if(!CrateVehicleLoad[vehicleid][vForkLoaded])
		{
		    new PlaneFound, UsedSlot;
		    PlaneFound = INVALID_VEHICLE_ID;
		    UsedSlot = -1;
		    new Float:vx, Float:vy, Float:vz;
		    for(new i = 0; i < sizeof(DynVehicleInfo); i++)
		    {
		        GetPosBehindVehicle(DynVehicleInfo[i][gv_iSpawnedID], vx, vy, vz, -8);
				if(IsPlayerInRangeOfPoint(playerid, 6, vx, vy, vz))
		        {
		            if(GetVehicleModel(DynVehicleInfo[i][gv_iSpawnedID]) == 592 && DynVehicleInfo[i][gv_iType] == 1)
		            {
						PlaneFound = DynVehicleInfo[i][gv_iSpawnedID];
						break;
				    }
		        }
		    }
		    if(PlaneFound != INVALID_VEHICLE_ID)
		    {
			    for(new i = 0; i < 6; i++)
			    {
					if(CrateVehicleLoad[PlaneFound][vCrateID][i] != -1)
					{
			            if(CrateInfo[CrateVehicleLoad[PlaneFound][vCrateID][i]][InVehicle] == PlaneFound)
			            {
							UsedSlot = i;
							break;
						}
						else
						{
						    printf("Bugged crate ID %d da xoa khoi xe id %d tu dong thong qua %s",  CrateVehicleLoad[PlaneFound][vCrateID][i], PlaneFound, GetPlayerNameEx(playerid));
						    CrateVehicleLoad[PlaneFound][vCrateID][i] = -1;
						}
					}
			    }
			}
			if(PlaneFound == INVALID_VEHICLE_ID) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o gan mot chiec may bay!");
			if(UsedSlot == -1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Cac may bay khong co gi!");
		    CrateVehicleLoad[vehicleid][vForkLoaded] = 1;
		    CrateInfo[CrateVehicleLoad[PlaneFound][vCrateID][UsedSlot]][InVehicle] = vehicleid;
		    CrateVehicleLoad[vehicleid][vCrateID][0] = CrateVehicleLoad[PlaneFound][vCrateID][UsedSlot];
		    CrateVehicleLoad[vehicleid][vForkObject] = CreateDynamicObject(964,-1077.59997559,4274.39990234,3.40000010,0.00000000,0.00000000,0.00000000);
			AttachDynamicObjectToVehicle(CrateVehicleLoad[vehicleid][vForkObject], vehicleid, 0, 0.9, 0, 0, 0, 0);
			CrateVehicleLoad[PlaneFound][vCrateID][UsedSlot] = -1;
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da do mot thung tu may bay!");
		}
		else
		{

		    SendClientMessageEx(playerid, COLOR_GRAD2, "Do bo xe nang dau tien cua ban!");
		    return 1;

		}
	}
	else
	{
	    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban dang khong o mot chiec xe nang!");
	}
	return 1;
}

CMD:loadforklift(playerid, params[]) {
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) == 530)
	{
	    new string[128];
		if(servernumber == 2)
		{
		    SendClientMessage(playerid, COLOR_WHITE, "Lenh nay bi vo hieu hoa!");
		    return 1;
		}
		if(PlayerInfo[playerid][pConnectHours] < 25)
	    {
			format(string, sizeof(string), "[MAYCHU] %s da co gang tai mot thung chi co %d gio choi.", GetPlayerNameEx(playerid), PlayerInfo[playerid][pConnectHours]);
			ABroadCast(COLOR_YELLOW, string, 4);
	        return SendClientMessage(playerid, COLOR_GRAD2, " Ban can choi them 25h choi moi co the lam dieu nay!");
	    }
		if(!CrateVehicleLoad[vehicleid][vForkLoaded])
		{
		    new CrateFound;
		    if(IsPlayerInRangeOfPoint(playerid, 5, -2114.1, -1723.5, 11984.5))
		    {
				Streamer_Update(playerid);
		        if(CountCrates() < MAXCRATES)
		        {
		            if(Tax < CRATE_COST)
		            {
		                SendClientMessageEx(playerid, COLOR_GRAD2, "San Andreas Government khong the thanh toan thung hang nay");
		                return 1;
		            }
		            if(IslandGateStatus)
		            {
		                SendClientMessageEx(playerid, COLOR_GRAD2, "Thung da ngung san xuat do su phong toa cua hon dao.");
		                return 1;
		            }
		            if(LoadForkliftStatus)
		            {
		                SendClientMessageEx(playerid, COLOR_GRAD2, "Mot thung da duoc nap.");
		                return 1;
		            }
		            if(GetPVarInt(playerid, "LoadForkliftTime") > 0)
		            {
		                SendClientMessageEx(playerid, COLOR_WHITE, "Ban dang tai xe nang cua ban!");
						return 1;
		            }
		            if(Streamer_IsItemVisible(playerid, STREAMER_TYPE_OBJECT, CrateLoad))
		            {
		                LoadForkliftStatus = 1;
		                SetPVarInt(playerid, "LoadForkliftTime", 5);
		                SetPVarInt(playerid, "ForkliftID", vehicleid);
						if(PlayerInfo[playerid][pSpeedo])
						{
							PlayerInfo[playerid][pSpeedo] = 0;
							SetPVarInt(playerid, "Speedo", 1);
						}
		                SetTimerEx("LoadForklift", 1000, 0, "d", playerid);
						TogglePlayerControllable(playerid, 0);
					    CrateFound = 1;
					}
					else return SendClientMessage(playerid, COLOR_GRAD2, " Xin vui long cho. Co mot thung trong san xuat");
				}
				else return SendClientMessage(playerid, COLOR_GRAD2, " Co so nay la het cong xuat. Xin vui long cho thung dang luu hanh se duoc chuyen giao.");
			}
			else
			{
			    new Float:cX, Float: cY, Float: cZ;
				for(new i = 0; i < sizeof(CrateInfo); i++)
			    {
			    	if(CrateInfo[i][crActive])
			    	{
			    		GetDynamicObjectPos(CrateInfo[i][crObject], cX, cY, cZ);
			    		if(IsPlayerInRangeOfPoint(playerid, 5.0, cX, cY, cZ))
			    		{
			    		    DestroyDynamicObject(CrateInfo[i][crObject]);
			    		    CrateInfo[i][InVehicle] = vehicleid;
			    		    CrateVehicleLoad[vehicleid][vCrateID][0] = i;
			    		    CrateVehicleLoad[vehicleid][vForkLoaded] = 1;
						    CrateVehicleLoad[vehicleid][vForkObject] = CreateDynamicObject(964,-1077.59997559,4274.39990234,3.40000010,0.00000000,0.00000000,0.00000000);
							AttachDynamicObjectToVehicle(CrateVehicleLoad[vehicleid][vForkObject], vehicleid, 0, 0.9, 0, 0, 0, 0);
							DestroyDynamic3DTextLabel(CrateInfo[i][crLabel]);
							CrateFound = 1;
							Streamer_Update(playerid);
							new Float: pX, Float: pY, Float: pZ;
							GetPlayerPos(playerid, pX, pY, pZ);
							SetPVarFloat(playerid, "tpForkliftX", pX);
					 		SetPVarFloat(playerid, "tpForkliftY", pY);
					  		SetPVarFloat(playerid, "tpForkliftZ", pZ);
							SetPVarInt(playerid, "tpForkliftTimer", 80);
							SetPVarInt(playerid, "tpForkliftID", GetPlayerVehicleID(playerid));
							SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_CRATETIMER);
							break;
			    		}
			    	}
			    }
			}
			if(!CrateFound) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o gan bat ky cai thung nao!");

		}
		else
		{
		    new Float: vX, Float: vY, Float: vZ;
		    GetVehiclePos(vehicleid, vX, vY, vZ);
		    GetXYInFrontOfPlayer(playerid, vX, vY, 2);
		    DestroyDynamicObject(CrateVehicleLoad[vehicleid][vForkObject]);
		    CrateVehicleLoad[vehicleid][vForkObject] = INVALID_OBJECT_ID;
		    CrateVehicleLoad[vehicleid][vForkLoaded] = 0;
		    CrateVehicleLoad[vehicleid][vCrateID][0] = -1;
		    for(new i = 0; i < sizeof(CrateInfo); i++)
		    {
				if(CrateInfo[i][InVehicle] == vehicleid)
				{
					if(CrateInfo[i][crActive])
					{
					    CrateInfo[i][InVehicle] = INVALID_VEHICLE_ID;
					    CrateInfo[i][crX] = vX;
					    CrateInfo[i][crY] = vY;
					    CrateInfo[i][crZ] = vZ-0.8;
					    CrateInfo[i][crVW] = GetPlayerVirtualWorld(playerid);
					    CrateInfo[i][crInt] = GetPlayerInterior(playerid);
					    GetPlayerName(playerid, CrateInfo[i][crPlacedBy], MAX_PLAYER_NAME);
					    CrateInfo[i][crObject] = CreateDynamicObject(964,vX,vY,vZ-0.8,0.00000000,0.00000000,0.00000000, CrateInfo[i][crVW], CrateInfo[i][crInt]);
					    format(string, sizeof(string), "So Serial: #%d\n So vu khi con lai: %d/50\n (( Duoc dat boi: %s ))", i, CrateInfo[i][GunQuantity], CrateInfo[i][crPlacedBy]);
					    CrateInfo[i][crLabel] = CreateDynamic3DTextLabel(string, COLOR_ORANGE, CrateInfo[i][crX],CrateInfo[i][crY],CrateInfo[i][crZ]+1, 10.0, _, _, 1, CrateInfo[i][crVW], CrateInfo[i][crInt], _, 20.0);
						Streamer_Update(playerid);
	                    mysql_SaveCrates();
						break;
					}
					else return SendClientMessageEx(playerid, COLOR_GRAD2, "Cai thung da bien mat!");
				}
		    }
		    SendClientMessageEx(playerid, COLOR_GRAD2, " Crate unloaded onto the ground!");
		    return 1;

		}
	}
	else
	{
	    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban dang khong o trong mot chiec xe nang!");
	}
	return 1;
}

CMD:cratelimit(playerid, params[]) {

	new iGroupID = PlayerInfo[playerid][pMember];
    if(servernumber == 2)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "Lenh nay bi vo hieu hoa!");
	    return 1;
	}
    if(PlayerInfo[playerid][pRank] >= arrGroupData[iGroupID][g_iCrateIsland])
    {
		new string[128];
		new moneys;
	    if(sscanf(params, "d", moneys)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /cratelimit [5-20] (Gioi han tong san luong thung)");
		if(moneys < 5 || moneys > MAX_CRATES) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /cratelimit [5-20] (Gioi han tong san luong thung)");
		MAXCRATES = moneys;
		format(string, sizeof(string), "* Ban da gioi han so thung hang vu khi thanh %d", moneys);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "** %s da gioi han so thung hang vu khi thanh %d", GetPlayerNameEx(playerid), moneys);
		SendGroupMessage(1, DEPTRADIO, string);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, " Chi co SAAS co quyen de lam dieu nay! ");
	}
	return 1;
}

CMD:igps(playerid, params[]) {
	return cmd_islandgps(playerid, params);
}

CMD:islandgps(playerid, params[]) {
	new vehicleid = GetPlayerVehicleID(playerid);
	if(DynVeh[vehicleid] != -1 && DynVehicleInfo[DynVeh[vehicleid]][gv_iType] == 1 && IsAPlane(vehicleid) || IsACop(playerid))
	{
	    SetPVarInt(playerid,"igps", 1);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid, -1173.3702,4491.6836,4.4765, 15.0);
	}
	else
	{
	    return SendClientMessageEx(playerid, COLOR_GRAD2, " Ban khong can phai truy cap vao cac toa do GPS");
	}
	return 1;
}

CMD:announcetakeoff(playerid, params[]) {
	new engine,lights,alarm,doors,bonnet,boot,objective,vehicleid, callsign[24], string[128], zone[64],
	Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	vehicleid = GetPlayerVehicleID(playerid);
	if(DynVeh[vehicleid] != -1 && DynVehicleInfo[DynVeh[vehicleid]][gv_iType] == 1 && GetVehicleModel(vehicleid) == 592)
	{
		format(callsign, sizeof(callsign), "SANAN%d", vehicleid);
	    Get3DZone(X, Y, Z,zone, sizeof(zone));
 		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	    if((IslandGateStatus == 0 || !IsInRangeOfPoint(-1105.8833,4428.3745,4.4000, X, Y, Z, 800.0)) && (engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET))
	    {
			if((engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET))
			{
				format(string, sizeof(string), "** Phi cong %s: Thap kiem soat, %s xin phep cat canh tu %s, over. **", GetPlayerNameEx(playerid), callsign, zone);
				SendGroupMessage(1, DEPTRADIO, string);
				if(!IsACop(playerid)) SendClientMessage(playerid, DEPTRADIO, string);
		        format(string, sizeof(string), "** Tram kiem soat hang khong: %s, ban co the cat canh, over. **", callsign);
				SendGroupMessage(1, DEPTRADIO, string);
				if(!IsACop(playerid)) SendClientMessage(playerid, DEPTRADIO, string);
				SendClientMessageEx(playerid, COLOR_WHITE, "Dong co bat dau no, Xin vui long doi...[10 giay]");
				SetTimerEx("SetVehicleEngine", 10000, 0, "dd",  vehicleid, playerid);
			}
		}
		else if(engine == VEHICLE_PARAMS_ON)
		{
			SetVehicleEngine(vehicleid, playerid);
		}
		else
		{
		    format(string, sizeof(string), "** Phi cong %s: Thap kiem soat, %s san sang de cat canh, over. **", GetPlayerNameEx(playerid), callsign);
			SendGroupMessage(1, DEPTRADIO, string);
			if(!IsACop(playerid)) SendClientMessage(playerid, DEPTRADIO, string);
	        format(string, sizeof(string), "** Tram kiem soat hang khong: %s, Chung toi tu choi. Hoan dao nay thuoc lockdown, over. **", callsign);
			SendGroupMessage(1, DEPTRADIO, string);
			if(!IsACop(playerid)) SendClientMessage(playerid, DEPTRADIO, string);
		}
	}
	return 1;
}

CMD:cgun(playerid, params[]) {
    if(servernumber == 2)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "Lenh nay bi vo hieu hoa!");
	    return 1;
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
	    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the tiep can vao cac thung tu ben trong chiec xe cua ban! ");
	}
    new Float:cX, Float: cY, Float: cZ, CrateFound;
	for(new i = 0; i < sizeof(CrateInfo); i++)
    {
    	if(CrateInfo[i][crActive])
    	{
    		GetDynamicObjectPos(CrateInfo[i][crObject], cX, cY, cZ);
    		if(IsPlayerInRangeOfPoint(playerid, 3.0, cX, cY, cZ))
    		{
		        if(IsInRangeOfPoint(-1105.8833,4428.3745,4.4000, CrateInfo[i][crX],CrateInfo[i][crY],CrateInfo[i][crZ], 1000.0))
			    {
			        return SendClientMessageEx(playerid, COLOR_GRAD2, "ERROR:  Thung nay da duoc dong kin boi he thong an ninh cua dao! ");
			    }
    		    if(CrateInfo[i][GunQuantity] < 1)
    		    {
    		        SendClientMessageEx(playerid, COLOR_GRAD2, "Thung rong~! ");
    		        DestroyDynamicObject(CrateInfo[i][crObject]);
    		        DestroyDynamic3DTextLabel(CrateInfo[i][crLabel]);
	    		    CrateInfo[i][crActive] = 0;
	    		    CrateInfo[i][InVehicle] = INVALID_VEHICLE_ID;
				    CrateInfo[i][crObject] = 0;
				    CrateInfo[i][crX] = 0;
				    CrateInfo[i][crY] = 0;
				    CrateInfo[i][crZ] = 0;
					CrateFound = 1;
					mysql_SaveCrates();
					break;
    		    }
    		    else
    		    {
	    		    SetPVarInt(playerid, "CrateGuns_CID", i);
	    		    ShowPlayerDialog(playerid, CRATE_GUNMENU, DIALOG_STYLE_LIST, "Chon mot khau sung tu thung",	"Desert Eagle - 4 HG Mats\nSPAS-12 - 8 HG Mats\nMP5 - 5 HG Mats\nM4A1 - 6 HG Mats\nAK-47 - 5 HG Mats\nSniper Rifle - 5 HG Mats\nShotgun - 3 HG Mats\n9mm - 1 HG Mats", "Lua chon", "Huy bo");
					CrateFound = 1;
					break;
				}
    		}
    	}
    }
    if(!CrateFound)
    {
    	SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o gan mot thung! ");
    }
    return 1;
}

/*CMD:lockdown(playerid, params[]) {
	new iGroupID = PlayerInfo[playerid][pMember];
    if(PlayerInfo[playerid][pRank] >= arrGroupData[iGroupID][g_iCrateIsland])
    {
		new string[128];
		if(IslandGateStatus == 0)
		{
		    MoveDynamicObject(IslandGate, -1083.90002441,4289.70019531,7.59999990, 0.5);
		    foreach(new i: Player)
		    {
		        if(IsPlayerInRangeOfPoint(i, 500, -1083.90002441,4289.70019531,7.59999990))
		        {
		            SendClientMessageEx(i, COLOR_YELLOW, " UNAUTHORISED INTRUDERS!! LOCKDOWN SEQUENCE INITIATED!!");
					PlayAudioStreamForPlayer(i, "http://sampweb.ng-gaming.net/brendan/siren.mp3", -1083.90002441,4289.70019531,7.59999990, 500, 1);
		        }
		    }
			format(string, sizeof(string), "** %s has initiated a lockdown sequence at the Weapons Manufacturing Facility. **", GetPlayerNameEx(playerid));
			SendGroupMessage(1, DEPTRADIO, string);
			IslandGateStatus = gettime();
			IslandThreatElimTimer = SetTimer("IslandThreatElim", 1800000, 0);
		}
		else
		{
		    SendClientMessageEx(playerid, COLOR_GRAD2, " The facility is already locked down! ");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, " Only the SAAS has the authority to do this! ");
	}
	return 1;
}*/

CMD:businessdate(playerid, params[]) {
	new giveplayerid;
	if(PlayerInfo[playerid][pAdmin] < 2)
	{
	    giveplayerid = playerid;
	}
	else
	{
	    if(sscanf(params, "u", giveplayerid)) giveplayerid = playerid;
	}
	if(IsValidBusinessID(PlayerInfo[playerid][pBusiness]))
	{
	    new string[128];
	    new datestring[32];
		datestring = date(Businesses[PlayerInfo[giveplayerid][pBusiness]][bMonths], 4);
		if(Businesses[PlayerInfo[giveplayerid][pBusiness]][bMonths] == 0) format(string, sizeof(string), "* Cua hang cua ban khong the thiet lap het han.");
		else format(string, sizeof(string), "* Dang ki cua hang cua ban het han ngay %s.", datestring);
	    SendClientMessageEx(playerid, COLOR_VIP, string);
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong thue cua hang nao ca.");
	return 1;
}

CMD:vipdate(playerid, params[]) {
	new giveplayerid;
	if(PlayerInfo[playerid][pAdmin] < 2)
	{
	    giveplayerid = playerid;
	}
	else
	{
	    if(sscanf(params, "u", giveplayerid)) giveplayerid = playerid;
	}
	if(1 <= PlayerInfo[giveplayerid][pDonateRank] <= 3 && !PlayerInfo[giveplayerid][pBuddyInvited])
	{
	    new string[128];
	    new drank[20];
		switch(PlayerInfo[giveplayerid][pDonateRank])
		{
			case 1: drank = "Bronze";
			case 2: drank = "Silver";
			case 3: drank = "Gold";
		}
	    new datestring[32];
		datestring = date(PlayerInfo[giveplayerid][pVIPExpire], 4);
		if(PlayerInfo[giveplayerid][pVIPExpire] == 0) format(string, sizeof(string), "* Tai khoan VIP %s khong thiet lap de het han.", drank);
		else format(string, sizeof(string), "* Tai khoan VIP %s cua ban het han vao %s.", drank, datestring);
	    SendClientMessageEx(playerid, COLOR_VIP, string);
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong phai la VIP.");
	return 1;
}

CMD:rewards(playerid, params[]) {
	new string[128];
	SendClientMessageEx(playerid, COLOR_GREEN, "Thong tin thuong:");
	format(string, sizeof(string), "Tong so gio choi: %d", floatround(PlayerInfo[playerid][pRewardHours]));
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	format(string, sizeof(string), "Chances in #FallIntoFun Prize Drawing: %d", PlayerInfo[playerid][pRewardDrawChance]);
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	format(string, sizeof(string), "Gold Giftbox Tokens: %d", PlayerInfo[playerid][pGoldBoxTokens]);
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	if(!iRewardBox)
	{
		SendClientMessageEx(playerid, COLOR_RED, "Note: Hop vang mon qua cua tinh ban.");
	}
	return 1;
}

CMD:banhtrungthu(playerid, params[])
{
	new str[128];
	format(str,sizeof(str),"Banh trung thu\nHien Co: %d",PlayerInfo[playerid][pBanh]);
	SendClientMessage(playerid, -1, str);
	return 1;
}

CMD:setboombox(playerid, params[])
{
	if(GetPVarType(playerid, "pBoomBox"))
	{
        ShowPlayerDialog(playerid, AUDIO_URL_BOOM, DIALOG_STYLE_LIST, "Lua chon", "List nhac\nBao Tri...\nBao Tri...", "OK", "Tu choi");
    }
	else
	{
	    SendClientMessage(playerid, COLOR_GRAD2, "Ban khong co boombox nao duoc dat ra!");
	}
	return 1;
}

CMD:nghenhac(playerid, params[]) {
	//if(PlayerInfo[playerid][pCDPlayer] == 0) return SendClientMessage(playerid, -1, "Ban chua co may nghe nhac hay vao 24/7 mua");
    if(!IsPlayerInAnyVehicle(playerid)) {
		return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban can trong xe de su dung dai phat thanh.");
	}
	ShowPlayerDialog(playerid,AUDIO_URL_BOOM,DIALOG_STYLE_LIST,"Radio Menu","List nhac\nTat nhac","Lua chon", "Dong");
    return 1;
}

CMD:id(playerid, params[]) {
	if(isnull(params)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /id [player name]");
	}

	new
		szMessage[1280],
		szPlayerName[MAX_PLAYER_NAME],
		iTargetID = strval(params),
		version[1280];

	if(IsNumeric(params) && IsPlayerConnected(strval(params)))
	{
	    GetPlayerVersion(playerid, version, sizeof(version));
	    if(PlayerInfo[playerid][pAdmin] >= 2) format(szMessage, sizeof szMessage, "%s (ID: %d) - (Cap do: %d) - (Ping: %d) - (FPS: %d) - (Version : %s)", GetPlayerNameEx(iTargetID), iTargetID, PlayerInfo[iTargetID][pLevel], GetPlayerPing(iTargetID), pFPS[iTargetID], version);
		else format(szMessage, sizeof szMessage, "%s (ID: %d) - (Level: %d) - (Ping: %d) - (Version : %s)", GetPlayerNameEx(iTargetID), iTargetID, PlayerInfo[iTargetID][pLevel], GetPlayerPing(iTargetID), version);
		return SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	}
	else if(strlen(params) < 3) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ten nguoi tim kiem it nhat phai 3 ki tu.");
	}
	else foreach(new i: Player)
	{
		GetPlayerName(i, szPlayerName, sizeof szPlayerName);
		GetPlayerVersion(i, version, sizeof(version));
		if(strfind(szPlayerName, params, true) != -1) {
			if(PlayerInfo[playerid][pAdmin] >= 2) format(szMessage, sizeof szMessage, "%s (ID: %d) - (Cap do: %d) - (Ping: %d) - (FPS: %d) - (Version : %s)", GetPlayerNameEx(i), i, PlayerInfo[i][pLevel], GetPlayerPing(i), pFPS[i], version);
			else format(szMessage, sizeof szMessage, "%s (ID: %d) - (Cap do: %d) - (Ping: %d) - (Version : %s)", GetPlayerNameEx(i), i, PlayerInfo[i][pLevel], GetPlayerPing(i), version);
			SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		}
	}
	return 1;
}

#if defined zombiemode
CMD:zombiehelp(playerid, params[])
{
	SendClientMessageEx(playerid, COLOR_GREY, "Commands: /buycure /bite /curevirus /getvials (For Medics)");
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Admin Commands: /zombieweather /zombieevent /makezombie /setvials /zombieannounce /unzombie");
	}
	return 1;
}

CMD:buycure(playerid, params[])
{
	if(IsAtDeliverPatientPoint(playerid))
	{
		if(gettime() - 900 > PlayerInfo[playerid][pBoughtCure] || PlayerInfo[playerid][pBoughtCure] == 0)
		{
			if(GetPVarInt(playerid, "PinConfirmed"))
			{
				if(PlayerInfo[playerid][pCredits] < 20)
					return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co du credits de mua san pham nay.");



				new string[128];
				format(string, sizeof(string), "[BUYCURE] [User: %s(%i)] [IP: %s] [XU: %s] [Zombie Cure] [Gia tien: %s]", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), GetPlayerIpEx(playerid), number_format(PlayerInfo[playerid][pCredits]), number_format(20));
				Log("logs/zombiecure.log", string), print(string);

				GivePlayerCredits(playerid, -20, 1);

				PlayerInfo[playerid][pVials] += 5;
				PlayerInfo[playerid][pBoughtCure] = gettime();

				g_mysql_SaveAccount(playerid);

				format(string, sizeof(string), "[BUYCURE] [User: %s(%i)] [IP: %s] [XU: %s] [Zombie Cure] [Gia tien: %s]", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), GetPlayerIpEx(playerid), number_format(PlayerInfo[playerid][pCredits]), number_format(20));
				Log("logs/credits.log", string), print(string);

				format(string, sizeof(string), "Ban da mua mot lo chua benh voi gia %s XU. De dung su dung /curevirus.", number_format(20));
				SendClientMessageEx(playerid, COLOR_CYAN, string);
			}
			else
			{
				PinLogin(playerid);
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "Ban phai cho 15 phut giua phuong phap chua tri!");
		}
	}
	else {
		return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban phai co mot diem giao hang benh vien de mua thuoc de chua benh!");
	}
	return 1;
}

CMD:getvials(playerid, params[])
{
	if(zombieevent == 1)
	{
      	if(IsAMedic(playerid) && IsAnAmbulance(GetPlayerVehicleID(playerid)))
		{
		    if(PlayerInfo[playerid][pVials] > 0)
				return SendClientMessageEx(playerid, COLOR_GREY, "Ban da co thuoc khang sinh.");

			new string[128];
		    PlayerInfo[playerid][pVials] += 5;
		    SendClientMessageEx(playerid, COLOR_GREEN, "Ban da co 5 lo thuoc khang sinh.");
		    format(string, sizeof(string), "* %s co 5 lo thuoc khang sinh tu chiec xe.", GetPlayerNameEx(playerid));
			ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
		    SendClientMessageEx(playerid, COLOR_GREY, "Ban dang khong o gan mot bac si hoac trong mot xe cuu thuong.");
		}
	}
	return 1;
}

CMD:bite(playerid, params[])
{
	if(zombieevent == 1)
	{
		if(GetPVarType(playerid, "pIsZombie"))
		{
		    new Float:X, Float:Y, Float:Z;
		    GetPlayerPos(playerid, X, Y, Z);
			foreach(new i:Player)
			{
			    if(!GetPVarType(i, "pIsZombie") && !IsPlayerInAnyVehicle(i) && IsPlayerInRangeOfPoint(i, 2, X, Y, Z))
			    {


					/*if(GetPVarType(i, "pZombieBit")) {
						return SendClientMessageEx(playerid, COLOR_GREY, "This player is already infected - find somebody else!");
					} */
					new Float:hp, string[128];
					if(GetPVarInt(i, "LastBiteTime"))
					{
						if(gettime() < GetPVarInt(i, "LastBiteTime"))
						{
			    			format(string, sizeof(string), "Ban phai tro %d giay de tiep tuc lay nhiem nguoi khac.", (GetPVarInt(i, "LastBiteTime") - gettime()));
			    			SendClientMessageEx(playerid, COLOR_GREY, string);
			    			return 1;
						}
					}
					GetPlayerHealth(i, hp);
					SetPlayerHealth(i, hp - 30);
					SetPVarInt(i, "pZombieBit", 1);
					SetPVarInt(i, "pZombieBiter", playerid);
					SetPVarInt(i, "LastBiteTime", gettime()+15);

					SetPVarInt(playerid, "LastBiteID", i);
					SetPlayerToTeamColor(i);
					format(string, sizeof(string), "* %s lay nhiem %s's qua rang, lay qua vet thuong.", GetPlayerNameEx(playerid), GetPlayerNameEx(i));
					ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					//SendAudioToRange(66, 100, X, Y, Z, 5); RESCRIPT NEW SOUND
					return 1;
			    }
			}
			SendClientMessageEx(playerid, COLOR_GREY, "Khong ai o gan ban de lay nhiem!");
		}
	}
	else
	{
	    if(EventKernel[EventType] == 4 && (GetPVarInt(playerid, "EventToken") == 1) && GetPVarType(playerid, "pEventZombie"))
		{
		    new Float:X, Float:Y, Float:Z;
		    GetPlayerPos(playerid, X, Y, Z);
			foreach(new i:Player)
			{
			    if((GetPVarInt(i, "EventToken") == 1) && !GetPVarType(i, "pEventZombie"))
			    {
				    if(IsPlayerInRangeOfPoint(i, 2, X, Y, Z))
				    {
						new Float:hp, string[128];
						GetPlayerHealth(i, hp);
						SetPlayerHealth(i, hp-20);
						format(string, sizeof(string), "* %s lay nhiem %s's qua rang, lay qua vet thuong.", GetPlayerNameEx(playerid), GetPlayerNameEx(i));
						ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						//SendAudioToRange(65, 100, X, Y, Z, 5);
						return 1;
				    }
				}
			}
			SendClientMessageEx(playerid, COLOR_GREY, "Khong ai o gan ban de lay nhiem!");
		}
	}
	return 1;
}

CMD:curevirus(playerid, params[])
{
	if(zombieevent == 1 && PlayerInfo[playerid][pVials])
	{
		new giveplayerid, string[128];
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /curevirus [Player]");
		if(!GetPVarType(giveplayerid, "pZombieBit")) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong co viruts hoac da lam zombie!");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(giveplayerid, X, Y, Z);
		if(!IsPlayerInRangeOfPoint(playerid, 5, X, Y, Z)) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o gan benh nhan.");

		if(GetPVarInt(playerid, "pZombieHealTime"))
		{
			if(gettime() < GetPVarInt(playerid, "pZombieHealTime"))
			{
			    format(string, sizeof(string), "Ban phai doi %d giay de co tiep the tiep tuc lai.", (GetPVarInt(playerid, "pZombieHealTime") - gettime()));
			    SendClientMessageEx(playerid, COLOR_GREY, string);
			    return 1;
			}
		}

		format(string, sizeof(string), "* %s tiem %s thuoc giai doc.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
        ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

		DeletePVar(giveplayerid, "pZombieBit");
		SetPVarInt(playerid, "pZombieHealTime", gettime()+15);
		SetPlayerToTeamColor(giveplayerid);

		PlayerInfo[playerid][pVials]--;
		if(PlayerInfo[playerid][pVials] == 0)
		{
      		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong con lo!");
		}
		else
		{
  			format(string, sizeof(string), "Ban con %d lo.", PlayerInfo[playerid][pVials]);
			SendClientMessageEx(playerid, COLOR_GREY, string);
		}

  		format(string, sizeof(string), "INSERT INTO zombieheals (id,num) VALUES (%d,1) ON DUPLICATE KEY UPDATE num = num + 1", GetPlayerSQLId(playerid));
		mysql_function_query(MainPipeline, string, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
	}
	return 1;
}
#endif


CMD:fix(playerid, params[])
{
    	new string[32 + MAX_PLAYER_NAME];
        if(IsPlayerInAnyVehicle(playerid))
		{
		    SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the sua chua khi ben trong xe.");
		    return 1;
		}

  		if(gettime() < PlayerInfo[playerid][pMechTime])
		{
  			format(string, sizeof(string), "Phai cho doi %d giay!", PlayerInfo[playerid][pMechTime]-gettime());
     		SendClientMessageEx(playerid, COLOR_GRAD1,string);
     		return 1;
		}
		else if(GetPVarInt(playerid, "EventToken"))
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung nay trong khi dang o mot su kien.");
			return 1;
		}
		else if(GetPVarInt(playerid, "Fixvehicles"))
    	{
    		SendClientMessage(playerid, COLOR_GREY, "Ban dang sua chua khong the tiep tuc");
			return 1;
    	}
    	else if(PlayerInfo[playerid][pBanhXe] <= 1)
    	{
    		SendClientMessageEx(playerid,COLOR_GREY,"Ban khong co banh xe");
    		return 1;
		}
    	else if(PlayerInfo[playerid][pDongCo] <= 1)
    	{
    		SendClientMessageEx(playerid,COLOR_GREY,"Ban khong co Dong co xe");
    		return 1;
		}
		new closestcar = GetClosestCar(playerid);

  		if(IsPlayerInRangeOfVehicle(playerid, closestcar, 10.0))
  		{
			if(!IsABike(closestcar) && !IsAPlane(closestcar)) {
				new engine,lights,alarm,doors,bonnet,boot,objective;
				GetVehicleParamsEx(closestcar,engine,lights,alarm,doors,bonnet,boot,objective);
				if(bonnet == VEHICLE_PARAMS_OFF || bonnet == VEHICLE_PARAMS_UNSET)
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "Ban can phai mo mui xe ra de sua chua no (/xe mui).");
					return 1;
				}
			}
   			//SetTimer("Fixvehicles", 15000, 1); // 15s
   			TimeFixVehicles[playerid] = SetTimerEx("Fixvehiclesnojob", FIXVEHICLES*1000, 0, "ii", playerid);
   			ApplyAnimation(playerid, "BD_FIRE", "wash_up", 4.0999, 1, 0, 0, 0, 0);
   			SetPVarInt(playerid, "Fixvehicles", 1);
   			cmd_me(playerid, "Mo nap xe va tien hanh sua chua.....");
   			SendClientMessage(playerid, -1, "Dang tien hanh sua chua phuong tien");
   			SendClientMessage(playerid, -1, "Ban co the ngung sua chua {770000}>/ngungsuachua<");
   			TextDrawShowForPlayer(playerid, Notifix[0]);
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o gan mot chiec xe nao de sua chua.");
    	return 1;
}
CMD:ngungsuachua(playerid,params[])
{
	if(GetPVarType(playerid, "Fixvehicles") == 1)
	{
		DeletePVar(playerid, "Fixvehicles");
		TimeFixVehicles[playerid] = 0;
		KillTimer(TimeFixVehicles[playerid]); // Dung timer.
		ClearAnimations(playerid);
		TogglePlayerControllable(playerid, 1);
		SendClientMessage(playerid, -1, "Ban da ngung sua chua phuong tien");
	}
	else
	{
		SendClientMessage(playerid, -1, "Yeu cau cua ban khong duoc thuc hien");
	}
	return 1;
}
CMD:turfinfo(playerid, params[])
{
    if(GetPlayerTurfWarsZone(playerid) != -1) {
        new string[128];
        new tw = GetPlayerTurfWarsZone(playerid);
        format(string,sizeof(string),"|___________ (ID: %d) %s ___________|",tw,TurfWars[tw][twName]);
        SendClientMessageEx(playerid, COLOR_GREEN, string);
        if(TurfWars[tw][twOwnerId] != -1) {
            format(string,sizeof(string),"Chu so huu: %s.",FamilyInfo[TurfWars[tw][twOwnerId]][FamilyName]);
        }
        else {
            format(string,sizeof(string),"Chu so huu: Khong co.");
        }
        SendClientMessageEx(playerid, COLOR_WHITE, string);
        format(string,sizeof(string),"Vulnerable: %d Hours.",TurfWars[tw][twVulnerable]);
        SendClientMessageEx(playerid, COLOR_WHITE, string);
        format(string,sizeof(string),"Locked: %d.",TurfWars[tw][twLocked]);
        SendClientMessageEx(playerid, COLOR_WHITE, string);
        format(string,sizeof(string),"Hoat dong: %d.",TurfWars[tw][twActive]);
        SendClientMessageEx(playerid, COLOR_WHITE, string);
        if(TurfWars[tw][twActive] != 0) {
            format(string,sizeof(string),"Thoi gian con lai: %d giay.",TurfWars[tw][twTimeLeft]);
            SendClientMessageEx(playerid, COLOR_WHITE, string);
            if(TurfWars[tw][twAttemptId] == -1) {
                format(string,sizeof(string),"Tiep quan Faction: Thuc thi phap luat.");
                SendClientMessageEx(playerid, COLOR_WHITE, string);
            }
            else {
                format(string,sizeof(string),"Takeover Family: %s.",FamilyInfo[TurfWars[tw][twAttemptId]][FamilyName]);
                SendClientMessageEx(playerid, COLOR_WHITE, string);
            }
        }
        switch(TurfWars[tw][twSpecial]) {
            case 1:
            {
                format(string,sizeof(string),"Special Perks: Extortion.");
            }
            default:
            {
                format(string,sizeof(string),"Special Perks: None.");
            }
        }
        SendClientMessageEx(playerid, COLOR_WHITE, string);
    }
    else {
        SendClientMessageEx(playerid, COLOR_WHITE, "You are not in a turf!");
    }
    return 1;
}

CMD:doiteamarena(playerid, params[]) {
	return cmd_switchteam(playerid, params);
}

CMD:switchteam(playerid, params[])
{
    if(GetPVarInt(playerid, "IsInArena") == -1) {
        SendClientMessageEx(playerid,COLOR_WHITE,"Ban khong trong dau truong!");
        return 1;
    }
    if(GetPVarInt(playerid, "AOSlotPaintballFlag") != -1) {
        SendClientMessageEx(playerid,COLOR_WHITE,"Ban khong the chuyen doi khi dang cam co!");
        return 1;
    }

    new arenaid = GetPVarInt(playerid, "IsInArena");
    if(PaintBallArena[arenaid][pbGameType] == 2 || PaintBallArena[arenaid][pbGameType] == 3 || PaintBallArena[arenaid][pbGameType] == 5) {
        PaintballSwitchTeam(playerid);
    }
    else {
        SendClientMessageEx(playerid,COLOR_WHITE,"Ban khong the chuyen doi o che do choi nay!");
    }
    return 1;
}

CMD:arena(playerid, params[]) {
	return cmd_joinarena(playerid, params);
}

CMD:joinarena(playerid, params[])
{
    if(GetPVarInt(playerid, "IsInArena") == -1) {
        if(PlayerInfo[playerid][pConnectHours] < 2) {
            SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the tham gia mot tran dau Paintball vi ban con han che vu khi.");
            return 1;
        }
        if(GetPVarInt(playerid, "Packages") >= 1 || TaxiAccepted[playerid] != INVALID_PLAYER_ID || EMSAccepted[playerid] != INVALID_PLAYER_ID || BusAccepted[playerid] != INVALID_PLAYER_ID || MedicAccepted[playerid] != INVALID_PLAYER_ID || MechanicCallTime[playerid] >= 1) {
            SendClientMessageEx(playerid, COLOR_WHITE, "Hay dam bao rang cac' checkpoints da duoc xoa bo ( ban dang co' 1 checkpoints , taxi hoac khac').");
            return 1;
        }
		if(PlayerCuffed[playerid] >= 1 || PlayerInfo[playerid][pJailTime] > 0 || GetPVarInt(playerid, "Injured")) return SendClientMessageEx( playerid, COLOR_WHITE, "Ban khong the lam dieu do vao luc nay" );
        if(PlayerInfo[playerid][pAdmin] > 2) {
            ShowPlayerDialog(playerid,PBMAINMENU,DIALOG_STYLE_LIST,"Paintball Arena - Main Menu:","Choose an Arena\nPaintball Tokens\nAdmin Menu","Select","Leave");
            return 1;
        }
        if(IsPlayerInRangeOfPoint(playerid,10.0,1296.2177,-1424.0673,14.9531)) {
            ShowPlayerDialog(playerid,PBMAINMENU,DIALOG_STYLE_LIST,"Paintball Arena - Main Menu:","Choose an Arena\nPaintball Tokens\nAdmin Menu","Select","Leave");
        }
        else {
            SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong o khu vuc arena");
        }

    }
    else {
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong o gan dau truong!");
    }
    return 1;
}

CMD:xoamuctieu(playerid, params[]) return cmd_killcheckpoint(playerid, params);
CMD:killcheckpoint(playerid, params[])
{
	TaxiAccepted[playerid] = INVALID_PLAYER_ID;
	EMSAccepted[playerid] = INVALID_PLAYER_ID;
	BusAccepted[playerid] = INVALID_PLAYER_ID;
	MedicAccepted[playerid] = INVALID_PLAYER_ID;
	MechanicCallTime[playerid] = 0;

    DeletePVar(playerid, "TimDuong");
    DeletePVar(playerid, "ThiBangLai");
    DeletePVar(playerid, "GiaoHang");
    DeletePVar(playerid, "DV_TrackCar");
    DeletePVar(playerid, "TrackCar");
    DisablePlayerCheckpoint(playerid);
	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
 	TaxiCallTime[playerid] = 0;
  	BusCallTime[playerid] = 0;
  	timduong[playerid] = 0;
  	DeletePVar(playerid, "Pizza");
	DeletePVar(playerid, "Packages");
	DeletePVar(playerid, "hFind");
	DeletePVar(playerid, "GIAODA");
	batdaugiaobanh[playerid] = 0;
	truckerdonhang[playerid] = 0;
	dakhaithac[playerid] = 0;
	SendClientMessageEx(playerid,COLOR_WHITE,"Tat ca cac checkpoints,tim kiem deu da duoc cai dat lai.");
	return 1;
}

CMD:thoatarena(playerid, params[]) {
	return cmd_exitarena(playerid, params);
}

CMD:exitarena(playerid, params[])
{
    if(GetPVarInt(playerid, "IsInArena") >= 0) {
        if(GetPlayerState(playerid) == PLAYER_STATE_WASTED) {
            SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam the trong luc nay.");
            return 1;
        }
        if(PaintBallArena[GetPVarInt(playerid, "IsInArena")][pbTimeLeft] <= 30) {
            SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the thoat ra khi tran dau con it hon 30 phut!");
            return 1;
        }
        LeavePaintballArena(playerid, GetPVarInt(playerid, "IsInArena"));
    }
    else {
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong o dau truong!");
    }
    return 1;
}

CMD:advisors(playerid, params[])
{
    new string[128];
    if(PlayerInfo[playerid][pHelper] >= 1) {
        SendClientMessageEx(playerid, COLOR_GRAD1, "Advisors Online:");
        foreach(new i: Player)
		{
            new tdate[11], thour[9], i_timestamp[3];
			getdate(i_timestamp[0], i_timestamp[1], i_timestamp[2]);
			format(tdate, sizeof(tdate), "%d-%02d-%02d", i_timestamp[0], i_timestamp[1], i_timestamp[2]);
			format(thour, sizeof(thour), "%02d:00:00", hour);

            if(PlayerInfo[i][pHelper] != 0 && PlayerInfo[i][pHelper] <= PlayerInfo[playerid][pHelper]) {
                if(PlayerInfo[i][pHelper] == 1 && PlayerInfo[i][pAdmin] < 2) {
                    format(string, sizeof(string), "** Helper: %s	(Tro giup gio: %d | Tro giup ngay: %d)", GetPlayerNameEx(i), ReportHourCount[i], ReportCount[i]);
                }
                if(PlayerInfo[i][pHelper] == 2&&PlayerInfo[i][pAdmin]<2) {
                    format(string, sizeof(string), "** Junior Helper: %s	(Tro giup gio: %d | Tro giup ngay: %d)", GetPlayerNameEx(i), ReportHourCount[i], ReportCount[i]);
                }
                if(PlayerInfo[i][pHelper] == 3&&PlayerInfo[i][pAdmin]<2) {
                    format(string, sizeof(string), "** Senior Helper: %s	(Tro giup gio: %d | Tro giup ngay: %d)", GetPlayerNameEx(i), ReportHourCount[i], ReportCount[i]);
                }
                if(PlayerInfo[i][pHelper] >= 4&&PlayerInfo[i][pAdmin]<2) {
                    format(string, sizeof(string), "** Chief Helper: %s	(Tro giup gio: %d | Tro giup ngay: %d)", GetPlayerNameEx(i), ReportHourCount[i], ReportCount[i]);
                }
                SendClientMessageEx(playerid, COLOR_GRAD2, string);
            }
        }
    }
    else if(PlayerInfo[playerid][pAdmin] >= 2) {
        SendClientMessageEx(playerid, COLOR_GRAD1, "Advisors Online:");
        foreach(new i: Player)
		{
            if(PlayerInfo[i][pHelper] >= 1) {
                new tdate[11], thour[9], i_timestamp[3];
				getdate(i_timestamp[0], i_timestamp[1], i_timestamp[2]);
				format(tdate, sizeof(tdate), "%d-%02d-%02d", i_timestamp[0], i_timestamp[1], i_timestamp[2]);
				format(thour, sizeof(thour), "%02d:00:00", hour);

                if(PlayerInfo[i][pHelper] == 1&&PlayerInfo[i][pAdmin]<2) {
                    format(string, sizeof(string), "** Helper: %s	(Tro giup gio: %d | Tro giup ngay: %d)", GetPlayerNameEx(i), ReportHourCount[i], ReportCount[i]);
                }
                if(PlayerInfo[i][pHelper] == 2&&PlayerInfo[i][pAdmin]<2) {
                    if(GetPVarInt(i, "AdvisorDuty") == 1) {
                        format(string, sizeof(string), "** Junior Helper: %s (On Duty)	(Tro giup gio: %d | Tro giup ngay: %d)", GetPlayerNameEx(i), ReportHourCount[i], ReportCount[i]);
                    }
                    else {
                        format(string, sizeof(string), "** Junior Helper: %s	(Tro giup gio: %d | Tro giup ngay: %d)", GetPlayerNameEx(i), ReportHourCount[i], ReportCount[i]);
                    }
                }
                if(PlayerInfo[i][pHelper] == 3&&PlayerInfo[i][pAdmin]<2) {
                    if(GetPVarInt(i, "AdvisorDuty") == 1) {
                        format(string, sizeof(string), "** Senior Helper: %s (On Duty)	(Tro giup gio: %d | Tro giup ngay: %d)", GetPlayerNameEx(i), ReportHourCount[i], ReportCount[i]);
                    }
                    else {
                        format(string, sizeof(string), "** Senior Helper: %s	(Tro giup gio: %d | Tro giup ngay: %d)", GetPlayerNameEx(i), ReportHourCount[i], ReportCount[i]);
                    }
                }
                if(PlayerInfo[i][pHelper] >= 4&&PlayerInfo[i][pAdmin]<2) {
                    if(GetPVarInt(i, "AdvisorDuty") == 1) {
                        format(string, sizeof(string), "** Chief Helper: %s (On Duty)	(Tro giup gio: %d | Tro giup ngay: %d)", GetPlayerNameEx(i), ReportHourCount[i], ReportCount[i]);
                    }
                    else {
                        format(string, sizeof(string), "** Chief Helper: %s	(Tro giup gio: %d | Tro giup ngay: %d)", GetPlayerNameEx(i), ReportHourCount[i], ReportCount[i]);
                    }
                }
                SendClientMessageEx(playerid, COLOR_GRAD2, string);
            }
        }
    }
    else {
        SendClientMessageEx(playerid, COLOR_GRAD1, "Neu ban co thac mac lien quan toi game can nguoi tro giup!, su  dung /yeucautrogiup hoac /newb.");
        SendClientMessageEx(playerid, COLOR_GRAD1, "Neu ban thay 1 truong hop vi pham. su dung /baocao [id] [ly do].");
    }
    return 1;
}

/*CMD:storagehelp(playerid, params[])
{
	SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessageEx(playerid, COLOR_WHITE,"*** HELP *** - type a command for more infomation.");
    SendClientMessageEx(playerid, COLOR_GRAD3,"*** STORAGE *** /(vs)viewstorage /(es)equipstorage /personalwithdraw /personaldeposit /storagegive");
	SendClientMessageEx(playerid, COLOR_GRAD3,"*** STORAGE *** /transferstorage");
    return 1;
}*/

CMD:trogiupdienthoai(playerid, params[]) return cmd_cellphonehelp(playerid, params);
CMD:cellphonehelp(playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
    if (PlayerInfo[playerid][pPnumber] != 0) {
        SendClientMessageEx(playerid, COLOR_WHITE,"*** TRO GIUP *** - He thong cac lenh co ban cho dien thoai.");
        SendClientMessageEx(playerid, COLOR_GRAD3,"*** CELLPHONE *** /goi : /call 911 /sms (/p)ickup (/h)angup /speakerphone /sdt");
    }
    else {
        SendClientMessageEx(playerid, COLOR_WHITE,"Ban khong co dien thoai.Mua dien thoai tai cua hang 24/7");
    }
    return 1;
}

CMD:trogiuppoker(playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessageEx(playerid, COLOR_WHITE,"*** TRO GIUP POKER *** - He thong cac lenh co ban cho poker.");
    SendClientMessageEx(playerid, COLOR_GRAD3,"*** POKER *** /taobanpoker /xoabanpoker /thamgiapoker /thoatpoker");
    return 1;
}

CMD:trogiupnha(playerid, params[]) return cmd_househelp(playerid, params);
CMD:househelp(playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessageEx(playerid, COLOR_WHITE,"*** TRO GIUP NHA *** - He thong cac lenh co ban cho nha.");
    SendClientMessageEx(playerid, COLOR_GRAD3,"*** HOUSE *** /khoanha /setrentable /setrent /evict /evictall /bannhatoi /ringbell");
    SendClientMessageEx(playerid, COLOR_GRAD3,"*** HOUSE *** /hwithdraw /hdeposit /hbalance /getgun /storegun /closet(add/remove) /houseinvite");
    SendClientMessageEx(playerid, COLOR_GRAD3,"*** HOUSE *** /movegate /setgatepass /placemailbox /destroymailbox /getmail /guithu");
    return 1;
}

CMD:trogiupxe(playerid, params[]) return cmd_carhelp(playerid, params);
CMD:carhelp(playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessageEx(playerid, COLOR_WHITE,"*** TRO GIUP XE *** - He thong cac lenh co ban cho xe.");
    SendClientMessageEx(playerid, COLOR_GRAD3,"*** CAR OWNERSHIP *** /lock /pvlock /park /parktrailer /unmodcar /deletecar /banxetoi /trackcar");
    SendClientMessageEx(playerid, COLOR_GRAD3,"*** CAR OWNERSHIP *** /vephat /givekeys /carkeys /trunkput /trunktake /car /doxang");
    return 1;
}


CMD:renthelp(playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessageEx(playerid, COLOR_WHITE,"*** TRO GIUP THUE NHA *** - He thong cac lenh co ban cho thue nha.");
    SendClientMessageEx(playerid, COLOR_GRAD3,"*** RENT *** /unrent /enter /exit /lock /home");
    return 1;
}

CMD:tokenhelp(playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessageEx(playerid, COLOR_WHITE,"*** TOKEN HELP ***");
    SendClientMessageEx(playerid, COLOR_GRAD3,"VIP tokens can be traded for weapons at the VIP Locker.");
    SendClientMessageEx(playerid, COLOR_GRAD3,"VIP tokens can be won at events or gifts.");
    SendClientMessageEx(playerid, COLOR_GRAD3,"Weapons cost 1-5 tokens each, from melee weapons to high-powered firearms.");

    SendClientMessageEx(playerid, COLOR_GRAD3,"If you wish to give other VIPs your tokens, use /givetokens.");
    return 1;
}

CMD:trogiupbaohiem(playerid, params[]) return cmd_insurehelp(playerid, params);
CMD:insurehelp(playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessageEx(playerid, COLOR_WHITE,"*** INSURANCE HELP *** - type a command for more infomation.");
    SendClientMessageEx(playerid, COLOR_GRAD3,"*** INSURANCE *** /muabaohiem");
    SendClientMessageEx(playerid, COLOR_LIGHTRED,"*** INSURANCE *** ALL SAINTS: $1,500 + Transfer (One Time) Fee of $2,500");
    SendClientMessageEx(playerid, COLOR_LIGHTRED,"*** INSURANCE *** COUNTY: $1,500 + Transfer (One Time) Fee of $2,500");
    SendClientMessageEx(playerid, COLOR_LIGHTRED,"*** INSURANCE *** RED COUNTY: $500 + Transfer (One Time) Fee of $2,500");
    SendClientMessageEx(playerid, COLOR_LIGHTRED,"*** INSURANCE *** SAN FIERRO: $500 + Transfer (One Time) Fee of $2,500");
    SendClientMessageEx(playerid, COLOR_LIGHTRED,"*** INSURANCE *** FORT CARSON: $250");
    return 1;
}

CMD:trogiupca(playerid, params[]) return cmd_fishhelp(playerid, params);
CMD:fishhelp(playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessageEx(playerid, COLOR_WHITE,"*** FISH HELP *** - type a command for more infomation.");
    SendClientMessageEx(playerid, COLOR_GRAD3,"*** FISHING *** /fish (Try to catch a fish)   /fishes (Show the fishes you have caught)");
    SendClientMessageEx(playerid, COLOR_GRAD3,"*** FISHING *** /throwback (Throw the last fish you caught back)   /throwbackall");
    SendClientMessageEx(playerid, COLOR_GRAD3,"*** FISHING *** /releasefish (Release one of your fishes)");
    return 1;
}

CMD:trogiupcuahang(playerid, params[]) return cmd_businesshelp(playerid, params);
CMD:businesshelp(playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessageEx(playerid, COLOR_WHITE,"*** BUSINESS HELP *** - type a command for more infomation.");
	SendClientMessageEx(playerid, COLOR_GRAD3,"*** BUSINESS *** /buybizlevel /binvite /buninvite /bouninvite /bgiverank /resign /bsafe");
	SendClientMessageEx(playerid, COLOR_GRAD3,"*** BUSINESS *** /binventory /offeritem /resupply /checkresupply /cancelresupply /minrank");
	SendClientMessageEx(playerid, COLOR_GRAD3,"*** BUSINESS *** /employeepayset /employeeautopay /editgasprice /editgiacuahang /bizlock");
	SendClientMessageEx(playerid, COLOR_GRAD3,"*** BUSINESS *** /bauto /bonline /bpanic /sellbiz /muacuahang /br(chat)");
	if(IsValidBusinessID(PlayerInfo[playerid][pBusiness]))
	{
		if(Businesses[PlayerInfo[playerid][pBusiness]][bType] == BUSINESS_TYPE_NEWCARDEALERSHIP || Businesses[PlayerInfo[playerid][pBusiness]][bType] == BUSINESS_TYPE_OLDCARDEALERSHIP) {
			SendClientMessageEx(playerid, COLOR_GRAD3, "*** BUSINESS *** /editcarprice /editcarspawn");
		}
		else if(Businesses[PlayerInfo[playerid][pBusiness]][bType] == BUSINESS_TYPE_GUNSHOP) {
		    SendClientMessageEx(playerid, COLOR_GRAD3, "*** BUSINESS *** /offergun /addmat(erial)s");
		}
		else if(Businesses[PlayerInfo[playerid][pBusiness]][bType] == BUSINESS_TYPE_STORE) {
		    SendClientMessageEx(playerid, COLOR_GRAD3, "*** BUSINESS *** /offeritem /editgiacuahang");
		}
		else if (Businesses[PlayerInfo[playerid][pBusiness]][bType] == BUSINESS_TYPE_BAR || Businesses[PlayerInfo[playerid][pBusiness]][bType] == BUSINESS_TYPE_CLUB || Businesses[PlayerInfo[playerid][pBusiness]][bType] == BUSINESS_TYPE_RESTAURANT) {
	        SendClientMessageEx(playerid, COLOR_GRAD3, "*** BUSINESS *** /offermenu");
	    }
	}
	if(PlayerInfo[playerid][pAdmin] >= 4 || PlayerInfo[playerid][pShopTech] > 0)
	{
		SendClientMessageEx(playerid, COLOR_GRAD3, "*** BIZ ADMIN *** /bedit /bname (ST) /bnext (ST) /bnear (ST) /gotobiz (ST) /goinbiz (ST)");
		SendClientMessageEx(playerid, COLOR_GRAD3, "*** BIZ ADMIN *** /deletegaspump /asellbiz /creategaspump /editgaspump");
	}
    return 1;
}

CMD:bhelp(playerid, params[]) {
	return cmd_businesshelp(playerid, params);
}

CMD:searchcar(playerid, params[])
{
    new string[128];
    if (!IsACop(playerid))
	{
        SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai la nhan vien chinh phu!");
        return 1;
    }
    if(GetPVarInt(playerid, "Injured") != 0) {
		SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong the lam dieu nay vao luc nay.");
		return 1;
	}
    new carid = GetPlayerVehicleID(playerid);
    new closestcar = GetClosestCar(playerid,carid);
    if(!IsPlayerInRangeOfVehicle(playerid, closestcar, 9.0))
	{
        SendClientMessageEx(playerid,COLOR_GREY,"Ban khong o gan bat ki xe nao.");
        return 1;
    }
	if(!IsABike(closestcar) && !IsAPlane(closestcar)) {
		new engine,lights,alarm,doors,bonnet,boot,objective;
		GetVehicleParamsEx(closestcar,engine,lights,alarm,doors,bonnet,boot,objective);
		if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET)
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "Nap  xe phai mo moi co the tim kiem.");
			return 1;
		}
	}
    foreach(new i: Player)
	{
        new v = GetPlayerVehicle(i, closestcar);
        if(v != -1)
		{
            string[0] = 0;
            for(new x = 0; x < 3; x++)
			{
                if(PlayerVehicleInfo[i][v][pvWeapons][x] != 0)
				{
                    new
                        szWep[20];

                    GetWeaponName(PlayerVehicleInfo[i][v][pvWeapons][x], szWep, sizeof(szWep));
                    if(isnull(string)) format(string, sizeof(string), "* Trunk contains: %s", szWep);
                    else format(string, sizeof(string), "%s, %s", string, szWep);
                }
            }
            if(!isnull(string)) {
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				if(CrateVehicleLoad[closestcar][vCarVestKit]) {
		            SendClientMessageEx(playerid, COLOR_WHITE, "* Trunk contains:");
		            SendClientMessageEx(playerid, COLOR_WHITE, "* Kevlar Vest.");
		            SendClientMessageEx(playerid, COLOR_WHITE, "* First Aid Kit.");
				}
			}
            else SendClientMessageEx(playerid, COLOR_WHITE, "* Trunk contains: khong co gi.");
        }
    }
    if(isnull(string))
    {
        if(CrateVehicleLoad[closestcar][vCarVestKit] > 0) {
            new str[84];
            SendClientMessageEx(playerid, COLOR_WHITE, "* Trunk contains:");
            format(str, sizeof(str), "* Kevlar Vest (x%d).", CrateVehicleLoad[closestcar][vCarVestKit]);
            SendClientMessageEx(playerid, COLOR_WHITE, str);
            format(str, sizeof(str), "* First Aid Kit(x%d).", CrateVehicleLoad[closestcar][vCarVestKit]);
            SendClientMessageEx(playerid, COLOR_WHITE, str);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "* Trunk contains: khong co gi.");
    }
    return 1;
}

CMD:takecarweapons(playerid, params[])
{
    if (!IsACop(playerid))
	{
        SendClientMessageEx(playerid,COLOR_GREY,"Ban khong phai la nhan vien thuc thi phap luat.");
        return 1;
    }
    new carid = GetPlayerVehicleID(playerid);
    new closestcar = GetClosestCar(playerid,carid);
    if(!IsPlayerInRangeOfVehicle(playerid, closestcar, 9.0))
	{
        SendClientMessageEx(playerid,COLOR_GREY,"Ban khong o gan bat ki xe nao.");
        return 1;
    }
	new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(closestcar,engine,lights,alarm,doors,bonnet,boot,objective);
	if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Cop xe phai mo moi co the kiem tra.");
		return 1;
	}
    foreach(new i: Player)
	{
        new v = GetPlayerVehicle(i, closestcar);
        if(v != -1)
		{
		    if (!PlayerVehicleInfo[i][v][pvWeapons][0] && !PlayerVehicleInfo[i][v][pvWeapons][1] && !PlayerVehicleInfo[i][v][pvWeapons][2])
	 		{
		 		SendClientMessageEx(playerid, COLOR_WHITE,  "Khong co vu khi tren xe.");
		 		return 1;
			}
			else
			{
	            PlayerVehicleInfo[i][v][pvWeapons][0] = 0;
	            PlayerVehicleInfo[i][v][pvWeapons][1] = 0;
	            PlayerVehicleInfo[i][v][pvWeapons][2] = 0;
				SendClientMessageEx(playerid, COLOR_WHITE,  "Tat ca vu khi da bi chuyen ra khoi xe nay.");
	    		new string[MAX_PLAYER_NAME + 44];
				format(string, sizeof(string), "* %s da chuyen cac vu khi ra khoi xe.", GetPlayerNameEx(playerid));
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    return 1;
			}
        }
    }
    return 1;
}

CMD:phoneprivacy(playerid, params[])
{
    if(PlayerInfo[playerid][pPnumber] != 0 && PlayerInfo[playerid][pDonateRank] >= 2)
	{
        if(PlayerInfo[playerid][pPhonePrivacy] == 1)
		{
            PlayerInfo[playerid][pPhonePrivacy] = 0;
            SendClientMessageEx(playerid, COLOR_WHITE, "Ban da vo hieu hoa bao mat dien thoai.");
        }
        else
		{
            PlayerInfo[playerid][pPhonePrivacy] = 1;
            SendClientMessageEx(playerid, COLOR_WHITE, "Ban da kich hoat tinh nang bao mat dien thoai.");
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co dien thoai hoac  khong phai VIP bac.");
    }
    return 1;
}

CMD:speakerphone(playerid, params[])
{
    if(PlayerInfo[playerid][pPnumber] != 0)
	{
        if(PlayerInfo[playerid][pSpeakerPhone] == 1)
		{
            PlayerInfo[playerid][pSpeakerPhone] = 0;
            SendClientMessageEx(playerid, COLOR_WHITE, "Ban da vo hieu hoa tinh nang loa ngoai tren dien thoai cua ban.");
        }
        else
		{
            PlayerInfo[playerid][pSpeakerPhone] = 1;
            SendClientMessageEx(playerid, COLOR_WHITE, "Ban da kich hoat tinh nang loa ngoai tren dien thoai cua ban.");
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co dien thoai.");
    }
    return 1;
}

CMD:lawyerduty(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 2 || PlayerInfo[playerid][pJob2] == 2)
	{
        if(GetPVarInt(playerid, "LawyerDuty") == 1)
		{
            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da tam dung cong viec luat su, vi vay ban khong the nhan cuoc goi vao luc nay.");
			SetPVarInt(playerid, "LawyerDuty", 0);
            Lawyers -= 1;
        }
        else if(GetPVarInt(playerid, "LawyerDuty") == 0)
		{
            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da lam lai cong viec luat su cua minh, vi vay ban co the nhan duoc cuoc goi tu nguoi co nhu cau.");
			SetPVarInt(playerid, "LawyerDuty", 1);
            Lawyers += 1;
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban khong phai luat su!");
    }
    return 1;
}

CMD:mechduty(playerid, params[])
{
    if(IsAMechanic(playerid))
	{
        if(GetPVarInt(playerid, "MechanicDuty") == 1)
		{
            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da off duty nhiem vu sua xe va se khong nhan duoc cuoc goi sua xe nao nua.");
			SetPVarInt(playerid, "MechanicDuty", 0);
            Mechanics -= 1;
        }
        else if(GetPVarInt(playerid, "MechanicDuty") == 0)
		{
			new str[128];
			format(str, sizeof(str), "%s da bat dau lam cong viec neu ban can ho tro hay /dichvu suaxe [Phone]: %d",GetPlayerNameEx(playerid),PlayerInfo[playerid][pPnumber]);
			SendClientMessageToAll(COLOR_LIGHTBLUE, str);
            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Bay gio ban dang on duty va ban se nhan duoc cac cuoc goi neu ai do muon sua chua xe.");
			SetPVarInt(playerid, "MechanicDuty", 1);
            ++Mechanics;
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban khong phai la Tho sua xe!");
    }
    return 1;
}

CMD:cduty(playerid, params[])
{
    if(PlayerInfo[playerid][pHelper] >= 2)
	{
        if(GetPVarInt(playerid, "AdvisorDuty") == 1)
		{
            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da offduty Staff Advisor, ban khong nhan duoc tro giup nua.");
            DeletePVar(playerid, "AdvisorDuty");
            SetPlayerColor(playerid, 0xFFFFFFAA);
            Advisors -= 1;
        }
        else
		{
            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da onduty Staff Helper, ban se nhan duoc yeu cau tu nhung nguoi can tro giup.");
            SetPVarInt(playerid, "AdvisorDuty", 1);
            SetPlayerColor(playerid, 0x99FFFF);
            Advisors += 1;
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban khong phai Staff Helper!");
    }
    return 1;
}


CMD:contracts(playerid, params[])
{
    if(IsAHitman(playerid) || PlayerInfo[playerid][pAdmin] >= 4)
	{
        SearchingHit(playerid);
    }
    return 1;
}

CMD:gate(playerid, params[])
{
	new Float:X, Float:Y, Float:Z;
	for(new i = 0; i < sizeof(GateInfo); i++)
	{
		GetDynamicObjectPos(GateInfo[i][gGATE], X, Y, Z);
		if(GateInfo[i][gFamilyID] != -1 && PlayerInfo[playerid][pFMember] == GateInfo[i][gFamilyID] && IsPlayerInRangeOfPoint(playerid,GateInfo[i][gRange], X, Y, Z) && GetPlayerVirtualWorld(playerid) == GateInfo[i][gVW] && GetPlayerInterior(playerid) == GateInfo[i][gInt])
		{
			if(GateInfo[i][gLocked] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "This gate is currently locked.");
			if(GateInfo[i][gAutomate] == 1) return 1;
			MoveGate(playerid, i);
		}
		else if(GateInfo[i][gGroupID] != -1 && (0 <= PlayerInfo[playerid][pMember] < MAX_GROUPS) && PlayerInfo[playerid][pMember] == GateInfo[i][gGroupID] && IsPlayerInRangeOfPoint(playerid,GateInfo[i][gRange], X, Y, Z) && GetPlayerVirtualWorld(playerid) == GateInfo[i][gVW] && GetPlayerInterior(playerid) == GateInfo[i][gInt])
		{
			if(GateInfo[i][gLocked] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "This gate is currently locked.");
			if(GateInfo[i][gAutomate] == 1) return 1;
			MoveGate(playerid, i);
		}
		else if(GateInfo[i][gAllegiance] != 0 && GateInfo[i][gGroupType] != 0 && (0 <= PlayerInfo[playerid][pMember] < MAX_GROUPS) && arrGroupData[PlayerInfo[playerid][pMember]][g_iAllegiance] == GateInfo[i][gAllegiance] && arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] == GateInfo[i][gGroupType] && IsPlayerInRangeOfPoint(playerid,GateInfo[i][gRange], X, Y, Z) && GetPlayerVirtualWorld(playerid) == GateInfo[i][gVW] && GetPlayerInterior(playerid) == GateInfo[i][gInt])
		{
			if(GateInfo[i][gLocked] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "This gate is currently locked.");
			if(GateInfo[i][gAutomate] == 1) return 1;
			MoveGate(playerid, i);
		}
		else if(GateInfo[i][gAllegiance] != 0 && GateInfo[i][gGroupType] == 0 && (0 <= PlayerInfo[playerid][pMember] < MAX_GROUPS) && arrGroupData[PlayerInfo[playerid][pMember]][g_iAllegiance] == GateInfo[i][gAllegiance] && IsPlayerInRangeOfPoint(playerid,GateInfo[i][gRange], X, Y, Z) && GetPlayerVirtualWorld(playerid) == GateInfo[i][gVW] && GetPlayerInterior(playerid) == GateInfo[i][gInt])
		{
			if(GateInfo[i][gLocked] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "This gate is currently locked.");
			if(GateInfo[i][gAutomate] == 1) return 1;
			MoveGate(playerid, i);
		}
		else if(GateInfo[i][gAllegiance] == 0 && GateInfo[i][gGroupType] != 0 && (0 <= PlayerInfo[playerid][pMember] < MAX_GROUPS) && arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] == GateInfo[i][gGroupType] && IsPlayerInRangeOfPoint(playerid,GateInfo[i][gRange], X, Y, Z) && GetPlayerVirtualWorld(playerid) == GateInfo[i][gVW] && GetPlayerInterior(playerid) == GateInfo[i][gInt])
		{
			if(GateInfo[i][gLocked] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "This gate is currently locked.");
			if(GateInfo[i][gAutomate] == 1) return 1;
			MoveGate(playerid, i);
		}
	}
    return 1;
}

CMD:auctions(playerid, params[]) {

	new
		szDialog[500];

    for (new i; i < sizeof(Auctions); i++)
    {
    	format(szDialog, sizeof(szDialog), "%s\n Auction: %i | Item: %s | Highest Bid: $%i", szDialog, i+1, Auctions[i][BiddingFor], Auctions[i][Bid]);
    }
	ShowPlayerDialog(playerid, DIALOG_AUCTIONS, DIALOG_STYLE_LIST, "Auctions", szDialog, "More Info", "Close");
	return 1;
}

CMD:online(playerid, params[]) {
    if(PlayerInfo[playerid][pLeader] >= 0)
	{

		new
			szDialog[1024];

		foreach(new i: Player)
		{
			if(IsATaxiDriver(playerid) && IsATaxiDriver(i)) switch(TransportDuty[i]) {
				case 1: format(szDialog, sizeof(szDialog), "%s\n* %s (on duty), %i calls accepted", szDialog, GetPlayerNameEx(i), PlayerInfo[i][pCallsAccepted]);
				default: format(szDialog, sizeof(szDialog), "%s\n* %s (off duty), %i calls accepted", szDialog, GetPlayerNameEx(i), PlayerInfo[i][pCallsAccepted]);
			}
			else if(IsAMedic(playerid) && IsAMedic(i) && (arrGroupData[PlayerInfo[playerid][pMember]][g_iAllegiance] == arrGroupData[PlayerInfo[i][pMember]][g_iAllegiance])) switch(PlayerInfo[i][pDuty]) {
				case 1: format(szDialog, sizeof(szDialog), "%s\n* %s (on duty), %i calls accepted, %i patients delivered.", szDialog, GetPlayerNameEx(i), PlayerInfo[i][pCallsAccepted], PlayerInfo[i][pPatientsDelivered]);
				default: format(szDialog, sizeof(szDialog), "%s\n* %s (off duty), %i calls accepted, %i patients delivered.", szDialog, GetPlayerNameEx(i), PlayerInfo[i][pCallsAccepted], PlayerInfo[i][pPatientsDelivered]);
			}
			else if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pLeader]) switch(PlayerInfo[i][pDuty]) {
				case 1: format(szDialog, sizeof(szDialog), "%s\n* %s (on duty)", szDialog, GetPlayerNameEx(i),PlayerInfo[i][pMph],PlayerInfo[i][pKhuVuc]);
				default: format(szDialog, sizeof(szDialog), "%s\n* %s (off duty) %d %s", szDialog, GetPlayerNameEx(i),PlayerInfo[i][pMph],PlayerInfo[i][pKhuVuc]);
			}
		}
		if(!isnull(szDialog)) {
		    strdel(szDialog, 0, 1);
			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_LIST, "Online Members", szDialog, "Lua chon", "Huy bo");
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "Khong co thanh vien online luc nay.");

    }  else SendClientMessageEx(playerid, COLOR_GREY, "Chi co leader Group moi co the su dung duoc lenh nay.");
    return 1;
}

CMD:bonline(playerid, params[]) {
	new iBusinessID = PlayerInfo[playerid][pBusiness];
    if((0 <= iBusinessID < MAX_BUSINESSES) && PlayerInfo[playerid][pBusinessRank] >= Businesses[iBusinessID][bMinInviteRank])
	{
		new szDialog[1024];
		foreach(new i: Player)
		{
			if(PlayerInfo[i][pBusiness] == PlayerInfo[playerid][pBusiness] && (PlayerInfo[i][pTogReports] == 1 || PlayerInfo[i][pAdmin] < 2))
			{
				format(szDialog, sizeof(szDialog), "%s\n* %s (%s)", szDialog, GetPlayerNameEx(i), GetBusinessRankName(PlayerInfo[i][pBusinessRank]));
			}
		}
		if(!isnull(szDialog)) {
		    strdel(szDialog, 0, 1);
			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_LIST, "Online Members", szDialog, "Lua chon", "Huy bo");
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "No members are online at this time.");
    }
	else SendClientMessageEx(playerid, COLOR_GREY, "Only business leaders may use this command.");
    return 1;
}

CMD:badge(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] >= 0 && arrGroupData[PlayerInfo[playerid][pMember]][g_hDutyColour] != 0xFFFFFF)
	{
		if(GetPVarInt(playerid, "IsInArena") >= 0 || PlayerInfo[playerid][pJailTime] > 0 || GetPVarInt(playerid, "EventToken") != 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong on-duty ngay bay gio.");
			return 1;
		}
		#if defined zombiemode
		if(zombieevent == 1 && GetPVarType(playerid, "pIsZombie")) return SendClientMessageEx(playerid, COLOR_GREY, "Zombies khong the su dung.");
		#endif
		if(PlayerInfo[playerid][pDuty]) {
			PlayerInfo[playerid][pDuty] = 0;
			SetPlayerToTeamColor(playerid);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da an huy hieu cua ban, va bay gio ban da off-duty.");
			ResetPlayerWeapons(playerid);
			if(IsAMedic(playerid))
			{
				Medics -= 1;
			}
			if(IsACop(playerid))
			{
  				policeonline --;
			}
			

			new employer[GROUP_MAX_NAME_LEN], rank[GROUP_MAX_RANK_LEN], division[GROUP_MAX_DIV_LEN];
			GetPlayerGroupInfo(playerid, rank, division, employer);
			new name[1280];
			GetPlayerName(playerid, name, sizeof(name));
			new thongbao[1280];
			format(thongbao, sizeof(thongbao), "[HQ] : %s %s Off Duty.", rank, name);

			foreach(new i: Player) {
				if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember]) {
				    SendClientMessageEx(i, arrGroupData[PlayerInfo[playerid][pMember]][g_hRadioColour] * 256 + 255, thongbao);
				}
			}
			return 1;
		}
		else {

			PlayerInfo[playerid][pDuty] = 1;
			SetPlayerToTeamColor(playerid);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da bat huy hieu cua ban, va bay gio ban da on-duty.");
			if(IsAMedic(playerid))
			{
				Medics += 1;
			}
			if(IsACop(playerid))
			{
  				policeonline ++;
			}
			new employer[GROUP_MAX_NAME_LEN], rank[GROUP_MAX_RANK_LEN], division[GROUP_MAX_DIV_LEN];
			GetPlayerGroupInfo(playerid, rank, division, employer);
			new name[1280];
			GetPlayerName(playerid, name, sizeof(name));

			new thongbao[1280];
			format(thongbao, sizeof(thongbao), "[HQ]: %s %s On Duty.", rank, name);
            foreach(new i: Player) {
				if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember]) {
				    SendClientMessageEx(i, arrGroupData[PlayerInfo[playerid][pMember]][g_hRadioColour] * 256 + 255, thongbao);
				}
			}
			return 1;
		}
	}
	return 1;
}

CMD:badgezazz(playerid,params[])
{
	new string[128], iGroupID = PlayerInfo[playerid][pMember];
	if(isnull(params))
	{
		SendClientMessageEx(playerid, -1, "SU DUNG: /badge [on, off]");
		return 1;
	}
	if(!IsACop(playerid))
	{
		SendClientMessage(playerid, COLOR_GREY,"Ban khong phai la mot nhan vien chinh phu");
		return 1;
	}
	//if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(strcmp(params, "info", true) == 0)
		{
			return 1;
		}
		if(strcmp(params,"on",true) == 0)
		{
			if(PlayerInfo[playerid][pDuty] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY,"Ban dang lam viec [/badge off]");
				return 1;
			}
			PlayerInfo[playerid][pDuty] = 1;
			SetPlayerToTeamColor(playerid);
			format(string, sizeof(string), "**{7B68EE}HQ:%s %s %s (#%d) is now On Duty!",arrGroupData[iGroupID][g_szGroupName],PlayerInfo[playerid][pNameRank],GetPlayerNameEx(playerid), PlayerInfo[playerid][pMph]);
			foreach(new i:Player)
			{
				if(PlayerInfo[playerid][pMember] == PlayerInfo[i][pMember])
				{
					SendClientMessageEx(i, arrGroupData[PlayerInfo[playerid][pMember]][g_hRadioColour] * 256 + 255, string);
				}
			}
			
		}
		if(strcmp(params, "off",true) == 0)
		{
			if(PlayerInfo[playerid][pDuty] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Ban khong lam viec [/badge on]");
				return 1;
			}
			PlayerInfo[playerid][pDuty] = 0;
			SetPlayerToTeamColor(playerid);
			ResetPlayerWeapons(playerid);
			SetPlayerHealth(playerid, 100);
			RemoveArmor(playerid);
			format(string, sizeof(string), "**{7B68EE}HQ:%s %s %s (#%d) is now Off Duty!",arrGroupData[iGroupID][g_szGroupName],PlayerInfo[playerid][pNameRank],GetPlayerNameEx(playerid), PlayerInfo[playerid][pMph]);
			foreach(new i:Player)
			{
				if(PlayerInfo[playerid][pMember] == PlayerInfo[i][pMember])
				{
					SendClientMessageEx(i, arrGroupData[PlayerInfo[playerid][pMember]][g_hRadioColour] * 256 + 255, string);
				}
			}
		}
	}
	return 1;
}
CMD:mdc(playerid, params[])
{
    if(IsMDCPermitted(playerid))
	{
        if(IsPlayerInAnyVehicle(playerid))
		{
            ShowPlayerDialog(playerid, MDC_MAIN, DIALOG_STYLE_LIST, "SA-MDC - Logged in", "*Civilian Information\n*Find LEO\n*Law Enforcement Agencies\n*MDC Message\n*SMS", "Dong y", "CancelHuy bo");
            ConnectedToPC[playerid] = 1337;
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay tren xe.");
    }
    return 1;
}

CMD:flipcoin(playerid, params[]) {

    new
		szMessage[124];

    switch(random(200)) {
        case 0 .. 98: format(szMessage, sizeof(szMessage), "* %s flips a coin that lands on heads.", GetPlayerNameEx(playerid));
		case 100 .. 198: format(szMessage, sizeof(szMessage), "* %s flips a coin that lands on tails.", GetPlayerNameEx(playerid));
		default: format(szMessage, sizeof(szMessage), "* %s flips a coin - a wild Smo appears, screams \"MY PRECIOUS!\", quickly snatches it and runs away.", GetPlayerNameEx(playerid));
    }
    return ProxDetector(5.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
}

CMD:dice(playerid, params[])
{
    new string[84];
    if (PlayerInfo[playerid][pDice])
	{
        format(string, sizeof(string), "{FF8000}** {C2A2DA}%s rolls a dice that lands on %d.", GetPlayerNameEx(playerid),(random(6)+1));
        ProxDetector(9.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_GRAD2, "You don't have a dice.");
        return 1;
    }
    return 1;
}


/*CMD:mua(playerid, params[])
{
   	if (!IsAt247(playerid)) {
        SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban khong dung o cua hang 24/7!");
        return 1;
    }

	new iBusiness = InBusiness(playerid);

    if (Businesses[iBusiness][bAutoSale]) {
		if (Businesses[iBusiness][bInventory] < 1) {
			SendClientMessageEx(playerid, COLOR_WHITE, "Cua hang nay khong co bat ky san pham tai thoi diem nay!");
			return 1;
		}
		if (!Businesses[iBusiness][bStatus]) {
			SendClientMessageEx(playerid, COLOR_WHITE, "Cua hang nay dong cua!");
			return 1;
		}
	} else return SendClientMessageEx(playerid, COLOR_WHITE, "Ban can phai tuong tac voi cac nhan vien kinh doanh de mua.");

	DisplayItemPricesDialog(iBusiness, playerid);

    return 1;
}*/

CMD:beginswimming(playerid, params[])
{
	if (!IsAtGym(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong o gym!");
		return 1;
	}

	new iBusiness = InBusiness(playerid);
	if(CheckPointCheck(playerid))
	{
	    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban phai giet tram kiem soat hien tai cua ban dau tien. (/killcheckpoint)");
	}
	if (Businesses[iBusiness][bGymType] != 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban co the khong /beginswimming trong loai hinh gym nay!");
		return 1;
	}

	if (GetPVarInt(playerid, "_BoxingQueue") == 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban phai roi khoi hang cho boxing truoc tien! (/leaveboxing)");
		return 1;
	}

	if (GetPVarInt(playerid, "_SwimmingActivity") >= 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban dang boi! su dung /stopswimming truoc tien.");
		return 1;
	}

	SetPVarInt(playerid, "_SwimmingActivity", 1);
	SetPlayerCheckpoint(playerid, 2892.5071, -2261.9607, 1.4645, 2.0);
	SendClientMessageEx(playerid, COLOR_WHITE, "Tiep tuc voi tram kiem soat dau tien de bat dau tap gym.");
	SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /stopswimming de thoat khoi hoat dong hien tai cua ban.");

	return 1;
}

CMD:stopswimming(playerid, params[])
{
	if (!IsAtGym(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong o trong phong tap gym!");
		return 1;
	}

	if (GetPVarInt(playerid, "_SwimmingActivity") < 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "  Ban khong boi!");
		return 1;
	}

	DeletePVar(playerid, "_SwimmingActivity");
	DisablePlayerCheckpoint(playerid);

	SendClientMessageEx(playerid, COLOR_GREY, "Ban da ngung gym.");

	return 1;
}

CMD:joinboxing(playerid, params[])
{
	if (!IsAtGym(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong o trong phong tap gym!");
		return 1;
	}

	new iBusiness = InBusiness(playerid);
	if (Businesses[iBusiness][bGymType] != 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong the /joinboxing trong khi dang tap gym!");
		return 1;
	}

	if (GetPVarInt(playerid, "_SwimmingActivity") >= 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban phai dung boi loi da! (/stopswimming)");
		return 1;
	}

	if (GetPVarInt(playerid, "_BoxingQueue") == 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban da co trong hang doi boxing!");
		return 1;
	}

	if (GetPVarInt(playerid, "_BoxingFight") != 0)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban dang o trong tran dau boxing!");
		return 1;
	}

	SetPVarInt(playerid, "_BoxingQueue", 1);
	SetPVarInt(playerid, "_BoxingQueueTick", 1);

	SendClientMessageEx(playerid, COLOR_WHITE, "Ban da tham gia vao hang doi boxing.");

	return 1;
}

CMD:leaveboxing(playerid, params[])
{
	if (!IsAtGym(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong o trong phong tap gym!");
		return 1;
	}

	if (GetPVarInt(playerid, "_BoxingQueue") != 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong o hang doi boxing.");
		return 1;
	}

	DeletePVar(playerid, "_BoxingQueue");
	DeletePVar(playerid, "_BoxingQueueTick");

	SendClientMessageEx(playerid, COLOR_WHITE, "Ban da roi khoi hang doi boxing.");

	return 1;
}

CMD:beginparkour(playerid, params[])
{
	if (!IsAtGym(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong o phong tap gym!");
		return 1;
	}

	new iBusiness = InBusiness(playerid);
	if (Businesses[iBusiness][bGymType] != 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong the /beginparkour trong khi dang tap gym");
		return 1;
	}

	if (GetPVarInt(playerid, "_BikeParkourStage") != 0)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban da tham gia vao hoat dong parkour!");
		return 1;
	}

	new bool:available = false;
	new pos;

	for (new it = 0; it < 9; ++it)
	{
		if (Businesses[iBusiness][bGymBikePlayers][it] == INVALID_PLAYER_ID)
		{
			available = true;
			Businesses[iBusiness][bGymBikePlayers][it] = playerid;
			pos = it;
			break;
		}
	}

	if (available == false)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Qua nhieu nguoi dang theo doi nay, hay thu lai sau.");
		return 1;
	}

	SendClientMessage(playerid, COLOR_WHITE, "Tiep tuc voi cac diem don thu xe dap cua ban.");
	SetPVarInt(playerid, "_BikeParkourStage", 1);
	SetPVarInt(playerid, "_BikeParkourSlot", pos);
	new pickup = CreateDynamicPickup(1318, 23, 2833.8757, -2256.8293, 95.9497, .playerid = playerid, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = 0);
	SetPVarInt(playerid, "_BikeParkourPickup", pickup);

	return 1;
}

CMD:leaveparkour(playerid, params[])
{
	if (!IsAtGym(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong o phong tap gym!");
		return 1;
	}

	if (GetPVarInt(playerid, "_BikeParkourStage") == 0)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong co tham gia vao hoat dong Parkour.");
		return 1;
	}

	new iBusiness = InBusiness(playerid);
	Businesses[iBusiness][bGymBikePlayers][GetPVarInt(playerid, "_BikeParkourSlot")] = INVALID_PLAYER_ID;

	SendClientMessageEx(playerid, COLOR_WHITE, "Ban da thoat khoi hoat dong parkour.");

	new vehicle = Businesses[iBusiness][bGymBikeVehicles][GetPVarInt(playerid, "_BikeParkourSlot")];

	if (vehicle != INVALID_VEHICLE_ID)
	{
		DestroyVehicle(vehicle);
		Businesses[iBusiness][bGymBikeVehicles][GetPVarInt(playerid, "_BikeParkourSlot")] = INVALID_VEHICLE_ID;
	}

	DeletePVar(playerid, "_BikeParkourStage");
	DeletePVar(playerid, "_BikeParkourSlot");

	new pickup = GetPVarInt(playerid, "_BikeParkourPickup");
	if (pickup != 0)
	{
		DestroyDynamicPickup(pickup);
		DeletePVar(playerid, "_BikeParkourPickup");
	}

	return 1;
}

CMD:bauto(playerid, params[])
{
   	new
	   iBusiness = PlayerInfo[playerid][pBusiness],
	   iRank     = PlayerInfo[playerid][pBusinessRank];

	if (iBusiness != INVALID_BUSINESS_ID && iRank >= 5)
	{
	    new iType = Businesses[iBusiness][bType];
	    if (iType == BUSINESS_TYPE_GASSTATION || iType == BUSINESS_TYPE_STORE || iType == BUSINESS_TYPE_CLOTHING) {
			if (Businesses[iBusiness][bAutoSale])	{
				Businesses[iBusiness][bAutoSale] = 0;
				SendClientMessageEx(playerid, COLOR_WHITE, "Ban da bat tat che do ban tu dong!");
				SaveBusiness(iBusiness);
			}
			else {
				Businesses[iBusiness][bAutoSale] = 1;
		       	SendClientMessageEx(playerid, COLOR_WHITE, "Ban da bat che do ban tu dong!");
		       	SendClientMessageEx(playerid, COLOR_GREY, "Luu y dieu nay se lam giam loi nhuan!");
		       	SaveBusiness(iBusiness);
			}
	    }  else SendClientMessageEx(playerid, COLOR_WHITE, "Lenh khong co san cho loai hinh doanh nghiep cua ban!");
	} else SendClientMessageEx(playerid, COLOR_WHITE, "Chi co cac chu doanh nghiep co the su dung lenh nay!");
	return 1;
}

CMD:shop(playerid, params[])
{

	new iBusiness = InBusiness(playerid);

   	if (iBusiness == INVALID_BUSINESS_ID || Businesses[iBusiness][bType] != BUSINESS_TYPE_SEXSHOP) {
        SendClientMessageEx(playerid, COLOR_GRAD2, "You are not in a sex shop!");
        return 1;
    }
    if (Businesses[iBusiness][bAutoSale]) {
		if (Businesses[iBusiness][bInventory] < 1) {
		    SendClientMessageEx(playerid, COLOR_WHITE, "Sex shop nay khong co bat ky muc nao tai thoi diem nay!");
		    return 1;
		}
		if (!Businesses[iBusiness][bStatus]) {
		    SendClientMessageEx(playerid, COLOR_WHITE, "Sex shop nay da dong cua!");
		    return 1;
		}
	} else return SendClientMessageEx(playerid, COLOR_WHITE, "Ban can phai tuong tac voi cac nhan vien kinh doanh de mua.");

	DisplayItemPricesDialog(iBusiness, playerid);

    return 1;
}

CMD:muanha(playerid, params[]) {
	return cmd_buyhouse(playerid, params);
}


CMD:buyhouse(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 100.0, 1109.0, 1537.0, 5.0) && PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Ban khong the su dung lenh nay trong linh vuc nay!");
    new string[128];
    new Float:oldposx, Float:oldposy, Float:oldposz;
    GetPlayerPos(playerid, oldposx, oldposy, oldposz);
    for(new h = 0; h < sizeof(HouseInfo); h++)
	{
        if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ]) && GetPlayerInterior(playerid) == HouseInfo[h][hExtIW] && GetPlayerVirtualWorld(playerid) == HouseInfo[h][hExtVW])
		{
		    if(PlayerInfo[playerid][pFreezeHouse] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "ERROR: Tai san cua ban da duoc dong lanh, ban khong the mua mot ngoi nha!");
            if(HouseInfo[h][hOwned] == 0)
			{
                if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
				{
                    format(string, sizeof(string), "   Ban can phai can du %d cap de mua!", HouseInfo[h][hLevel]);
                    SendClientMessageEx(playerid, COLOR_GRAD5, string);
                    return 1;
                }
                if(Homes[playerid] < MAX_OWNABLE_HOUSES)
				{
					if(GetPlayerCash(playerid) > HouseInfo[h][hValue])
					{
						if(PlayerInfo[playerid][pPhousekey] == INVALID_HOUSE_ID) PlayerInfo[playerid][pPhousekey] = h;
                        else PlayerInfo[playerid][pPhousekey2] = h;
						HouseInfo[h][hOwned] = 1;
						HouseInfo[h][hOwnerID] = GetPlayerSQLId(playerid);
						strcat((HouseInfo[h][hOwnerName][0] = 0, HouseInfo[h][hOwnerName]), GetPlayerNameEx(playerid), MAX_PLAYER_NAME);
						Homes[playerid]++;
						GivePlayerCash(playerid,-HouseInfo[h][hValue]);
						SetPlayerInterior(playerid,HouseInfo[h][hIntIW]);
						SetPlayerPos(playerid, HouseInfo[h][hInteriorX], HouseInfo[h][hInteriorY], HouseInfo[h][hInteriorZ]);
						GameTextForPlayer(playerid, "~w~Welcome Home~n~Ban co the /exit de thoat khoi ngoi nha.", 5000, 3);
						PlayerInfo[playerid][pInt] = HouseInfo[h][hIntIW];
						SendClientMessageEx(playerid, COLOR_WHITE, "Chuc mung ban da co ngoi nha!");
						SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /help de xem tro giup tai san!");
						SaveHouse(h);
						OnPlayerStatsUpdate(playerid);
						PlayerInfo[playerid][pVW] = HouseInfo[h][hIntVW];
						SetPlayerVirtualWorld(playerid,HouseInfo[h][hIntVW]);
						ReloadHouseText(h);
						format(string,sizeof(string),"%s (IP: %s) has bought house ID %d for $%d.",GetPlayerNameEx(playerid),GetPlayerIpEx(playerid),h,HouseInfo[h][hValue]);
						Log("logs/house.log", string);
						if(HouseInfo[h][hCustomInterior] == 1) Player_StreamPrep(playerid, HouseInfo[h][hInteriorX],HouseInfo[h][hInteriorY],HouseInfo[h][hInteriorZ], FREEZE_TIME);
						return 1;
					}
					else return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong co du tien!");
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co quyen so huu nha khac.");
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, "Ngoi nha nay duoc so huu.");
        }
    }
    return 1;
}

CMD:thuenha(playerid, params[]) {
	return cmd_rentroom(playerid, params);
}

CMD:rentroom(playerid, params[])
{
    //new string[128];
    new Float:oldposx, Float:oldposy, Float:oldposz;
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    GetPlayerPos(playerid, oldposx, oldposy, oldposz);
    for(new h = 0; h < sizeof(HouseInfo); h++)
	{
        if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ]) && GetPlayerInterior(playerid) == HouseInfo[h][hExtIW] && GetPlayerVirtualWorld(playerid) == HouseInfo[h][hExtVW] && HouseInfo[h][hRentFee] >= 1)
		{
            if(!strcmp(HouseInfo[h][hOwnerName], "Nobody", true))
			{
                SendClientMessageEx( playerid, COLOR_WHITE, "Ban khong the thue nha trong khi ngoi nha nay chua duoc ai so huu." );
            }
            else
			{
                if(PlayerInfo[playerid][pPhousekey] != INVALID_HOUSE_ID && HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwnerID] == GetPlayerSQLId(playerid))
				{
                    SendClientMessageEx(playerid, COLOR_WHITE, "   Ban da so huu mot can nha, su dung /bannhatoi de ban nha cua minh.");
                    return 1;
                }
                if(GetPlayerCash(playerid) > HouseInfo[h][hRentFee])
				{
                    if( HouseInfo[h][hRentable] == 0 )
					{
                        SendClientMessageEx(playerid, COLOR_WHITE, "Ngoi nha nay khong phai la co the cho thue.");
                        return 1;
                    }
                    else
					{
                        PlayerInfo[playerid][pRenting] = h;
                        GivePlayerCash(playerid,-HouseInfo[h][hRentFee]);
                        HouseInfo[h][hSafeMoney] = HouseInfo[h][hSafeMoney]+HouseInfo[h][hRentFee];
                        SetPlayerInterior(playerid,HouseInfo[h][hIntIW]);
                        SetPlayerPos(playerid,HouseInfo[h][hInteriorX],HouseInfo[h][hInteriorY],HouseInfo[h][hInteriorZ]);
                        GameTextForPlayer(playerid, "~w~Chao mung ve nha~n~Ban co the ra khoi nha bat cu luc nao bang cach tien lai gan canh cua su dung lenh /exit.", 5000, 3);
                        PlayerInfo[playerid][pInt] = HouseInfo[h][hIntIW];
                        PlayerInfo[playerid][pVW] = HouseInfo[h][hIntVW];
						VoNha[playerid] = 1;
                        SetPlayerVirtualWorld(playerid,HouseInfo[h][hIntVW]);
                        SendClientMessageEx(playerid, COLOR_WHITE, "Xin chuc mung. Ban co the thoat khoi day bat cu luc nao ban muon.");
                        SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /trogiup de xem phan tai san cua ban.");
                        OnPlayerStatsUpdate(playerid);
                        //new ip[32];
                        //GetPlayerIp(playerid,ip,sizeof(ip));
                        //format(string,sizeof(string),"%s (IP: %s) has rented house ID %d (owned by %s) for $%d.",GetPlayerNameEx(playerid),ip,h,HouseInfo[h][hOwnerID],HouseInfo[h][hRentFee]);
                        //Log("logs/house.log", string);
						if(HouseInfo[h][hCustomInterior] == 1) Player_StreamPrep(playerid, HouseInfo[h][hInteriorX],HouseInfo[h][hInteriorY],HouseInfo[h][hInteriorZ], FREEZE_TIME);
                        return 1;
                    }
                }
                else
				{
                    SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong du tien de thue nha.");
                    return 1;
                }
            }
        }
    }
    return 1;
}

CMD:unrent(playerid, params[])
{
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    if(PlayerInfo[playerid][pPhousekey] != INVALID_HOUSE_ID && HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwnerID] == GetPlayerSQLId(playerid))
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "   Ban so huu can nha nay!");
        return 1;
    }
    if( PlayerInfo[playerid][pRenting] != INVALID_HOUSE_ID )
	{
        PlayerInfo[playerid][pRenting] = INVALID_HOUSE_ID;
        SendClientMessageEx(playerid, COLOR_WHITE, "Bay gio ban la nguoi gia cu.");
    }
    return 1;
}

CMD:hoisinhtainha(playerid, params[])
{
    if( PlayerInfo[playerid][pPhousekey] != INVALID_HOUSE_ID )
	{
        PlayerInfo[playerid][pInsurance] = 7;
        SendClientMessageEx( playerid, COLOR_GREEN, "Bay gio ban co the hoi sinh tai nha cua ban." );
    }
    else
	{
        SendClientMessageEx( playerid, COLOR_WHITE, "Ban khong so huu mot nguoi nha." );
    }
    return 1;
}

/*
CMD:spawnathome(playerid, params[])
{
    if( PlayerInfo[playerid][pPhousekey] != INVALID_HOUSE_ID )
	{
        if(PlayerInfo[playerid][pDonateRank] >= 4)
		{
            PlayerInfo[playerid][pInsurance] = 7;
            SendClientMessageEx( playerid, COLOR_YELLOW, "Platinum VIP: Bay gio ban co the hoi sinh tai nha cua ban." );
        }
        else
		{
            SendClientMessageEx( playerid, COLOR_WHITE, "Ban khong phai Platinum VIP!" );
        }
    }
    else
	{
        SendClientMessageEx( playerid, COLOR_WHITE, "Ban khong so huu mot nguoi nha." );
    }
    return 1;
}
*/

CMD:mailhelp(playerid, params[])
{
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Mail System Help");
	SendClientMessageEx(playerid, COLOR_GRAD2, "Ban co the mua giay viet thu tu 24/7 bat ky va gui thu cho ban be");
	SendClientMessageEx(playerid, COLOR_GRAD2, "va cac dong nghiep cho du ho co online hay khong");
	SendClientMessageEx(playerid, COLOR_GRAD2, "Box tu tuong dang gan nhat, hoac tu hop thu rieng cua ban (tai nha rieng cua ban)");
	SendClientMessageEx(playerid, COLOR_GRAD2, "va chung se duoc chuyen giao; thoi gian tuy thuoc vao dich vu ban mua.");
	SendClientMessageEx(playerid, COLOR_GRAD3, "Lenh he thong thu: /guithu /getmail /placemailbox /movemailbox /destroymailbox /postdirectory");
	if(PlayerInfo[playerid][pAdmin] > 3)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Admin Commands");
	    SendClientMessageEx(playerid, COLOR_GRAD1, "/createmailbox (Creates a street posting box)   /removemailbox [id] (Removes a street posting box)");
	    SendClientMessageEx(playerid, COLOR_GRAD1, "/gotomailbox [id] (Teleports to a street posting box)    /adestroymailbox [houseid] (Deletes a players mailbox)");
	}
	return 1;
}

CMD:guithu(playerid, params[]) {
	return cmd_sendmail(playerid, params);
}

CMD:sendmail(playerid, params[])
{
	if (!IsNearHouseMailbox(playerid) && !IsAtPostOffice(playerid) && !IsNearPublicMailbox(playerid)) {
    	return SendClientMessageEx(playerid, COLOR_GREY, "Ban can phai co mot buu dien, gan mot hop thu duong pho, hoac hop thu nha cua ban.");
    }
	if (PlayerInfo[playerid][pPaper] < 1) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co giay to con lai, ban co the mua mot so o 24/7.");
	}
	if(GetPVarInt(playerid, "MailTime") > 0) {
	    new string[64];
		format(string, sizeof(string), "Ban phai cho %d giay truoc khi gui thu hon.", GetPVarInt(playerid, "MailTime"));
		return SendClientMessageEx(playerid, COLOR_GREY, string);
	}
	DisplayStampDialog(playerid);
	return 1;
}

CMD:getmail(playerid, params[])
{
	if (!IsNearHouseMailbox(playerid) && !IsAtPostOffice(playerid)) {
	 	return SendClientMessageEx(playerid, COLOR_GREY, "Ban can phai gan buu dien hoac hop thu gan ngoi nha cua ban.");
	}
	DeletePVar(playerid, "UnreadMails");
	DisplayMails(playerid);
 	return 1;
}

CMD:placemailbox(playerid, params[])
{
	if (PlayerInfo[playerid][pPhousekey] == INVALID_HOUSE_ID && PlayerInfo[playerid][pPhousekey2] == INVALID_HOUSE_ID) {
	    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong so huu nha nao!");
	}
	if (PlayerInfo[playerid][pMailbox] < 1) {
	    return SendClientMessageEx(playerid, COLOR_GRAD2, "You don't have a mailbox item!");
	}
	new style;
	if (sscanf(params, "d", style)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /placemailbox [1 or 2] (1=wooden 2=steel)");
    }
	if (HasMailbox(playerid)) {
		return SendClientMessageEx(playerid, COLOR_GRAD2, "You already have a mailbox placed. You cannot place more.");
	}
	if (GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) {
		return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban phai di bo de su dung lenh nay!");
	}
	new h = InRangeOfWhichHouse(playerid, Mailbox_Range);
	if (h == INVALID_HOUSE_ID) {
		return SendClientMessageEx(playerid, COLOR_GRAD2, "You are not at your house!");
	}

	new Float: f_ZOffset;
	if (style == 1) f_ZOffset = -0.38; else if (style == 2) f_ZOffset = -0.95;
	else return SendClientMessageEx(playerid, COLOR_GRAD2, "Invalid number!");

	PlayerInfo[playerid][pMailbox]--;

	GetPlayerPos(playerid, HouseInfo[h][hMailX], HouseInfo[h][hMailY], HouseInfo[h][hMailZ]);
	GetPlayerFacingAngle(playerid, HouseInfo[h][hMailA]);
	HouseInfo[h][hMailZ] += f_ZOffset;
	HouseInfo[h][hMailType] = style;
	SaveHouse(h);

	RenderHouseMailbox(h);

	SendClientMessageEx(playerid, COLOR_WHITE, "You have successfully placed your mailbox!");
	SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN If you need to change the location of your mailbox, you can type /movemailbox" );

	new szLog[128];
	format(szLog, sizeof(szLog), "%s has placed a mailbox for their house (House ID: %d)", GetPlayerNameEx(playerid), h);
	Log("logs/house.log", szLog);

	return 1;
}

CMD:destroymailbox(playerid, params[])
{
	if (!HasMailbox(playerid)) {
		return SendClientMessageEx(playerid, COLOR_GRAD2, "You don't have a placed mailbox.");
	}
	new h;
	if (PlayerInfo[playerid][pPhousekey] != INVALID_HOUSE_ID && IsPlayerInRangeOfPoint(playerid,3.0,HouseInfo[PlayerInfo[playerid][pPhousekey]][hMailX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hMailY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hMailZ])) h = PlayerInfo[playerid][pPhousekey];
	else if (PlayerInfo[playerid][pPhousekey2] != INVALID_HOUSE_ID && IsPlayerInRangeOfPoint(playerid,3.0,HouseInfo[PlayerInfo[playerid][pPhousekey2]][hMailX], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hMailY], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hMailZ])) h = PlayerInfo[playerid][pPhousekey2];
	else return SendClientMessageEx(playerid, COLOR_GREY, "You need to be near your mailbox.");

	ClearHouseMailbox(h);
	RenderHouseMailbox(h);
	SendClientMessageEx(playerid, COLOR_WHITE, "You have destroyed your mailbox.");

	new szLog[128];
	format(szLog, sizeof(szLog), "%s has destroyed their house mailbox (House ID: %d)", GetPlayerNameEx(playerid), h);
	Log("logs/house.log", szLog);

	return 1;
}

CMD:movemailbox(playerid, params[])
{
	if (!HasMailbox(playerid)) {
   		return SendClientMessageEx(playerid, COLOR_GREY, "You don't have a placed mailbox!");
   	}
	new h = InRangeOfWhichHouse(playerid, Mailbox_Range);
	if (h == INVALID_HOUSE_ID || HouseInfo[h][hMailX] == 0.0) {
		return SendClientMessageEx(playerid, COLOR_GREY, "You are too far away from your house door for the new location of your mailbox!");
	}
	GetPlayerPos(playerid, HouseInfo[h][hMailX], HouseInfo[h][hMailY], HouseInfo[h][hMailZ]);
	GetPlayerFacingAngle(playerid, HouseInfo[h][hMailA]);
	new Float: f_ZOffset;
	if (HouseInfo[h][hMailType] == 1) f_ZOffset = -0.38; else if (HouseInfo[h][hMailType] == 2) f_ZOffset = -0.95;
	HouseInfo[h][hMailZ] += f_ZOffset;
	SaveHouse(h);
    RenderHouseMailbox(h);
	SendClientMessageEx(playerid, COLOR_WHITE, "You have successfully moved your mailbox to its new position!");
	return 1;
}

CMD:postdirectory(playerid, params[])
{
	if (!IsAtPostOffice(playerid)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "You're not at a post office!");
	}
	if(strcmp(params, "on", true) == 0)	{
	    PlayerInfo[playerid][pMailEnabled] = 1;
		SendClientMessage(playerid, COLOR_WHITE, "You have enabled look up in the postal directory.");
    }
    else if(strcmp(params, "off", true) == 0)	{
	    PlayerInfo[playerid][pMailEnabled] = 0;
        SendClientMessage(playerid, COLOR_WHITE, "You have disabled look up in the postal directory.");
    }
    else {
	    SendClientMessage(playerid, COLOR_GREY, "SU DUNG: /postdirectory [on/off]");
    }
	return 1;
}

CMD:muabaohiem(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid,2.0,1402.7266,-38.3610,1000.8640) && PlayerInfo[playerid][pVW] == 1) {
        if (GetPlayerCash(playerid) >= 1500) {
            if (PlayerInfo[playerid][pInsurance] != 1) {
                GivePlayerCash(playerid, -1500);
                PlayerInfo[playerid][pInsurance] = 1;
                SendClientMessageEx(playerid, COLOR_WHITE, "   Ban da mua bao hiem, ban tra $1500 cho moi lan thay vi $2,500 khi khong co bao hiem, bay gio ban se duoc dieu tri tai All Saints Hospital voi gia $1,500.");
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai County General Hospital!");
            }
        }
        else {
            SendClientMessageEx(playerid, COLOR_GRAD4, "Ban khong du tien de mua bao hiem nay!");
        }
    }
    else if(IsPlayerInRangeOfPoint(playerid,2.0,1169.7209472656,-1348.3218994141,2423.0461425781) && PlayerInfo[playerid][pVW] == 2) {
        if (GetPlayerCash(playerid) >= 4000) {
            if (PlayerInfo[playerid][pInsurance] != 2) {
                GivePlayerCash(playerid, -4000);
                PlayerInfo[playerid][pInsurance] = 2;
                SendClientMessageEx(playerid, COLOR_WHITE, "   Ban da mua bao hiem, ban tra $1500 cho moi lan thay vi $2,500 khi khong co bao hiem, bay gio ban se duoc dieu tri tai All Saints Hospital voi gia $1,500.");
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai All Saints Hospital!");
            }
        }
        else {
            SendClientMessageEx(playerid, COLOR_GRAD4, "Ban khong du tien de mua bao hiem nay!");
        }
    }
    else if(IsPlayerInRangeOfPoint(playerid,2.0,1169.7209472656,-1348.3218994141,2423.0461425781) && PlayerInfo[playerid][pVW] == 5) {
        if (GetPlayerCash(playerid) >= 3000) {
            if (PlayerInfo[playerid][pInsurance] != 3) {
                GivePlayerCash(playerid, -3000);
                PlayerInfo[playerid][pInsurance] = 3;
                SendClientMessageEx(playerid, COLOR_WHITE, "   Ban da mua bao hiem, ban tra $500 cho moi lan thay vi $2,500 khi khong co bao hiem, bay gio ban se duoc dieu tri tai Montgomery Hospital voi gia $500.");
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai Montgomery Hospital!");
            }
        }
        else {
            SendClientMessageEx(playerid, COLOR_GRAD4, "Ban khong du tien de mua bao hiem nay!");
        }
    }
    else if(IsPlayerInRangeOfPoint(playerid,2.0,1169.7209472656,-1348.3218994141,2423.0461425781) && PlayerInfo[playerid][pVW] == 4) {

        if (GetPlayerCash(playerid) >= 3000) {
            if (PlayerInfo[playerid][pInsurance] != 4) {
                if(PlayerInfo[playerid][pInsurance] >= 1) {
                    PlayerInfo[playerid][pInsurance] = 4;
                    SendClientMessageEx(playerid, COLOR_WHITE, "   Chuyen bao hiem, ban da duoc chuyen sang Carson Insurance dieu tri mien phi.");
                    return 1;
                }
                GivePlayerCash(playerid, -250);
                PlayerInfo[playerid][pInsurance] = 4;
                SendClientMessageEx(playerid, COLOR_WHITE, "   Ban da mua bao hiem. Ban da tri tra $250 VND, bay gio ban dieu tri tai Fort Carson voi gia $250 VND.");
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai Fort Carson!");
            }
        }
        else {
            SendClientMessageEx(playerid, COLOR_GRAD4, "Ban khong du tien de mua bao hiem nay!");
        }

    }
    else if(IsPlayerInRangeOfPoint(playerid,2.0,1169.7209472656,-1348.3218994141,2423.0461425781) && PlayerInfo[playerid][pVW] == 6) {
        if (GetPlayerCash(playerid) >= 3000) {
            if (PlayerInfo[playerid][pInsurance] != 5) {
                GivePlayerCash(playerid, -3000);
                PlayerInfo[playerid][pInsurance] = 5;
                SendClientMessageEx(playerid, COLOR_WHITE, "   Ban da mua bao hiem, ban tra $500 cho moi lan thay vi $2,500 khi khong co bao hiem, bay gio ban se duoc dieu tri tai San Fierro Medical Center voi gia $500.");
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai San Fierro Medical Center!");
            }
        }
        else {
            SendClientMessageEx(playerid, COLOR_GRAD4, "Ban khong du tien de mua bao hiem nay!");
        }
    }
    else if(IsPlayerInRangeOfPoint(playerid,3.0,1169.7209472656,-1348.3218994141,2423.0461425781) && PlayerInfo[playerid][pVW] == 99) {
        if (GetPlayerCash(playerid) >= 3000) {
            if (PlayerInfo[playerid][pInsurance] != 9) {
                GivePlayerCash(playerid, -3000);
                PlayerInfo[playerid][pInsurance] = 9;
                SendClientMessageEx(playerid, COLOR_WHITE, "   Ban da mua bao hiem, ban tra $500 cho moi lan thay vi $2,500 khi khong co bao hiem, bay gio ban se duoc dieu tri tai El Quebrados Hospital voi gia $250.");
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai El Quabrados Medical Center!");
            }
        }
        else {
            SendClientMessageEx(playerid, COLOR_GRAD4, "Ban khong du tien de mua bao hiem nay!");
        }
    }
   	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1169.5385, -1348.0225, 2423.0461) && PlayerInfo[playerid][pVW] == 8) {
   	    if(PlayerInfo[playerid][pMember] == 11) // SAAS
   	    {
	    	if (GetPlayerCash(playerid) >= 0) {
	    	    if (PlayerInfo[playerid][pInsurance] != 10) {
	        	    PlayerInfo[playerid][pInsurance] = 10;
	        	    SendClientMessageEx(playerid, COLOR_WHITE, "Bao hiem mien phi, bay gio ban duoc dieu tri tai SAAS Base Hospital.");
	        	    return 1;
	        	}
	        	else {
	        	    SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai SAAS Base Hospital!");
	        	}
			}
	    	else {
	    	    SendClientMessageEx(playerid, COLOR_GRAD4, "Ban khong du tien de mua bao hiem nay!");
	    	}
		}
    }
    /*else if(IsPlayerInRangeOfPoint(playerid,2.0,1169.7209472656,-1348.3218994141,2423.0461425781) && PlayerInfo[playerid][pVW] == 7 &&
    (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)) {
        if (PlayerInfo[playerid][pInsurance] != 8) {
            PlayerInfo[playerid][pInsurance] = 8;
            SendClientMessageEx(playerid, COLOR_WHITE, "   Insurance changed, you will now be healed at the USS Nimitz.");
            return 1;
        }
        else {
            SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai the USS Nimitz!");
        }
    }*/
    else if(IsPlayerInRangeOfPoint(playerid,4.0,2785.586914, 2400.224853, 1240.531127) && PlayerInfo[playerid][pDonateRank] >= 3) {
        if (GetPlayerCash(playerid) >= 3000) {
            if (PlayerInfo[playerid][pInsurance] != 6) {
                GivePlayerCash(playerid, -3000);
                PlayerInfo[playerid][pInsurance] = 6;
                SendClientMessageEx(playerid, COLOR_WHITE, "   Ban da mua bao hiem, ban tra $500 cho moi lan thay vi $2,500 khi khong co bao hiem, bay gio ban se duoc dieu tri tai Club VIP voi gia $500.");
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai Club VIP!");
            }
        }
        else {
            SendClientMessageEx(playerid, COLOR_GRAD4, "Ban khong du tien de mua bao hiem nay!");
        }
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1169.6624, -1348.2397, 2423.0461) && PlayerInfo[playerid][pVW] == 11720)
	{
	    if(GetPlayerCash(playerid) >= 3000)
		{
            if(PlayerInfo[playerid][pInsurance] != 11)
			{
                GivePlayerCash(playerid, -3000);
                PlayerInfo[playerid][pInsurance] = 11;
                SendClientMessageEx(playerid, COLOR_WHITE, "   Ban da mua bao hiem, ban tra $500 cho moi lan thay vi $2,500 khi khong co bao hiem, bay gio ban se duoc dieu tri tai Las Venturas Hospital voi gia $500.");
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai Las Venturas Hospital!");
            }
        }
        else {
            SendClientMessageEx(playerid, COLOR_GRAD4, "Ban khong du tien de mua bao hiem nay!");
        }
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 912.1003, 1429.9298, -81.1762))
	{
		if(PlayerInfo[playerid][pFamed] >= 2)
		{
			if(GetPlayerCash(playerid) >= 3000)
			{
				if(PlayerInfo[playerid][pInsurance] != 12)
				{
					GivePlayerCash(playerid, -3000);
					PlayerInfo[playerid][pInsurance] = 12;
					SendClientMessageEx(playerid, COLOR_WHITE, "   Ban da mua bao hiem, ban tra $500 cho moi lan thay vi $2,500 khi khong co bao hiem, bay gio ban se duoc dieu tri tai Famed Room voi gia $500.");
					return 1;
				}
				else {
					SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai Famed Room!");
				}
			}
			else {
				SendClientMessageEx(playerid, COLOR_GRAD4, "Ban khong du tien de mua bao hiem nay!");
			}
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD4, "Ban phai co COS+ de co bao hiem trong Famed room!");
    }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1169.6624, -1348.2397, 2423.0461) && PlayerInfo[playerid][pVW] == 13) { // DeMorgan
		if(PlayerInfo[playerid][pMember] == 11) // SAAS
		{
			if (GetPlayerCash(playerid) >= 0) {
				if (PlayerInfo[playerid][pInsurance] != 13) {
					PlayerInfo[playerid][pInsurance] = 13;
					SendClientMessageEx(playerid, COLOR_WHITE, "Bao hiem y te mien phi, bay gio ban se duoc dieu tri tai DeMorgan Hospital.");
					return 1;
				}
				else {
					SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai Demorgan Hospital!");
				}
			}
			else {
				SendClientMessageEx(playerid, COLOR_GRAD4, "Ban khong du tien de mua bao hiem nay!");
			}
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1169.6624, -1348.2397, 2423.0461) && PlayerInfo[playerid][pVW] == 14) // TR - Bayside
	{
		if(GetPlayerCash(playerid) >= 3000)
		{
			if(PlayerInfo[playerid][pInsurance] != 14)
			{
				GivePlayerCash(playerid, -3000);
				PlayerInfo[playerid][pInsurance] = 14;
				SendClientMessageEx(playerid, COLOR_WHITE, "   Ban da mua bao hiem, ban tra $500 cho moi lan thay vi $2,500 khi khong co bao hiem, bay gio ban se duoc dieu tri tai Bayside Hospital voi gia $500.");
				return 1;
			}
			else {
				SendClientMessageEx(playerid, COLOR_GRAD4, "Ban da co bao hiem y te tai Bayside Hospital!");
			}
		}
		else {
			SendClientMessageEx(playerid, COLOR_GRAD4, "Ban khong du tien de mua bao hiem nay!");
		}
	}
    else {
        SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong mua bao hiem o benh vien nao!");
    }
    return 1;
}

CMD:fixr(playerid, params[])
{
	PlayerFixRadio(playerid);
	return 1;
}



CMD:time(playerid, params[])
{
	//if(GetPVarInt(playerid, "Injured") != 0 || PlayerCuffed[playerid] != 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lam dieu do bay gio.");

	new string[128], mtext[20], thour, suffix[3], year, month,day;
    getdate(year, month, day);
    if(month == 1) { mtext = "Thang 1"; }
    else if(month == 2) { mtext = "Thang 2"; }
    else if(month == 3) { mtext = "Thang 3"; }
    else if(month == 4) { mtext = "Thang 4"; }
    else if(month == 5) { mtext = "Thang 5"; }
    else if(month == 6) { mtext = "Thang 6"; }
    else if(month == 7) { mtext = "Thang 7"; }
    else if(month == 8) { mtext = "Thang 8"; }
    else if(month == 9) { mtext = "Thang 9"; }
    else if(month == 10) { mtext = "Thang 10"; }
    else if(month == 11) { mtext = "Thang 11"; }
    else if(month == 12) { mtext = "Thang 12"; }
	if(hour > 12 && hour < 24)
	{
		thour = hour - 12;
		suffix = "PM";
	}
	else if(hour == 12)
	{
		thour = 12;
		suffix = "PM";
	}
	else if(hour > 0 && hour < 12)
	{
		thour = hour;
		suffix = "AM";
	}
	else if(hour == 0)
	{
		thour = 12;
		suffix = "AM";
	}

	if (PlayerInfo[playerid][pJailTime] > 0)
	{
		format(string, sizeof(string), "%s %d, %d | %d:%02d %s | Time Prison: %s", mtext, day, year, thour, minuite, suffix, TimeConvert(PlayerInfo[playerid][pJailTime]));
        SendClientMessage(playerid, COLOR_WHITE, string);
    }
	else
	{
		format(string, sizeof(string), "%s %d, %d | %d:%02d %s", mtext, day, year, thour, minuite, suffix);
        SendClientMessage(playerid, COLOR_WHITE, string);
    }
    return 1;
}

CMD:cashchecks(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
 	{
  		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o ngan hang!");
    	return 1;
	}
 	if(PlayerInfo[playerid][pCheckCash] > 0)
    {
    	GivePlayerCash(playerid,PlayerInfo[playerid][pCheckCash]);
     	PlayerInfo[playerid][pCheckCash] = 0;
      	SendClientMessageEx(playerid, COLOR_GRAD1, "Ban da nhan thanh cong so tien trong tam sec' gia tri.");
       	return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co bat ki to ngan phieu nao tren tay.");
	}
	return 1;
}

CMD:mjail(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] == 1 || PlayerInfo[playerid][pHelper] >= 2) {

		new
			iTargetID,
			szReason[64];

		if(sscanf(params, "us[64]", iTargetID, szReason)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /mjail [Nguoi choi] [Ly do]");
		}
		else if(IsPlayerConnected(iTargetID)) {
			if(PlayerInfo[iTargetID][pAdmin] == 1) {
				return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the thuc hien lenh nay tren moderators.");
			}
			if(PlayerInfo[iTargetID][pAdmin] > PlayerInfo[playerid][pAdmin]) {
				return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the thuc hien lenh nay tren administrators.");
			}
			if(PlayerInfo[iTargetID][pHelper] >= 2) {
				return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the thuc hien lenh nay tren Junior Helpers.");
			}
            if(PlayerInfo[iTargetID][pJailTime] > 0) {
			    return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the thuc hien lenh nay tren nguoi dang trong tu.");
			}
			if(GetPVarInt(iTargetID, "IsInArena") >= 0) LeavePaintballArena(iTargetID, GetPVarInt(iTargetID, "IsInArena"));

			new
				szMessage[128];
			if(GetPVarInt(iTargetID, "Injured") == 1)
			{
				KillEMSQueue(iTargetID);
				ClearAnimations(iTargetID);
			}
			ResetPlayerWeaponsEx(iTargetID);

			PhoneOnline[iTargetID] = 1;
			PlayerInfo[iTargetID][pJailTime] = 10*60;
			SetPVarInt(iTargetID, "_rAppeal", gettime()+60);
			SetPlayerInterior(iTargetID, 1);
			PlayerInfo[iTargetID][pInt] = 1;
        	SetPlayerHealth(iTargetID, 100);
			new rand = random(sizeof(OOCPrisonSpawns));
			Streamer_UpdateEx(iTargetID, OOCPrisonSpawns[rand][0], OOCPrisonSpawns[rand][1], OOCPrisonSpawns[rand][2]);
			SetPlayerPos(iTargetID, OOCPrisonSpawns[rand][0], OOCPrisonSpawns[rand][1], OOCPrisonSpawns[rand][2]);
			SetPlayerSkin(iTargetID, 50);

			PlayerInfo[iTargetID][pVW] = 0;
			SetPlayerVirtualWorld(iTargetID, 0);
			SetPlayerColor(iTargetID, TEAM_APRISON_COLOR);

			Player_StreamPrep(iTargetID, OOCPrisonSpawns[rand][0], OOCPrisonSpawns[rand][1], OOCPrisonSpawns[rand][2], FREEZE_TIME);

			format(szMessage, sizeof(szMessage), "AdmCmd: %s da bi dua vao tu boi %s, Ly do: %s", GetPlayerNameEx(iTargetID), GetPlayerNameEx(playerid), szReason);
			SendClientMessageToAllEx(COLOR_LIGHTRED, szMessage);

			format(szMessage, sizeof(szMessage), "AdmCmd: %s da bi dua vao tu boi %s, Ly do: %s", GetPlayerNameEx(iTargetID), GetPlayerNameEx(playerid), szReason);
			Log("logs/moderator.log", szMessage);

			format(szMessage, sizeof(szMessage), "Ban da bi bo tu boi %s cho 10 phut vi pham luat le server.", GetPlayerNameEx(playerid));
			SendClientMessageEx(iTargetID, COLOR_LIGHTBLUE, szMessage);

			format(szMessage, sizeof(szMessage), "Ly do: %s", szReason);
			SendClientMessageEx(iTargetID, COLOR_LIGHTBLUE, szMessage);

            format(szReason, sizeof(szReason), "[OOC] %s", szReason);
			strcpy(PlayerInfo[iTargetID][pPrisonedBy], GetPlayerNameEx(playerid), MAX_PLAYER_NAME);
			strcpy(PlayerInfo[iTargetID][pPrisonReason], szReason, 128);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
		}
	}
	return 1;
}

CMD:ringbell(playerid, params[])
{
	for(new h; h < sizeof(HouseInfo); h++) if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ])) {

		new
			string[75 + MAX_PLAYER_NAME];

		foreach(new i: Player)
		{
			if((IsPlayerInRangeOfPoint(i, 15.0, HouseInfo[h][hInteriorX], HouseInfo[h][hInteriorY], HouseInfo[h][hInteriorZ])) && GetPlayerVirtualWorld(i) == HouseInfo[h][hIntVW] && GetPlayerInterior(i) == HouseInfo[h][hIntIW]) {
				format(string,sizeof(string),"%s's chuong cua reo.", StripUnderscore(HouseInfo[h][hOwnerName]));
				SendClientMessageEx(i,COLOR_PURPLE,string);
				GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~w~Chuong cua dang reo...", 4000,3);
			}
		}
		format(string,sizeof(string),"* %s bam nut do ben canh cua, bam chuong cua nha %s's .", GetPlayerNameEx(playerid), StripUnderscore(HouseInfo[h][hOwnerName]));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return 1;
}

CMD:togbr(playerid, params[])
{
	if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBugAccess]) {
		if (gBug{playerid} == 0)
		{
			gBug{playerid} = 1;
			SendClientMessageEx(playerid, COLOR_GRAD2, "Kenh  CHAT  BUGd duoc kich hoat, bay gio ban co the thay duoc cac loi duoc phat hien.");
		}
		else
		{
			gBug{playerid} = 0;
			SendClientMessageEx(playerid, COLOR_GRAD2, "Kenh CHAT BUG dang tat .");
		}
	}
	return 1;
}

CMD:togpr(playerid, params[])
{
	if(PlayerInfo[playerid][pRadio] == 1)
	{
 		if (gRadio{playerid} == 0)
   		{
   		    new string[128];
     		gRadio{playerid} = 1;
       		format(string,sizeof(string),"Radio cua ban da duoc bat tren tan so %d khz.",PlayerInfo[playerid][pRadioFreq]);
	        SendClientMessageEx(playerid,COLOR_WHITE,string);
	    }
	    else
	    {
     		gRadio{playerid} = 0;
       		SendClientMessageEx(playerid,COLOR_WHITE,"Ban da tat portable radio.");
	    }
	}
	else
	{
 		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co portable radio!");
	}
  	return 1;
}

CMD:tow(playerid, params[]) {
 	if(IsACop(playerid) || IsATowman(playerid) || IsAMechanic(playerid)) {
   		if(IsPlayerInAnyVehicle(playerid))
     	{
			new
				carid = GetPlayerVehicleID(playerid);

			if(IsATowTruck(carid))
			{
   				new
					closestcar = GetClosestCar(playerid, carid);

				foreach(new i: Player)
				{
					if(arr_Towing[i] == closestcar || (GetPlayerVehicleID(i) == closestcar && GetPlayerState(i) == 2)) return SendClientMessageEx(playerid, COLOR_GREY, "Ban dang keo xe khac, ban khong co quyen keo them xe.");
				}

       			if(GetDistanceToCar(playerid,closestcar) <= 8 && !IsTrailerAttachedToVehicle(carid)) {
					foreach(new i: Player)
					{
					    if(IsAPlane(closestcar) || IsABike(closestcar) || IsASpawnedTrain(closestcar) || IsATrain(closestcar) || IsAHelicopter(closestcar)) {
							return SendClientMessageEx(playerid, COLOR_GRAD2, "ban khong theo keo xe nay.");
						}
						if(GetPlayerVehicle(i, closestcar) != -1) {

							//new
							//	hKey;

							//if(((hKey = PlayerInfo[i][pPhousekey]) != INVALID_HOUSE_ID) && IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[hKey][hExteriorX], HouseInfo[hKey][hExteriorY], HouseInfo[hKey][hExteriorZ])
							//||((hKey = PlayerInfo[i][pPhousekey2]) != INVALID_HOUSE_ID) && IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[hKey][hExteriorX], HouseInfo[hKey][hExteriorY], HouseInfo[hKey][hExteriorZ])) {
							//	return SendClientMessageEx(playerid, COLOR_GREY, "Chiec xe nay khong can phai keo.");
							//}

							arr_Towing[playerid] = closestcar;
						    //SendClientMessageEx(playerid, COLOR_GRAD2, "Chiec xe da san sang de giam giu.");
      						return AttachTrailerToVehicle(closestcar,carid);
						}
					}
					//SendClientMessageEx(playerid, COLOR_GRAD2, "Chiec xe nay khong co dang ky, no san sang de giam giu.");
					AttachTrailerToVehicle(closestcar,carid);
					arr_Towing[playerid] = closestcar;
					return 1;
     			}
			}
			else if(IsAAircraftTowTruck(carid)) //Tug
			{
				new
				    closestcar = GetClosestCar(playerid, carid);

                foreach(new i: Player)
				{
					if(arr_Towing[i] == closestcar || (GetPlayerVehicleID(i) == closestcar && GetPlayerState(i) == 2)) return SendClientMessageEx(playerid, COLOR_GREY, "You can't tow a vehicle which is occupied, or in tow.");
				}

				if(GetDistanceToCar(playerid,closestcar) <= 8 && !IsTrailerAttachedToVehicle(carid))
				{
					foreach(new i: Player)
					{
						if(IsAPlane(closestcar))
						{
						    if(GetPlayerVehicle(i, closestcar) != -1)
						    {
						        arr_Towing[playerid] = closestcar;
							    SendClientMessageEx(playerid, COLOR_GRAD2, "Chiec xe da san sang de giam giu.");
	      						return AttachTrailerToVehicle(closestcar,carid);
	      					}
	      				}
						else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban chi co the keo may bay bang xe nay!");
	      			}
					SendClientMessageEx(playerid, COLOR_GRAD2, "Chiec xe nay khong co dang ky, no san sang de giam giu.");
					AttachTrailerToVehicle(closestcar,carid);
					arr_Towing[playerid] = closestcar;
	      		}
	      	}
			else SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep keo xe nay.");
   		}
     	else SendClientMessageEx(playerid, COLOR_GRAD2, "ban phai o ben  trong xe keo moi co the su dung lenh nay!");
	}
   	else SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
	return 1;
}

CMD:untow(playerid, params[])
{
 	if(IsACop(playerid) || IsATowman(playerid) || IsAMechanic(playerid) || PlayerInfo[playerid][pNhanvienxang] == 1)
	{
   		if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
     	{
      		SendClientMessageEx(playerid, COLOR_GRAD1,"Ban da tha chiec xe ma ban da keo.");
			arr_Towing[playerid] = INVALID_VEHICLE_ID;
			DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
     	}
      	else
       	{
        	SendClientMessageEx(playerid, COLOR_GRAD1,"Ban khong keo chiec xe nao.");
        }
  	}
   	else
	{
 		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong du kha nang su dung lenh nay.");
	}
	return 1;
}

CMD:giamxe(playerid, params[])
{
	return cmd_impound(playerid,params);
}

CMD:impound(playerid, params[]) {

	if (IsACop(playerid) || IsATowman(playerid))
	{
			if(!IsAtImpoundingPoint(playerid))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o gan diem giam xe, ban khong the giam xe!");
				return 1;
			}
			if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			{

				new
					iVehType,
					iVehIndex,
					iTargetOwner,
					iVehTowed = GetVehicleTrailer(GetPlayerVehicleID(playerid));

				if(!GetVehicleModel(iVehTowed)) {
					return SendClientMessageEx(playerid, COLOR_GREY, "Xe cua nguoi da da duoc chinh vao kho xe, do vay khong the giam giu.");
				}
				foreach(new i: Player)
				{
					iVehIndex = GetPlayerVehicle(i, iVehTowed);
					if(iVehIndex != -1) {
						iVehType = 1;
						iTargetOwner = i;
						break;
					}
				}
				switch(iVehType) {
					case 0, 2: {
						SendClientMessageEx(playerid, COLOR_GRAD1, "Viec giam giu khong thanh cong khi chinh phu khong tim thay bat ki giay dang ky xe nao tren chiec xe nay.");
						DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						SetVehiclePos(iVehTowed, 0, 0, 0); // Attempted desync fix
						SetVehicleToRespawn(iVehTowed);
					}
					case 1: {
						PlayerVehicleInfo[iTargetOwner][iVehIndex][pvTicket] = 2000;
						PlayerVehicleInfo[iTargetOwner][iVehIndex][pvImpounded] = 1;
						PlayerVehicleInfo[iTargetOwner][iVehIndex][pvSpawned] = 0;
						PlayerVehicleInfo[iTargetOwner][iVehIndex][pvId] = INVALID_PLAYER_VEHICLE_ID;
						DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						SetVehiclePos(iVehTowed, 0, 0, 0); // Attempted desync fix
						DestroyVehicle(iVehTowed);
                        g_mysql_SaveVehicle(iTargetOwner, iVehIndex);
						VehicleSpawned[iTargetOwner]--;
						--PlayerCars;

						new
							szMessage[96];

						format(szMessage, sizeof(szMessage),"* Ban da tich thu %s's %s.",GetPlayerNameEx(iTargetOwner), VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400]);
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);

						format(szMessage, sizeof(szMessage), "Xe %s cua ban da bi giam giu. Vui long toi DMV de nop tien phat va lay lai xe.", VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400]);
						SendClientMessageEx(iTargetOwner, COLOR_LIGHTBLUE, szMessage);

						format(szMessage, sizeof(szMessage), "HQ: %s da tich thu %s's %s ($%s ve phat thanh toan).", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetOwner), VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400], number_format(PlayerVehicleInfo[iTargetOwner][iVehIndex][pvTicket]));
						SendGroupMessage(1, RADIO, szMessage);
					}
					/*case 2: {

						new
							szMessage[29 + MAX_PLAYER_NAME];

						format(szMessage, sizeof(szMessage),"* You have impounded %s's %s.",FamilyInfo[iTargetOwner][FamilyName], GetVehicleNameEx(iVehTowed));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);

						format(szMessage, sizeof(szMessage), "Your %s has been impounded. You may release it at the DMV in Dillimore.", GetVehicleNameEx(iVehTowed));
						SendNewFamilyMessage(iTargetOwner, COLOR_LIGHTBLUE, szMessage);

						FamilyVehicleInfo[iTargetOwner][iVehIndex][fvImpounded] = 1;
						FamilyVehicleInfo[iTargetOwner][iVehIndex][fvId] = INVALID_VEHICLE_ID;
						DestroyVehicle(iVehTowed);
					}*/
				}
				arr_Towing[playerid] = INVALID_VEHICLE_ID;
			}
		}
	return 1;
}


CMD:togooc(playerid, params[])
{
	if (!gOoc[playerid])
	{
		gOoc[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da tat kenh OOC.");
	}
	else
	{
		gOoc[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da mo kenh OOC.");
	}
	return 1;
}

CMD:tognews(playerid, params[])
{
	if (!gNews[playerid])
	{
		gNews[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da tat kenh newbie.");
	}
	else
	{
		gNews[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da mo kenh newbie.");
	}
	return 1;
}

CMD:tognewbie(playerid, params[])
{
	if (!gNewbie[playerid])
	{
		gNewbie[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da tat kenh newbie.");
	}
	else
	{
		gNewbie[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da mo kenh newbie.");
	}
	return 1;
}
CMD:togfamily(playerid, params[])
{
	return cmd_togfam(playerid, params);
}

CMD:togfam(playerid, params[])
{
	if (!gFam[playerid])
	{
		gFam[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da tat kenh family.");
	}
	else
	{
		gFam[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da mo kenh family.");
	}
	return 1;
}
CMD:togw(playerid, params[])
{
	return cmd_togwhisper(playerid, params);
}

CMD:togwhisper(playerid, params[])
{
	if (!HidePM[playerid])
	{
		HidePM[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da vo hieu hoa thi tham.");
	}
	else
	{
		HidePM[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da mo thi tham.");
	}
	return 1;
}

CMD:togphone(playerid, params[])
{
	if(PlayerInfo[playerid][pJailTime] > 0)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the  su dung dien thoai trong tu");
		return 1;
	}
	if (!PhoneOnline[playerid])
	{
		PhoneOnline[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da tat dien thoai .");
	}
	else
	{
		PhoneOnline[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da mo dien thoai.");
	}
	return 1;
}

CMD:togstaff(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pDonateRank] == 5 || PlayerInfo[playerid][pWatchdog] == 1)
	{
		if (!advisorchat[playerid])
		{
			advisorchat[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban bat kenh chat Staff!");
		}
		else
		{
			advisorchat[playerid] = 0;
			SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban da tat kenh chat Staff!");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai lallowed de su dung lenh nay!");
		return 1;
	}
	return 1;
}

CMD:thamgiasukien(playerid, params[]) {
	return cmd_joinevent(playerid, params);
}
CMD:joinevent(playerid, params[]) {
	if(PlayerInfo[playerid][pLevel] != 1) return SendClientMessageEx(playerid, COLOR_WHITE,"Ban khong du Level 2 de tham gia su kien.");
	if( EventKernel[ EventStatus ] == 0 ) {
		SendClientMessageEx( playerid, COLOR_WHITE, "Hien tai khong co su kien nao." );
	}
	else if( GetPVarInt( playerid, "EventToken" ) == 1 ) {
		SendClientMessageEx( playerid, COLOR_WHITE, "Ban dang trong su kien nay." );
	}
	else if(GetPVarInt(playerid, "IsInArena") >= 0) {
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay bay gio, ban dang o trong mot dau truong!");
	}
	else if( PlayerCuffed[ playerid ] >= 1 || PlayerInfo[ playerid ][ pJailTime ] > 0 || PlayerInfo[playerid][pHospital] > 0 || GetPVarInt(playerid, "Injured")) {
		SendClientMessageEx( playerid, COLOR_WHITE, "Ban khong the lam dieu nay ngay bay gio." );
	}
	else if(EventKernel[VipOnly] == 1 && PlayerInfo[playerid][pDonateRank] < 1) {
		SendClientMessageEx(playerid, COLOR_GRAD2, "Su kien nay chi danh cho khach VIP.");
	}
	else if(EventKernel[EventPlayers] >= EventKernel[EventLimit] && EventKernel[EventTime] == 0) {
		SendClientMessageEx(playerid, COLOR_GRAD2, "Su kien nay da dat den gioi han toi da nguoi.");
	}
	else if( EventKernel[ EventStatus ] == 2 || (EventKernel[ EventStatus ] == 1 && PlayerInfo[playerid][pDonateRank] >= 3)) {
		if(EventKernel[EventType] == 3)
		{
            new string[128];
			if(IsValidDynamic3DTextLabel(RFLTeamN3D[playerid])) {
				DestroyDynamic3DTextLabel(RFLTeamN3D[playerid]);
			}
			format(string, sizeof(string), "%s da tham gia vao su kien!", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
			SendClientMessageEx( playerid, COLOR_WHITE, EventKernel[ EventInfo ] );
		    if(EventKernel[EventFootRace]) {
		    	SendClientMessageEx( playerid, COLOR_YELLOW, "Ban da tham gia vao su kien dua onfoot, Ban da duoc dich chuyen den mot diem ngau nhien." );
			}
			else {
			    SendClientMessageEx( playerid, COLOR_YELLOW, "Ban da tham gia vao su kien dua xe, Ban da duoc dich chuyen den mot diem ngau nhien." );
			}
			SetPVarInt( playerid, "EventToken", 1 );
			TotalJoinsRace++;
			SetPlayerPos( playerid, EventKernel[ EventPositionX ], EventKernel[ EventPositionY ], EventKernel[ EventPositionZ ] );
			RCPIdCurrent[playerid] = 0;
		    new randcpscount = -1;
		    for(new i = 0; i < 20; i++)
		    {
		        if(EventRCPU[i] && EventRCPT[i] == 1) randcpscount = i;
		    }
		    ResetPlayerWeapons( playerid );
			pTazer{playerid} = 0;
			GetPlayerHealth(playerid, EventFloats[playerid][4]);
			GetPlayerArmour(playerid, EventFloats[playerid][5]);
			EventLastVW[playerid] = GetPlayerVirtualWorld(playerid);
			EventLastInt[playerid] = GetPlayerInterior(playerid);
			GetPlayerPos(playerid, EventFloats[playerid][1], EventFloats[playerid][2], EventFloats[playerid][3]);
			GetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
		    new randrcp = randcpscount;
		    //SetPlayerPos(playerid, EventRCPX[randrcp], EventRCPY[randrcp], EventRCPZ[randrcp]);
			SetPlayerInterior( playerid, EventKernel[ EventInterior ] );
			SetPlayerVirtualWorld( playerid, EventKernel[ EventWorld ] );
			if(PlayerInfo[playerid][pRFLTeam] != -1) {
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos( playerid, X, Y, Z );
				format(string, sizeof(string), "Team: %s", RFLInfo[PlayerInfo[playerid][pRFLTeam]][RFLname]);
				RFLTeamN3D[playerid] = CreateDynamic3DTextLabel(string,0x008080FF,X,Y,Z,10.0,.attachedplayer = playerid, .worldid = GetPlayerVirtualWorld(playerid));
			}
		    if(EventRCPT[randrcp] != 1)
		    {
				DisablePlayerCheckpoint(playerid);
		    	SetPlayerCheckpoint(playerid, EventRCPX[randrcp], EventRCPY[randrcp], EventRCPZ[randrcp], EventRCPS[randrcp]);
			}
			else
			{
			    DisablePlayerCheckpoint(playerid);
		    	SetPlayerCheckpoint(playerid, EventRCPX[randrcp], EventRCPY[randrcp], EventRCPZ[randrcp], EventRCPS[randrcp]);
			}
		}
		else
		{
			if(IsPlayerInAnyVehicle(playerid)) {
				return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban dang o trong xe, ban khong the tham gia su  kien .");
			}

			SetPVarInt( playerid, "EventToken", 1 );
			ResetPlayerWeapons( playerid );
			pTazer{playerid} = 0;
			GetPlayerHealth(playerid, EventFloats[playerid][4]);
			GetPlayerArmour(playerid, EventFloats[playerid][5]);
			EventLastVW[playerid] = GetPlayerVirtualWorld(playerid);
			EventLastInt[playerid] = GetPlayerInterior(playerid);
			GetPlayerPos(playerid, EventFloats[playerid][1], EventFloats[playerid][2], EventFloats[playerid][3]);
			GetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
			if(EventKernel[EventType] != 2)
			{
				SetPlayerPos( playerid, EventKernel[ EventPositionX ], EventKernel[ EventPositionY ], EventKernel[ EventPositionZ ] );
			}
			SetPlayerInterior( playerid, EventKernel[ EventInterior ] );
			SetPlayerVirtualWorld( playerid, EventKernel[ EventWorld ] );
			SendClientMessageEx( playerid, COLOR_WHITE, EventKernel[ EventInfo ] );

			if(EventKernel[EventCustomInterior] == 1)
			{
				Streamer_UpdateEx(playerid, EventKernel[EventPositionX], EventKernel[EventPositionY], EventKernel[EventPositionZ]);
			}

			SetPlayerHealth( playerid, EventKernel[ EventHealth ] );
			if(EventKernel[EventArmor] > 0) {
				SetPlayerArmor( playerid, EventKernel[ EventArmor ]);
			}

			for(new x;x<MAX_PLAYERTOYS;x++) {
				RemovePlayerAttachedObject(playerid, x);
			}
			for(new i; i < 11; i++) {
				PlayerHoldingObject[playerid][i] = 0;
			}

			if(EventKernel[EventType] == 2)
			{
				SetPlayerSkin(playerid, EventKernel[EventTeamSkin][nextteam]);
				new color = EventKernel[EventTeamColor][nextteam];
				if (color==0) SetPlayerColor(playerid, 0x00000000);
				if (color==1) SetPlayerColor(playerid, 0xFFFFFF00);
				if (color==2) SetPlayerColor(playerid, 0x2641FE00);
				if (color==3) SetPlayerColor(playerid, 0xAA333300);
				if (color==16) SetPlayerColor(playerid, 0x33AA3300);
				if (color==5) SetPlayerColor(playerid, 0xC2A2DA00);
				if (color==6) SetPlayerColor(playerid, 0xFFFF0000);
				if (color==7) SetPlayerColor(playerid, 0x33CCFF00);
				//if (strcmp(clr, "navy", true)==0) color=94;
				//if (strcmp(clr, "beige", true)==0) color=102;
				if (color==51) SetPlayerColor(playerid, 0x2D6F0000);
				if (color==103) SetPlayerColor(playerid, 0x0B006F00);
				if (color==13) SetPlayerColor(playerid, 0x52525200);
				if (color==55) SetPlayerColor(playerid, 0xB46F0000);
				if (color==84) SetPlayerColor(playerid, 0x814F0000);
				if (color==74) SetPlayerColor(playerid, 0x750A0000);
				//if (strcmp(clr, "maroon", true)==0) color=115;
				if (color==126) SetPlayerColor(playerid, 0xFF51F100);
				if(nextteam == 0)
				{
					SetPlayerPos(playerid, EventKernel[EventTeamPosX1], EventKernel[EventTeamPosY1], EventKernel[EventTeamPosZ1]);
				}
				else
				{
					SetPlayerPos(playerid, EventKernel[EventTeamPosX2], EventKernel[EventTeamPosY2], EventKernel[EventTeamPosZ2]);
				}
				if(nextteam == 0) nextteam++;
				else if(nextteam == 1) nextteam--;
			}
			if(EventKernel[EventType] == 4)
			{
			    SetPlayerColor(playerid, 0xAA333300);
			}
		}
		EventKernel[EventPlayers] ++;
		if(EventKernel[EventPlayers] == EventKernel[EventLimit] && EventKernel[EventTime] == 0)
		{
			ABroadCast(COLOR_YELLOW, "Su kien da dat toi da nguoi tham gia, ban co the doi su kien lan sau.", 2);
		}
	}

	else if( EventKernel[ EventStatus ] == 3 )
	{
		SendClientMessageEx( playerid, COLOR_WHITE, "Su kien da khoa, ban khong the tham gia." );
	}
	else if( EventKernel[ EventStatus ] == 4 )
	{
		SendClientMessageEx( playerid, COLOR_WHITE, "Su kien da khoa, ban khong the tham gia." );
	}

	return 1;
}

CMD:mauxe(playerid, params[]) {
	return cmd_colorcar(playerid, params);
}

CMD:colorcar(playerid, params[]) {
	new iColors[2];
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o trong xe.");
	else if(PlayerInfo[playerid][pSpraycan] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co binh son xe nao.");
	if(sscanf(params, "ii", iColors[0], iColors[1])) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /mauxe [ID 1] [ID 2]. ID mau sac cua samp.");
	else if((PlayerInfo[playerid][pDonateRank] == 0) && (iColors[0] > 126 || iColors[1] > 126)) return SendClientMessageEx(playerid, COLOR_GREY, "Chi VIP moi su dung ID mau sac tren 126.");
	else if(!(0 <= iColors[0] <= 255 && 0 <= iColors[1] <= 255)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Mau sac khong hop le(ID mau sac phai tu 0 cho toi 255).");
	new szMessage[60];
	for(new i = 0; i < MAX_PLAYERVEHICLES; i++)
	{
		if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][i][pvId]))
		{
			PlayerVehicleInfo[playerid][i][pvColor1] = iColors[0], PlayerVehicleInfo[playerid][i][pvColor2] = iColors[1];
			ChangeVehicleColor(PlayerVehicleInfo[playerid][i][pvId], PlayerVehicleInfo[playerid][i][pvColor1], PlayerVehicleInfo[playerid][i][pvColor2]);
			PlayerInfo[playerid][pSpraycan]--;
			g_mysql_SaveVehicle(playerid, i);
			format(szMessage, sizeof(szMessage), "Ban da thay doi mau sac chiec xe cua ban bang ID %d, %d.", iColors[0], iColors[1]);
			return SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
		}
	}
	for(new i = 0; i < sizeof(VIPVehicles); i++)
	{
		if(IsPlayerInVehicle(playerid, VIPVehicles[i]))
		{
			ChangeVehicleColor(VIPVehicles[i], iColors[0], iColors[1]);
			PlayerInfo[playerid][pSpraycan]--;
			format(szMessage, sizeof(szMessage), "Ban da thay doi mau sac chiec xe cua ban bang ID %d, %d.", iColors[0], iColors[1]);
			return SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
		}
	}
	for(new i = 0; i < sizeof(FamedVehicles); i++)
	{
		if(IsPlayerInVehicle(playerid, FamedVehicles[i]))
		{
			ChangeVehicleColor(FamedVehicles[i], iColors[0], iColors[1]);
			PlayerInfo[playerid][pSpraycan]--;
			format(szMessage, sizeof(szMessage), "Ban da thay doi mau sac chiec xe cua ban bang ID %d, %d.", iColors[0], iColors[1]);
			return SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the son xe cua nguoi khac.");
	return 1;
}


CMD:checksdt(playerid, params[]) {
	return cmd_number(playerid, params);
}
CMD:number(playerid, params[]) 
{
    if(IsACop(playerid))
    {
        new
            iTarget, phonenumb;

        if(sscanf(params, "d", phonenumb)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /number [so dien thoai]");
        else if(IsPlayerConnected(iTarget)) 
        {
            new
                szNumber[50 + MAX_PLAYER_NAME];

            format(szNumber, sizeof(szNumber), " So dien thoai cua {efb404}%s{FFFFFF} (ID: %d)", GetPlayerNameEx(iTarget), iTarget);
            SendClientMessageEx(playerid, COLOR_WHITE, szNumber);
        }
        else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
    }
    else SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong phai nguoi cua to chuc chinh phu.");
    return 1;
}

CMD:resetupgrades(playerid, params[]) {
	if(gPlayerLogged{playerid} == 0) {
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban chua dang nhap.");
	}
	else if (GetPlayerCash(playerid) < 100000) {
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban can $100,000 de thiet lap lai diem nang cap cua ban.");
	}
	else if (PlayerInfo[playerid][pLevel] < 2) {
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban can ich nhat lv 2.");
	}
	else {
		PlayerInfo[playerid][gPupgrade] = (PlayerInfo[playerid][pLevel]-2)*2;
		PlayerInfo[playerid][pSHealth] = 0.0;

		if(PlayerInfo[playerid][pPhousekey] != INVALID_HOUSE_ID) {
			HouseInfo[PlayerInfo[playerid][pPhousekey]][hGLUpgrade] = 1;
			SaveHouse(PlayerInfo[playerid][pPhousekey]);
		}
		if(PlayerInfo[playerid][pPhousekey2] != INVALID_HOUSE_ID) {
			HouseInfo[PlayerInfo[playerid][pPhousekey2]][hGLUpgrade] = 1;
			SaveHouse(PlayerInfo[playerid][pPhousekey2]);
		}
		for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
		{
			PlayerVehicleInfo[playerid][d][pvWepUpgrade] = 0;
		}

		GivePlayerCash(playerid,-100000);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);

		new	szMessage[73];

		format(szMessage, sizeof(szMessage), "Ban da dat lai nang cap cua ban - Bay gio ban co %i diem nang cap chua su dung.",PlayerInfo[playerid][gPupgrade]);
		SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
	}
	return 1;
}
CMD:hoidap(playerid, params[]) {
	return ShowPlayerDialog(playerid, FAQMENU, DIALOG_STYLE_LIST, "Cau hoi thuong gap","Locks\nSkins & Toys\nATMs\nFactions\nGangs\nHitmen\nWebsite, Teamspeak and Other Information\nFurther Help", "Lua chon", "Huy bo");
}

CMD:thongtin(playerid, params[]) {
	return cmd_stats(playerid, params);
}
CMD:stats(playerid, params[]) {
	if(gPlayerLogged{playerid} != 0) ShowStats(playerid, playerid);
	return 1;
}

CMD:netstats(playerid, params[]) {
	if(gPlayerLogged{playerid} != 0) {
		new strStats[401], szTitle[64];
		GetPlayerNetworkStats(playerid, strStats, sizeof(strStats));
		format(szTitle, sizeof(szTitle), "Network Stats (ID: %d) - %s", playerid, GetPlayerNameEx(playerid));
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, szTitle, strStats, "Dong", "");
	}
	return 1;
}


CMD:tuidosssssss(playerid)
{
	if(gPlayerLogged{playerid} != 0) ShowInventory(playerid, playerid);
	return 1;
}
CMD:sungcuatoi(playerid, params[]) {
	return cmd_myguns(playerid, params);
}
CMD:myguns(playerid, params[])
{
	new string[128], myweapons[13][2], weaponname[50], encryption[256], name[MAX_PLAYER_NAME];

	GetPlayerName(playerid, name, sizeof(name));
	SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
	format(string, sizeof(string), "Vu khi tren nguoi %s:", name);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	for (new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(playerid, i, myweapons[i][0], myweapons[i][1]);
		if(myweapons[i][0] > 0)
		{
			if(PlayerInfo[playerid][pGuns][i] == myweapons[i][0])
			{
				GetWeaponName(myweapons[i][0], weaponname, sizeof(weaponname));
				format(string, sizeof(string), "%s (%d)", weaponname, myweapons[i][0]);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				format(encryption, sizeof(encryption), "%s%d", encryption, myweapons[i][0]);
			}
		}
	}
	new year, month, day;
	getdate(year, month, day);
	format(encryption, sizeof(encryption), "%s%s%d%d%d%d%d6524", encryption, name, month, day, year, hour, minuite);
	new encrypt = crc32(encryption);
	format(string, sizeof(string), "[%d/%d/%d %d:%d:%d] - [%d]", month, day, year, hour, minuite,second, encrypt);
	SendClientMessageEx(playerid, COLOR_GREEN, string);
	SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
	return 1;
}


CMD:muacapdo(playerid, params[])
{
	if (gPlayerLogged{playerid} != 0)
	{
		if(PlayerInfo[playerid][pLevel] >= 0)
		{
			new nxtlevel = PlayerInfo[playerid][pLevel]+1;
			new costlevel = nxtlevel;
			new expamount = nxtlevel*2;

			if(GetPlayerCash(playerid) < costlevel)
			{
				new string[128];
				format(string, sizeof(string), "Ban khong co du tien ($%d).",costlevel);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				return 1;
			}
			else if (PlayerInfo[playerid][pExp] < expamount)
			{
				new string[58];
				format(string, sizeof(string), "Ban can %d diem kinh nghiem online de co the len cap ke tiep.", expamount - PlayerInfo[playerid][pExp]);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				return 1;
			}
			else
			{
				new string[92];
				format(string, sizeof(string), "~g~LEVEL UP~n~~w~Cap do bay gio cua ban la %d", nxtlevel);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerCash(playerid, (-costlevel));
				PlayerInfo[playerid][pLevel]++;
				PlayerInfo[playerid][pExp] = PlayerInfo[playerid][pExp]-expamount;
				PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
				GameTextForPlayer(playerid, string, 5000, 1);
				format(string, sizeof(string), "Ban da mua cap %d voi so tien $%d, va nhan duoc %i diem nang cap! /nangcap de su dung chung.", nxtlevel, costlevel, PlayerInfo[playerid][gPupgrade]);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
				if(PlayerInfo[playerid][pLevel] == 25)
				{
				    SendClientMessageEx(playerid, COLOR_WHITE, "Ban da dat cap 25 va co the nhan 2 cong viec cung mot luc.");
				}
			}
		}
		return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban chua dang nhap vao trong.");
	}
	return 1;
}

/*CMD:lencap(playerid, params[])
{
	if (gPlayerLogged{playerid} != 0)
	{
		if(PlayerInfo[playerid][pLevel] >= 0)
		{
			new nxtlevel = PlayerInfo[playerid][pLevel]+1;
			new costlevel = nxtlevel*1000;
			new expamount = nxtlevel*5;

			if(GetPlayerCash(playerid) < costlevel)
			{
				new string[128];
				format(string, sizeof(string), "Ban khong co du tien ($%d).",costlevel);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				return 1;
			}
			else if (PlayerInfo[playerid][pExp] < expamount)
			{
				new string[58];
				format(string, sizeof(string), "Ban can %d diem kinh nghiem online de co the len cap ke tiep.", expamount - PlayerInfo[playerid][pExp]);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				return 1;
			}
			else
			{
				new string[92];
				format(string, sizeof(string), "~g~LEVEL UP~n~~w~Cap do bay gio cua ban la %d", nxtlevel);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerCash(playerid, (-costlevel));
				PlayerInfo[playerid][pLevel]++;
				PlayerInfo[playerid][pExp] = PlayerInfo[playerid][pExp]-expamount;
				PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
				GameTextForPlayer(playerid, string, 5000, 1);
				format(string, sizeof(string), "Ban da mua cap %d voi so tien $%d, va nhan duoc %i diem nang cap! /nangcap de su dung chung.", nxtlevel, costlevel, PlayerInfo[playerid][gPupgrade]);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
				if(PlayerInfo[playerid][pLevel] == 3)
				{
				    new szQuery[128],
						szString[128],
						szReferrer = ReturnUser(PlayerInfo[playerid][pReferredBy]);

					if(strcmp(PlayerInfo[playerid][pReferredBy], "Nobody") != 0)
					{
					    if(IsPlayerConnected(szReferrer))
					    {
					        if(PlayerInfo[szReferrer][pRefers] < 5 && PlayerInfo[szReferrer][pRefers] > 0)
					        {
					            PlayerInfo[szReferrer][pCredits] += CREDITS_AMOUNT_REFERRAL;
	            				PlayerInfo[szReferrer][pRefers] ++;
								format(szQuery, sizeof(szQuery), "UPDATE `accounts` SET `Credits`=%d WHERE `Username` = '%s'", PlayerInfo[szReferrer][pCredits], GetPlayerNameExt(szReferrer));
								mysql_function_query(MainPipeline, szQuery, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
								format(szString, sizeof(szString), "%s da nhan duoc %d Credits cho viec gioi thieu nguoi choi (Thanh vien dat level 3)", GetPlayerNameEx(szReferrer), CREDITS_AMOUNT_REFERRAL);
								Log("logs/referral.log", szString);
				        		format(string, sizeof(string), "Nguoi ban '%s' ma ban gioi thieu tham gia Server da dat level 3. Do do ban da nhan duoc 100 Credits.", GetPlayerNameEx(playerid));
						        SendClientMessageEx(szReferrer, COLOR_LIGHTBLUE, string);
						    }
					        else if(PlayerInfo[szReferrer][pRefers] == 5)
					        {
	            				PlayerInfo[szReferrer][pCredits] += CREDITS_AMOUNT_REFERRAL*5;
	            				PlayerInfo[szReferrer][pRefers] ++;
								format(szQuery, sizeof(szQuery), "UPDATE `accounts` SET `Credits`=%d WHERE `Username` = '%s'", PlayerInfo[szReferrer][pCredits], GetPlayerNameExt(szReferrer));
								mysql_function_query(MainPipeline, szQuery, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
								format(szString, sizeof(szString), "%s da nhan duoc %d Credits cho viec gioi thieu nguoi choi (Thanh vien dat level 3)", GetPlayerNameEx(szReferrer), CREDITS_AMOUNT_REFERRAL*5);
								Log("logs/referral.log", szString);
				        		format(string, sizeof(string), "Nguoi ban '%s' ma ban gioi thieu tham gia Server da dat level 3. Do do ban da nhan duoc 500 Credits.", GetPlayerNameEx(playerid));
						        SendClientMessageEx(szReferrer, COLOR_LIGHTBLUE, string);
							}
							else if(PlayerInfo[szReferrer][pRefers] < 10 && PlayerInfo[szReferrer][pRefers] > 5)
					        {
					            PlayerInfo[szReferrer][pCredits] += CREDITS_AMOUNT_REFERRAL;
	            				PlayerInfo[szReferrer][pRefers] ++;
								format(szQuery, sizeof(szQuery), "UPDATE `accounts` SET `Credits`=%d WHERE `Username` = '%s'", PlayerInfo[szReferrer][pCredits], GetPlayerNameExt(szReferrer));
								mysql_function_query(MainPipeline, szQuery, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
								format(szString, sizeof(szString), "%s da nhan duoc %d Credits cho viec gioi thieu nguoi choi (Thanh vien dat level 3)", GetPlayerNameEx(szReferrer), CREDITS_AMOUNT_REFERRAL);
								Log("logs/referral.log", szString);
				        		format(string, sizeof(string), "Nguoi ban '%s' ma ban gioi thieu tham gia Server da dat level 3. Do do ban da nhan duoc 100 Credits.", GetPlayerNameEx(playerid));
						        SendClientMessageEx(szReferrer, COLOR_LIGHTBLUE, string);
						    }
							else if(PlayerInfo[szReferrer][pRefers] == 10)
							{
							    PlayerInfo[szReferrer][pCredits] += CREDITS_AMOUNT_REFERRAL*10;
	            				PlayerInfo[szReferrer][pRefers] ++;
								format(szQuery, sizeof(szQuery), "UPDATE `accounts` SET `Credits`=%d WHERE `Username` = '%s'", PlayerInfo[szReferrer][pCredits], GetPlayerNameExt(szReferrer));
								mysql_function_query(MainPipeline, szQuery, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
								format(szString, sizeof(szString), "%s da nhan duoc %d Credits cho viec gioi thieu nguoi choi (Thanh vien dat level 3)", GetPlayerNameEx(szReferrer), CREDITS_AMOUNT_REFERRAL*10);
								Log("logs/referral.log", szString);
				        		format(string, sizeof(string), "Nguoi ban '%s' ma ban gioi thieu tham gia Server da dat level 3. Do do ban da nhan duoc 1000 Credits.", GetPlayerNameEx(playerid));
						        SendClientMessageEx(szReferrer, COLOR_LIGHTBLUE, string);
							}
							else if(PlayerInfo[szReferrer][pRefers] < 15 && PlayerInfo[szReferrer][pRefers] > 10)
					        {
					            PlayerInfo[szReferrer][pCredits] += CREDITS_AMOUNT_REFERRAL;
	            				PlayerInfo[szReferrer][pRefers] ++;
								format(szQuery, sizeof(szQuery), "UPDATE `accounts` SET `Credits`=%d WHERE `Username` = '%s'", PlayerInfo[szReferrer][pCredits], GetPlayerNameExt(szReferrer));
								mysql_function_query(MainPipeline, szQuery, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
								format(szString, sizeof(szString), "%s da nhan duoc %d Credits cho viec gioi thieu nguoi choi (Thanh vien dat level 3)", GetPlayerNameEx(szReferrer), CREDITS_AMOUNT_REFERRAL);
								Log("logs/referral.log", szString);
				        		format(string, sizeof(string), "Nguoi ban '%s' ma ban gioi thieu tham gia Server da dat level 3. Do do ban da nhan duoc 100 Credits.", GetPlayerNameEx(playerid));
						        SendClientMessageEx(szReferrer, COLOR_LIGHTBLUE, string);
						    }
							else if(PlayerInfo[szReferrer][pRefers] == 15)
							{
							    PlayerInfo[szReferrer][pCredits] += CREDITS_AMOUNT_REFERRAL*15;
	            				PlayerInfo[szReferrer][pRefers] ++;
								format(szQuery, sizeof(szQuery), "UPDATE `accounts` SET `Credits`=%d WHERE `Username` = '%s'", PlayerInfo[szReferrer][pCredits], GetPlayerNameExt(szReferrer));
								mysql_function_query(MainPipeline, szQuery, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
								format(szString, sizeof(szString), "%s da nhan duoc %d Credits cho viec gioi thieu nguoi choi (Thanh vien dat level 3)", GetPlayerNameEx(szReferrer), CREDITS_AMOUNT_REFERRAL*15);
								Log("logs/referral.log", szString);
				        		format(string, sizeof(string), "Nguoi ban '%s' ma ban gioi thieu tham gia Server da dat level 3. Do do ban da nhan duoc 1500 Credits.", GetPlayerNameEx(playerid));
						        SendClientMessageEx(szReferrer, COLOR_LIGHTBLUE, string);
							}
							else if(PlayerInfo[szReferrer][pRefers] < 20 && PlayerInfo[szReferrer][pRefers] > 15)
					        {
					            PlayerInfo[szReferrer][pCredits] += CREDITS_AMOUNT_REFERRAL;
	            				PlayerInfo[szReferrer][pRefers] ++;
								format(szQuery, sizeof(szQuery), "UPDATE `accounts` SET `Credits`=%d WHERE `Username` = '%s'", PlayerInfo[szReferrer][pCredits], GetPlayerNameExt(szReferrer));
								mysql_function_query(MainPipeline, szQuery, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
								format(szString, sizeof(szString), "%s da nhan duoc %d Credits cho viec gioi thieu nguoi choi (Thanh vien dat level 3)", GetPlayerNameEx(szReferrer), CREDITS_AMOUNT_REFERRAL);
								Log("logs/referral.log", szString);
				        		format(string, sizeof(string), "Nguoi ban '%s' ma ban gioi thieu tham gia Server da dat level 3. Do do ban da nhan duoc 100 Credits.", GetPlayerNameEx(playerid));
						        SendClientMessageEx(szReferrer, COLOR_LIGHTBLUE, string);
						    }
							else if(PlayerInfo[szReferrer][pRefers] == 20)
							{
							    PlayerInfo[szReferrer][pCredits] += CREDITS_AMOUNT_REFERRAL*20;
	            				PlayerInfo[szReferrer][pRefers] ++;
								format(szQuery, sizeof(szQuery), "UPDATE `accounts` SET `Credits`=%d WHERE `Username` = '%s'", PlayerInfo[szReferrer][pCredits], GetPlayerNameExt(szReferrer));
								mysql_function_query(MainPipeline, szQuery, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
								format(szString, sizeof(szString), "%s da nhan duoc %d Credits cho viec gioi thieu nguoi choi (Thanh vien dat level 3)", GetPlayerNameEx(szReferrer), CREDITS_AMOUNT_REFERRAL*20);
								Log("logs/referral.log", szString);
				        		format(string, sizeof(string), "Nguoi ban '%s' ma ban gioi thieu tham gia Server da dat level 3. Do do ban da nhan duoc 2000 Credits.", GetPlayerNameEx(playerid));
						        SendClientMessageEx(szReferrer, COLOR_LIGHTBLUE, string);
							}
							else if(PlayerInfo[szReferrer][pRefers] < 25 && PlayerInfo[szReferrer][pRefers] > 20)
					        {
					            PlayerInfo[szReferrer][pCredits] += CREDITS_AMOUNT_REFERRAL;
	            				PlayerInfo[szReferrer][pRefers] ++;
								format(szQuery, sizeof(szQuery), "UPDATE `accounts` SET `Credits`=%d WHERE `Username` = '%s'", PlayerInfo[szReferrer][pCredits], GetPlayerNameExt(szReferrer));
								mysql_function_query(MainPipeline, szQuery, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
								format(szString, sizeof(szString), "%s da nhan duoc %d Credits cho viec gioi thieu nguoi choi (Thanh vien dat level 3)", GetPlayerNameEx(szReferrer), CREDITS_AMOUNT_REFERRAL);
								Log("logs/referral.log", szString);
				        		format(string, sizeof(string), "Nguoi ban '%s' ma ban gioi thieu tham gia Server da dat level 3. Do do ban da nhan duoc 100 Credits.", GetPlayerNameEx(playerid));
						        SendClientMessageEx(szReferrer, COLOR_LIGHTBLUE, string);
						    }
							else if(PlayerInfo[szReferrer][pRefers] >= 25)
							{
							    PlayerInfo[szReferrer][pCredits] += CREDITS_AMOUNT_REFERRAL*25;
	            				PlayerInfo[szReferrer][pRefers] ++;
								format(szQuery, sizeof(szQuery), "UPDATE `accounts` SET `Credits`=%d WHERE `Username` = '%s'", PlayerInfo[szReferrer][pCredits], GetPlayerNameExt(szReferrer));
								mysql_function_query(MainPipeline, szQuery, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
								format(szString, sizeof(szString), "%s da nhan duoc %d Credits cho viec gioi thieu nguoi choi (Thanh vien dat level 3)", GetPlayerNameEx(szReferrer), CREDITS_AMOUNT_REFERRAL*25);
								Log("logs/referral.log", szString);
				        		format(string, sizeof(string), "Nguoi ban '%s' ma ban gioi thieu tham gia Server da dat level 3. Do do ban da nhan duoc 2500 Credits.", GetPlayerNameEx(playerid));
						        SendClientMessageEx(szReferrer, COLOR_LIGHTBLUE, string);
							}
					    }
					    else {
					        format(szQuery, sizeof(szQuery), "UPDATE `accounts` SET `PendingRefReward`=1 WHERE `Username`='%s'", PlayerInfo[playerid][pReferredBy]);
					        mysql_function_query(MainPipeline, szQuery, true, "OnQueryFinish", "iii", REWARD_REFERRAL_THREAD, playerid, g_arrQueryHandle{playerid});
						}
					}
				}
				if(PlayerInfo[playerid][pLevel] == 10)
				{
				    SendClientMessageEx(playerid, COLOR_WHITE, "Kenh hoi dap Newbie se tu dong duoc tat boi he thong [/tognewbie] de bat lai.");
				}
			}
		}
		return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong dang nhap.");
	}
	return 1;
}*/

CMD:nangcap(playerid, params[]) {
	return cmd_upgrade(playerid, params);
}
CMD:upgrade(playerid, params[])
{
	if(isnull(params))
	{
		new string[64];
		format(string, sizeof(string), "SU DUNG: /nangcap [upgradename] (you have %d upgrade points).",PlayerInfo[playerid][gPupgrade]);
		SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
		SendClientMessageEx(playerid, COLOR_WHITE,"*** NANG CAP ***");
		SendClientMessageEx(playerid, COLOR_GRAD2,string);
		SendClientMessageEx(playerid, COLOR_GRAD5, "armor gunlocker gunlocker2 copxe");
		SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
		return 1;
	}
	if( PlayerInfo[playerid][gPupgrade] >= 1 )
	{
		if (PlayerInfo[playerid][pLevel] >= 1 && strcmp(params, "armor", true) == 0)
		{
			if (PlayerInfo[playerid][pSHealth] < 100)
			{
				new string[51];
				++PlayerInfo[playerid][pSHealth];
				PlayerInfo[playerid][gPupgrade]--;
				format(string, sizeof(string), "Nang cap moi: Khi ra vien ban se co %.2f giap.",PlayerInfo[playerid][pSHealth]);
				SendClientMessageEx(playerid, COLOR_GRAD6, string);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD6, "   Giap cua ban da dat muc toi da khi ra vien.");
				return 1;
			}
		}
		else if(strcmp(params, "gunlocker", true) == 0)
		{
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPhousekey] != INVALID_HOUSE_ID && HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwnerID] == GetPlayerSQLId(playerid))
			{
				if( PlayerInfo[playerid][gPupgrade] < 2 )
				{
					SendClientMessageEx(playerid, COLOR_GRAD6, "   Ban can it nhat 2 diem nang cap.");
					return 1;
				}
				switch(HouseInfo[PlayerInfo[playerid][pPhousekey]][hGLUpgrade])
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] >= 10000)
						{
							PlayerInfo[playerid][pCash] -= 10000;
							HouseInfo[PlayerInfo[playerid][pPhousekey]][hGLUpgrade] = 1;
							HouseInfo[PlayerInfo[playerid][pPhousekey]][hWeapons][0] = 0;
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban da nang cap them tu dung do, ban bi tru $10,000.");
							SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN: De su dung tu do cua ban, su dung lenh /storegun va /getgun. Ban da co them 1 tu dung do." );
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co du $10,000.");
							return 1;
						}
					}
					case 1:
					{
						if( PlayerInfo[playerid][pCash] >= 10000 )
						{
							PlayerInfo[playerid][pCash] -= 10000;
							HouseInfo[PlayerInfo[playerid][pPhousekey]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pPhousekey]][hWeapons][1] = 0;
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban da nang cap them tu dung do, ban bi tru $10,000.");
							SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN: De su dung tu do cua ban, su dung lenh /storegun va /getgun. Ban da co them 2 tu dung do." );
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co du $10,000.");
							return 1;
						}
					}
					case 2:
					{
						if( PlayerInfo[playerid][pCash] >= 10000 )
						{
							PlayerInfo[playerid][pCash] -= 10000;
							HouseInfo[PlayerInfo[playerid][pPhousekey]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pPhousekey]][hWeapons][2] = 0;
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban da nang cap them tu dung do, ban bi tru $10,000.");
							SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN: De su dung tu do cua ban, su dung lenh /storegun va /getgun. Ban da co them 3 tu dung do." );
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co du $10,000.");
							return 1;
						}
					}
					case 3:
					{
						if( PlayerInfo[playerid][pCash] >= 50000 )
						{
							PlayerInfo[playerid][pCash] -= 50000;
							HouseInfo[PlayerInfo[playerid][pPhousekey]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pPhousekey]][hWeapons][3] = 0;
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban da nang cap them tu dung do, ban bi tru $50,000.");
							SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN: De su dung tu do cua ban, su dung lenh /storegun va /getgun. Ban da co them 4 tu dung do." );
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co du $50,000 VND.");
							return 1;
						}
					}
					case 4:
					{
						if( PlayerInfo[playerid][pCash] >= 50000 )
						{
							PlayerInfo[playerid][pCash] -= 50000;
							HouseInfo[PlayerInfo[playerid][pPhousekey]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pPhousekey]][hWeapons][4] = 0;
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban da nang cap them tu dung do, ban bi tru $50,000.");
							SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN: De su dung tu do cua ban, su dung lenh /storegun va /getgun. Ban da co them 5 tu dung do." );
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co du $50,000.");
							return 1;
						}
					}
					case 5:
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Xin loi, ban khong the nang cap them,toi da 5 tu dung do.");
						return 1;
					}
				}
				PlayerInfo[playerid][gPupgrade]--;
				SaveHouse(PlayerInfo[playerid][pPhousekey]);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD2, " Ban khong phai chu nha.");
				return 1;
			}
		}

		else if(strcmp(params, "gunlocker2", true) == 0)
		{
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPhousekey2] != INVALID_HOUSE_ID && HouseInfo[PlayerInfo[playerid][pPhousekey2]][hOwnerID] == GetPlayerSQLId(playerid))
			{
				if( PlayerInfo[playerid][gPupgrade] < 2 )
				{
					SendClientMessageEx(playerid, COLOR_GRAD6, "   Ban can it nhat 2 diem nang cap.");
					return 1;
				}
				switch( HouseInfo[PlayerInfo[playerid][pPhousekey2]][hGLUpgrade] )
				{
					case 0:
					{
						if( PlayerInfo[playerid][pCash] >= 50000 )
						{
							PlayerInfo[playerid][pCash] -= 50000;
							HouseInfo[PlayerInfo[playerid][pPhousekey2]][hGLUpgrade] = 1;
							HouseInfo[PlayerInfo[playerid][pPhousekey2]][hWeapons][0] = 0;
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban da nang cap them tu dung do, ban bi tru $50,000.");
							SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN: De su dung tu do cua ban, su dung lenh /storegun va /getgun. Ban da co them 1 tu dung do." );
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co du $50,000.");
							return 1;
						}
					}
					case 1:
					{
						if( PlayerInfo[playerid][pCash] >= 50000 )
						{
							PlayerInfo[playerid][pCash] -= 50000;
							HouseInfo[PlayerInfo[playerid][pPhousekey2]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pPhousekey2]][hWeapons][1] = 0;
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban da nang cap them tu dung do, ban bi tru $50,000.");
							SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN: De su dung tu do cua ban, su dung lenh /storegun va /getgun. Ban da co them 2 tu dung do." );
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co du $50,000.");
							return 1;
						}
					}
					case 2:
					{
						if( PlayerInfo[playerid][pCash] >= 50000 )
						{
							PlayerInfo[playerid][pCash] -= 50000;
							HouseInfo[PlayerInfo[playerid][pPhousekey2]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pPhousekey2]][hWeapons][2] = 0;
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban da nang cap them tu dung do, ban bi tru $50,000.");
							SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN: De su dung tu do cua ban, su dung lenh /storegun va /getgun. Ban da co them 3 tu dung do.." );
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co du $50,000.");
							return 1;
						}
					}
					case 3:
					{
						if( PlayerInfo[playerid][pCash] >= 50000 )
						{
							PlayerInfo[playerid][pCash] -= 50000;
							HouseInfo[PlayerInfo[playerid][pPhousekey2]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pPhousekey2]][hWeapons][3] = 0;
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban da nang cap them tu dung do, ban bi tru $50,000.");
							SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN: De su dung tu do cua ban, su dung lenh /storegun va /getgun. Ban da co them 4 tu dung do.." );
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co du $50,000.");
							return 1;
						}
					}
					case 4:
					{
						if( PlayerInfo[playerid][pCash] >= 50000 )
						{
							PlayerInfo[playerid][pCash] -= 50000;
							HouseInfo[PlayerInfo[playerid][pPhousekey2]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pPhousekey2]][hWeapons][4] = 0;
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban da nang cap them tu dung do, ban bi tru $50,000.");
							SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN: De su dung tu do cua ban, su dung lenh /storegun va /getgun. Ban da co them 5 tu dung do.." );
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co du $50,000.");
							return 1;
						}
					}
					case 5:
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Xin loi, ban khong the nang cap them,toi da 5 tu dung do.");
						return 1;
					}
				}
				PlayerInfo[playerid][gPupgrade]--;
				SaveHouse(PlayerInfo[playerid][pPhousekey2]);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD2, " Ban khong phai chu nha.");
				return 1;
			}
		}
		else if(strcmp(params, "copxe", true) == 0)
		{
			new Float: x, Float: y, Float: z;
			for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
			{
				if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
				if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
				{
					if( PlayerInfo[playerid][gPupgrade] < 2 )
					{
						SendClientMessageEx(playerid, COLOR_GRAD6, "   Ban can it nhat 2 diem nang cap.");
						return 1;
					}
					if(PlayerVehicleInfo[playerid][d][pvWepUpgrade] < 2)
					{
						new string[114];
						GameTextForPlayer(playerid,"~r~Nang cap Cop xe de sung!",5000,6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						PlayerVehicleInfo[playerid][d][pvWepUpgrade]++;
						PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]-2;
						SendClientMessageEx(playerid, COLOR_WHITE, "Ban da nang cap them khong gian de sung moi.");
						format(string, sizeof(string), "HUONG DAN: De su dung cop xe cua ban, su dung lenh /trunkput va /trunktake. Ban co %d khong gian de sung.", PlayerVehicleInfo[playerid][d][pvWepUpgrade]+1);
						SendClientMessageEx(playerid, COLOR_GRAD2, string );
						return 1;
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_GREY, "Ban da nang cap them khong gian de sung trong xe.");
						return 1;
					}
				}
			}
			SendClientMessageEx(playerid, COLOR_GREY, " Ban khong o xe cua ban.");
			return 1;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD6, "   Nang cap khong thanh cong.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD6, "   Ban co 0 diem nang cap.");
		return 1;
	}
	return 1;
}
CMD:doimatkhau(playerid, params[]) {
	return cmd_changepass(playerid, params);
}
CMD:changepass(playerid, params[])
{
	if (gPlayerLogged{playerid})
	{
		ShowPlayerDialog(playerid, DIALOG_CHANGEPASS, DIALOG_STYLE_PASSWORD, "> Doi mat khau", "Vui long nhap mat khau moi cua ban!", "Thay doi", "Thoat" );
	}
	return 1;
}

/*
CMD:ringtone(playerid, params[])
{
    if(GetPVarType(playerid, "PlayerCuffed") || GetPVarType(playerid, "Injured") || GetPVarType(playerid, "IsFrozen")) {
   		return SendClientMessage(playerid, COLOR_GRAD2, "Ban khong the lam dieu do vao luc nay!");
	}

	if(!IsPlayerInAnyVehicle(playerid))
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
		SetPlayerAttachedObject(playerid, 9, 330, 6);
	}
	return ShowPlayerDialog(playerid,RTONEMENU,DIALOG_STYLE_LIST,"Ringtone - Change Your Ringtone:","Ringtone 1\nRingtone 2\nRingtone 3\nRingtone 4\nRingtone 5\nRingtone 6\nRingtone 7\nRingtone 8\nRingtone 9\nTurn Off","Select","Close");
}
*/
/*CMD:trogiup(playerid, params[]) {
	return cmd_help(playerid, params);
}
CMD:help(playerid, params[])
{
	new string[512];
	if(PlayerInfo[playerid][pLevel] <= 3)
	{
		SendClientMessageEx(playerid, TEAM_AZTECAS_COLOR,"*** HELP *** /baocao /yeucautrogiup (/newb)ie /tognewbie");
	}
	SendClientMessageEx(playerid, COLOR_WHITE,"*** TAI KHOAN *** /quydinh /hoidap /(net)stats /tuido /quickstats /sungcuatoi /muacapdo /nangcap /doimatkhau /xoamuctieu /resetupgrades(100k)");
	SendClientMessageEx(playerid, COLOR_WHITE,"*** CHAT *** /w(hisper) /o(oc) /s(hout) /l(ow) /b /ad(vertisement)s /f(amily) /me /togooc /tognews /togfam /togwhisper /do /huycuocgoi");
	SendClientMessageEx(playerid, COLOR_WHITE,"*** BANK *** /taikhoan /ruttien /guitien /chuyentien /ataikhoan /aruttien /aguitien /achuyentien");
	SendClientMessageEx(playerid, COLOR_WHITE,"*** CHUNG *** /pay /writecheck /cashchecks /donggop /thoigian /mua /(check)id /music /choxemgiayphep /trangphuc /mywarrants");
	SendClientMessageEx(playerid, COLOR_WHITE,"*** CHUNG *** /apply /skill /stopani /kill /muatrangphuc /droplicense /calculate /doxang /car /seatbelt /checkbelt, /defendtime");
	SendClientMessageEx(playerid, COLOR_WHITE,"*** CHUNG *** /cancel /chapnhan /moiraxe /usepot /usecrack /contract /dichvu /families /thamgiasukien /checkplant /nextpaycheck, /nextgift, /pointtime");
	SendClientMessageEx(playerid, COLOR_WHITE,"*** CHUNG *** /speedo /speedopos /viewmotd");
	SendClientMessageEx(playerid, COLOR_WHITE,"*** SHOP *** /shophelp /credits");

	switch(PlayerInfo[playerid][pJob])
	{
		case 1: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /tim");
		case 2: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /lawyerduty /free /defend /wanted /offerappeal /finishappeal");
		case 3: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /sex");
		case 4: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /sell /getcrack /getseeds /getopiumseeds /plantpotseeds /plantopiumseeds /pickplant /checkplant");
		case 5: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /dropcar");
		case 7: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /fix /nos /hyd /suaxe /refill /mechduty");
		case 8: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /bangiap /lucsoat");
		case 9: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /layvatieu /sell /chetaovukhi");
		case 10: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /laythan");
		case 12: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /fight");
		case 14: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /getcrate");
		case 15: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /papers /bring /deliver");
		case 17: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /fare");
		case 18: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /layvatlieu /sell /chetao");
		case 19: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /duadouong");
		case 20: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /layhang /kiemtrahang /cuophang");
		case 21: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /laybanh");
	}
	switch(PlayerInfo[playerid][pJob2])
	{
		case 1: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /tim");
		case 2: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /lawyerduty /free /defend /wanted");
		case 3: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /sex");
		case 4: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /sell /getcrack /getseeds /plantpotseeds /pickweed /checkweed");
		case 5: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /dropcar");
		case 7: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /fix /nos /hyd /suaxe /refill /mechduty");
		case 8: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /bangiap /lucsoat");
		case 9: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /layvatlieu /sell /chetaovukhi");
		case 10: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /laythan");
		case 12: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /fight");
		case 14: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /getcrate");
		case 15: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /papers /bring /deliver");
		case 17: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /fare");
		case 18: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /layvatlieu /sell /chetao");
		case 19: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /duadouong");
		case 20: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /layhang /kiemtrahang /cuophang");
		case 21: SendClientMessageEx(playerid,COLOR_WHITE,"*** JOB *** /getpizza");
	}
	new iGroupID = PlayerInfo[playerid][pMember];
	if(iGroupID != INVALID_GROUP_ID)
	{
	    switch(arrGroupData[iGroupID][g_iGroupType])
	    {
			case 1:
			{
			    format(string, sizeof(string), "*** %s *** (/r)adio /dept (/m)egaphone (/su)spect /tudo /mdc /dualenxe /dandi /arrest /warrantarrest /wanted /cuff /tazer", arrGroupData[PlayerInfo[playerid][pMember]][g_szGroupName]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "*** %s ***  /lucsoat /take /ticket (/gov)ernment /clothes /ram /invite /giverank /deploy /destroy /pddoor /pdcell", arrGroupData[PlayerInfo[playerid][pMember]][g_szGroupName]);
                SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "*** %s ***  /spikes /tichthubanglai /vcheck /vmdc /vticket /tow /untow /impound /dmvrelease /gdonate /togradio /togdept", arrGroupData[PlayerInfo[playerid][pMember]][g_szGroupName]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "*** %s ***  /flares /cones /wants /docarrest /siren /destroyplant /radargun /searchcar /dvsiren /vradar", arrGroupData[PlayerInfo[playerid][pMember]][g_szGroupName]);
				if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBugAccess]) format(string, sizeof(string), "%s /bug /listbugs /clearbugs /hfind",string);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				if(arrGroupData[PlayerInfo[playerid][pMember]][g_iCrateIsland] != INVALID_RANK) {
                    format(string, sizeof(string), "*** %s ***  /cratelimit /viewcrateorders", arrGroupData[PlayerInfo[playerid][pMember]][g_szGroupName]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
				}
				format(string, sizeof(string), "*** %s ***  /loadkit /usekit /backup (code2) /backupall /calls /a(ccept)c(all) /i(gnore)c(all)", arrGroupData[PlayerInfo[playerid][pMember]][g_szGroupName]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);

			}
			case 2:
			{
				format(string, sizeof(string), "*** %s *** (/f)amily /r /hopdong /givemehit /order /ranks /profile /h(show)badge /hfind /togbr", arrGroupData[PlayerInfo[playerid][pMember]][g_szGroupName]);
                SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "*** %s *** /plantbomb /plantcarbomb /pickupbomb /myc4 /clothes /invite /giverank /showmehq /showmehq2 /showmehq3", arrGroupData[PlayerInfo[playerid][pMember]][g_szGroupName]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
			case 3:
			{
				format(string, sizeof(string), "*** %s ***  (/r)adio /dept (/m)egaphone /heal /clothes /invite /giverank /tudo /gdonate", arrGroupData[PlayerInfo[playerid][pMember]][g_szGroupName]);
                SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "*** %s ***  /getpt /movept /loadpt /deliverpt /destroyplant /calls /a(ccept)c(all) /i(gnore)c(all)", arrGroupData[PlayerInfo[playerid][pMember]][g_szGroupName]);
                SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
			case 4:
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "*** NEWS AGENCY *** /live /news [text] /broadcast /cameraangle /clothes /invite /giverank /liveban");
   			}
			case 5:
			{
				if(PlayerInfo[playerid][pRank] < 3)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "*** GOVERNMENT *** (/r)adio /dept /tudo /mdc /deploy /destroy /spikes /tazer /lucsoat /cuff");
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "*** GOVERNMENT *** (/r)adio /dept /tudo /settax /checktax /taxwithdraw /invite /giverank (/gov)ernment (/su)spect");
					SendClientMessageEx(playerid, COLOR_WHITE, "*** GOVERNMENT *** /mdc /dualenxe /arrest /wanted /cuff /tazer /lucsoat /take /ticket /clothes /ram /invite /giverank /setbudget");
					SendClientMessageEx(playerid, COLOR_WHITE, "*** GOVERNMENT *** /spikes /destroyplant /radargun /warrantarrest /pardon /commute /wants /deploy /destroy");
				}
			}
			case 6:
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "*** JUDICIAL SYSTEM *** (/r)adio /dept /warrant /warrantwd /judgefine /judgejail /judgeprison /probation /wants /subpoena");
				SendClientMessageEx(playerid, COLOR_WHITE, "*** JUDICIAL SYSTEM *** /invite /uninvite /giverank /trial /adjourn /sentence /reward /checkjudgements /reversejudgement");
				SendClientMessageEx(playerid, COLOR_WHITE, "*** JUDICIAL SYSTEM *** /present /freezebank /freezeassets /probation /gdonate");
			}
			case 7:
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "*** TRANSPORT *** /fare /ataxi /tonline /r /invite /giverank /eba /gdonate");
			}
			case 8:
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "*** TOWING *** (/r)adio /dept /tudo /(un)tow /impound /vcheck /vmdc /vticket /gdonate /calls /a(ccept)c(all) /i(gnore)c(all)");
			}
			case 9:
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "*** URL *** /countdown");
			}
		}
		if (0 <= PlayerInfo[playerid][pLeader] < MAX_GROUPS)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "*** GROUP LEADER *** /invite /uninvite /ouninvite /setdiv /giverank /online");
			if(arrGroupData[iGroupID][g_iGroupType] == 1 || arrGroupData[iGroupID][g_iGroupType] == 3 || arrGroupData[iGroupID][g_iGroupType] == 6 || arrGroupData[iGroupID][g_iGroupType] == 7)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "*** GROUP LEADER *** /viewbudget /grepocars /gvbuyback /gdonate /ordercrates /dvtrackcar /gwithdraw, /dvstorage");
			}
			else if(arrGroupData[iGroupID][g_iGroupType] == 5)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "*** GROUP LEADER *** /checkapps /deport");
			}
		}
	}
	if (PlayerInfo[playerid][pFMember] != INVALID_FAMILY_ID)
	{
		if(PlayerInfo[playerid][pRank] < 5)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "*** FAMILY *** (/f)amily /clothes /safehelp /movegate /taginfo");
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "*** FAMILY *** (/f)amily /clothes /safehelp /movegate /fdeposit /fwithdraw /fbalance /claim /chiemdong /adjust");
			SendClientMessageEx(playerid, COLOR_WHITE, "*** FAMILY *** /dvtrackcar /dvpark /adjustdvrank /spraytag /fmotd");
		}
	}
	if (PlayerInfo[playerid][pAdmin] >= 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "*** ADMIN *** (/a)dmin (/ah)elp");
	}
	if (PlayerInfo[playerid][pHelper] >= 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "*** Junior Helper *** (/ch)elp");
	}
	if(PlayerInfo[playerid][pDonateRank] >= 1)
	{
		SendClientMessageEx(playerid, COLOR_PURPLE, "*** VIP *** /travel /viplocker /tokenhelp /buddyinvite /phoneprivacy /setautoreply");
	}
	if(PlayerInfo[playerid][pDonateRank] == 5)
	{
		SendClientMessageEx(playerid, COLOR_PURPLE, "*** VIP Moderator *** /vipparty /vto /vtoreset /vmute /vsuspend");
	}
	SendClientMessageEx(playerid, COLOR_WHITE,"*** OTHER *** /trogiupdienthoai /carhelp /househelp /toyhelp /renthelp /jobhelp /animhelp /fishhelp /insurehelp");
	SendClientMessageEx(playerid, COLOR_WHITE,"*** OTHER *** /mailhelp /businesshelp /voucherhelp");

	//Start of Famed Commands
	if(PlayerInfo[playerid][pFamed] >= 1)
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "*** Old-School *** /fc /famedlocker /togfamed /famedplate [os/removed] /travel famed");
	}
	if(PlayerInfo[playerid][pFamed] >= 2)
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "*** Chartered Old-School *** /famedplate [os/cos/removed]");
	}
    if(PlayerInfo[playerid][pFamed] >= 3)
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "*** Famed *** /muabaohiem /famedplate [os/cos/famed/removed]");
	}
	if(PlayerInfo[playerid][pFamed] >= 4)
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "*** Famed Commissioner *** /fmute /funmute, /fmembers");
	}
	if(PlayerInfo[playerid][pFamed] >= 6)
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "*** Famed Vice-Chairman *** /osetfamed /setfamed");
	}
	//end of famed commands
	return 1;
}*/

/*CMD:huyhieu(playerid, params[])
{
	return cmd_badge(playerid, params);
}
CMD:badge(playerid, params[]) {
    if(PlayerInfo[playerid][pMember] >= 0 && arrGroupData[PlayerInfo[playerid][pMember]][g_hDutyColour] != 0xFFFFFF)
	{
		if(GetPVarInt(playerid, "IsInArena") >= 0 || PlayerInfo[playerid][pJailTime] > 0 || GetPVarInt(playerid, "EventToken") != 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong on-duty ngay bay gio.");
			return 1;
		}
		#if defined zombiemode
		if(zombieevent == 1 && GetPVarType(playerid, "pIsZombie")) return SendClientMessageEx(playerid, COLOR_GREY, "Zombies khong the su dung.");
		#endif
		if(PlayerInfo[playerid][pDuty]) {
			PlayerInfo[playerid][pDuty] = 0;
			SetPlayerToTeamColor(playerid);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da an huy hieu cua ban, va bay gio ban da off-duty.");
			if(IsAMedic(playerid))
			{
				Medics -= 1;
			}
		}
		else {
			PlayerInfo[playerid][pDuty] = 1;
			SetPlayerToTeamColor(playerid);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da bat huy hieu cua ban, va bay gio ban da on-duty.");
			if(IsAMedic(playerid))
			{
				Medics += 1;
			}
		}
	}
	return 1;
}*/

// Testing Commands

/*CMD:saveaccount(playerid, params[]){
	if(gPlayerLogged{playerid} == 1)
	{
		if(GetPVarInt(playerid, "ManualSave") == 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Unable to save account, please wait at least 5 minutes in between saves.");
			return 1;
		}
		SetPVarInt(playerid, "ManualSave", 1);
		OnPlayerStatsUpdate(playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "You have saved your account, you can only do this every 5 minutes.");
	}
	return 1;
}*/

/*CMD:equipstorage(playerid, params[])
{
	return cmd_es(playerid, params);
}

CMD:es(playerid, params[])
{
	if(GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pPhousekey]+6000 || GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pPhousekey2]+6000)
	{
		if(PlayerInfo[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(GetPlayerNameExt(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwnerID], true) == 0)
		{
			ShowStorageEquipDialog(playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pPhousekey2] != INVALID_HOUSE_ID && strcmp(GetPlayerNameExt(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey2]][hOwnerID], true) == 0)
		{
			ShowStorageEquipDialog(playerid);
			return 1;
		}
	}
	else
	{
		new Float:fVehPos[3];
		for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
		{
			if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID)
			{
				GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], fVehPos[0], fVehPos[1], fVehPos[2]);
			}
			if(IsPlayerInRangeOfPoint(playerid, 4.0, fVehPos[0], fVehPos[1], fVehPos[2]))
			{
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(PlayerVehicleInfo[playerid][d][pvId], engine, lights, alarm, doors, bonnet, boot, objective);

				if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) {
					return SendClientMessageEx(playerid, COLOR_WHITE, "You can't unequip/equip storage devices from the trunk if it's closed! /car trunk to open it.");
				}

				ShowStorageEquipDialog(playerid);
				return 1;
			}
		}
	}

	SendClientMessageEx(playerid, COLOR_WHITE, "You must be at your house or car trunk to equip storage devices!");
	return 1;
}

CMD:vs(playerid, params[])
{
	return cmd_viewstorage(playerid, params);
}

CMD:viewstorage(playerid, params[])
{
	if(gPlayerLogged{playerid} != 1) return SendClientMessageEx(playerid, COLOR_WHITE, "You are not logged in!");

	new string[128];
	SendClientMessageEx(playerid, COLOR_GREEN, "|____________________________________ Storage ____________________________________|");

	// Bank
	format(string, sizeof(string), "(Bank) Cash: ($%d)",
		PlayerInfo[playerid][pAccount]
	);
	SendClientMessageEx(playerid, COLOR_WHITE, string);

	// Pocket
	format(string, sizeof(string), "(Pocket) Cash: ($%d) - Pot: (%d/%d) - Crack: (%d/%d) - Materials: (%d/%d)",
		PlayerInfo[playerid][pCash],
		PlayerInfo[playerid][pPot],
		onhandlimit[1],
		PlayerInfo[playerid][pCrack],
		onhandlimit[2],
		PlayerInfo[playerid][pMats],
		onhandlimit[3]
	);
	SendClientMessageEx(playerid, COLOR_WHITE, string);

	// Bag
	if(StorageInfo[playerid][0][sStorage] == 1)
	{
		format(string, sizeof(string), "(%s) Cash: ($%d/$%d) - Pot: (%d/%d) - Crack: (%d/%d) - Materials: (%d/%d)",
			storagetype[1],
			StorageInfo[playerid][0][sCash],
			bbackpacklimit[0],
			StorageInfo[playerid][0][sPot],
			bbackpacklimit[1],
			StorageInfo[playerid][0][sCrack],
			bbackpacklimit[2],
			StorageInfo[playerid][0][sMats],
			bbackpacklimit[3]
		);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}

	// Backpack
	if(StorageInfo[playerid][1][sStorage] == 1)
	{
		format(string, sizeof(string), "(%s) Cash: ($%d/$%d) - Pot: (%d/%d) - Crack: (%d/%d) - Materials: (%d/%d)",
			storagetype[2],
			StorageInfo[playerid][1][sCash],
			backpacklimit[0],
			StorageInfo[playerid][1][sPot],
			backpacklimit[1],
			StorageInfo[playerid][1][sCrack],
			backpacklimit[2],
			StorageInfo[playerid][1][sMats],
			backpacklimit[3]
		);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}

	// Briefcase
	if(StorageInfo[playerid][2][sStorage] == 1)
	{
		format(string, sizeof(string), "(%s) Cash: ($%d/$%d) - Pot: (%d/%d) - Crack: (%d/%d) - Materials: (%d/%d)",
			storagetype[3],
			StorageInfo[playerid][2][sCash],
			briefcaselimit[0],
			StorageInfo[playerid][2][sPot],
			briefcaselimit[1],
			StorageInfo[playerid][2][sCrack],
			briefcaselimit[2],
			StorageInfo[playerid][2][sMats],
			briefcaselimit[3]
		);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}

	format(string, sizeof(string), "(Personal Storage) Pot: (%d) - Crack: (%d) - Materials: (%d)", PlayerInfo[playerid][pPSFPot], PlayerInfo[playerid][pPSFCrack], PlayerInfo[playerid][pPSFMats]);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	SendClientMessageEx(playerid, COLOR_GREEN, "|_________________________________________________________________________________|");
	return 1;
}

CMD:transferstorage(playerid, params[])
{
	new itemid, tostorageid, fromstorageid, amount;

	if(sscanf(params, "dddd", fromstorageid, tostorageid, itemid, amount))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /transferstorage [from-storageid] [to-storageid] [itemid] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
        return 1;
	}
	else
	{
		if(itemid < 1 || itemid > 4) {
			SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /transferstorage [from-storageid] [to-storageid] [itemid] [amount]");
			SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
			SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
			return 1;
		}

		if(tostorageid < 0 || tostorageid > 1) {
			SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /transferstorage [from-storageid] [to-storageid] [itemid] [amount]");
			SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
			SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
			return 1;
		}

		if(fromstorageid < 0 || fromstorageid > 1) {
			SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /transferstorage [from-storageid] [to-storageid] [itemid] [amount]");
			SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
			SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
			return 1;
		}

		// Find the storageid of the storagedevice.
		if(tostorageid == 1) {
			new bool:itemEquipped = false;
			for(new i = 0; i < 3; i++)
			{
				if(StorageInfo[playerid][i][sAttached] == 1) {
					tostorageid = i+1;
					itemEquipped = true;
				}
			}
			if(itemEquipped == false) return SendClientMessageEx(playerid, COLOR_WHITE, "You don't have a storage device equipped!");
		}

		// Find the storageid of the storagedevice.
		if(fromstorageid == 1) {
			new bool:itemEquipped = false;
			for(new i = 0; i < 3; i++)
			{
				if(StorageInfo[playerid][i][sAttached] == 1) {
					fromstorageid = i+1;
					itemEquipped = true;
				}
			}
			if(itemEquipped == false) return SendClientMessageEx(playerid, COLOR_WHITE, "You don't have a storage device equipped!");
		}

		if(tostorageid == fromstorageid) return SendClientMessageEx(playerid, COLOR_WHITE, "You can't transfer to the same storage!");

		TransferStorage(playerid, tostorageid, playerid, fromstorageid, itemid, amount, -1, -1);
	}
	return 1;
}

CMD:personalwithdraw(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong ngan hang!");
		return 1;
	}
    if(PlayerInfo[playerid][pFreezeBank] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ngan hang hien dang bi dong bang");

	new string[128], itemid, storageid, amount;

	if(sscanf(params, "ddd", itemid, storageid, amount))
    {
        SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /personalwithdraw [itemid] [storageid] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
        return 1;
    }
	else
	{
		if(itemid < 1 || itemid > 4) {
			SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /personalwithdraw [itemid] [storageid] [amount]");
			SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
			SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
			return 1;
		}

		if(storageid < 0 || storageid > 1) {
			SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /personalwithdraw [itemid] [storageid] [amount]");
			SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
			SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
			return 1;
		}

		// Find the storageid of the storagedevice.
		if(storageid == 1) {
			new bool:itemEquipped = false;
			for(new i = 0; i < 3; i++)
			{
				if(StorageInfo[playerid][i][sAttached] == 1) {
					storageid = i+1;
					itemEquipped = true;
				}
			}
			if(itemEquipped == false) return SendClientMessageEx(playerid, COLOR_WHITE, "You don't have a storage device equipped!");
		}

		if(amount < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "You can't withdraw less than 1.");

		switch(itemid)
		{
			case 1:
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "You are unable to withdraw money here, use a bank.");
				return 1;
			}
			case 2:
			{
				if(storageid == 0) {

					if(PlayerInfo[playerid][pPot] + amount > onhandlimit[itemid-1]) {
						format(string, sizeof(string), "Unable to store %d %s to your %s because it breaches it's limit.", amount, itemtype[itemid], storagetype[storageid]);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						return 1;
					}
					if(PlayerInfo[playerid][pPSFPot] < amount) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to withdraw.");
					PlayerInfo[playerid][pPSFPot] -= amount;
					PlayerInfo[playerid][pPot] += amount;

					format(string, sizeof(string), "You have withdrawed %d %s from your Personal Storage to your Pocket.", amount, itemtype[itemid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}

				if(StorageInfo[playerid][storageid-1][sAttached] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have that storage item equipped!");
				if(PlayerInfo[playerid][pPSFPot] < amount) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to withdraw.");

				// Limit Check
				if(storageid == 1 && (StorageInfo[playerid][storageid-1][sPot] + amount > bbackpacklimit[itemid-1])) {
					format(string, sizeof(string), "Unable to store %d %s to your %s because it breaches it's limit.", amount, itemtype[itemid], storagetype[storageid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}
				if(storageid == 2 && (StorageInfo[playerid][storageid-1][sPot] + amount > backpacklimit[itemid-1])) {
					format(string, sizeof(string), "Unable to store %d %s to your %s because it breaches it's limit.", amount, itemtype[itemid], storagetype[storageid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}
				if(storageid == 3 && (StorageInfo[playerid][storageid-1][sPot] + amount > briefcaselimit[itemid-1])) {
					format(string, sizeof(string), "Unable to store %d %s to your %s because it breaches it's limit.", amount, itemtype[itemid], storagetype[storageid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}

				StorageInfo[playerid][storageid-1][sPot] += amount;
				PlayerInfo[playerid][pPSFPot] -= amount;

				format(string, sizeof(string), "You have withdrawed %d %s from your Personal Storage to your %s.", amount, itemtype[itemid], storagetype[storageid]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				return 1;
			}
			case 3:
			{
				if(storageid == 0) {

					if(PlayerInfo[playerid][pCrack] + amount > onhandlimit[itemid-1]) {
						format(string, sizeof(string), "Unable to store %d %s to your %s because it breaches it's limit.", amount, itemtype[itemid], storagetype[storageid]);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						return 1;
					}
					if(PlayerInfo[playerid][pPSFCrack] < amount) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to withdraw.");
					PlayerInfo[playerid][pPSFCrack] -= amount;
					PlayerInfo[playerid][pCrack] += amount;

					format(string, sizeof(string), "You have withdrawed %d %s from your Personal Storage to your Pocket.", amount, itemtype[itemid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}

				if(StorageInfo[playerid][storageid-1][sAttached] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have that storage item equipped!");
				if(PlayerInfo[playerid][pPSFCrack] < amount) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to withdraw.");

				// Limit Check
				if(storageid == 1 && (StorageInfo[playerid][storageid-1][sCrack] + amount > bbackpacklimit[itemid-1])) {
					format(string, sizeof(string), "Unable to store %d %s to your %s because it breaches it's limit.", amount, itemtype[itemid], storagetype[storageid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}
				if(storageid == 2 && (StorageInfo[playerid][storageid-1][sCrack] + amount > backpacklimit[itemid-1])) {
					format(string, sizeof(string), "Unable to store %d %s to your %s because it breaches it's limit.", amount, itemtype[itemid], storagetype[storageid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}
				if(storageid == 3 && (StorageInfo[playerid][storageid-1][sCrack] + amount > briefcaselimit[itemid-1])) {
					format(string, sizeof(string), "Unable to store %d %s to your %s because it breaches it's limit.", amount, itemtype[itemid], storagetype[storageid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}

				StorageInfo[playerid][storageid-1][sCrack] += amount;
				PlayerInfo[playerid][pPSFCrack] -= amount;

				format(string, sizeof(string), "You have withdrawed %d %s from your Personal Storage to your %s.", amount, itemtype[itemid], storagetype[storageid]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				return 1;
			}
			case 4:
			{
				if(storageid == 0) {

					SendClientMessageEx(playerid, COLOR_WHITE, "You can not withdraw Materials into your Pocket, Use a storage device!");
					return 1;
				}

				if(StorageInfo[playerid][storageid-1][sAttached] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have that storage item equipped!");
				if(PlayerInfo[playerid][pPSFMats] < amount) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to withdraw.");

				// Limit Check
				if(storageid == 1 && (StorageInfo[playerid][storageid-1][sMats] + amount > bbackpacklimit[itemid-1])) {
					format(string, sizeof(string), "Unable to store %d %s to your %s because it breaches it's limit.", amount, itemtype[itemid], storagetype[storageid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}
				if(storageid == 2 && (StorageInfo[playerid][storageid-1][sMats] + amount > backpacklimit[itemid-1])) {
					format(string, sizeof(string), "Unable to store %d %s to your %s because it breaches it's limit.", amount, itemtype[itemid], storagetype[storageid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}
				if(storageid == 3 && (StorageInfo[playerid][storageid-1][sMats] + amount > briefcaselimit[itemid-1])) {
					format(string, sizeof(string), "Unable to store %d %s to your %s because it breaches it's limit.", amount, itemtype[itemid], storagetype[storageid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}

				StorageInfo[playerid][storageid-1][sMats] += amount;
				PlayerInfo[playerid][pPSFMats] -= amount;

				format(string, sizeof(string), "You have withdrawed %d %s from Personal Storage to your %s.", amount, itemtype[itemid], storagetype[storageid]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				return 1;
			}
		}
	}
	return 1;
}

CMD:personaldeposit(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong ngan hang!");
		return 1;
	}
    if(PlayerInfo[playerid][pFreezeBank] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ngan hang hien dang bi dong bang");

	new string[128], itemid, storageid, amount;

	if(sscanf(params, "ddd", itemid, storageid, amount))
    {
        SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /personaldeposit [itemid] [storageid] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
        return 1;
    }
	else
	{
		if(itemid < 1 || itemid > 4) {
			SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /personaldeposit [itemid] [storageid] [amount]");
			SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
			SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
			return 1;
		}

		if(storageid < 0 || storageid > 1) {
			SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /personaldeposit [itemid] [storageid] [amount]");
			SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
			SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
			return 1;
		}

		if(amount < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "You can't deposit less than 1.");

		// Find the storageid of the storagedevice.
		if(storageid == 1) {
			new bool:itemEquipped = false;
			for(new i = 0; i < 3; i++)
			{
				if(StorageInfo[playerid][i][sAttached] == 1) {
					storageid = i+1;
					itemEquipped = true;
				}
			}
			if(itemEquipped == false) return SendClientMessageEx(playerid, COLOR_WHITE, "You don't have a storage device equipped!");
		}

		switch(itemid)
		{
			case 1:
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "You are unable to store money here, use a bank.");
				return 1;
			}
			case 2:
			{
				if(storageid == 0) {
					if(PlayerInfo[playerid][pPot] < amount) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit.");
					PlayerInfo[playerid][pPot] -= amount;
					PlayerInfo[playerid][pPSFPot] += amount;

					format(string, sizeof(string), "You have deposited %d %s from your Pocket to your Personal Storage.", amount, itemtype[itemid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}

				if(StorageInfo[playerid][storageid-1][sAttached] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have that storage item equipped!");
				if(StorageInfo[playerid][storageid-1][sPot] < amount) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit.");

				StorageInfo[playerid][storageid-1][sPot] -= amount;
				PlayerInfo[playerid][pPSFPot] += amount;

				format(string, sizeof(string), "You have deposited %d %s from your %s your Personal Storage.", amount, itemtype[itemid], storagetype[storageid]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				return 1;
			}
			case 3:
			{
				if(storageid == 0) {
					if(PlayerInfo[playerid][pCrack] < amount) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit.");
					PlayerInfo[playerid][pCrack] -= amount;
					PlayerInfo[playerid][pPSFCrack] += amount;

					format(string, sizeof(string), "You have deposited %d %s from your Pocket to your Personal Storage.", amount, itemtype[itemid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}

				if(StorageInfo[playerid][storageid-1][sAttached] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have that storage item equipped!");
				if(StorageInfo[playerid][storageid-1][sCrack] < amount) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit.");

				StorageInfo[playerid][storageid-1][sCrack] -= amount;
				PlayerInfo[playerid][pPSFCrack] += amount;

				format(string, sizeof(string), "You have deposited %d %s from your %s your Personal Storage.", amount, itemtype[itemid], storagetype[storageid]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				return 1;
			}
			case 4:
			{
				if(storageid == 0) {
					if(PlayerInfo[playerid][pMats] < amount) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit.");
					PlayerInfo[playerid][pMats] -= amount;
					PlayerInfo[playerid][pPSFMats] += amount;

					format(string, sizeof(string), "You have deposited %d %s from your Pocket to your Personal Storage.", amount, itemtype[itemid]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}

				if(StorageInfo[playerid][storageid-1][sAttached] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have that storage item equipped!");
				if(StorageInfo[playerid][storageid-1][sMats] < amount) return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit.");

				StorageInfo[playerid][storageid-1][sMats] -= amount;
				PlayerInfo[playerid][pPSFMats] += amount;

				format(string, sizeof(string), "You have deposited %d %s from your %s your Personal Storage.", amount, itemtype[itemid], storagetype[storageid]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				return 1;
			}
		}
	}
	return 1;
}
*/
/*CMD:engine(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new engine,lights,alarm,doors,bonnet,boot,objective,vehicleid,string[128];
		vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || DynVeh[vehicleid] != -1 && DynVehicleInfo[DynVeh[vehicleid]][gv_iType] == 1 && GetVehicleModel(vehicleid) == 592) return SendClientMessageEx(playerid,COLOR_WHITE,"This command can't be used in this vehicle.");
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		if(engine == VEHICLE_PARAMS_ON)
		{
			SetVehicleEngine(vehicleid, playerid);
   			format(string, sizeof(string), "{FF8000}** {C2A2DA}%s rut chia khoa ra ngoai va dung dong co xe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if((engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET))
		{
  		    if (GetPVarInt(playerid, "Refueling")) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the no may xe khi dang tiep nhien lieu.");
			format(string, sizeof(string), "{FFCC00} %s {FFFFFF}Da khoi dong phuong tien", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SendClientMessageEx(playerid, COLOR_WHITE, "Dong co xe dang duoc khoi dong, vui long doi trong giay lat..");
			SetTimerEx("SetVehicleEngine", 1000, 0, "dd",  vehicleid, playerid);
			PlayerTextDrawHide(playerid, EnterVeh[playerid]);
		}
	}
	return 1;
}*/

CMD:muahatgiong(playerid)
{
    if(PlayerInfo[playerid][pCash] < 2000)
	return SendClientMessage(playerid, COLOR_RED, "[Hat Giong] Ban khong du tien [2000$]");
	PlayerInfo[playerid][pCash] -= 2000;
	PlayerInfo[playerid][pHatGiong] += 1;
	SendClientMessage(playerid, -1, "[Hat Giong] Ban Da Mua Hat Giong Can Sa Voi Gia 2000$/1");
	SendClientMessage(playerid, -1, "[Hat Giong] /cansa de kiem tra hat giong");
	return 1;
}

CMD:muabaidauzzzz(playerid)
{
	if(PlayerInfo[playerid][pBaiDauXe] == 1)
		return SendClientMessage(playerid, COLOR_RED, "[GO-RP LOI] Ban chua su dung khong the mua tiep (/dauxe)");
	if(PlayerInfo[playerid][pCash] < 500)
		return SendClientMessage(playerid, COLOR_RED, "[GO-RP LOI] Ban khong du tien [500$]");
	PlayerInfo[playerid][pCash] -= 500;
	PlayerInfo[playerid][pBaiDauXe] ++;
	SendClientMessage(playerid, -1, "[PARK] Ban da mua mot bai dau xe (/dauxe) de dau");
	return 1;
}

CMD:car(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		ShowPlayerDialog(playerid, DIALOG_CAR, DIALOG_STYLE_LIST,"> MENU XE","\nDau xe\nDen xe/tat den xe\nMo mui/dong mui\nCop xe/Dong cop\nXang\nThong tin\nCua so", "Chon","Huy bo");
	return 1;
}
/*
CMD:v(playerid, params[])
{
	new string[128];
	if(isnull(params))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /v [name]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : thongtin, khoidong, den, cop, mui, xang, cuaso park");
		return 1;
	}
	if(strcmp(params, "khoidong", true) == 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new engine,lights,alarm,doors,bonnet,boot,objective,vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || DynVeh[vehicleid] != -1 && DynVehicleInfo[DynVeh[vehicleid]][gv_iType] == 1 && GetVehicleModel(vehicleid) == 592) return SendClientMessageEx(playerid,COLOR_WHITE,"This command can't be used in this vehicle.");
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		if(engine == VEHICLE_PARAMS_ON)
		{
			SetVehicleEngine(vehicleid, playerid);
   			format(string, sizeof(string), "{FF8000}** {C2A2DA}%s rut chia khoa ra ngoai va dung dong co xe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if((engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET))
		{
  		    if (GetPVarInt(playerid, "Refueling")) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the no may xe khi dang tiep nhien lieu.");
			format(string, sizeof(string), "{FFCC00} %s {FFFFFF}Da khoi dong phuong tien", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			print("DEBUG CMD ENTERVEH");
			PlayerTextDrawHide(playerid, EnterVeh[playerid]);
			SendClientMessageEx(playerid, COLOR_WHITE, "Dong co xe dang duoc khoi dong, vui long doi trong giay lat..");
			SetTimerEx("SetVehicleEngine", 1000, 0, "dd",  vehicleid, playerid);
		}
	}
	else if(strcmp(params, "park", true) == 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		cmd_dauxe(playerid, "");
	}
	else if(strcmp(params, "den", true) == 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return SendClientMessageEx(playerid,COLOR_WHITE,"This command can't be used in this vehicle.");
		SetVehicleLights(vehicleid, playerid);
	}
	else if(strcmp(params, "mui", true) == 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || IsAPlane(vehicleid) || IsABike(vehicleid))
			{
				return SendClientMessageEx(playerid,COLOR_WHITE,"Lenh nay khong the duoc su dung trong chiec xe nay.");
			}
			SetVehicleHood(vehicleid, playerid);
		}
		else if(!IsPlayerInAnyVehicle(playerid))
		{
			new closestcar = GetClosestCar(playerid);
			if(IsPlayerInRangeOfVehicle(playerid, closestcar, 5.0))
			{
				if(GetVehicleModel(closestcar) == 481 || GetVehicleModel(closestcar) == 509 || GetVehicleModel(closestcar) == 510 || IsAPlane(closestcar) || IsABike(closestcar))
				{
					return SendClientMessageEx(playerid,COLOR_WHITE,"Lenh nay khong the duoc su dung trong chiec xe nay.");
				}
				SetVehicleHood(closestcar, playerid);
			}
		}
	}
	else if(strcmp(params, "cop", true) == 0)
  	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510)
			{
				return SendClientMessageEx(playerid,COLOR_WHITE,"Lenh nay khong the duoc su dung trong chiec xe nay.");
			}
			SetVehicleTrunk(vehicleid, playerid);
		}
		else if(!IsPlayerInAnyVehicle(playerid))
		{
			new closestcar = GetClosestCar(playerid);
			if(IsPlayerInRangeOfVehicle(playerid, closestcar, 5.0))
			{
				if(GetVehicleModel(closestcar) == 481 || GetVehicleModel(closestcar) == 509 || GetVehicleModel(closestcar) == 510)
				{
					return SendClientMessageEx(playerid,COLOR_WHITE,"Lenh nay khong the duoc su dung trong chiec xe nay.");
				}
				SetVehicleTrunk(closestcar, playerid);
			}
		}
	}
	else if(strcmp(params, "xang", true) == 0 && IsPlayerInAnyVehicle(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			new engine,lights,alarm,doors,bonnet,boot,objective,enginestatus[4],lightstatus[4];
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			if(!IsRefuelableVehicle(vehicleid)) return SendClientMessageEx(playerid,COLOR_RED,"Chiec xe nay khong can nhien lieu.");
			if(engine != VEHICLE_PARAMS_ON) strcpy(enginestatus, "OFF", 4);
			else strcpy(enginestatus, "ON", 3);
			if(lights != VEHICLE_PARAMS_ON) strcpy(lightstatus, "OFF", 4);
			else strcpy(lightstatus, "ON", 3);

  		    if (IsVIPcar(vehicleid) || IsAdminSpawnedVehicle(vehicleid) || IsFamedVeh(vehicleid)) format(string, sizeof(string), "Dong co: %s | Den xe: %s | Xang: Unlimited",enginestatus,lightstatus);
			else format(string, sizeof(string), "Dong co: %s | Den xe: %s | Xang: %.1f%s",enginestatus,lightstatus, VehicleFuel[vehicleid], "%");
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
	}
	else if(strcmp(params, "thongtin", true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			new engine,lights,alarm,doors,bonnet,boot,objective,enginestatus[4],lightstatus[4];
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			if(!IsRefuelableVehicle(vehicleid)) return SendClientMessageEx(playerid,COLOR_RED,"Chiec xe nay khong can nhien lieu.");
			if(engine != VEHICLE_PARAMS_ON) strcpy(enginestatus, "OFF", 4);
			else strcpy(enginestatus, "ON", 3);
			if(lights != VEHICLE_PARAMS_ON) strcpy(lightstatus, "OFF", 4);
			else strcpy(lightstatus, "ON", 3);
  		    if (IsVIPcar(vehicleid) || IsAdminSpawnedVehicle(vehicleid) || IsFamedVeh(vehicleid)) format(string, sizeof(string), "Dong co: %s | Den xe: %s | Xang: Unlimited | Windows: %s",enginestatus,lightstatus,(CrateVehicleLoad[GetPlayerVehicleID(playerid)][vCarWindows] == 0) ? ("Up") : ("Down"));
			else format(string, sizeof(string), "Dong co: %s | Den xe: %s | Xang: %.1f percent | Windows: %s",enginestatus,lightstatus, VehicleFuel[vehicleid], (CrateVehicleLoad[GetPlayerVehicleID(playerid)][vCarWindows] == 0) ? ("Up") : ("Down"));
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
	}
	else if(strcmp(params, "cuaso", true) == 0 && IsPlayerInAnyVehicle(playerid) && !IsABike(GetPlayerVehicleID(playerid)) && !IsABoat(GetPlayerVehicleID(playerid)))
	{
	    if(CrateVehicleLoad[GetPlayerVehicleID(playerid)][vCarWindows])
	    {
	    	CrateVehicleLoad[GetPlayerVehicleID(playerid)][vCarWindows] = 0;
			format(string, sizeof(string), "{FF8000}** {C2A2DA}%s mo kinh chan gio nhin ra ngoai.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    }
	    else {
            CrateVehicleLoad[GetPlayerVehicleID(playerid)][vCarWindows] = 1;
			format(string, sizeof(string), "{FF8000}** {C2A2DA}%s mo kinh chan gio nhin ra ngoai.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    }
	}
	return 1;
}*/

CMD:doxang(playerid, params[]) {
	return cmd_refuel(playerid, params);
}
CMD:refuel(playerid, params[])
{

    if (GetPVarType(playerid, "Refueling"))
	{
	    SetPVarInt(playerid, "Refueling", -1);
	}
	else
	{

	    new vehicleid = GetPlayerVehicleID(playerid);

		new
			iBusinessID,
			iPumpID;

		GetClosestGasPump(playerid, iBusinessID, iPumpID);

        if (iBusinessID == INVALID_BUSINESS_ID) return SendClientMessageEx(playerid, COLOR_RED, "Ban khong o tram xang.");
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_RED, "Ban khong o tren chiec xe.");
		if (!Businesses[iBusinessID][bStatus]) return SendClientMessageEx(playerid, COLOR_RED, "Tram xang da dong cua.");
		if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_RED, "Ban khong phai la nguoi lai xe.");
		if (IsVIPcar(vehicleid)) return SendClientMessageEx(playerid, COLOR_RED, "Day la chiec xe VIP khong gioi han nhien lieu, ban khong the do xang cho chiec xe nay.");
		if (IsFamedVeh(vehicleid)) return SendClientMessageEx(playerid, COLOR_RED, "Day la chiec xe khong gioi han nhien lieu, ban khong the do xang cho chiec xe nay.");
		if (IsAdminSpawnedVehicle(vehicleid)) return SendClientMessageEx(playerid, COLOR_RED, "Day la chiec xe khong gioi han nhien lieu, ban khong the do xang cho chiec xe nay.");
	    new engine,lights,alarm,doors,bonnet,boot,objective;
    	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	    if(engine == VEHICLE_PARAMS_ON) return SendClientMessageEx(playerid, COLOR_RED, "Ban phai tat may xe truoc khi do xang (/car light).");
     	if (Businesses[iBusinessID][GasPumpGallons][iPumpID] == 0.0) return SendClientMessageEx(playerid, COLOR_RED, "Khong co xang trong tram xang nay.");
	    if (!IsRefuelableVehicle(vehicleid)) return SendClientMessageEx(playerid,COLOR_RED,"Chiec xe nay khong can nhien lieu.");
	    if (VehicleFuel[vehicleid] >= 100.0) return SendClientMessageEx(playerid, COLOR_RED, "Chiec xe nay da nap day binh xang.");
	    if (Businesses[iBusinessID][GasPumpVehicleID][iPumpID] > 0) return SendClientMessageEx(playerid, COLOR_RED, "This gas pump is occupied.");

       	SendClientMessageEx(playerid, COLOR_WHITE, "Dang do xang cho chiec xe cua ban, vui long cho trong giay lat...!");
       	SendClientMessageEx(playerid, COLOR_YELLOW, "Su dung /doxang mot lan nua de dung lai");

		SetPVarInt(playerid, "Refueling", vehicleid);
       	Businesses[iBusinessID][GasPumpSaleGallons][iPumpID] = 0;
       	Businesses[iBusinessID][GasPumpSalePrice][iPumpID] = 0;
       	Businesses[iBusinessID][GasPumpVehicleID][iPumpID] = vehicleid;
       	Businesses[iBusinessID][GasPumpTimer][iPumpID] = SetTimerEx("GasPumpSaleTimer", 200, true, "iii", playerid, iBusinessID, iPumpID);
	}
	return 1;
}



CMD:chapnhan(playerid, params[]) {
	return cmd_accept(playerid, params);
}
CMD:accept(playerid, params[])
{
	new szMessage[128];
	new string[128];
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new giveplayerid;
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lam dieu nay khi dang trong su kien Hunger Games!");
    if(IsPlayerConnected(playerid)) {
        if(isnull(params)) {
            SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /chapnhan [name]");
            SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Sex, Vatlieu, Crack, Pot, Vukhi, Craft, Suaxe, Luatsu, Bodyguard, Congviec, Live, Refill");
            SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Firework, Group, Family, Boxing, Medic, suaxe, Ticket, Xe, Chet, Dicebet");
            SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Cuahang, Item, Offer, Heroin, Rawopium, Syringes, Rimkit, Voucher");
            return 1;
        }
		if(strcmp(params, "dicebet", true) == 0)
		{
		    if(DiceOffer[playerid] != INVALID_PLAYER_ID)
			{
		        if(GetPlayerMoney(playerid) >= DiceAmount[playerid])
		        {
		        	if(IsPlayerConnected(DiceOffer[playerid]))
					{
						if(!ProxDetectorS(8.0, DiceOffer[playerid], playerid))
						{
							return SendClientMessageEx(playerid, -1, "{AA3333}[!]{FFFFFF} Ban khong o gan nguoi do.");
						}
						if(GetPlayerMoney(DiceOffer[playerid]) < DiceAmount[playerid])
						{
						    SendClientMessageEx(playerid, -1, "{AA3333}[!]{FFFFFF} Nguoi do khong co du tien dat coc.");
						    return 1;
						}
						format(string, sizeof(string), "* Ban da chap nhan dice bet voi %s - Muc cuoc: $%s.", GetPlayerNameEx(DiceOffer[playerid]), number_format(DiceAmount[playerid]));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s da chap nhan loi moi dice bet voi ban - Muc cuoc: $%s.", GetPlayerNameEx(playerid), number_format(DiceAmount[playerid]));
						SendClientMessageEx(DiceOffer[playerid], COLOR_LIGHTBLUE, string);

						new rand1 = Random(1, 6), rand2 = Random(1, 6), rand3 = Random(1, 6);
						new randex1 = Random(1, 6), randex2 = Random(1, 6), randex3 = Random(1, 6);
						new tongdiem1 = rand1 + rand2 + rand3;
						new tongdiem2 = randex1 + randex2 + randex3;

						format(string, sizeof(string), "{FF8000}** {C2A2DA}%s da do xuc xac duoc %d diem (%d + %d + %d).", GetPlayerNameEx(playerid), tongdiem1, rand1, rand2, rand3);
						ProxDetector(9.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        		format(string, sizeof(string), "{FF8000}** {C2A2DA}Ban da do xuc xac duoc %d diem (%d + %d + %d).", tongdiem1, rand1, rand2, rand3);
		        		SendClientMessageEx(playerid, -1, string);
		        		format(string, sizeof(string), "{FF8000}** {C2A2DA}%s da do xuc xac duoc %d diem (%d + %d + %d).", GetPlayerNameEx(DiceOffer[playerid]), tongdiem2, randex1, randex2, randex3);
		        		ProxDetector(9.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        		format(string, sizeof(string), "{FF8000}** {C2A2DA}Ban da do xuc xac duoc %d diem (%d + %d + %d).", tongdiem2, randex1, randex2, randex3);
		        		SendClientMessageEx(DiceOffer[playerid], -1, string);
		        		if(tongdiem1 == tongdiem2)
		        		{
		        			format(string, sizeof(string), "{33CCFF}[!]{FFFFFF} Ban co diem xuc xac bang voi %s.", GetPlayerNameEx(DiceOffer[playerid]));
				    		SendClientMessageEx(playerid, -1, string);
				    		format(string, sizeof(string), "{33CCFF}[!]{FFFFFF} Ban co diem xuc xac bang voi %s.", GetPlayerNameEx(playerid));
				    		SendClientMessageEx(DiceOffer[playerid], -1, string);
				    		DeletePVar(DiceOffer[playerid], "MoiXucXac");
				    		DiceOffer[playerid] = INVALID_PLAYER_ID;
				    		DiceAmount[playerid] = 0;
		        		}
		        		else if(tongdiem1 > tongdiem2)
		        		{
		        			format(string, sizeof(string), "{33CCFF}[!]{FFFFFF} Ban co diem xuc xac lon hon %s, ban thang va nhan duoc $%s.", GetPlayerNameEx(DiceOffer[playerid]), number_format(DiceAmount[playerid]));
				    		SendClientMessageEx(playerid, -1, string);
				    		format(string, sizeof(string), "{33CCFF}[!]{FFFFFF} Ban co diem xuc xac nho hon %s, ban thua va bi mat $%s.", GetPlayerNameEx(playerid), number_format(DiceAmount[playerid]));
				    		SendClientMessageEx(DiceOffer[playerid], -1, string);
				    		PlayerInfo[playerid][pCash] += DiceAmount[playerid];
				    		PlayerInfo[DiceOffer[playerid]][pCash] -= DiceAmount[playerid];
				    		DeletePVar(DiceOffer[playerid], "MoiXucXac");
				    		DiceOffer[playerid] = INVALID_PLAYER_ID;
				    		DiceAmount[playerid] = 0;
		        		}
		        		else if(tongdiem2 > tongdiem1)
		        		{
		        			format(string, sizeof(string), "{33CCFF}[!]{FFFFFF} Ban co diem xuc xac lon hon %s, ban thang va nhan duoc $%s.", GetPlayerNameEx(playerid), number_format(DiceAmount[playerid]));
				    		SendClientMessageEx(DiceOffer[playerid], -1, string);
				    		format(string, sizeof(string), "{33CCFF}[!]{FFFFFF} Ban co diem xuc xac nho hon %s, ban thua va bi mat $%s.", GetPlayerNameEx(DiceOffer[playerid]), number_format(DiceAmount[playerid]));
				    		SendClientMessageEx(playerid, -1, string);
				    		PlayerInfo[playerid][pCash] -= DiceAmount[playerid];
				    		PlayerInfo[DiceOffer[playerid]][pCash] += DiceAmount[playerid];
				    		DeletePVar(DiceOffer[playerid], "MoiXucXac");
				    		DiceOffer[playerid] = INVALID_PLAYER_ID;
				    		DiceAmount[playerid] = 0;
		        		}
					}
					else SendClientMessageEx(playerid, -1, "{AA3333}[!]{FFFFFF} Nguoi do da mat ket noi.");
				}
				else SendClientMessageEx(playerid, -1, "{AA3333}[!]{FFFFFF} Ban khong co du tien de choi xuc xac.");
			}
			else SendClientMessageEx(playerid, -1, "{AA3333}[!]{FFFFFF} Ban khong co loi moi choi xuc xac nao ca.");
		}
        if(strcmp(params,"drink",true) == 0) {
            if((DrinkOffer[playerid] != INVALID_PLAYER_ID) && (IsPlayerConnected(DrinkOffer[playerid]))) {
                if (ProxDetectorS(8.0, playerid, DrinkOffer[playerid])) {
                    ShowPlayerDialog(playerid, DRINKLISTDIALOG, DIALOG_STYLE_LIST, "Cac loai bia", "Beer ($60)\nVodka ($100)\nWhiskey ($100)\nWater ($20)\nSoda($20)", "Purchase", "Tu choi");
                }
                else {
                    SendClientMessageEx(playerid, COLOR_GREY, " Ban khong gan nguoi ban bia.");
                    DrinkOffer[playerid] = INVALID_PLAYER_ID;
                    return 1;
                }
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, " Khong ai ban bia cho ban ca.");
                return 1;
            }
        }
        if(strcmp(params, "cuahang", true) == 0)
		{
	        if (!GetPVarType(playerid, "Business_Inviter")) {
       	 		return SendClientMessageEx(playerid, COLOR_GREY, "Khong ai moi ban tham gia kinh doanh!");
			}
			if (PlayerInfo[playerid][pBusiness] != INVALID_BUSINESS_ID) {
				return SendClientMessageEx(playerid, COLOR_GREY, "Ban dang o trong mot doanh nghiep khac. Truoc tien, ban phai tu chuc truoc khi chap nhan loi de nghi nay.");
			}
			if (GetPVarInt(playerid,"Business_InviterSQLId") != GetPlayerSQLId(GetPVarInt(playerid, "Business_Inviter"))) {
				return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi ma ban moi da bi mat ket noi.");
			}
			PlayerInfo[playerid][pBusiness] = GetPVarInt(playerid, "Business_Invited");
			PlayerInfo[playerid][pBusinessRank] = 0;
            format(string, sizeof(string), "* Ban da chap nhan loi moi tham gia %s, ban duoc moi %s %s.", Businesses[GetPVarInt(playerid, "Business_Invited")][bName], GetPlayerNameEx(GetPVarInt(playerid, "Business_Inviter")));
            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
            format(string, sizeof(string), "* %s da chap nhan loi moi cua ban va tham gia %s", GetPlayerNameEx(playerid),Businesses[GetPVarInt(playerid, "Business_Invited")][bName]);
            SendClientMessageEx(GetPVarInt(playerid, "Business_Inviter"), COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s da chap nhan %s's moi tham gia %s", GetPlayerNameEx(playerid), GetPlayerNameEx(GetPVarInt(playerid, "Business_Inviter")), Businesses[GetPVarInt(playerid, "Business_Invited")][bName]);
			Log("logs/business.log", string);
   			DeletePVar(playerid, "Business_Inviter");
      		DeletePVar(playerid, "Business_Invited");
   		}
        if(strcmp(params, "vukhi", true) == 0)
		{
			if (!GetPVarType(playerid, "Business_WeapOfferer"))	{
		        return SendClientMessageEx(playerid, COLOR_GREY, "Khong ai co the cung cap cho ban mot vu khi!");
			}
		    new offerer = GetPVarInt(playerid, "Business_WeapOfferer"), business = PlayerInfo[offerer][pBusiness];
			if (GetPlayerSQLId(offerer) != GetPVarInt(playerid, "Business_WeapOffererSQLId")) {
   				return SendClientMessage(playerid, COLOR_GRAD2, "Nguoi choi da mat ket noi!");
			}
            if(!ProxDetectorS(5.0, playerid, offerer)) {
       	        SendClientMessageEx(playerid, COLOR_GREY, "Ban ban sung khong o gan ban!");
       	        return 1;
            }
		    if(GetPVarInt(playerid, "IsInArena") >= 0) {
				SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay tai dau truong!");
				return 1;
			}
		    if (GetPlayerCash(playerid) < GetPVarInt(playerid, "Business_WeapPrice")) {
			    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co kha nang vu khi");
			    return 1;
		    }
		    if (Businesses[business][bInventory] < GetWeaponParam(GetPVarInt(playerid, "Business_WeapType"), WeaponMats)) {
				SendClientMessage(playerid, COLOR_GRAD2, "Cua hang khong co tham nua");
				return 1;
		    }
			if(GetPVarType(playerid, "PlayerCuffed") || GetPVarType(playerid, "Injured") || GetPVarType(playerid, "IsFrozen")) {
   				SendClientMessage(playerid, COLOR_GRAD2, "Ban khong the lam dieu do vao thoi diem nay!");
   				return 1;
			}

		    Businesses[business][bTotalSales]++;
		    Businesses[business][bLevelProgress]++;
		    Businesses[business][bSafeBalance] += TaxSale(GetPVarInt(playerid, "Business_WeapPrice"));
  			GivePlayerCash(playerid, -GetPVarInt(playerid, "Business_WeapPrice"));
		    Businesses[business][bInventory] -= GetWeaponParam(GetPVarInt(playerid, "Business_WeapType"), WeaponMats);
		    SaveBusiness(business);

            format(string, sizeof(string), "   Ban da ban %s mot %s.", GetPlayerNameEx(playerid),Weapon_ReturnName(GetPVarInt(playerid, "Business_WeapType")));
            SendClientMessageEx(offerer, COLOR_GRAD1, string);
            format(string, sizeof(string), "   Ban nhan duoc mot %s tu %s.", Weapon_ReturnName(GetPVarInt(playerid, "Business_WeapType")), GetPlayerNameEx(offerer));
            SendClientMessageEx(playerid, COLOR_GRAD1, string);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            PlayerPlaySound(offerer, 1052, 0.0, 0.0, 0.0);
            format(string, sizeof(string), "* %s tao ra mot khau sung tu vat lieu va dua cho %s.", GetPlayerNameEx(offerer), GetPlayerNameEx(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            GivePlayerValidWeapon(playerid,GetPVarInt(playerid, "Business_WeapType"),50000);

			format(string, sizeof(string), "%s %s (IP: %s) has sold a %s to %s (IP: %s) for $%d in %s (%d)", GetBusinessRankName(PlayerInfo[offerer][pBusinessRank]), GetPlayerNameEx(offerer), GetPlayerIpEx(offerer), Weapon_ReturnName(GetPVarInt(playerid, "Business_WeapType")), GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), GetPVarInt(playerid, "Business_WeapPrice"), Businesses[business][bName], business);
			Log("logs/business.log", string);

  		    DeletePVar(playerid, "Business_WeapPrice");
		    DeletePVar(playerid, "Business_WeapType");
		    DeletePVar(playerid, "Business_WeapOfferer");
		    DeletePVar(playerid, "Business_WeapOffererSQLId");
		}

        if(strcmp(params, "item", true) == 0) {

			if (!GetPVarType(playerid, "Business_ItemOfferer")) {
		        SendClientMessageEx(playerid, COLOR_GREY, "Khong ai cung cap cho ban item!");
		        return 1;
			}

		    new offerer = GetPVarInt(playerid, "Business_ItemOfferer");
		    new item = GetPVarInt(playerid, "Business_ItemType");
		    new price = GetPVarInt(playerid, "Business_ItemPrice");
			new business = InBusiness(playerid);

			if (business == INVALID_BUSINESS_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Ban khong phai la o trong cua hang kinh doanh!");
   				return 1;
			}
			if (GetPlayerSQLId(offerer) != GetPVarInt(playerid, "Business_ItemOffererSQLId")) {
   				SendClientMessage(playerid, COLOR_GRAD2, "Nguoi cho da ngat ket noi!");
   				return 1;
			}
		    if (GetPlayerCash(playerid) < price) {
			    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du tien de mua item!");
			    return 1;
		    }
			if (!Businesses[business][bItemPrices][item]) {
			    SendClientMessageEx(playerid, COLOR_GRAD4, "Item is not for sale anymore.");
			    return 1;
			}
		 	if (Businesses[business][bInventory] < 1) {
	   	 		SendClientMessageEx(playerid, COLOR_GRAD2, "Cua hang da khong co item nao nua!");
	   	 		return 1;
			}
			if (GetPVarInt(playerid, "Business_ItemPrice") != Businesses[business][bItemPrices][item]) {
			    SendClientMessageEx(playerid, COLOR_GRAD4, "Mua khong thanh cong vi gia cho mat hang nay da thay doi.");
			    return 1;
			}

			if(item == ITEM_ILOCK || item == ITEM_ALOCK || item == ITEM_ELOCK)
   			{
      			if(Businesses[business][bInventory] >= StoreItemCost[item][ItemValue])
	        	{

					SetPVarInt(playerid, "lockcost", price);
     				SetPVarInt(playerid, "businessid", business);
	        		SetPVarInt(playerid, "item", item);
		        	SetPVarInt(playerid, "playersold", item);
			        GivePlayerStoreItem(playerid, 1, business, item+1, price);
				}
				else return SendClientMessageEx(playerid, COLOR_GRAD2, "Cac cua hang khong co du chung khoan cho item do!");
    		}
  			else GivePlayerStoreItem(playerid, 1, business, item+1, price);
		}
        if(strcmp(params, "car", true) == 0) {

		    new offerer = GetPVarInt(playerid, "Business_VehicleOfferer");
		    new price = GetPVarInt(playerid, "Business_VehiclePrice");
		    new slot = GetPVarInt(playerid, "Business_VehicleSlot");
		    new businessid = PlayerInfo[offerer][pBusiness];

			if (!GetPVarType(playerid, "Business_VehicleOfferer")) {
		        SendClientMessageEx(playerid, COLOR_GREY, "Ban ai cung cap cho ban chiec xe!");
		        return 1;
			}

			if (GetPlayerSQLId(offerer) != GetPVarInt(playerid, "Business_VehicleOffererSQLId")) {
   				SendClientMessage(playerid, COLOR_GRAD2, "Ben de nghi da bi bat ket noi!");
   				return 1;
			}
		    if (GetPlayerCash(playerid) < price) {
			    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co tien de trao doi xe do!");
			    return 1;
		    }

            new playervehicleid = GetPlayerFreeVehicleId(playerid);

			if(!vehicleCountCheck(playerid)) {
				return SendClientMessage(playerid, COLOR_GRAD2, "Ban khong co so huu phuong tien nao.");
			}
			if(!vehicleSpawnCountCheck(playerid)) {
				return SendClientMessage(playerid, COLOR_GRAD2, "Ban co qua nhieu phuong dat ra - cua hang dau tien.");
			}
            PlayerVehicleInfo[playerid][playervehicleid][pvId] = Businesses[businessid][bVehID][slot];
            PlayerVehicleInfo[playerid][playervehicleid][pvModelId] = Businesses[businessid][bModel][slot];
            PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = Businesses[businessid][bParkPosX][slot];
            PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = Businesses[businessid][bParkPosY][slot];
            PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = Businesses[businessid][bParkPosZ][slot];
            PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = Businesses[businessid][bParkAngle][slot];
            PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] = 1;
            Businesses[businessid][DealershipVehStock][slot] = 0;
            VehicleSpawned[playerid]++;

		    g_mysql_SaveVehicle(playerid, playervehicleid);

    		Businesses[businessid][bSafeBalance] += TaxSale(GetPVarInt(playerid, "Business_ItemPrice"));
			GivePlayerCash(playerid, -GetPVarInt(playerid, "Business_VehiclePrice"));
			if (PlayerInfo[playerid][pBusiness] != PlayerInfo[offerer][pBusiness]) Businesses[businessid][bLevelProgress]++;
			SaveBusiness(businessid);
			OnPlayerStatsUpdate(playerid);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);

			DeletePVar(playerid, "Business_VehiclePrice");
			DeletePVar(playerid, "Business_VehicleOfferer");
			DeletePVar(playerid, "Business_VehicleOffererSQLId");
			DeletePVar(playerid, "Business_VehicleSlot");
        }

       	if(strcmp(params, "chet", true) == 0) {
            if(GetPVarInt(playerid, "Injured") == 1)
			{
				if(GetPVarInt(playerid, "ThoiGianChet") > 0)
				{
					format(string, sizeof(string), "Ban phai doi %d giay moi co the tu bo hy vong song", GetPVarInt(playerid, "ThoiGianChet"));
					SendClientMessageEx(playerid,COLOR_GREY,string);
					return 1;
				}
				PlayerTextDrawHide(playerid, NotiEms[playerid]);
                SendClientMessageEx(playerid, COLOR_WHITE, "Ban tu bo hi vong song sot! Ban da ngay lap tuc duoc dua den benh vien de kham nghiem tu thi.");
                KillEMSQueue(playerid);
                format(string, sizeof(string), "CAP CUU: %s (%i) da tu vong tai cho vi khong co ai den cuu.",GetPlayerNameEx(playerid), playerid);
				SendGroupMessage(3, TEAM_MED_COLOR, string);
                PlayerInfo[playerid][pChetne] = 0;
                ResetPlayerWeaponsEx(playerid);
                SpawnPlayer(playerid);
            }
            else {  SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong bi chan thuong, ban khong the lam dieu nay bay gio !"); }
        }
        if(strcmp(params, "xe", true) == 0) {
            if(VehicleOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(VehicleOffer[playerid])) {
                    if(GetPlayerCash(playerid) > VehiclePrice[playerid]) {
                        if(IsPlayerInVehicle(VehicleOffer[playerid], PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId])) {
                            if(!ProxDetectorS(8.0, VehicleOffer[playerid], playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o gan cac dai ly xe hoi");
                            new playervehicleid = GetPlayerFreeVehicleId(playerid);

			 				if(!vehicleCountCheck(playerid)) {
								return SendClientMessage(playerid, COLOR_GRAD2, "Ban khong the so huu bat ky phuong tien nao.");
							}
   							if(!vehicleSpawnCountCheck(playerid)) {
								return SendClientMessage(playerid, COLOR_GRAD2, "Ban da co rat nhieu phuong tien duoc dat ra - cua hang dau tien.");
							}

                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(VehicleOffer[playerid], ipex, sizeof(ipex));
                            format(szMessage, sizeof(szMessage), "[CAR] %s (IP: %s) da tra $%s cho %s cho %s (IP: %s)", GetPlayerNameEx(playerid), ip, number_format(VehiclePrice[playerid]), GetPlayerNameEx(VehicleOffer[playerid]), GetVehicleName(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]), ipex);
                            Log("logs/pay.log", szMessage);
                            GetPlayerName(VehicleOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(szMessage, sizeof(szMessage), "* Ban mua xe %s voi gia $%s, tu %s. (Su dung /carhelp de biet them thong tin)", GetVehicleName(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]), number_format(VehiclePrice[playerid]), giveplayer);
                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                            format(szMessage, sizeof(szMessage), "* Ban da ban %s cho %s voi gia $%s.",GetVehicleName(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]), sendername, number_format(VehiclePrice[playerid]));
                            SendClientMessageEx(VehicleOffer[playerid], COLOR_LIGHTBLUE, szMessage);
							GivePlayerCashEx(VehicleOffer[playerid], TYPE_ONHAND, VehiclePrice[playerid]);
							GivePlayerCashEx(playerid, TYPE_ONHAND, -VehiclePrice[playerid]);
                            /*GivePlayerCash( VehicleOffer[playerid], VehiclePrice[playerid] );
                            GivePlayerCash(playerid, -VehiclePrice[playerid]);*/
                            RemovePlayerFromVehicle(VehicleOffer[playerid]);
                            new Float:slx, Float:sly, Float:slz;
                            GetPlayerPos(VehicleOffer[playerid], slx, sly, slz);
                            SetPlayerPos(VehicleOffer[playerid], slx, sly, slz+2);
                            PlayerVehicleInfo[playerid][playervehicleid][pvId] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId];
                            PlayerVehicleInfo[playerid][playervehicleid][pvModelId] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvModelId];
                            PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosX];
                            PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosY];
                            PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosZ];
                            PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosAngle];
                            PlayerVehicleInfo[playerid][playervehicleid][pvLock] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLock];
							PlayerVehicleInfo[playerid][playervehicleid][pvHealth] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvHealth];
							PlayerVehicleInfo[playerid][playervehicleid][pvBug] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvBug];
                            PlayerVehicleInfo[playerid][playervehicleid][pvLocked] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLocked];
                            PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPaintJob];
                            PlayerVehicleInfo[playerid][playervehicleid][pvColor1] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor1];
                            PlayerVehicleInfo[playerid][playervehicleid][pvColor2] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor2];
                            PlayerVehicleInfo[playerid][playervehicleid][pvAllowedPlayerId] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowedPlayerId];
                            PlayerVehicleInfo[playerid][playervehicleid][pvPark] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPark];
                            PlayerVehicleInfo[playerid][playervehicleid][pvVW] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvVW];
                            PlayerVehicleInfo[playerid][playervehicleid][pvInt] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvInt];
							PlayerVehicleInfo[playerid][playervehicleid][pvWeapons][0] = 0;
							PlayerVehicleInfo[playerid][playervehicleid][pvWeapons][1] = 0;
							PlayerVehicleInfo[playerid][playervehicleid][pvWeapons][2] = 0;
							PlayerVehicleInfo[playerid][playervehicleid][pvPlate] = 0;
							PlayerVehicleInfo[playerid][playervehicleid][pvTicket] = 0;
                            PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] = 1;
							VehicleSpawned[playerid]++;
                            for(new m = 0; m < MAX_MODS; m++) {
                                PlayerVehicleInfo[playerid][playervehicleid][pvMods][m] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvMods][m];
                            }

        					format(szMessage, sizeof(szMessage), "INSERT INTO `vehicles` (`sqlID`) VALUES ('%d')", GetPlayerSQLId(playerid));
							mysql_function_query(MainPipeline, szMessage, true, "OnQueryCreateVehicle", "ii", playerid, playervehicleid);

							format(szMessage, sizeof(szMessage), "DELETE FROM `vehicles` WHERE `id` = '%d'", PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvSlotId]);
							mysql_function_query(MainPipeline, szMessage, false, "OnQueryFinish", "ii", SENDDATA_THREAD, VehicleOffer[playerid]);

							PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvSlotId] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvModelId] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosX] = 0.0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosY] = 0.0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosZ] = 0.0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosAngle] = 0.0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLock] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLocked] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPaintJob] = -1;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor1] = 0;
							PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvImpounded] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor2] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowedPlayerId] = INVALID_PLAYER_ID;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPark] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvSpawned] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvVW] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvInt] = 0;
							PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvWeapons][0] = 0;
							PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvWeapons][1] = 0;
							PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvWeapons][2] = 0;
							PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPlate] = 0;
							PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvTicket] = 0;
                            VehicleSpawned[VehicleOffer[playerid]]--;
                            for(new m = 0; m < MAX_MODS; m++) {
                                PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvMods][m] = 0;
                            }

                            VehicleOffer[playerid] = INVALID_PLAYER_ID;
                            VehiclePrice[playerid] = 0;
                            return 1;
                        }
                        else {
                            SendClientMessageEx(playerid, COLOR_GREY, "   The Car Dealer is not in the offered car!");
                            return 1;
                        }
                    }
                    else {
                        SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the su dung xe!");
                        return 1;
                    }
                }
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai duoc cung cap de mua xe moi!");
                return 1;
            }
        }
        if(strcmp(params, "nha", true) == 0)
		{
            if(HouseOffer[playerid] != INVALID_PLAYER_ID)
			{
                if(IsPlayerConnected(HouseOffer[playerid]))
				{
                    if(HouseInfo[House[playerid]][hOwnerID] != GetPlayerSQLId(HouseOffer[playerid])) return SendClientMessageEx(playerid, COLOR_GREY, "Ho khong so huu can nha do.");
					if(House[playerid] == INVALID_HOUSE_ID) return SendClientMessageEx(playerid, COLOR_RED, "Error: Khong xac dinh duoc ngoi nha.");
                    if(GetPlayerCash(playerid) > HousePrice[playerid])
					{
                        ClearHouse(House[playerid]);
                        HouseInfo[House[playerid]][hLock] = 1;
                        format(HouseInfo[House[playerid]][hOwnerName], 128, "Nobody");
						HouseInfo[House[playerid]][hOwnerID] = -1;
                        sendername = GetPlayerNameEx(HouseOffer[playerid]);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        format(szMessage, sizeof(szMessage), "~w~Xin chuc mung~n~ Ban da ban tai san voi gia ~n~~g~$%d", HousePrice[playerid]);
                        GameTextForPlayer(HouseOffer[playerid], szMessage, 4000, 3);
                        if(House[playerid] == PlayerInfo[HouseOffer[playerid]][pPhousekey])
						{
							PlayerInfo[HouseOffer[playerid]][pPhousekey] = INVALID_HOUSE_ID;
							PlayerInfo[playerid][pPhousekey] = House[playerid];
						}
                        else
						{
							PlayerInfo[HouseOffer[playerid]][pPhousekey2] = INVALID_HOUSE_ID;
							PlayerInfo[playerid][pPhousekey2] = House[playerid];
						}
						Homes[HouseOffer[playerid]]--;
						Homes[playerid]++;
                        GivePlayerCash(HouseOffer[playerid],HousePrice[playerid]);
						OnPlayerStatsUpdate(HouseOffer[playerid]);

						HouseInfo[House[playerid]][hOwnerID] = GetPlayerSQLId(playerid);
                        HouseInfo[House[playerid]][hOwned] = 1;
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        strmid(HouseInfo[House[playerid]][hOwnerName], sendername, 0, strlen(sendername), 255);
                        GivePlayerCash(playerid,-HousePrice[playerid]);
                        SendClientMessageEx(playerid, COLOR_WHITE, "Chuc mung ban da co ngoi nha moi!");
                        SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /help de xem tro giup nha cua ban!");
                        SaveHouse(House[playerid]);
                        OnPlayerStatsUpdate(playerid);
						ReloadHouseText(House[playerid]);

                        new ip[32], ipex[32];
                        GetPlayerIp(HouseOffer[playerid], ip, sizeof(ip));
                        GetPlayerIp(playerid, ipex, sizeof(ipex));
                        format(szMessage,sizeof(szMessage),"%s (IP: %s) da ban can nha cho (ID %d) to %s (IP: %s) for $%s.", GetPlayerNameEx(HouseOffer[playerid]), ip, House[playerid], GetPlayerNameEx(playerid), ipex, number_format(HousePrice[playerid]));
                        Log("logs/house.log", szMessage);

                        HouseOffer[playerid] = INVALID_PLAYER_ID;
                        HousePrice[playerid] = 0;
                        House[playerid] = INVALID_HOUSE_ID;
						return 1;
                    }
                    else
					{
                        SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong du kha nang tien de mua nha!");
                        HouseOffer[playerid] = INVALID_PLAYER_ID;
                        HousePrice[playerid] = 0;
                        House[playerid] = INVALID_HOUSE_ID;
                        return 1;
                    }
                }
				else return SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi ban nha da bi mat ket noi!");
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai de nghi mua mot ngoi nha!");
        }
        else if(strcmp(params, "battay", true) == 0) {
            new
                Count;

            foreach(new i: Player)
			{
                if(GetPVarType(i, "shrequest") && GetPVarInt(i, "shrequest") == playerid) {
                    new
                        Float: ppFloats[3];

                    GetPlayerPos(i, ppFloats[0], ppFloats[1], ppFloats[2]);

                    if(!IsPlayerInRangeOfPoint(playerid, 5, ppFloats[0], ppFloats[1], ppFloats[2]) || Spectating[i] > 0) {
                        Count++;
                        SendClientMessageEx(playerid, COLOR_WHITE, "Ban dang qua xa. Ban khong the chap nhan bat tay ngay bay gio");
                    }
                    else {
                        switch(GetPVarInt(i, "shstyle")) {
                            case 1:
                            {
                                Count++;
                                PlayerFacePlayer( playerid, i );
                                ApplyAnimation( playerid, "GANGS", "hndshkaa", 4.0, 1, 1, 1, 0, 1000 );
                                ApplyAnimation( i, "GANGS", "hndshkaa", 4.0, 1, 1, 1, 0, 1000 );
                                DeletePVar(i, "shrequest");
                                format(szMessage, sizeof(szMessage), "* %s da bat tay voi %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                                ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                DeletePVar(i, "shstyle");
                            }
                            case 2:
                            {
                                Count++;
                                PlayerFacePlayer( playerid, i );
                                ApplyAnimation( playerid, "GANGS", "hndshkba", 4.0, 1, 1, 1, 0, 1000 );
                                ApplyAnimation( i, "GANGS", "hndshkba", 4.0, 1, 1, 1, 0, 1000 );
                                DeletePVar(i, "shrequest");
                                format(szMessage, sizeof(szMessage), "* %s da bat tay voi %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                                ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                DeletePVar(i, "shstyle");
                            }
                            case 3:
                            {
                                Count++;
                                PlayerFacePlayer( playerid, i );
                                ApplyAnimation( playerid, "GANGS", "hndshkca", 4.0, 1, 1, 1, 0, 1000 );
                                ApplyAnimation( i, "GANGS", "hndshkca", 4.0, 1, 1, 1, 0, 1000 );
								DeletePVar(i, "shrequest");
                                format(szMessage, sizeof(szMessage), "* %s da bat tay voi %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                                ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                DeletePVar(i, "shstyle");
                            }
                            case 4:
                            {
                                Count++;
                                PlayerFacePlayer( playerid, i );
                                ApplyAnimation( playerid, "GANGS", "hndshkcb", 4.0, 1, 1, 1, 0, 1000 );
                                ApplyAnimation( i, "GANGS", "hndshkca", 4.0, 1, 1, 1, 0, 1000 );
                                DeletePVar(i, "shrequest");
                                format(szMessage, sizeof(szMessage), "* %s da bat tay voi %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                                ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                DeletePVar(i, "shstyle");
                            }
                            case 5:
                            {
                                Count++;
                                PlayerFacePlayer( playerid, i );
                                ApplyAnimation( playerid, "GANGS", "hndshkda", 4.0, 1, 1, 1, 0, 1000 );
                                ApplyAnimation( i, "GANGS", "hndshkca", 4.0, 1, 1, 1, 0, 1000 );
                                DeletePVar(i, "shrequest");
                                format(szMessage, sizeof(szMessage), "* %s da bat tay voi %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                                ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                DeletePVar(i, "shstyle");
                            }
                            case 6:
                            {
                                Count++;
                                PlayerFacePlayer( playerid, i );
                                ApplyAnimation( playerid, "GANGS","hndshkfa_swt", 4.0, 1, 1, 1, 0, 2600 );
                                ApplyAnimation( i, "GANGS","hndshkfa_swt", 4.0, 1, 1, 1, 0, 2600 );
                                DeletePVar(i, "shrequest");
                                format(szMessage, sizeof(szMessage), "* %s da bat tay voi %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                                ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                DeletePVar(i, "shstyle");
                            }
                            case 7:
                            {
                                Count++;
                                PlayerFacePlayer( playerid, i );
                                ApplyAnimation( playerid, "GANGS", "prtial_hndshk_01", 4.0, 1, 1, 1, 0, 1250 );
                                ApplyAnimation( i, "GANGS", "prtial_hndshk_01", 4.0, 1, 1, 1, 0, 1250 );
                                DeletePVar(i, "shrequest");
                                format(szMessage, sizeof(szMessage), "* %s da bat tay voi %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                                ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                DeletePVar(i, "shstyle");
                            }
                            case 8:
                            {
                                Count++;
                                PlayerFacePlayer( playerid, i );
                                ApplyAnimation( playerid, "GANGS", "prtial_hndshk_biz_01", 3.7, 1, 1, 1, 0, 2200 );
                                ApplyAnimation( i, "GANGS", "prtial_hndshk_biz_01", 3.5, 1, 1, 1, 0, 2200 );
                                DeletePVar(i, "shrequest");
                                format(szMessage, sizeof(szMessage), "* %s da bat tay voi %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                                ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                DeletePVar(i, "shstyle");
                            }
                        }
                    }
                }
            }
            if(Count == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co yeu cau bat tay.");
            return 1;
        }
		else if(strcmp(params, "rflteam",true) == 0) {
			if(!GetPVarType(playerid, "RFLTeam_Invite")) return SendClientMessageEx(playerid, COLOR_GREY, "Khong ai de nghi ban tham gia mot nhom.");
			new team = GetPVarInt(playerid, "RFLTeam_Team");
			giveplayerid = GetPVarInt(playerid, "RFLTeam_Inviter");
			DeletePVar(playerid, "RFLTeam_Invite");
			DeletePVar(playerid, "RFLTeam_Team");
			DeletePVar(playerid, "RFLTeam_Inviter");
			PlayerInfo[playerid][pRFLTeam] = team;
			RFLInfo[team][RFLmembers] +=1;
			format(szMessage, sizeof(szMessage), "* Ban la thanh vien cua %s's team. Ban su dung /rflhelp de biet them tro giup.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
			format(szMessage, sizeof(szMessage), "* %s da chap nhan loi moi cua ban.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, szMessage);
			if( GetPVarInt( playerid, "EventToken" ) == 1 ) {
				if( EventKernel[ EventStatus ] == 1 || EventKernel[ EventStatus ] == 2 ) {
					if(EventKernel[EventType] == 3) {
						new Float:X, Float:Y, Float:Z;
						GetPlayerPos( playerid, X, Y, Z );
						format(szMessage, sizeof(szMessage), "Team: %s", RFLInfo[team][RFLname]);
						RFLTeamN3D[playerid] = CreateDynamic3DTextLabel(szMessage,0x008080FF,X,Y,Z,10.0,.attachedplayer = playerid, .worldid = GetPlayerVirtualWorld(playerid));
					}
				}
			}
			OnPlayerStatsUpdate(playerid);
			SaveRelayForLifeTeam(team);
		}
        else if(strcmp(params, "invite", true) == 0)
		{
            if(hInviteOffer[playerid] != INVALID_PLAYER_ID)
			{
                if(IsPlayerConnected(hInviteOffer[playerid]))
				{
	                if(CheckPointCheck(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Xin hay chac chan rang cac diem checkpoint cua ban da bi xoa bo.");
                    format(szMessage, sizeof(szMessage), "* Ban da chap nhan nha %s's , mot checkpoint da duoc thiet lap cho ngoi nha.", GetPlayerNameEx(hInviteOffer[playerid]));
                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                    format(szMessage, sizeof(szMessage), "* %s da chap nha loi moi nha.", GetPlayerNameEx(playerid));
                    SendClientMessageEx(hInviteOffer[playerid], COLOR_LIGHTBLUE, szMessage);
					DisablePlayerCheckpoint(playerid);
                    SetPlayerCheckpoint(playerid, HouseInfo[hInviteHouse[playerid]][hExteriorX], HouseInfo[hInviteHouse[playerid]][hExteriorY], HouseInfo[hInviteHouse[playerid]][hExteriorZ], 4.0);
                    gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
                    hInviteOffer[playerid] = INVALID_PLAYER_ID;
					hInviteHouse[playerid] = INVALID_HOUSE_ID;
                    return 1;
                }
                else
				{
                    hInviteOffer[playerid] = INVALID_PLAYER_ID;
                    hInviteHouse[playerid] = INVALID_HOUSE_ID;
                    SendClientMessageEx(playerid, COLOR_GREY, "Nguoi gui cho ban mot ngoi nha da ngat ket noi.");
                }
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, "Khong co ai gui cho ban nha.");
            return 1;
        }
        else if(strcmp(params, "lyhon", true) == 0) {
            if(DivorceOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(DivorceOffer[playerid])) {
                    if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid])) {
                        GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(szMessage, sizeof(szMessage), "* Ban da dang ky cac giay to ly hon %s, bay gio ban la nguoi doc than.", giveplayer);
                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                        format(szMessage, sizeof(szMessage), "* %s da ky giy ly hon, bay gio ban la nguoi doc than.", sendername);
                        SendClientMessageEx(DivorceOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                        ClearMarriage(playerid);
                        ClearMarriage(DivorceOffer[playerid]);
                        PlayerInfo[playerid][pPhousekey] = INVALID_HOUSE_ID;
                        return 1;
                    }
                    else {
                        SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi gui giay to ly hon khong o gan ban!");
                        return 1;
                    }
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "Khong ai gui cho ban giay to ly hon.");
                return 1;
            }
        }
        else if(strcmp(params, "group", true) == 0) {
            if(GetPVarType(playerid, "Group_Inviter")) {

    			new
					iInviter = GetPVarInt(playerid, "Group_Inviter"),
					iGroupID = PlayerInfo[iInviter][pLeader],
					iRank = PlayerInfo[iInviter][pRank];

				if (PlayerInfo[playerid][pCSFBanned]) {
					if (arrGroupData[iGroupID][g_iGroupType] == 1 || arrGroupData[iGroupID][g_iGroupType] == 3)	{
						SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the tham gia vao nhom nay, ban bi cam vao nhom. Lien he admin de mo khoa.");
						DeletePVar(playerid, "Group_Invite");
						DeletePVar(iInviter, "Group_Invited");
						return 1;
					}
				}

                if(IsPlayerConnected(iInviter) && GetPVarInt(iInviter, "Group_Invited") == playerid && 0 <= iGroupID < MAX_GROUPS) {
					PlayerInfo[playerid][pMember] = iGroupID;
					PlayerInfo[playerid][pRank] = 0;
					PlayerInfo[playerid][pGang] = 0;
					PlayerInfo[playerid][pDivision] = INVALID_DIVISION;

					format(szMessage, sizeof szMessage, "Ban da chap nhan loi moi %s %s's, va bay gio la thanh vien cua %s.", arrGroupRanks[iGroupID][iRank], GetPlayerNameEx(iInviter), arrGroupData[iGroupID][g_szGroupName]);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);

					format(szMessage, sizeof szMessage, "%s da chap nhan ban tham gia.", GetPlayerNameEx(playerid));
					SendClientMessageEx(iInviter, COLOR_LIGHTBLUE, szMessage);

					format(szMessage, sizeof szMessage, "%s chap nhan %s %s's tham gia %s (%d).", GetPlayerNameEx(playerid), arrGroupRanks[iGroupID][iRank], GetPlayerNameEx(iInviter), arrGroupData[iGroupID][g_szGroupName], iGroupID + 1);
					Log("logs/group.log", szMessage);

					DeletePVar(playerid, "Group_Invite");
					DeletePVar(iInviter, "Group_Invited");
                }
				else SendClientMessageEx(playerid, COLOR_GREY, "Nguoi cung cap cho ban loi moi tham gia da mat ket noi.");
            }
            else SendClientMessageEx(playerid, COLOR_GREY, "Khong ai de nghi ban vao nhom.");
        }
        else if(strcmp(params, "family", true) == 0) {
            if(InviteOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(InviteOffer[playerid])) {
                    if(!GetPVarType(playerid, "Group_Inviter") && InviteFamily[playerid] != INVALID_FAMILY_ID) {
                        if(GetPVarInt(playerid, "IsInArena") >= 0) {
                            SendClientMessageEx(playerid, COLOR_WHITE, "Hay doi den khi tran dau arena ket thuc.");
                            return 1;
                        }

                        if(PlayerInfo[playerid][pJailTime] > 1) {
                            SendClientMessageEx(playerid, COLOR_WHITE, "Hay doi toi khi ban ra tu moi co the chap nhan loi moi.");
                            return 1;
                        }

                        if( PlayerInfo[playerid][pFMember] != INVALID_FAMILY_ID || PlayerInfo[playerid][pMember] >= 0 || PlayerInfo[playerid][pLeader] >= 0 ) {
                            SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the chap nhan dieu nay khi ban dang trong mot family.");
                        }
                        else {
                            PlayerInfo[playerid][pFMember] = InviteFamily[playerid];
                            PlayerInfo[playerid][pRank] = 0;
                            PlayerInfo[playerid][pDivision] = 0;
                            FamilyInfo[InviteFamily[playerid]][FamilyMembers] ++;
							SaveFamily(InviteFamily[playerid]);
                            format(szMessage, sizeof(szMessage), "   Ban da chap nhan loi moi tham gia %s, ban duoc moi boi %s.", FamilyInfo[InviteFamily[playerid]][FamilyName], GetPlayerNameEx(InviteOffer[playerid]));
                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                            format(szMessage, sizeof(szMessage), "   %s da chap nhan loi moi va tham gia %s.", GetPlayerNameEx(playerid),FamilyInfo[InviteFamily[playerid]][FamilyName]);
                            SendClientMessageEx(InviteOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                            SendClientMessageEx(playerid, COLOR_WHITE, "Su dung (/f)amily de chat trong family. Neu ban muon co skin cua family, vao cua hang quan ao /muatrangphuc.");
                            InviteOffer[playerid] = INVALID_PLAYER_ID;
                            InviteFamily[playerid] = INVALID_FAMILY_ID;
                        }
                    }
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai moi ban tham gia family!");
                return 1;
            }
        }
        else if(strcmp(params, "witness", true) == 0) {
            if(MarryWitnessOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(MarryWitnessOffer[playerid])) {
                    if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid])) {
                        GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(szMessage, sizeof(szMessage), "* Ban da chap nhan yeu cau cua %s's de chung kien cuoc hon nhan cua ho.", giveplayer);
                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                        format(szMessage, sizeof(szMessage), "* %sda chap nhan yeu cau lam chung cho cuoc hon nhan cua ban.", sendername);
                        SendClientMessageEx(MarryWitnessOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                        MarryWitness[MarryWitnessOffer[playerid]] = playerid;
                        MarryWitnessOffer[playerid] = INVALID_PLAYER_ID;
                        return 1;
                    }
                    else {
                        SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi yeu cau lam chung cho cuoc hon nhan phai o gan ban!");
                        return 1;
                    }
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai yeu cau ban lam chung cho hon nhan.!");
                return 1;
            }
        }
        else if(strcmp(params, "kethon", true) == 0) {
            if(ProposeOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(ProposeOffer[playerid])) {
                    if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid])) {
                        if(MarryWitness[ProposeOffer[playerid]] == INVALID_PLAYER_ID) {
                            SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi de nghi khong co mot nguoi lam chung cho cuoc hon nhan!");
                            return 1;
                        }
                        if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]])) {
                            if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]])) {
                                if(IsPlayerInRangeOfPoint(playerid, 10.0, 1963.9612, -369.1851, 1093.7289)) {
                                    GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
                                    GetPlayerName(playerid, sendername, sizeof(sendername));
                                    format(szMessage, sizeof(szMessage), "* Ban da chap nhan %s's la chong cua ban.", giveplayer);
                                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                                    format(szMessage, sizeof(szMessage), "* %s da chap nhan yeu cau lam vo cua ban.", sendername);
                                    SendClientMessageEx(ProposeOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                                    format(szMessage, sizeof(szMessage), "Priest: %s, da dong y lay %s lam nguoi chong dang yeu cua ban? (Su dung 'yes' de dong y, va cac ky tu khac la tu choi.)", sendername, giveplayer);
                                    SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
                                    MarriageCeremoney[playerid] = 1;
                                    ProposedTo[ProposeOffer[playerid]] = playerid;
                                    GotProposedBy[playerid] = ProposeOffer[playerid];
                                    MarryWitness[ProposeOffer[playerid]] = INVALID_PLAYER_ID;
                                    ProposeOffer[playerid] = INVALID_PLAYER_ID;
                                    return 1;
                                }
                                else {
                                    SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong o nha tho!");
                                    return 1;
                                }
                            }
                            else {
                                SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi lam chung hon nhan khong o gan ban!");
                                return 1;
                            }
                        }
                        return 1;
                    }
                    else {
                        SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi de nghi ket hon khong o gan ban!");
                        return 1;
                    }
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai de xuat cho ban!");
                return 1;
            }
        }
        /*else if(strcmp(params, "ticket", true) == 0) {
            if(TicketOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(TicketOffer[playerid])) {
                    if (ProxDetectorS(5.0, playerid, TicketOffer[playerid])) {
                        if(GetPlayerCash(playerid) >= TicketMoney[playerid]) {
                            //new ip[32], ipex[32];
                            //GetPlayerIp(playerid, ip, sizeof(ip));
                            //GetPlayerIp(TicketOffer[playerid], ipex, sizeof(ipex));
                            //format(szMessage, sizeof(szMessage), "[FACTION TICKET] %s (IP: %s) has paid $%d to %s (IP: %s)", GetPlayerNameEx(playerid), ip, TicketMoney[playerid], GetPlayerNameEx(TicketOffer[playerid]), ipex);
                            // Log("logs/pay.log", szMessage);
                            format(szMessage, sizeof(szMessage), "* Ban da tra tien ve phat $%d cho %s.", TicketMoney[playerid], GetPlayerNameEx(TicketOffer[playerid]));
                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                            format(szMessage, sizeof(szMessage), "* %s da chap nhan mot ve phat $%d.", GetPlayerNameEx(playerid), TicketMoney[playerid]);
                            SendClientMessageEx(TicketOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                            format(szMessage, sizeof(szMessage), "* %s da tra tien ve phat.", GetPlayerNameEx(playerid));
                            ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            GivePlayerCash(playerid, - TicketMoney[playerid]);
                            new money = floatround(TicketMoney[playerid] / 3), iGroupID = PlayerInfo[TicketOffer[playerid]][pMember];
                            Tax += money;
                            arrGroupData[iGroupID][g_iBudget] += money;
                            new str[128], file[32];
			                format(str, sizeof(str), "%s da tra ve phat %s's voi so tien $%d va $%d da duoc gui den %s's quy ngan sach.",GetPlayerNameEx(playerid), GetPlayerNameEx(TicketOffer[playerid]), TicketMoney[playerid], money, arrGroupData[iGroupID][g_szGroupName]);
			                new month, day, year;
							getdate(year,month,day);
							format(file, sizeof(file), "grouppay/%d/%d-%d-%d.log", iGroupID, month, day, year);
							Log(file, str);
                            TicketOffer[playerid] = INVALID_PLAYER_ID;
                            TicketMoney[playerid] = 0;
                            if(GetPlayerCash(playerid) < 1) GivePlayerCash(playerid, 0);
                            return 1;
                        }
                    }
                    else {
                        SendClientMessageEx(playerid, COLOR_GREY, "   Canh sat khong o gan ban!");
                        return 1;
                    }
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai cung cap cho ban ve phat!");
                return 1;
            }
        }*/
        else if(strcmp(params, "boxing", true) == 0) {
            if(BoxOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(BoxOffer[playerid])) {
                    new points;
                    new mypoints;
                    GetPlayerName(BoxOffer[playerid], giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    new level = PlayerInfo[BoxOffer[playerid]][pBoxSkill];
                    if(level >= 0 && level <= 50) { points = 40; }
                    else if(level >= 51 && level <= 100) { points = 50; }
                    else if(level >= 101 && level <= 200) { points = 60; }
                    else if(level >= 201 && level <= 400) { points = 70; }
                    else if(level >= 401) { points = 80; }
                    if(PlayerInfo[playerid][pJob] == 12 || PlayerInfo[playerid][pJob2] == 12) {
                        new clevel = PlayerInfo[playerid][pBoxSkill];
                        if(clevel >= 0 && clevel <= 50) { mypoints = 40; }
                        else if(clevel >= 51 && clevel <= 100) { mypoints = 50; }
                        else if(clevel >= 101 && clevel <= 200) { mypoints = 60; }
                        else if(clevel >= 201 && clevel <= 400) { mypoints = 70; }
                        else if(clevel >= 401) { mypoints = 80; }
                    }
                    else {
                        mypoints = 30;
                    }
                    format(szMessage, sizeof(szMessage), "* Da chap nhan tham gia thi dau Boxing tu %s, va se chien dau voi %d mau.",giveplayer,mypoints);
                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                    format(szMessage, sizeof(szMessage), "* %s da chap nhan thi dau Boxing cua ban, ban se chien dau voi %d mau.",sendername,points);
                    SendClientMessageEx(BoxOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                    if(IsPlayerInRangeOfPoint(playerid,20.0,758.98, -60.32, 1000.78) || IsPlayerInRangeOfPoint(BoxOffer[playerid],20.0,758.98, -60.32, 1000.78)) {
                        ResetPlayerWeapons(playerid);
                        ResetPlayerWeapons(BoxOffer[playerid]);
                        SetPlayerHealth(playerid, mypoints);
                        SetPlayerHealth(BoxOffer[playerid], points);
                        SetPlayerInterior(playerid, 7); SetPlayerInterior(BoxOffer[playerid], 7);
                        SetPlayerPos(playerid, 768.94, -70.87, 1001.56); SetPlayerFacingAngle(playerid, 131.8632);
                        SetPlayerPos(BoxOffer[playerid], 764.35, -66.48, 1001.56); SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
                        TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
                        GameTextForPlayer(playerid, "~r~Vui long doi", 3000, 1); GameTextForPlayer(BoxOffer[playerid], "~r~Vui long doi", 3000, 1);
                        new name[MAX_PLAYER_NAME];
                        new dszMessage[MAX_PLAYER_NAME];
                        new wszMessage[MAX_PLAYER_NAME];
                        GetPlayerName(playerid, name, sizeof(name));
                        format(dszMessage, sizeof(dszMessage), "%s", name);
                        strmid(wszMessage, dszMessage, 0, strlen(dszMessage), 255);
                        if(strcmp(Titel[TitelName] ,wszMessage, true ) == 0 ) {
                            format(szMessage, sizeof(szMessage), "Tin tuc Boxing: Boxing Champion %s se chien dau voi %s, trong 60 giay nua (Tai phong tap Gym).",  sendername, giveplayer);
                            ProxDetector(30.0, playerid, szMessage, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
                            TBoxer = playerid;
                            BoxDelay = 60;
                        }
                        GetPlayerName(BoxOffer[playerid], name, sizeof(name));
                        format(dszMessage, sizeof(dszMessage), "%s", name);
                        strmid(wszMessage, dszMessage, 0, strlen(dszMessage), 255);
                        if(strcmp(Titel[TitelName] ,wszMessage, true ) == 0 ) {
                            format(szMessage, sizeof(szMessage), "Tin tuc Boxing: Boxing Champion %s se chien dau voi %s, trong 60 giay nua (Tai phong tap Gym).",  giveplayer, sendername);
                            ProxDetector(30.0, playerid, szMessage, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
                            TBoxer = BoxOffer[playerid];
                            BoxDelay = 60;
                        }
                        BoxWaitTime[playerid] = 1; BoxWaitTime[BoxOffer[playerid]] = 1;
                        if(BoxDelay < 1) { BoxDelay = 20; }
                        InRing = 1;
                        Boxer1 = BoxOffer[playerid];
                        Boxer2 = playerid;
                        PlayerBoxing[playerid] = 1;
                        PlayerBoxing[BoxOffer[playerid]] = 1;
                        BoxOffer[playerid] = INVALID_PLAYER_ID;
                        return 1;
                    }
                    ResetPlayerWeapons(playerid);
                    ResetPlayerWeapons(BoxOffer[playerid]);
                    SetPlayerHealth(playerid, mypoints);
                    SetPlayerHealth(BoxOffer[playerid], points);
                    SetPlayerInterior(playerid, 5); SetPlayerInterior(BoxOffer[playerid], 5);
                    SetPlayerPos(playerid, 762.9852,2.4439,1001.5942); SetPlayerFacingAngle(playerid, 131.8632);
                    SetPlayerPos(BoxOffer[playerid], 758.7064,-1.8038,1001.5942); SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
                    TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
                    GameTextForPlayer(playerid, "~r~Vui long doi", 3000, 1); GameTextForPlayer(BoxOffer[playerid], "~r~Vui long doi", 3000, 1);
                    new name[MAX_PLAYER_NAME];
                    new dszMessage[MAX_PLAYER_NAME];
                    new wszMessage[MAX_PLAYER_NAME];
                    GetPlayerName(playerid, name, sizeof(name));
                    format(dszMessage, sizeof(dszMessage), "%s", name);
                    strmid(wszMessage, dszMessage, 0, strlen(dszMessage), 255);
                    if(strcmp(Titel[TitelName] ,wszMessage, true ) == 0 ) {
                        format(szMessage, sizeof(szMessage), "Tin tuc Boxing: Boxing Champion %s se chien dau voi %s, trong 60 giay nua (Tai phong tap Gym).",  sendername, giveplayer);
                        ProxDetector(30.0, playerid, szMessage, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
                        TBoxer = playerid;
                        BoxDelay = 60;
                    }
                    GetPlayerName(BoxOffer[playerid], name, sizeof(name));
                    format(dszMessage, sizeof(dszMessage), "%s", name);
                    strmid(wszMessage, dszMessage, 0, strlen(dszMessage), 255);
                    if(strcmp(Titel[TitelName] ,wszMessage, true ) == 0 ) {
                        format(szMessage, sizeof(szMessage), "Tin tuc Boxing: Boxing Champion %s se chien dau voi %s, trong 60 giay nua (Tai phong tap Gym).",  giveplayer, sendername);
                        ProxDetector(30.0, playerid, szMessage, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
                        TBoxer = BoxOffer[playerid];
                        BoxDelay = 60;
                    }
                    BoxWaitTime[playerid] = 1; BoxWaitTime[BoxOffer[playerid]] = 1;
                    if(BoxDelay < 1) { BoxDelay = 20; }
                    InRing = 1;
                    Boxer1 = BoxOffer[playerid];
                    Boxer2 = playerid;
                    PlayerBoxing[playerid] = 1;
                    PlayerBoxing[BoxOffer[playerid]] = 1;
                    BoxOffer[playerid] = INVALID_PLAYER_ID;
                    return 1;
                }
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai cung cap cho ban thach thuc Boxing!");
                return 1;
            }
        }
                                                  // accept taxi
   /*     else if(strcmp(params,"taxi",true) == 0) {
            if(TransportDuty[playerid] != 1) {
                SendClientMessageEx(playerid, COLOR_GREY, "   You are not a Taxi Driver!");
                return 1;
            }
            if(TaxiCallTime[playerid] > 0) {
                SendClientMessageEx(playerid, COLOR_GREY, "   Ban da chap nhan mot taxi call!");
                return 1;
            }
            if(TaxiCall != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(TaxiCall)) {
                	if(taxitime[TaxiCall] == 1 && PlayerInfo[playerid][pMember] != 10 && PlayerInfo[playerid][pLeader] != 10)
					{
					    return SendClientMessageEx(playerid, COLOR_GREY, "You must wait 20 seconds before accepting this call! To recieve priority, join the Taxi Company!");
					}
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
                    format(szMessage, sizeof(szMessage), "* You have accepted the taxi call from %s, you will see the marker until you have reached it.",giveplayer);
                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                    new zone[MAX_ZONE_NAME];
					GetPlayer3DZone(TaxiCall, zone, sizeof(zone));
					format(szMessage, sizeof(szMessage), "* %s can be found at %s.", GetPlayerNameEx(TaxiCall), zone);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                    format(szMessage, sizeof(szMessage), "* Taxi Driver %s has accepted your Taxi Call; please wait at your current position.",sendername);
                    SendClientMessageEx(TaxiCall, COLOR_LIGHTBLUE, szMessage);
                    GameTextForPlayer(playerid, "~w~Taxi Caller~n~~r~Go to the red marker.", 5000, 1);
                    TaxiCallTime[playerid] = 1;
                    TaxiAccepted[playerid] = TaxiCall;
                    TaxiCall = INVALID_PLAYER_ID;
                    return 1;
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Nobody called for a taxi yet!");
                return 1;
            }
        }
        else if(strcmp(params, "bus", true) == 0) {
            if(TransportDuty[playerid] != 2) {
                SendClientMessageEx(playerid, COLOR_GREY, "   You are not a bus driver!");
                return 1;
            }
            if(BusCallTime[playerid] > 0) {
                SendClientMessageEx(playerid, COLOR_GREY, "   Ban da chap nhan mot bus call!");
                return 1;
            }
            if(BusCall != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(BusCall)) {
                    if(CheckPointCheck(playerid)) {
                        SendClientMessageEx(playerid, COLOR_WHITE, "Xin hay chac chan rang cac diem checkpoint cua ban da bi xoa bo.");
                        return 1;
                    }
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
                    format(szMessage, sizeof(szMessage), "* You have accepted the Bus Call from %s, you will see the marker untill you have reached it.",giveplayer);
                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                    new zone[MAX_ZONE_NAME];
					GetPlayer3DZone(BusCall, zone, sizeof(zone));
					format(szMessage, sizeof(szMessage), "* %s can be found at %s.", GetPlayerNameEx(BusCall), zone);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                    format(szMessage, sizeof(szMessage), "* Bus Driver %s has accepted your bus call; please wait at your current position.",sendername);
                    SendClientMessageEx(BusCall, COLOR_LIGHTBLUE, szMessage);
                    new Float:X,Float:Y,Float:Z;
                    GetPlayerPos(BusCall, X, Y, Z);
                    SetPlayerCheckpoint(playerid, X, Y, Z, 5);
                    GameTextForPlayer(playerid, "~w~Bus Caller~n~~r~Goto redmarker", 5000, 1);
                    BusCallTime[playerid] = 1;
                    BusAccepted[playerid] = BusCall;
                    BusCall = INVALID_PLAYER_ID;
                    return 1;
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   No-one called for a Bus yet!");
                return 1;
            }
        }*/
        else if(strcmp(params, "medic", true) == 0) {
            if(IsAMedic(playerid)) {
                if(MedicCallTime[playerid] > 0) {
                    SendClientMessageEx(playerid, COLOR_GREY, "   Ban da chap nhan mot cuoc goi bac si!");
                    return 1;
                }
                if(CheckPointCheck(playerid)) {
                    SendClientMessageEx(playerid, COLOR_WHITE, "Xin hay chac chan rang cac diem checkpoint cua ban da duoc  xoa bo.");
                    return 1;
                }
                if(MedicCall != INVALID_PLAYER_ID) {
                    if(IsPlayerConnected(MedicCall)) {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
                        format(szMessage, sizeof(szMessage), "* Ban da chap nhan cuoc goi bac si tu %s.",giveplayer);
                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Sau 45 giay, diem do tren rada se mat.");
                        format(szMessage, sizeof(szMessage), "* Bac si %s da chap nhan cuoc goi yeu cau bac si cua ban, xin vui long cho doi",sendername);
                        SendClientMessageEx(MedicCall, COLOR_LIGHTBLUE, szMessage);
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(MedicCall, X, Y, Z);
                        SetPlayerCheckpoint(playerid, X, Y, Z, 5);
                        new zone[MAX_ZONE_NAME];
                        GetPlayer3DZone(MedicCall, zone, sizeof(zone));
                        format(szMessage, sizeof(szMessage), "HUONG DAN %s nam o %s", GetPlayerNameEx(MedicCall), zone);
                        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
                        MedicCallTime[playerid] = 1;
                        MedicAccepted[playerid] = MedicCall;
                        MedicCall = INVALID_PLAYER_ID;
                        return 1;
                    }
                }
                else {
                    SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai goi bac si!");
                    return 1;
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai la bac si!");
                return 1;
            }
        }
        else if(strcmp(params, "suaxe", true) == 0) {
            if(!IsAMechanic(playerid)) {
                SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai tho sua xe!");
                return 1;
            }
            if(MechanicCallTime[playerid] > 0) {
                SendClientMessageEx(playerid, COLOR_GREY, "   Ban da chap nhan mot cuoc goi sua xe!");
                return 1;
            }
            if(CheckPointCheck(playerid)) {
                SendClientMessageEx(playerid, COLOR_WHITE, "Xin hay chac chan rang cac diem checkpoint cua ban da bi xoa bo.");
                return 1;
            }
            if(MechanicCall != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(MechanicCall)) {
                    if(playerid == MechanicCall) return 1;
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
                    format(szMessage, sizeof(szMessage), "* You have accepted the Mechanic Call from %s, you have 30 seconds to get there.",giveplayer);
                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* After the 30 Seconds the red marker will dissapear.");
                    format(szMessage, sizeof(szMessage), "* Car Mechanic %s has accepted your Mechanic Call, please wait at your current position.",sendername);
                    SendClientMessageEx(MechanicCall, COLOR_LIGHTBLUE, szMessage);
                    new Float:X,Float:Y,Float:Z;
                    GetPlayerPos(MechanicCall, X, Y, Z);
                    SetPlayerCheckpoint(playerid, X, Y, Z, 5);
                    GameTextForPlayer(playerid, "~w~Mechanic Caller~n~~r~Go to the red marker", 5000, 1);
                    MechanicCallTime[playerid] = 1;
                    MechanicCall = INVALID_PLAYER_ID;
                    return 1;
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   No-one called for a Car Mechanic yet!");
                return 1;
            }
        }
		else if(strcmp(params, "congviec", true) == 0) {
            if(GettingJob[playerid] > 0) {
                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da nhan duoc cong viec, su dung lenh [/trogiup] de tham khao them.");
                PlayerInfo[playerid][pJob] = GettingJob[playerid];
                GettingJob[playerid] = 0;
                return 1;
            }
            if(GettingJob2[playerid] > 0) {
                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Congratulations with your new Job, type /help to see your new command.");
                SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: You have taken this as a secondary job.");
                PlayerInfo[playerid][pJob2] = GettingJob2[playerid];
                GettingJob2[playerid] = 0;
                return 1;
            }
            else {
                ShowPlayerDialog(playerid, 9400, DIALOG_STYLE_MSGBOX, "Cong viec", "Kiem tra lai nhung thu sau:\n1. Ban khong o dia diem nhan viec \n2. Ban da co cong viec khac roi, hay /nghiviec truoc de co the nhan them cong viec nay.", "Ok", "");
                return 1;
            }
        }
        else if(strcmp(params, "live", true) == 0) {
            if(LiveOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(LiveOffer[playerid])) {
                    if (ProxDetectorS(5.0, playerid, LiveOffer[playerid])) {
                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You are frozen till the Live Conversation ends.");
                        SendClientMessageEx(LiveOffer[playerid], COLOR_LIGHTBLUE, "* You are frozen till the Live Conversation ends (use /live again).");
                        TogglePlayerControllable(playerid, 0);
                        TogglePlayerControllable(LiveOffer[playerid], 0);
						SetPVarInt(playerid, "IsLive", 1);
						SetPVarInt(LiveOffer[playerid], "IsLive", 1);
                        TalkingLive[playerid] = LiveOffer[playerid];
                        TalkingLive[LiveOffer[playerid]] = playerid;
                        LiveOffer[playerid] = INVALID_PLAYER_ID;
                        return 1;
                    }
                    else {
                        SendClientMessageEx(playerid, COLOR_GREY, "   You are to far away from the News Reporter!");
                        return 1;
                    }
                }
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   No-one gave you a Live Conversation offer!");
                return 1;
            }
        }
        else if(strcmp(params, "Luatsu", true) == 0) {
            if(sscanf(params, "u", giveplayerid))
            {
                SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /chapnhan luatsu [player]");
                return 1;
            }
            if (IsACop(playerid)) {
                if(IsPlayerConnected(giveplayerid)) {
                    if(giveplayerid != INVALID_PLAYER_ID) {
                        if(PlayerInfo[giveplayerid][pJob] == 2 || PlayerInfo[giveplayerid][pJob2] == 2) {
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(szMessage, sizeof(szMessage), "* You allowed %s to free a Jailed Person.", giveplayer);
                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE,szMessage);
                            format(szMessage, sizeof(szMessage), "* Officer %s approved (allowed) you to free a Jailed Person. (use /free)", sendername);
                            SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE,szMessage);
                            ApprovedLawyer[giveplayerid] = 1;
                            return 1;
                        }
                    }
                }
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "Invalid action! (You are no cop / person is not a Lawyer / Bad ID)");
                return 1;
            }
        }
        else if(strcmp(params, "hoadon", true) == 0) {
            if(HoaDonOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(HoaDonOffer[playerid])) {
                    if (ProxDetectorS(5.0, playerid, HoaDonOffer[playerid])) {
                        if(GetPlayerCash(playerid) >= HoaDonMoney[playerid]) {
                            format(szMessage, sizeof(szMessage), "* Ban da tra hoa don $%d cho %s.", HoaDonMoney[playerid], GetPlayerNameEx(HoaDonOffer[playerid]));
                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                            format(szMessage, sizeof(szMessage), "* %s da chap nhan mot hoa don $%d.", GetPlayerNameEx(playerid), HoaDonMoney[playerid]);
                            SendClientMessageEx(HoaDonOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                            format(szMessage, sizeof(szMessage), "* %s da tra tien hoa don.", GetPlayerNameEx(playerid));
                            ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            GivePlayerCash(playerid, - HoaDonMoney[playerid]);
                            arrGroupData[PlayerInfo[HoaDonOffer[playerid]][pMember]][g_iBudget] += HoaDonMoney[playerid];
							new str[128];
			                format(str, sizeof(str), "%s Da Thanh Toan Hoa Don %s's Voi So Tien $%d Va $%d Da Duoc Gui Toi Ngan Sach.",GetPlayerNameEx(playerid), GetPlayerNameEx(HoaDonOffer[playerid]), HoaDonMoney[playerid]);

                            HoaDonOffer[playerid] = INVALID_PLAYER_ID;
                            HoaDonMoney[playerid] = 0;
                            if(GetPlayerCash(playerid) < 1) GivePlayerCash(playerid, 0);
                            return 1;
                        }
                    }
                    else {
                        SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi viet hoa don khong o gan ban!");
                        return 1;
                    }
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai cung cap cho ban hoa don!");
                return 1;
            }
        }
        else if(strcmp(params, "banhmi", true) == 0) {
            if(BanhMiOffer[playerid] != INVALID_PLAYER_ID) {
                if(GetPlayerCash(playerid) > BanhMiPrice[playerid]) {
                    if(IsPlayerConnected(BanhMiOffer[playerid])) {
                        if(ProxDetectorS(6.0, playerid, BanhMiOffer[playerid])) {
                        	if(PlayerInfo[playerid][pHunger] > 50)
                        		return SendClientMessageEx(playerid,COLOR_GREY,"Ban da no khong the mua them");

    						PlayerInfo[playerid][pHunger] += 50;
    						PlayerInfo[playerid][pHungerTimer] = 0;
    						PlayerInfo[playerid][pHungerDeathTimer] = 0;
                            GetPlayerName(BanhMiOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(szMessage, sizeof(szMessage), "Ban da chap nhan mot mua mot o banh voi so tien:$%d tu %s /anbanh de su dung",BanhMiPrice[playerid],GetPlayerNameEx(BanhMiOffer[playerid]));
                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                            format(szMessage, sizeof(szMessage), "* %s da chap nhan mua o banh mi tu ban voi so tien:%d",GetPlayerNameEx(playerid),BanhMiPrice[playerid]);
                            SendClientMessageEx(BanhMiOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                            GivePlayerCash(BanhMiOffer[playerid], BanhMiPrice[playerid]);
                            GivePlayerCash(playerid, -BanhMiPrice[playerid]);
                            ExtortionTurfsWarsZone(BanhMiOffer[playerid], 2, BanhMiPrice[playerid]);
                            BanhMiOffer[playerid] = INVALID_PLAYER_ID;
                            BanhMiPrice[playerid] = 0;
                            return 1;
                        }
                        else {
                            SendClientMessageEx(playerid, COLOR_GRAD2, "Ban can o gan nguoi ban banu mi");
                            return 1;
                        }
                    }
                    return 1;
                }
                else {
                    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du tien");
                    return 1;
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "Khong ai gui loi moi cho ban");
                return 1;
            }
        }
		else if(strcmp(params, "defense", true) == 0) {
            if(DefendOffer[playerid] != INVALID_PLAYER_ID) {
                if(GetPlayerCash(playerid) > DefendPrice[playerid]) {
                    if(IsPlayerConnected(DefendOffer[playerid])) {
                        /*new ip[32], ipex[32];
                        GetPlayerIp(playerid, ip, sizeof(ip));
                        GetPlayerIp(DefendOffer[playerid], ipex, sizeof(ipex));
                        format(szMessage, sizeof(szMessage), "[LAWYER] %s (IP:%s) has paid $%d to %s (IP:%s)", GetPlayerNameEx(playerid), ip, DefendPrice[playerid], GetPlayerNameEx(DefendOffer[playerid]), ipex);
                        Log("logs/pay.log", szMessage);*/
                        PlayerInfo[playerid][pWantedLevel]--;
                        SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
                        SetPlayerToTeamColor(playerid);
                        giveplayer = GetPlayerNameEx(DefendOffer[playerid]);
                        sendername = GetPlayerNameEx(playerid);
                        format(szMessage, sizeof(szMessage), "* You accepted the Defense for $%d from Lawyer %s.",DefendPrice[playerid],giveplayer);
                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                        format(szMessage, sizeof(szMessage), "* %s accepted your Defense, and the $%d was added to your money.",sendername,DefendPrice[playerid]);
                        SendClientMessageEx(DefendOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                        GivePlayerCash( DefendOffer[playerid],DefendPrice[playerid]);
                        GivePlayerCash(playerid, -DefendPrice[playerid]);
                        DefendOffer[playerid] = INVALID_PLAYER_ID;
                        DefendPrice[playerid] = 0;
                        return 1;
                    }
                    return 1;
                }
                else {
                    SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong co du Protection!");
                    return 1;
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai cung cap cho banny Protection!");
                return 1;
            }
        }
        else if(strcmp(params, "appeal", true) == 0) {
            if(AppealOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(AppealOffer[playerid])) {
                    AppealOfferAccepted[playerid] = 1;
                    giveplayer = GetPlayerNameEx(AppealOffer[playerid]);
                    sendername = GetPlayerNameEx(playerid);
                    format(szMessage, sizeof(szMessage), "* You accepted the appeal from Lawyer %s.",giveplayer);
                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                    format(szMessage, sizeof(szMessage), "* %s accepted your appeal, a message to the Judicial System has been sent, please wait at the courtroom.",sendername);
                    SendClientMessageEx(AppealOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                    return 1;
                }
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai cung cap cho banny Protection!");
                return 1;
            }
        }
        else if(strcmp(params, "vatlieu", true) == 0)
		{
            if(MatsOffer[playerid] != INVALID_PLAYER_ID)
			{
                if(GetPlayerCash(playerid) >= MatsPrice[playerid])
                {
                	if(IsPlayerConnected(MatsOffer[playerid]))
					{
    					if(GetPVarInt(playerid, "SellMatsTimer") > 0)
						{
							format(szMessage, sizeof(szMessage), "Ban phi doi %d giay de tiep tuc nhan vat lieu.", GetPVarInt(playerid, "SellMatsTimer"));
							SendClientMessageEx(playerid,COLOR_GREY,szMessage);
							return 1;
						}
						if (GetPVarInt(playerid, "MatsSeller_SQLId") != GetPlayerSQLId(MatsOffer[playerid]))
						{
			                return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do da mat ket noi.");
						}
      					if(!ProxDetectorS(8.0, MatsOffer[playerid], playerid))
	  					{
							return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o gan nguoi ban.");
						}
						if(PlayerInfo[MatsOffer[playerid]][pMats] < MatsAmount[playerid])
						{
						    SendClientMessageEx(playerid,COLOR_GREY, "Nguoi do khong co du so vat lieu da dua!");
						    return 1;
						}
     					new ip[32], ipex[32];
          				GetPlayerIp(playerid, ip, sizeof(ip));
              			GetPlayerIp(MatsOffer[playerid], ipex, sizeof(ipex));
                 		format(szMessage, sizeof(szMessage), "[MATERIALS (%s)] %s (IP:%s) da tra $%s cho %s (IP:%s)", number_format(MatsAmount[playerid]), GetPlayerNameEx(playerid), ip, number_format(MatsPrice[playerid]), GetPlayerNameEx(MatsOffer[playerid]), ipex);
                   		Log("logs/pay.log", szMessage);

         				format(szMessage, sizeof(szMessage), "* Ban mua %s vat lieu voi gia $%s tu %s.", number_format(MatsAmount[playerid]), number_format(MatsPrice[playerid]), GetPlayerNameEx(MatsOffer[playerid]));
            			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
              			format(szMessage, sizeof(szMessage), "* %s da mua %s vat lieu voi gia $%s.", GetPlayerNameEx(playerid), number_format(MatsAmount[playerid]), number_format(MatsPrice[playerid]));
                		SendClientMessageEx(MatsOffer[playerid], COLOR_LIGHTBLUE, szMessage);

                  		GivePlayerCash(MatsOffer[playerid], MatsPrice[playerid]);
						GivePlayerCash(playerid, -MatsPrice[playerid]);
                    	PlayerInfo[playerid][pMats] += MatsAmount[playerid];
                    	PlayerInfo[MatsOffer[playerid]][pMats] -= MatsAmount[playerid];

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(MatsOffer[playerid]);

                    	MatsOffer[playerid] = INVALID_PLAYER_ID;
                    	MatsPrice[playerid] = 0;
                    	MatsAmount[playerid] = 0;
                    	DeletePVar(playerid, "MatsSeller_SQLId");
					}
				}
                else
				{
                    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the co them vat lieu!");
                    return 1;
                }
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_GREY, "Khong ai cung cap vat lieu cho ban.!");
                return 1;
            }
        }
        else if(strcmp(params, "syringes", true) == 0) {
        	if (GetPVarType(playerid, "SyringesOffer")) {
	            if(GetPlayerCash(playerid) > GetPVarInt(playerid, "SyringesPrice")) {
	            	if(IsPlayerConnected(GetPVarInt(playerid, "SyringesOffer"))) {
	            		if (GetPVarInt(playerid, "SyringesSeller_SQLId") != GetPlayerSQLId(GetPVarInt(playerid, "SyringesOffer")))
						{
			                return SendClientMessageEx(playerid, COLOR_GREY, "The other person has disconnected.");
						}
						if(PlayerInfo[GetPVarInt(playerid, "SyringesOffer")][pSyringes] < GetPVarInt(playerid, "SyringesCount"))	{
							SendClientMessageEx(playerid,COLOR_GREY, "That person does not have that number of syringes anymore!");
							return 1;
						}
	                    GivePlayerCash(playerid, -GetPVarInt(playerid, "SyringesPrice"));
	                    GivePlayerCash(GetPVarInt(playerid, "SyringesOffer"), GetPVarInt(playerid, "SyringesPrice"));
						GetPlayerName(GetPVarInt(playerid, "SyringesOffer"), giveplayer, sizeof(giveplayer));
	                    format(szMessage, sizeof(szMessage), "* Ban mua %d syringes voi gia $%d tu %s.",GetPVarInt(playerid, "SyringesCount"),GetPVarInt(playerid, "SyringesPrice"),giveplayer);
	                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    format(szMessage, sizeof(szMessage), "* %s da mua cua ban %d fireworks, $%d da duoc them vao tai khoan.",sendername,GetPVarInt(playerid, "SyringesCount"),GetPVarInt(playerid, "SyringesPrice"));
	                    SendClientMessageEx(GetPVarInt(playerid, "SyringesOffer"), COLOR_LIGHTBLUE, szMessage);
	                    ExtortionTurfsWarsZone(GetPVarInt(playerid, "SyringesOffer"), 5, GetPVarInt(playerid, "SyringesPrice"));
	                    PlayerInfo[GetPVarInt(playerid, "SyringesOffer")][pSyringes] -= GetPVarInt(playerid, "SyringesCount");
	                    PlayerInfo[playerid][pSyringes] += GetPVarInt(playerid, "SyringesCount");

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(GetPVarInt(playerid, "SyringesOffer"));

	                    DeletePVar(playerid, "SyringesOffer");
	                    DeletePVar(playerid, "SyringesPrice");
	                    DeletePVar(playerid, "SyringesCount");
                    	DeletePVar(playerid, "SyringesSeller_SQLId");
	                    return 1;
	  				}
	     		}
	      		else
				{
	            	SendClientMessageEx(playerid, COLOR_GREY, "You can't afford that syringes!");
	                return 1;
	        	}
       		}
			else
			{
        		SendClientMessageEx(playerid, COLOR_GREY, "Khong ai cung cap cho banny syringes!");
			}
 	    }
 	    else if(strcmp(params, "rimkit", true) == 0) {
        	if (GetPVarType(playerid, "RimOffer")) {
	            if(GetPlayerCash(playerid) > GetPVarInt(playerid, "RimPrice")) {
	            	if(IsPlayerConnected(GetPVarInt(playerid, "RimOffer"))) {
	            		if (GetPVarInt(playerid, "RimSeller_SQLId") != GetPlayerSQLId(GetPVarInt(playerid, "RimOffer")))
						{
			                return SendClientMessageEx(playerid, COLOR_GREY, "The other person has disconnected.");
						}
						if(PlayerInfo[GetPVarInt(playerid, "RimOffer")][pRimMod] < GetPVarInt(playerid, "RimCount"))	{
							SendClientMessageEx(playerid,COLOR_GREY, "That person does not have that number of rim kits anymore!");
							return 1;
						}
	                    GivePlayerCash(playerid, -GetPVarInt(playerid, "RimPrice"));
	                    GivePlayerCash(GetPVarInt(playerid, "RimOffer"), GetPVarInt(playerid, "RimPrice"));
						GetPlayerName(GetPVarInt(playerid, "RimOffer"), giveplayer, sizeof(giveplayer));
	                    format(szMessage, sizeof(szMessage), "* Ban mua %d rim kits for $%d from %s.",GetPVarInt(playerid, "RimCount"),GetPVarInt(playerid, "RimPrice"),giveplayer);
	                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    format(szMessage, sizeof(szMessage), "* %s has bought your %d rim kits, $%d was added to your money.",sendername,GetPVarInt(playerid, "RimCount"),GetPVarInt(playerid, "RimPrice"));
	                    SendClientMessageEx(GetPVarInt(playerid, "RimOffer"), COLOR_LIGHTBLUE, szMessage);
	                    //ExtortionTurfsWarsZone(GetPVarInt(playerid, "RimOffer"), 5, GetPVarInt(playerid, "RimPrice"));
	                    PlayerInfo[GetPVarInt(playerid, "RimOffer")][pRimMod] -= GetPVarInt(playerid, "RimCount");
	                    PlayerInfo[playerid][pRimMod] += GetPVarInt(playerid, "RimCount");

                        format(szMessage, sizeof(szMessage), "%s (IP:%s) has bought (%d) rim kits for $%s from %s (IP:%s)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), GetPVarInt(playerid, "RimCount"), number_format(GetPVarInt(playerid, "RimPrice")),  GetPlayerNameEx(GetPVarInt(playerid, "RimOffer")), GetPlayerIpEx(GetPVarInt(playerid, "RimOffer")));
						Log("logs/pay.log", szMessage);

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(GetPVarInt(playerid, "RimOffer"));

	                    DeletePVar(playerid, "RimOffer");
	                    DeletePVar(playerid, "RimPrice");
	                    DeletePVar(playerid, "RimCount");
                    	DeletePVar(playerid, "RimSeller_SQLId");
	                    return 1;
	  				}
	     		}
	      		else
				{
	            	SendClientMessageEx(playerid, COLOR_GREY, "You can't afford that many rim kits!");
	                return 1;
	        	}
       		}
			else
			{
        		SendClientMessageEx(playerid, COLOR_GREY, "Khong ai cung cap cho banny rim kits!");
			}
 	    }
		else if(strcmp(params, "voucher", true) == 0)
		{
			if(GetPVarInt(playerid, "buyingVoucher") == INVALID_PLAYER_ID) return SendClientMessageEx(playerid, COLOR_GRAD2, "No-one has offered you any vouchers.");

			new sellerid = GetPVarInt(playerid, "sellerVoucher"),
				price = GetPVarInt(playerid, "priceVoucher"),
				amount = GetPVarInt(playerid, "amountVoucher");

			DeletePVar(playerid, "sellVoucher");
			DeletePVar(playerid, "priceVoucher");
			DeletePVar(playerid, "amountVoucher");
			if(GetPlayerCash(playerid) > price)
			{
				if(IsPlayerConnected(sellerid))
				{
					if(GetPVarInt(playerid, "SQLID_Voucher") != GetPlayerSQLId(sellerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "The seller has disconnected.");
					if(GetPVarInt(playerid, "buyingVoucher") == 1) // Car Voucher
					{
						if(PlayerInfo[sellerid][pVehVoucher] < amount) return SendClientMessageEx(playerid, COLOR_GRAD1, "The seller does not have that many anymore.");

						GivePlayerCash(playerid, -price);
						GivePlayerCash(sellerid, price);
						format(szMessage, sizeof(szMessage), "* You have bought %d Car Voucher(s) for $%s from %s.", amount, number_format(price), GetPlayerNameEx(sellerid));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "* %s has bought %d Car Voucher(s) from you, $%s was added to your money.", GetPlayerNameEx(playerid), amount, number_format(price));
						SendClientMessageEx(sellerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "%s (IP:%s) has bought (%d) Car Voucher(s) for $%s from %s (IP:%s)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), number_format(price),  GetPlayerNameEx(sellerid), GetPlayerIpEx(sellerid));
						Log("logs/pay.log", szMessage);
						PlayerInfo[playerid][pVehVoucher] += amount;
						PlayerInfo[sellerid][pVehVoucher] -= amount;

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(sellerid);

						SetPVarInt(playerid, "buyingVoucher", INVALID_PLAYER_ID);
						return 1;
					}
					if(GetPVarInt(playerid, "buyingVoucher") == 2) // Silver VIP Voucher
					{
						if(PlayerInfo[sellerid][pSVIPVoucher] < amount) return SendClientMessageEx(playerid, COLOR_GRAD1, "The seller does not have that many anymore.");

						GivePlayerCash(playerid, -price);
						GivePlayerCash(sellerid, price);
						format(szMessage, sizeof(szMessage), "* You have bought %d Silver VIP Voucher(s) for $%s from %s.", amount, number_format(price), GetPlayerNameEx(sellerid));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "* %s has bought %d Silver VIP Voucher(s) from you, $%s was added to your money.", GetPlayerNameEx(playerid), amount, number_format(price));
						SendClientMessageEx(sellerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "%s (IP:%s) has bought (%d) Silver VIP Voucher(s) for $%s from %s (IP:%s)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), number_format(price),  GetPlayerNameEx(sellerid), GetPlayerIpEx(sellerid));
						Log("logs/pay.log", szMessage);
						PlayerInfo[playerid][pSVIPVoucher] += amount;
						PlayerInfo[sellerid][pSVIPVoucher] -= amount;

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(sellerid);

						SetPVarInt(playerid, "buyingVoucher", INVALID_PLAYER_ID);
						return 1;
					}
					if(GetPVarInt(playerid, "buyingVoucher") == 3) // Gold VIP Voucher
					{
						if(PlayerInfo[sellerid][pGVIPVoucher] < amount) return SendClientMessageEx(playerid, COLOR_GRAD1, "The seller does not have that many anymore.");

						GivePlayerCash(playerid, -price);
						GivePlayerCash(sellerid, price);
						format(szMessage, sizeof(szMessage), "* You have bought %d Gold VIP Voucher(s) for $%s from %s.", amount, number_format(price), GetPlayerNameEx(sellerid));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "* %s has bought %d Gold VIP Voucher(s) from you, $%s was added to your money.", GetPlayerNameEx(playerid), amount, number_format(price));
						SendClientMessageEx(sellerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "%s (IP:%s) has bought (%d) Gold VIP Voucher(s) for $%s from %s (IP:%s)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), number_format(price),  GetPlayerNameEx(sellerid), GetPlayerIpEx(sellerid));
						Log("logs/pay.log", szMessage);
						PlayerInfo[playerid][pGVIPVoucher] += amount;
						PlayerInfo[sellerid][pGVIPVoucher] -= amount;

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(sellerid);

						SetPVarInt(playerid, "buyingVoucher", INVALID_PLAYER_ID);
						return 1;
					}
					if(GetPVarInt(playerid, "buyingVoucher") == 4) // Platinum VIP Voucher
					{
						if(PlayerInfo[sellerid][pPVIPVoucher] < amount) return SendClientMessageEx(playerid, COLOR_GRAD1, "The seller does not have that many anymore.");

						GivePlayerCash(playerid, -price);
						GivePlayerCash(sellerid, price);
						format(szMessage, sizeof(szMessage), "* You have bought %d Platinum VIP Voucher(s) for $%s from %s.", amount, number_format(price), GetPlayerNameEx(sellerid));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "* %s has bought %d Platinum VIP Voucher(s) from you, $%s was added to your money.", GetPlayerNameEx(playerid), amount, number_format(price));
						SendClientMessageEx(sellerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "%s (IP:%s) has bought (%d) Platinum VIP Voucher(s) for $%s from %s (IP:%s)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), number_format(price),  GetPlayerNameEx(sellerid), GetPlayerIpEx(sellerid));
						Log("logs/pay.log", szMessage);
						PlayerInfo[playerid][pPVIPVoucher] += amount;
						PlayerInfo[sellerid][pPVIPVoucher] -= amount;

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(sellerid);

						SetPVarInt(playerid, "buyingVoucher", INVALID_PLAYER_ID);
						return 1;
					}
					if(GetPVarInt(playerid, "buyingVoucher") == 5) // Restricted Car Voucher
					{
						if(PlayerInfo[sellerid][pCarVoucher] < amount) return SendClientMessageEx(playerid, COLOR_GRAD1, "The seller does not have that many anymore.");

						GivePlayerCash(playerid, -price);
						GivePlayerCash(sellerid, price);
						format(szMessage, sizeof(szMessage), "* You have bought %d Restricted Car Voucher(s) for $%s from %s.", amount, number_format(price), GetPlayerNameEx(sellerid));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "* %s has bought %d Restricted Car Voucher(s) from you, $%s was added to your money.", GetPlayerNameEx(playerid), amount, number_format(price));
						SendClientMessageEx(sellerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "%s (IP:%s) has bought (%d) Restricted Car Voucher(s) for $%s from %s (IP:%s)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), number_format(price),  GetPlayerNameEx(sellerid), GetPlayerIpEx(sellerid));
						Log("logs/pay.log", szMessage);
						PlayerInfo[playerid][pCarVoucher] += amount;
						PlayerInfo[sellerid][pCarVoucher] -= amount;

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(sellerid);

						SetPVarInt(playerid, "buyingVoucher", INVALID_PLAYER_ID);
						return 1;
					}
					if(GetPVarInt(playerid, "buyingVoucher") == 6) // Priority Advertisement Voucher
					{
						if(PlayerInfo[sellerid][pAdvertVoucher] < amount) return SendClientMessageEx(playerid, COLOR_GRAD1, "The seller does not have that many anymore.");

						GivePlayerCash(playerid, -price);
						GivePlayerCash(sellerid, price);
						format(szMessage, sizeof(szMessage), "* You have bought %d Priority Advertisement Voucher(s) for $%s from %s.", amount, number_format(price), GetPlayerNameEx(sellerid));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "* %s has bought %d Priority Advertisement Voucher(s) from you, $%s was added to your money.", GetPlayerNameEx(playerid), amount, number_format(price));
						SendClientMessageEx(sellerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "%s (IP:%s) has bought (%d) Priority Advertisement Voucher(s) for $%s from %s (IP:%s)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), number_format(price),  GetPlayerNameEx(sellerid), GetPlayerIpEx(sellerid));
						Log("logs/pay.log", szMessage);
						PlayerInfo[playerid][pAdvertVoucher] += amount;
						PlayerInfo[sellerid][pAdvertVoucher] -= amount;

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(sellerid);

						SetPVarInt(playerid, "buyingVoucher", INVALID_PLAYER_ID);
						return 1;
					}
					if(GetPVarInt(playerid, "buyingVoucher") == 7) // 7 Days Silver VIP
					{
						if(PlayerInfo[sellerid][pSVIPExVoucher] < amount) return SendClientMessageEx(playerid, COLOR_GRAD1, "The seller does not have that many anymore.");

						GivePlayerCash(playerid, -price);
						GivePlayerCash(sellerid, price);
						format(szMessage, sizeof(szMessage), "* You have bought %d 7 Days Silver VIP Voucher(s) for $%s from %s.", amount, number_format(price), GetPlayerNameEx(sellerid));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "* %s has bought %d 7 Days Silver VIP Voucher(s) from you, $%s was added to your money.", GetPlayerNameEx(playerid), amount, number_format(price));
						SendClientMessageEx(sellerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "%s (IP:%s) has bought (%d) 7 Day Silver VIP Voucher(s) for $%s from %s (IP:%s)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), number_format(price),  GetPlayerNameEx(sellerid), GetPlayerIpEx(sellerid));
						Log("logs/pay.log", szMessage);
						PlayerInfo[playerid][pSVIPExVoucher] += amount;
						PlayerInfo[sellerid][pSVIPExVoucher] -= amount;

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(sellerid);

						SetPVarInt(playerid, "buyingVoucher", INVALID_PLAYER_ID);
						return 1;
					}
					if(GetPVarInt(playerid, "buyingVoucher") == 8) // 7 Days Gold VIP
					{
						if(PlayerInfo[sellerid][pGVIPExVoucher] < amount) return SendClientMessageEx(playerid, COLOR_GRAD1, "The seller does not have that many anymore.");

						GivePlayerCash(playerid, -price);
						GivePlayerCash(sellerid, price);
						format(szMessage, sizeof(szMessage), "* You have bought %d 7 Days Gold VIP Voucher(s) for $%s from %s.", amount, number_format(price), GetPlayerNameEx(sellerid));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "* %s has bought %d 7 Days Gold VIP Voucher(s) from you, $%s was added to your money.", GetPlayerNameEx(playerid), amount, number_format(price));
						SendClientMessageEx(sellerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "%s (IP:%s) has bought (%d) 7 Days Gold VIP Voucher(s) for $%s from %s (IP:%s)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), number_format(price),  GetPlayerNameEx(sellerid), GetPlayerIpEx(sellerid));
						Log("logs/pay.log", szMessage);
						PlayerInfo[playerid][pGVIPExVoucher] += amount;
						PlayerInfo[sellerid][pGVIPExVoucher] -= amount;

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(sellerid);

						SetPVarInt(playerid, "buyingVoucher", INVALID_PLAYER_ID);
						return 1;
					}
				}
				else return SendClientMessageEx(playerid, COLOR_GRAD2, "No-One has offered you any vouchers.");
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "You do not have enough money.");
		}
 	    else if(strcmp(params, "heroin", true) == 0) {
        	if (GetPVarType(playerid, "HeroinOffer")) {
	            if(GetPlayerCash(playerid) > GetPVarInt(playerid, "HeroinPrice")) {
	            	if(IsPlayerConnected(GetPVarInt(playerid, "HeroinOffer"))) {
	            		if (GetPVarInt(playerid, "HeroinSeller_SQLId") != GetPlayerSQLId(GetPVarInt(playerid, "HeroinOffer")))
						{
			                return SendClientMessageEx(playerid, COLOR_GREY, "The other person has disconnected.");
						}
						if(PlayerInfo[GetPVarInt(playerid, "HeroinOffer")][pHeroin] < GetPVarInt(playerid, "HeroinCount"))	{
							SendClientMessageEx(playerid,COLOR_GREY, "That person does not have that number of heroin anymore!");
							return 1;
						}
	                    GivePlayerCash(playerid, -GetPVarInt(playerid, "HeroinPrice"));
	                    GivePlayerCash(GetPVarInt(playerid, "HeroinOffer"), GetPVarInt(playerid, "HeroinPrice"));
						GetPlayerName(GetPVarInt(playerid, "HeroinOffer"), giveplayer, sizeof(giveplayer));
	                    format(szMessage, sizeof(szMessage), "* Ban mua %d milligrams of heroin for $%d from %s.",GetPVarInt(playerid, "HeroinCount"),GetPVarInt(playerid, "HeroinPrice"),giveplayer);
	                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    format(szMessage, sizeof(szMessage), "* %s has bought your %d milligrams of heroin, $%d was added to your money.",sendername,GetPVarInt(playerid, "HeroinCount"),GetPVarInt(playerid, "HeroinPrice"));
	                    SendClientMessageEx(GetPVarInt(playerid, "HeroinOffer"), COLOR_LIGHTBLUE, szMessage);
	                    ExtortionTurfsWarsZone(GetPVarInt(playerid, "HeroinOffer"), 5, GetPVarInt(playerid, "HeroinPrice"));
	                    PlayerInfo[GetPVarInt(playerid, "HeroinOffer")][pHeroin] -= GetPVarInt(playerid, "HeroinCount");
	                    PlayerInfo[playerid][pHeroin] += GetPVarInt(playerid, "HeroinCount");

                        format(szMessage, sizeof(szMessage), "%s (IP:%s) has bought (%d) Heroin for $%s from %s (IP:%s)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), number_format(GetPVarInt(playerid, "HeroinPrice")),  GetPlayerNameEx(GetPVarInt(playerid, "HeroinOffer")), GetPlayerIpEx(GetPVarInt(playerid, "HeroinOffer")));
						Log("logs/pay.log", szMessage);

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(GetPVarInt(playerid, "HeroinOffer"));

	                    DeletePVar(playerid, "HeroinOffer");
	                    DeletePVar(playerid, "HeroinPrice");
	                    DeletePVar(playerid, "HeroinCount");
                    	DeletePVar(playerid, "HeroinSeller_SQLId");
	                    return 1;
	  				}
	     		}
	      		else
				{
	            	SendClientMessageEx(playerid, COLOR_GREY, "You can't afford that much heroin!");
	                return 1;
	        	}
       		}
			else
			{
        		SendClientMessageEx(playerid, COLOR_GREY, "Khong ai cung cap cho banny heroin!");
			}
 	    }
 	    else if(strcmp(params, "rawopium", true) == 0) {
        	if (GetPVarType(playerid, "RawOpiumOffer")) {
	            if(GetPlayerCash(playerid) > GetPVarInt(playerid, "RawOpiumPrice")) {
	            	if(IsPlayerConnected(GetPVarInt(playerid, "RawOpiumOffer"))) {
	            		if (GetPVarInt(playerid, "RawOpiumSeller_SQLId") != GetPlayerSQLId(GetPVarInt(playerid, "RawOpiumOffer")))
						{
			                return SendClientMessageEx(playerid, COLOR_GREY, "The other person has disconnected.");
						}
						if(PlayerInfo[GetPVarInt(playerid, "RawOpiumOffer")][pRawOpium] < GetPVarInt(playerid, "RawOpiumCount"))	{
							SendClientMessageEx(playerid,COLOR_GREY, "That person does not have that number of raw opium anymore!");
							return 1;
						}
	                    GivePlayerCash(playerid, -GetPVarInt(playerid, "RawOpiumPrice"));
	                    GivePlayerCash(GetPVarInt(playerid, "RawOpiumOffer"), GetPVarInt(playerid, "RawOpiumPrice"));
						GetPlayerName(GetPVarInt(playerid, "RawOpiumOffer"), giveplayer, sizeof(giveplayer));
	                    format(szMessage, sizeof(szMessage), "* Ban mua %d milligrams of raw opium for $%d from %s.",GetPVarInt(playerid, "RawOpiumCount"),GetPVarInt(playerid, "RawOpiumPrice"),giveplayer);
	                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    format(szMessage, sizeof(szMessage), "* %s has bought your %d milligrams of raw opium, $%d was added to your money.",sendername,GetPVarInt(playerid, "RawOpiumCount"),GetPVarInt(playerid, "RawOpiumPrice"));
	                    SendClientMessageEx(GetPVarInt(playerid, "RawOpiumOffer"), COLOR_LIGHTBLUE, szMessage);
	                    ExtortionTurfsWarsZone(GetPVarInt(playerid, "RawOpiumOffer"), 5, GetPVarInt(playerid, "RawOpiumPrice"));
	                    PlayerInfo[GetPVarInt(playerid, "RawOpiumOffer")][pRawOpium] -= GetPVarInt(playerid, "RawOpiumCount");
	                    PlayerInfo[playerid][pRawOpium] += GetPVarInt(playerid, "RawOpiumCount");

	                    format(szMessage, sizeof(szMessage), "%s (IP:%s) has bought (%d) grams of raw opium for $%s from %s (IP:%s)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), number_format(GetPVarInt(playerid, "RawOpiumPrice")),  GetPlayerNameEx(GetPVarInt(playerid, "RawOpiumOffer")), GetPlayerIpEx(GetPVarInt(playerid, "RawOpiumOffer")));
						Log("logs/pay.log", szMessage);

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(GetPVarInt(playerid, "RawOpiumOffer"));

	                    DeletePVar(playerid, "RawOpiumOffer");
	                    DeletePVar(playerid, "RawOpiumPrice");
	                    DeletePVar(playerid, "RawOpiumCount");
                    	DeletePVar(playerid, "RawOpiumSeller_SQLId");
	                    return 1;
	  				}
	     		}
	      		else
				{
	            	SendClientMessageEx(playerid, COLOR_GREY, "You can't afford that raw opium!");
	                return 1;
	        	}
       		}
			else
			{
        		SendClientMessageEx(playerid, COLOR_GREY, "Khong ai cung cap cho banny raw opium!");
			}
 	    }
        else if(strcmp(params, "firework", true) == 0) {
        	if (GetPVarType(playerid, "FireworkOffer")) {
	            if(GetPlayerCash(playerid) > GetPVarInt(playerid, "FireworkPrice")) {
	            	if(IsPlayerConnected(GetPVarInt(playerid, "FireworkOffer"))) {
	            		if (GetPVarInt(playerid, "FireworkSeller_SQLId") != GetPlayerSQLId(GetPVarInt(playerid, "FireworkOffer")))
						{
			                return SendClientMessageEx(playerid, COLOR_GREY, "The other person has disconnected.");
						}
						if(PlayerInfo[GetPVarInt(playerid, "FireworkOffer")][pFirework] < GetPVarInt(playerid, "FireworkCount"))	{
							SendClientMessageEx(playerid,COLOR_GREY, "That person does not have that number of fireworks anymore!");
							return 1;
						}
	                    GivePlayerCash(playerid, -GetPVarInt(playerid, "FireworkPrice"));
	                    GivePlayerCash(GetPVarInt(playerid, "FireworkOffer"), GetPVarInt(playerid, "FireworkPrice"));
						GetPlayerName(GetPVarInt(playerid, "FireworkOffer"), giveplayer, sizeof(giveplayer));
	                    format(szMessage, sizeof(szMessage), "* Ban mua %d fireworks for $%d from %s.",GetPVarInt(playerid, "FireworkCount"),GetPVarInt(playerid, "FireworkPrice"),giveplayer);
	                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    format(szMessage, sizeof(szMessage), "* %s has bought your %d fireworks, $%d was added to your money.",sendername,GetPVarInt(playerid, "FireworkCount"),GetPVarInt(playerid, "FireworkPrice"));
	                    SendClientMessageEx(GetPVarInt(playerid, "FireworkOffer"), COLOR_LIGHTBLUE, szMessage);
	                    ExtortionTurfsWarsZone(GetPVarInt(playerid, "FireworkOffer"), 5, GetPVarInt(playerid, "FireworkPrice"));
	                    PlayerInfo[GetPVarInt(playerid, "FireworkOffer")][pFirework] -= GetPVarInt(playerid, "FireworkCount");
	                    PlayerInfo[playerid][pFirework] += GetPVarInt(playerid, "FireworkCount");

						OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(GetPVarInt(playerid, "FireworkOffer"));

	                    DeletePVar(playerid, "FireworkOffer");
	                    DeletePVar(playerid, "FireworkPrice");
	                    DeletePVar(playerid, "FireworkCount");
                    	DeletePVar(playerid, "FireworkSeller_SQLId");
	                    return 1;
	  				}
	     		}
	      		else
				{
	            	SendClientMessageEx(playerid, COLOR_GREY, "   You can't afford that firework!");
	                return 1;
	        	}
       		}
			else
			{
        		SendClientMessageEx(playerid, COLOR_GREY, "Khong ai cung cap cho banny fireworks!");
			}
 	    }
        else if(strcmp(params,"pot",true) == 0) {
            if(PotOffer[playerid] != INVALID_PLAYER_ID) {
                if(GetPlayerCash(playerid) > PotPrice[playerid]) {
                    if(PlayerInfo[playerid][pPot] < 25) {
                        if(IsPlayerConnected(PotOffer[playerid])) {
							if (GetPVarInt(playerid, "PotSeller_SQLId") != GetPlayerSQLId(PotOffer[playerid]))
							{
				                return SendClientMessageEx(playerid, COLOR_GREY, "The other person has disconnected.");
							}
							if(PlayerInfo[PotOffer[playerid]][pPot] < PotGram[playerid])
							{
						    	SendClientMessageEx(playerid,COLOR_GREY, "That person does not have that amount of pot anymore!");
						    	return 1;
							}
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(PotOffer[playerid], ipex, sizeof(ipex));
                            //format(szMessage, sizeof(szMessage), "[POT (%d GRAMS)] %s (IP:%s) has paid $%d to %s (IP:%s)", PotGram[playerid], GetPlayerNameEx(playerid), ip, PotPrice[playerid], GetPlayerNameEx(PotOffer[playerid]), ipex);
                            //Log("logs/pay.log", szMessage);*/


                            GetPlayerName(PotOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(szMessage, sizeof(szMessage), "* Ban mua %d gram for $%d from Drug Dealer %s.",PotGram[playerid],PotPrice[playerid],giveplayer);
                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                            format(szMessage, sizeof(szMessage), "* %s has bought your %d gram, the $%d was added to your money.",sendername,PotGram[playerid],PotPrice[playerid]);
                            SendClientMessageEx(PotOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                            ExtortionTurfsWarsZone(PotOffer[playerid], 1, PotPrice[playerid]);
                            PlayerInfo[PotOffer[playerid]][pCash] += PotPrice[playerid];
							if(DoubleXP) {
								SendClientMessageEx(playerid, COLOR_YELLOW, "You have gained 2 drug dealer skill points instead of 1. (Double XP Active)");
								PlayerInfo[PotOffer[playerid]][pDrugsSkill] += 2;
								PlayerInfo[PotOffer[playerid]][pXP] += PlayerInfo[PotOffer[playerid]][pLevel] * XP_RATE * 2;
							}
							else
							if(PlayerInfo[PotOffer[playerid]][pDoubleEXP] > 0 && !DoubleXP)
							{
								format(szMessage, sizeof(szMessage), "You have gained 2 drug dealer skill points instead of 1. Ban con %d gio con lai nhan doi EXP token.", PlayerInfo[PotOffer[playerid]][pDoubleEXP]);
								SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, szMessage);
   								PlayerInfo[PotOffer[playerid]][pDrugsSkill] += 2;
								PlayerInfo[PotOffer[playerid]][pXP] += PlayerInfo[PotOffer[playerid]][pLevel] * XP_RATE * 2;
							}
							else
							{
  								PlayerInfo[PotOffer[playerid]][pDrugsSkill] += 1;
								PlayerInfo[PotOffer[playerid]][pXP] += PlayerInfo[PotOffer[playerid]][pLevel] * XP_RATE;
							}

                            GivePlayerCash(playerid, -PotPrice[playerid]);
                            PlayerInfo[playerid][pPot] += PotGram[playerid];
                            PlayerInfo[PotOffer[playerid]][pPot] -= PotGram[playerid];

	                    	OnPlayerStatsUpdate(playerid);
							OnPlayerStatsUpdate(PotOffer[playerid]);

                            if(PlayerInfo[PotOffer[playerid]][pDrugsSkill] == 50)
                            { SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 2, you can buy more Grams and Cheaper."); }
                            else if(PlayerInfo[PotOffer[playerid]][pDrugsSkill] == 100)
                            { SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 3, you can buy more Grams and Cheaper."); }
                            else if(PlayerInfo[PotOffer[playerid]][pDrugsSkill] == 200)
                            { SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 4, you can buy more Grams and Cheaper."); }
                            else if(PlayerInfo[PotOffer[playerid]][pDrugsSkill] == 400)
                            { SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 5, you can buy more Grams and Cheaper."); }
                            PotOffer[playerid] = INVALID_PLAYER_ID;
                            PotPrice[playerid] = 0;
                            PotGram[playerid] = 0;
	                    	DeletePVar(playerid, "PotSeller_SQLId");
                            return 1;
                        }
                        return 1;
                    }
                    else {
                        SendClientMessageEx(playerid, COLOR_GREY, "   You are fully loaded with Drugs, use them first!");
                        return 1;
                    }
                }
                else {
                    SendClientMessageEx(playerid, COLOR_GREY, "   You can't afford those Pot!");
                    return 1;
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai cung cap cho banny Pot!");
                return 1;
            }
        }
        else if(strcmp(params,"crack",true) == 0) {
            if(CrackOffer[playerid] != INVALID_PLAYER_ID) {
                if(GetPlayerCash(playerid) > CrackPrice[playerid]) {
                    if(PlayerInfo[playerid][pCrack] < 25) {
                        if(IsPlayerConnected(CrackOffer[playerid])) {
							if (GetPVarInt(playerid, "CrackSeller_SQLId") != GetPlayerSQLId(CrackOffer[playerid]))
							{
				                return SendClientMessageEx(playerid, COLOR_GREY, "The other person has disconnected.");
							}
 							if(PlayerInfo[CrackOffer[playerid]][pCrack] < CrackGram[playerid])
							{
						    	SendClientMessageEx(playerid,COLOR_GREY, "That person does not have that amount of crack anymore!");
						    	return 1;
							}
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(CrackOffer[playerid], ipex, sizeof(ipex));
                            //format(szMessage, sizeof(szMessage), "[CRACK DEAL (%d GRAMS)] %s (IP:%s) has paid $%d to %s (IP:%s)", CrackGram[playerid], GetPlayerNameEx(playerid), ip, CrackPrice[playerid], GetPlayerNameEx(CrackOffer[playerid]), ipex);
                            // Log("logs/pay.log", szMessage);

                            GivePlayerCash(playerid, -CrackPrice[playerid]);
                            GivePlayerCash(CrackOffer[playerid], CrackPrice[playerid]);
                            GetPlayerName(CrackOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(szMessage, sizeof(szMessage), "* Ban mua %d gram for $%d from Drug Dealer %s.",CrackGram[playerid],CrackPrice[playerid],giveplayer);
                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                            format(szMessage, sizeof(szMessage), "* %s has bought your %d gram, the $%d was added to your money.",sendername,CrackGram[playerid],CrackPrice[playerid]);
                            SendClientMessageEx(CrackOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                            ExtortionTurfsWarsZone(CrackOffer[playerid], 1, CrackPrice[playerid]);
//SetPVarInt(CrackOffer[playerid], "Cash", GetPVarInt(CrackOffer[playerid], "Cash")+CrackOffer[playerid]);
							if(DoubleXP) {
								SendClientMessageEx(playerid, COLOR_YELLOW, "You have gained 2 drug dealer skill points instead of 1. (Double XP Active)");
								PlayerInfo[CrackOffer[playerid]][pDrugsSkill] += 2;
								PlayerInfo[CrackOffer[playerid]][pXP] += PlayerInfo[CrackOffer[playerid]][pLevel] * XP_RATE * 2;
							}
							else
							if(PlayerInfo[CrackOffer[playerid]][pDoubleEXP] > 0 && !DoubleXP)
							{
								format(szMessage, sizeof(szMessage), "You have gained 2 drug dealer skill points instead of 1. Ban con %d gio con lai nhan doi EXP token.", PlayerInfo[CrackOffer[playerid]][pDoubleEXP]);
								SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, szMessage);
   								PlayerInfo[CrackOffer[playerid]][pDrugsSkill] += 2;
								PlayerInfo[CrackOffer[playerid]][pXP] += PlayerInfo[CrackOffer[playerid]][pLevel] * XP_RATE * 2;
							}
							else
							{
  								PlayerInfo[CrackOffer[playerid]][pDrugsSkill] += 1;
								PlayerInfo[CrackOffer[playerid]][pXP] += PlayerInfo[CrackOffer[playerid]][pLevel] * XP_RATE;
							}

                            PlayerInfo[playerid][pCrack] += CrackGram[playerid];
                            PlayerInfo[CrackOffer[playerid]][pCrack] -= CrackGram[playerid];

	                    	OnPlayerStatsUpdate(playerid);
							OnPlayerStatsUpdate(CrackOffer[playerid]);

                            if(PlayerInfo[CrackOffer[playerid]][pDrugsSkill] == 50)
                            { SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 2, you can buy more Grams and Cheaper."); }
                            else if(PlayerInfo[CrackOffer[playerid]][pDrugsSkill] == 100)
                            { SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 3, you can buy more Grams and Cheaper."); }
                            else if(PlayerInfo[CrackOffer[playerid]][pDrugsSkill] == 200)
                            { SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 4, you can buy more Grams and Cheaper."); }
                            else if(PlayerInfo[CrackOffer[playerid]][pDrugsSkill] == 400)
                            { SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 5, you can buy more Grams and Cheaper."); }
							CrackOffer[playerid] = INVALID_PLAYER_ID;
                            CrackPrice[playerid] = 0;
                            CrackGram[playerid] = 0;
	                    	DeletePVar(playerid, "CrackSeller_SQLId");
                            return 1;
                        }
                        return 1;
                    }
                    else {
                        SendClientMessageEx(playerid, COLOR_GREY, "   You are fully loaded with Crack, use them first!");
                        return 1;
                    }
                }
                else {
                    SendClientMessageEx(playerid, COLOR_GREY, "   You can't afford that Crack!");
                    return 1;
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai cung cap cho banny Crack!");
                return 1;
            }
        }
        else if(strcmp(params,"vukhi",true) == 0) {
            if(GunOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(GunOffer[playerid])) {
					if (GetPVarInt(playerid, "WeaponSeller_SQLId") != GetPlayerSQLId(GunOffer[playerid]))
					{
		                return SendClientMessageEx(playerid, COLOR_GREY, "The other person has disconnected.");
					}
                    if (ProxDetectorS(5.0, playerid, GunOffer[playerid])) {
                        if(PlayerInfo[playerid][pHospital] > 0) {
                            SendClientMessageEx(playerid, COLOR_GREY, "You can't spawn a weapon whilst in Hospital.");
                            return 1;
                        }
					    if(GetPVarInt(playerid, "IsInArena") >= 0) {
					        SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong the lam dieu nay khi dang trong arena!");
					        return 1;
					    }
                        if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Please exit the vehicle, before using this command.");
                        new weaponname[32];
                        GetWeaponName(GunId[playerid], weaponname, sizeof(weaponname));
                        format(szMessage, sizeof(szMessage), "   Ban da cho %s, mot %s.", GetPlayerNameEx(playerid),weaponname);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        SendClientMessageEx(GunOffer[playerid], COLOR_GRAD1, szMessage);
                        format(szMessage, sizeof(szMessage), "   You have recieved a %s from %s.", weaponname, GetPlayerNameEx(GunOffer[playerid]));
                        SendClientMessageEx(playerid, COLOR_GRAD1, szMessage);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        format(szMessage, sizeof(szMessage), "* %s created a Gun from Materials, and hands it to %s.", GetPlayerNameEx(GunOffer[playerid]), GetPlayerNameEx(playerid));
                        ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ExtortionTurfsWarsZone(GunOffer[playerid], 3, 1000);
                        GivePlayerValidWeapon(playerid,GunId[playerid],50000);
                        //new ip[32], ipex[32];
                        //GetPlayerIp(playerid, ip, sizeof(ip));
                        //GetPlayerIp(GunOffer[playerid], ipex, sizeof(ipex));
                        //format(szMessage, sizeof(szMessage), "[WEAPON DEAL] %s(IP:%s) has bought a %s from %s(IP:%s)", GetPlayerNameEx(playerid), ip, weaponname, GetPlayerNameEx(GunOffer[playerid]), ipex);
                        //Log("logs/pay.log", szMessage);
                        PlayerInfo[GunOffer[playerid]][pMats] -= GunMats[playerid];

                    	OnPlayerStatsUpdate(playerid);
						OnPlayerStatsUpdate(GunOffer[playerid]);

						StorageInfo[GunOffer[playerid]][GunStorageID[playerid]][sMats] -= GunMats[playerid];
                        if(GunId[playerid] > 15)
						{
   							if(PlayerInfo[GunOffer[playerid]][pDonateRank] == 2 || PlayerInfo[GunOffer[playerid]][pDonateRank] == 3)
			    			{
			        			PlayerInfo[GunOffer[playerid]][pArmsSkill] += 2;
			    			}
							else if(DoubleXP) {
								SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da duoc 2 diem ky nang chet tao vu khi thay vi 1. (Double XP Active)");
								PlayerInfo[GunOffer[playerid]][pArmsSkill] += 2;
								PlayerInfo[GunOffer[playerid]][pXP] += PlayerInfo[GunOffer[playerid]][pLevel] * XP_RATE * 2;
							}
			    			else if(PlayerInfo[GunOffer[playerid]][pDoubleEXP] > 0 && PlayerInfo[GunOffer[playerid]][pDonateRank] < 2 && !DoubleXP)
							{
								format(szMessage, sizeof(szMessage), "Ban da duoc 2 diem ky nang chet tao vu khi thay vi 1. Ban con %d gio con lai nhan doi EXP token.", PlayerInfo[GunOffer[playerid]][pDoubleEXP]);
								SendClientMessageEx(GunOffer[playerid], COLOR_YELLOW, szMessage);
   								PlayerInfo[GunOffer[playerid]][pArmsSkill] += 2;
								PlayerInfo[GunOffer[playerid]][pXP] += PlayerInfo[GunOffer[playerid]][pLevel] * XP_RATE * 2;
							}
			    			else
			    			{
                				PlayerInfo[GunOffer[playerid]][pArmsSkill]++;
								PlayerInfo[GunOffer[playerid]][pXP] += PlayerInfo[GunOffer[playerid]][pLevel] * XP_RATE;
                			}
                        }
                        if(PlayerInfo[GunOffer[playerid]][pArmsSkill] == 50)
                        { SendClientMessageEx(GunOffer[playerid], COLOR_YELLOW, "* Ky nang che tao vu khi cua ban dat cap do 2, se co them nhieu loai vu khi de ban."); }
                        else if(PlayerInfo[GunOffer[playerid]][pArmsSkill] == 100)
                        { SendClientMessageEx(GunOffer[playerid], COLOR_YELLOW, "* Ky nang che tao vu khi cua ban dat cap do 3, se co them nhieu loai vu khi de ban."); }
                        else if(PlayerInfo[GunOffer[playerid]][pArmsSkill] == 200)
                        { SendClientMessageEx(GunOffer[playerid], COLOR_YELLOW, "* Ky nang che tao vu khi cua ban dat cap do 4, se co them nhieu loai vu khi de ban."); }
                        else if(PlayerInfo[GunOffer[playerid]][pArmsSkill] == 400)
                        { SendClientMessageEx(GunOffer[playerid], COLOR_YELLOW, "* Ky nang che tao vu khi cua ban dat cap do 5, se co them nhieu loai vu khi de ban."); }
                        GunOffer[playerid] = INVALID_PLAYER_ID;
						GunStorageID[playerid] = -1;
                        GunId[playerid] = 0;
                        GunMats[playerid] = 0;
                    	DeletePVar(playerid, "WeaponSeller_SQLId");
                        return 1;
                    }
                    else {
                        SendClientMessageEx(playerid, COLOR_GRAD2, "You need to be the near the person that is selling you the weapon !");
                        return 1;
                    }
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai cung cap cho ban vu khi!");
                return 1;
            }
        }
        else if(strcmp(params,"craft",true) == 0) {
            if(CraftOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(CraftOffer[playerid])) {
                    if (ProxDetectorS(5.0, playerid, CraftOffer[playerid])) {
                        if(PlayerInfo[playerid][pHospital] > 0) {
                            SendClientMessageEx(playerid, COLOR_GREY, "You can't spawn a weapon whilst in Hospital.");
                            return 1;
                        }
                        if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Please exit the vehicle, before using this command.");
						if(CraftId[playerid] == 17)
						{
							if(PlayerInfo[playerid][pPhousekey] == INVALID_HOUSE_ID && PlayerInfo[playerid][pPhousekey2] == INVALID_HOUSE_ID)
							{
								SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao!");
								SendClientMessageEx(CraftOffer[playerid], COLOR_GREY, "The buyer doesn't own a house!");
								return 1;
							}
							if((IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey]][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey]][hIntIW]) &&
							(IsPlayerInRangeOfPoint(CraftOffer[playerid], 50.0, HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorZ]) && GetPlayerVirtualWorld(CraftOffer[playerid]) == HouseInfo[PlayerInfo[playerid][pPhousekey]][hIntVW] && GetPlayerInterior(CraftOffer[playerid]) == HouseInfo[PlayerInfo[playerid][pPhousekey]][hIntIW]))
							{
							}
							else if((IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorX], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorY], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey2]][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey2]][hIntIW]) &&
							(IsPlayerInRangeOfPoint(CraftOffer[playerid], 50.0, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorX], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorY], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorZ]) && GetPlayerVirtualWorld(CraftOffer[playerid]) == HouseInfo[PlayerInfo[playerid][pPhousekey2]][hIntVW] && GetPlayerInterior(CraftOffer[playerid]) == HouseInfo[PlayerInfo[playerid][pPhousekey2]][hIntIW]))
							{
							}
							else
							{
								SendClientMessageEx(playerid, COLOR_GREY, "The craftsman is not inside of your house!");
								SendClientMessageEx(CraftOffer[playerid], COLOR_GREY, "You are not inside of the buyer's house!");
								return 1;
							}
						}
                        new weaponname[50];
                        format(weaponname, 50, "%s", CraftName[playerid]);
                        switch(CraftId[playerid]) {
                            case 1:
                            {
                                PlayerInfo[playerid][pScrewdriver]++;
                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/chetaovukhi");
                            }
                            case 2:
                            {
                                PlayerInfo[playerid][pSmslog]++;
                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/smslog");
                            }
                            case 3:
                            {
                                PlayerInfo[playerid][pWristwatch]++;
                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/wristwatch");
                            }
                            case 4:
                            {
                                PlayerInfo[playerid][pSurveillance]++;
                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/(p)lace(c)amera /(s)ee(c)amera /(d)estroy(c)amera");
                            }
                            case 5:
                            {
                                PlayerInfo[playerid][pTire]++;
                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/suaxe");
                            }
                            case 6:
                            {
                                PlayerInfo[playerid][pLock]=1;
                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/lock");
                            }
                            case 7:
                            {
                                PlayerInfo[playerid][pFirstaid]++;
                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/firstaid");
                            }
                            case 8:
                            {
                                GivePlayerValidWeapon(playerid, 43, 50);
                            }
                            case 9:
                            {
                                PlayerInfo[playerid][pRccam]++;
                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/rccam");
                            }
                            case 10:
                            {
                                PlayerInfo[playerid][pReceiver]++;
                                SetPVarInt(playerid, "pReceiverMLeft", 4);
                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You will receive the next four department radio messages.");
                            }
                            case 11:
                            {
                                PlayerInfo[playerid][pGPS]++;
                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/gps");
                            }
                            case 12:
                            {
                                PlayerInfo[playerid][pSweep]++;
                                PlayerInfo[playerid][pSweepLeft] = 3;
                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/sweep");
                            }
                            case 13:
                            {
                                GivePlayerValidWeapon(playerid, 46, 2);
                            }
							case 14:
							{

								if(PlayerInfo[playerid][pTreasureSkill] >=0 && PlayerInfo[playerid][pTreasureSkill] <= 24) PlayerInfo[playerid][pMetalDetector] += 25;
								else if(PlayerInfo[playerid][pTreasureSkill] >=25 && PlayerInfo[playerid][pTreasureSkill] <= 149) PlayerInfo[playerid][pMetalDetector] += 50;
								else if(PlayerInfo[playerid][pTreasureSkill] >=150 && PlayerInfo[playerid][pTreasureSkill] <= 299) PlayerInfo[playerid][pMetalDetector] += 75;
								else if(PlayerInfo[playerid][pTreasureSkill] >=300 && PlayerInfo[playerid][pTreasureSkill] <= 599) PlayerInfo[playerid][pMetalDetector] += 100;
								else if(PlayerInfo[playerid][pTreasureSkill] >=600) PlayerInfo[playerid][pMetalDetector] += 125;
								SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/search");
							}
                            case 15:
                            {
                                PlayerInfo[playerid][pMailbox]++;
                                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Type /placemailbox where you want mailbox to be at.");
                            }
							case 16:
							{
								if(PlayerInfo[playerid][pSyringes] < 3) {
									PlayerInfo[playerid][pSyringes]++;
									SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/useheroin");
								}
								else
								{
						    		SendClientMessageEx(playerid, COLOR_GREY, "You can't hold anymore syringes.");
						    		return 1;
								}
							}
							case 17:
							{
								if(IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorZ]) && IsPlayerInRangeOfPoint(CraftOffer[playerid], 50.0, HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorZ]))
								{
									GetPlayerPos(playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetZ]);
									if(IsValidDynamic3DTextLabel(HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetTextID])) DestroyDynamic3DTextLabel(Text3D:HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetTextID]);
									HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetTextID] = CreateDynamic3DTextLabel("Closet\n/closet to use", 0xFFFFFF88, HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetZ]+0.5,10.0, .testlos = 1, .worldid = HouseInfo[PlayerInfo[playerid][pPhousekey]][hIntVW], .interiorid = HouseInfo[PlayerInfo[playerid][pPhousekey]][hIntIW], .streamdistance = 10.0);
									SaveHouse(PlayerInfo[playerid][pPhousekey]);
									SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/closet(add/remove)");
								}
								else if(IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorX], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorY], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorZ]) && IsPlayerInRangeOfPoint(CraftOffer[playerid], 50.0, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorX], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorY], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorZ]))
								{
									GetPlayerPos(playerid, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetX], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetY], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetZ]);
									if(IsValidDynamic3DTextLabel(HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetTextID])) DestroyDynamic3DTextLabel(Text3D:HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetTextID]);
									HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetTextID] = CreateDynamic3DTextLabel("Closet\n/closet to use", 0xFFFFFF88, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetX], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetY], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetZ]+0.5,10.0, .testlos = 1, .worldid = HouseInfo[PlayerInfo[playerid][pPhousekey2]][hIntVW], .interiorid = HouseInfo[PlayerInfo[playerid][pPhousekey2]][hIntIW], .streamdistance = 10.0);
									SaveHouse(PlayerInfo[playerid][pPhousekey2]);
									SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "/closet(add/remove)");
								}
							}
                        }
                        format(szMessage, sizeof(szMessage), "   Ban da cho %s, mot %s.", GetPlayerNameEx(playerid),weaponname);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        SendClientMessageEx(CraftOffer[playerid], COLOR_GRAD1, szMessage);
                        format(szMessage, sizeof(szMessage), "   You have recieved a %s from %s.", weaponname, GetPlayerNameEx(CraftOffer[playerid]));
                        SendClientMessageEx(playerid, COLOR_GRAD1, szMessage);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        format(szMessage, sizeof(szMessage), "* %s created something from Materials, and hands it to %s.", GetPlayerNameEx(CraftOffer[playerid]), GetPlayerNameEx(playerid));
                        ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        //new ip[32], ipex[32];
                        //GetPlayerIp(playerid, ip, sizeof(ip));
                        //GetPlayerIp(CraftOffer[playerid], ipex, sizeof(ipex));
                        //format(szMessage, sizeof(szMessage), "[CRAFTSMAN DEAL] %s (IP: %s) has bought a %s from %s (IP: %s)", GetPlayerNameEx(playerid), ip, weaponname, GetPlayerNameEx(CraftOffer[playerid]), ipex);
                        //Log("logs/pay.log", szMessage);
                        PlayerInfo[CraftOffer[playerid]][pMats] -= CraftMats[playerid];
                        PlayerInfo[CraftOffer[playerid]][pArmsSkill]++;
                        CraftOffer[playerid] = INVALID_PLAYER_ID;
                        CraftId[playerid] = 0;
                        CraftMats[playerid] = 0;
                        return 1;
                    }
                    else {
                        SendClientMessageEx(playerid, COLOR_GRAD2, "You need to be the near the person that is selling you the weapon !");
                        return 1;
                    }
                }
                return 1;
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai cung cap cho ban Weapon!");
                return 1;
            }
        }
        else if(strcmp(params,"hopdong",true) == 0) {
            if(HitOffer[playerid] != INVALID_PLAYER_ID) {
                if(HitToGet[playerid] != INVALID_PLAYER_ID) {
                    if(IsPlayerConnected(HitToGet[playerid])) {
                        format(szMessage, sizeof(szMessage), "* %s has accepted the contract to kill %s.", GetPlayerNameEx(playerid),GetPlayerNameEx(HitToGet[playerid]));
                        SendClientMessageEx(HitOffer[playerid], COLOR_LIGHTBLUE, szMessage);
                        format(szMessage, sizeof(szMessage), "* You have accepted the contract to kill %s, you will recieve $%d when completed.", GetPlayerNameEx(HitToGet[playerid]), (PlayerInfo[HitToGet[playerid]][pHeadValue] / 4) * 2);
                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                        format(szMessage, sizeof(szMessage), "%s has been assigned to the contract on %s, for $%d.", GetPlayerNameEx(playerid), GetPlayerNameEx(HitToGet[playerid]),  (PlayerInfo[HitToGet[playerid]][pHeadValue] / 4) * 2);
                        SendGroupMessage(2, COLOR_YELLOW, szMessage);
                        GoChase[playerid] = HitToGet[playerid];
                        GetChased[HitToGet[playerid]] = playerid;
                        GotHit[HitToGet[playerid]] = 1;
                        HitToGet[playerid] = INVALID_PLAYER_ID;
                        HitOffer[playerid] = INVALID_PLAYER_ID;
                        return 1;
                    }
                    else {
                        HitToGet[playerid] = INVALID_PLAYER_ID;
                        HitOffer[playerid] = INVALID_PLAYER_ID;
                        return 1;
                    }
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai cung cap cho ban hop dong!");
                return 1;
            }
        }
        else if(strcmp(params,"sex",true) == 0) {
            if(SexOffer[playerid] != INVALID_PLAYER_ID) {
                if(GetPlayerCash(playerid) > SexPrice[playerid]) {
                    if (IsPlayerConnected(SexOffer[playerid])) {
                        new Car = GetPlayerVehicleID(playerid);
                        if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(SexOffer[playerid], Car)) {
                            GetPlayerName(SexOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(szMessage, sizeof(szMessage), "* You had sex with Whore %s, for $%s.", giveplayer, number_format(SexPrice[playerid]));
                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                            format(szMessage, sizeof(szMessage), "* %s had sex with you. You have earned $%d.", sendername, SexPrice[playerid]);
                            SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, szMessage);

                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(SexOffer[playerid], ipex, sizeof(ipex));
                            //format(szMessage, sizeof(szMessage), "[SEX] %s (IP:%s) had sex with %s (IP:%s) for %d.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(SexOffer[playerid]), ipex, SexPrice[playerid]);
                            //Log("logs/pay.log", szMessage);

                            if(SexPrice[playerid] >= 25000 && (PlayerInfo[SexOffer[playerid]][pLevel] <= 3 || PlayerInfo[playerid][pLevel] <= 3)) {
                                format(szMessage, sizeof(szMessage), "%s (IP:%s) had sex with %s (IP:%s) for $%s in this session.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(SexOffer[playerid]), ipex, number_format(SexPrice[playerid]));
                                Log("logs/pay.log", szMessage);
                                ABroadCast(COLOR_YELLOW, szMessage, 2);
                            }

                            ExtortionTurfsWarsZone(SexOffer[playerid], 4, SexPrice[playerid]);
                            GivePlayerCash(SexOffer[playerid], SexPrice[playerid]);
                            GivePlayerCash(playerid, -SexPrice[playerid]);
							if(DoubleXP) {
								SendClientMessageEx(playerid, COLOR_YELLOW, "You have gained 2 whore skill points instead of 1. (Double XP Active)");
								PlayerInfo[SexOffer[playerid]][pSexSkill] += 2;
								PlayerInfo[SexOffer[playerid]][pXP] += PlayerInfo[SexOffer[playerid]][pLevel] * XP_RATE * 2;
							}
							else
  							if(PlayerInfo[SexOffer[playerid]][pDoubleEXP] > 0 && !DoubleXP)
							{
								format(szMessage, sizeof(szMessage), "You have gained 2 whore skill points instead of 1. Ban con %d gio con lai nhan doi EXP token.", PlayerInfo[SexOffer[playerid]][pDoubleEXP]);
								SendClientMessageEx(SexOffer[playerid], COLOR_YELLOW, szMessage);
   								PlayerInfo[SexOffer[playerid]][pSexSkill] += 2;
								PlayerInfo[SexOffer[playerid]][pXP] += PlayerInfo[SexOffer[playerid]][pLevel] * XP_RATE * 2;
							}
							else
							{
  								PlayerInfo[SexOffer[playerid]][pSexSkill] += 1;
								PlayerInfo[SexOffer[playerid]][pXP] += PlayerInfo[SexOffer[playerid]][pLevel] * XP_RATE;
							}

                            if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 50) {
                                SendClientMessageEx(SexOffer[playerid], COLOR_YELLOW, "* Your Sex Skill is now Level 2, you offer better Sex (health) and less chance on STI.");
                            }
                            else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 100) {
                                SendClientMessageEx(SexOffer[playerid], COLOR_YELLOW, "* Your Sex Skill is now Level 3, you offer better Sex (health) and less chance on STI.");
                            }
                            else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 200) {
                                SendClientMessageEx(SexOffer[playerid], COLOR_YELLOW, "* Your Sex Skill is now Level 4, you offer better Sex (health) and less chance on STI.");
                            }
                            else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 400) {
                                SendClientMessageEx(SexOffer[playerid], COLOR_YELLOW, "* Your Sex Skill is now Level 5, you offer better Sex (health) and less chance on STI.");
                            }

                            if(!GetPVarType(playerid, "STD")) {
                                if(Condom[playerid] < 1) {
                                    new Float:health;
                                    new level = PlayerInfo[SexOffer[playerid]][pSexSkill];
                                    if(level >= 0 && level <= 50) {
                                        GetPlayerHealth(playerid, health);
                                        if(health < 100) {
                                            if(health > 90) {
                                                SetPlayerHealth(playerid, 100);
                                            }
                                            else {
                                                SetPlayerHealth(playerid, health + 10.0);
                                            }
                                        }
                                        new rand = random(sizeof(STD1));
                                        SetPVarInt(playerid, "STD", STD1[rand]);
                                        SetPVarInt(SexOffer[playerid], "STD", STD1[rand]);
                                        if(STD1[rand] == 0) {
                                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 10 Health + no STI while having Sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* You haven't got a STI while having Sex.");
                                        }
                                        else if(STD1[rand] == 1) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 10 Health and Chlamydia because of unsafe sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ban nhan duoc Chlamydia because of unsafe sex."); }
                                        else if(STD1[rand] == 2) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 10 Health and Gonorrhea because of unsafe sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ban nhan duoc Gonorrhea because of unsafe sex."); }
                                        else if(STD1[rand] == 3) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 10 Health and Syphilis because of unsafe sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ban nhan duoc Syphilis because of unsafe sex."); }
                                    }
                                    else if(level >= 51 && level <= 100) {
                                        GetPlayerHealth(playerid, health);
                                        if(health < 100) {
                                            if(health > 80) {
                                                SetPlayerHealth(playerid, 100);
                                            }
                                            else {
                                                SetPlayerHealth(playerid, health + 20.0);
                                            }
                                        }
                                        new rand = random(sizeof(STD2));
                                        SetPVarInt(playerid, "STD", STD2[rand]);
                                        SetPVarInt(SexOffer[playerid], "STD", STD2[rand]);
                                        if(STD2[rand] == 0) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 20 Health + no STD while having Sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* You haven't got a STI while having Sex."); }
                                        else if(STD2[rand] == 1) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 20 Health and Chlamydia because of unsafe sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ban nhan duoc Chlamydia because of unsafe sex."); }
                                        else if(STD2[rand] == 2) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 20 Health and Gonorrhea because of unsafe sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ban nhan duoc Gonorrhea because of unsafe sex."); }
                                        else if(STD2[rand] == 3) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 20 Health and Syphilis because of unsafe sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ban nhan duoc Syphilis because of unsafe sex."); }
                                    }
                                    else if(level >= 101 && level <= 200) {
                                        GetPlayerHealth(playerid, health);
                                        if(health < 100) {
                                            if(health > 70) {
                                                SetPlayerHealth(playerid, 100);
                                            }
                                            else {
                                                SetPlayerHealth(playerid, health + 30.0);
                                            }
                                        }
                                        new rand = random(sizeof(STD3));
                                        SetPVarInt(playerid, "STD", STD3[rand]);
                                        SetPVarInt(SexOffer[playerid], "STD", STD3[rand]);
                                        if(STD3[rand] == 0) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 30 Health + no STI while having Sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* You haven't got a STI while having Sex."); }
                                        else if(STD3[rand] == 1) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 30 Health and Chlamydia because of unsafe sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ban nhan duoc Chlamydia because of unsafe sex."); }
                                        else if(STD3[rand] == 2) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 30 Health and Gonorrhea because of unsafe sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ban nhan duoc Gonorrhea because of unsafe sex."); }
                                        else if(STD3[rand] == 3) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 30 Health and Syphilis because of unsafe sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ban nhan duoc Syphilis because of unsafe sex."); }
                                    }
                                    else if(level >= 201 && level <= 400) {
                                        GetPlayerHealth(playerid, health);
                                        if(health < 100) {
                                            if(health > 60) {
                                                SetPlayerHealth(playerid, 100);
                                            }
                                            else {
                                                SetPlayerHealth(playerid, health + 40.0);
                                            }
                                        }
                                        new rand = random(sizeof(STD4));
                                        SetPVarInt(playerid, "STD", STD4[rand]);
                                        SetPVarInt(SexOffer[playerid], "STD", STD4[rand]);
                                        if(STD4[rand] == 0) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 40 Health + no STI while having Sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* You haven't got a STI while having Sex."); }
                                        else if(STD4[rand] == 1) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 40 Health and Chlamydia because of unsafe sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ban nhan duoc Chlamydia because of unsafe sex."); }
                                        else if(STD4[rand] == 2) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 40 Health and Gonorrhea because of unsafe sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ban nhan duoc Gonorrhea because of unsafe sex."); }
                                        else if(STD4[rand] == 3) { SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You got 40 Health and Syphilis because of unsafe sex."); SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* Ban nhan duoc Syphilis because of unsafe sex."); }
                                    }
                                    else if(level >= 401) {
                                        GetPlayerHealth(playerid, health);
                                        if(health > 50) {
                                            SetPlayerHealth(playerid, 100);
                                        }
                                        else {
                                            SetPlayerHealth(playerid, health + 50.0);
                                        }
                                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Your sex skill level was high enough to give them a lot of health and no STD.");
                                        SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* The whore's sex skill level was high enough to give you a lot of health and no STD.");
                                    }
                                }
                                else {
                                    SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* The person used a Condom.");
                                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* You used a Condom.");
                                    Condom[playerid] --;
                                }
                            }
                            else {
                                SendClientMessageEx(SexOffer[playerid], COLOR_LIGHTBLUE, "* That person was already infected with a STI, can't get another one.");
                                return 1;
                            }
                            SexOffer[playerid] = INVALID_PLAYER_ID;
                            return 1;
                        }
                        else {
                            SendClientMessageEx(playerid, COLOR_GREY, "   You or the Whore are not both in a Car!");
                            return 1;
                        }
                    }                             //Connected or not
                    return 1;
                }
                else {
                    SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong co du Sex!");
                    return 1;
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   No sex has been offered!");
                return 1;
            }
        }
        else if(strcmp(params,"suaxe",true) == 0) {
            if(RepairOffer[playerid] != INVALID_PLAYER_ID) {
                if(GetPlayerCash(playerid) > RepairPrice[playerid]) {
                    if(IsPlayerInAnyVehicle(playerid)) {
                        if(IsPlayerConnected(RepairOffer[playerid])) {
                            RepairCar[playerid] = GetPlayerVehicleID(playerid);
                            RepairVehicle(RepairCar[playerid]);
							Vehicle_Armor(RepairCar[playerid]);
                            PlayerInfo[RepairOffer[playerid]][pTire]--;

                            GivePlayerCash(RepairOffer[playerid], RepairPrice[playerid]);
                            GivePlayerCash(playerid, -RepairPrice[playerid]);
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(RepairOffer[playerid], ipex, sizeof(ipex));
                            //format(szMessage, sizeof(szMessage), "%s(IP:%s) has repaired the vehicle from %s(IP:%s) for $%d", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(RepairOffer[playerid]), ipex, RepairPrice[playerid]);
                            //Log("logs/pay.log", szMessage);
                            format(szMessage, sizeof(szMessage), "* %s has repaired %s's vehicle.", GetPlayerNameEx(RepairOffer[playerid]), GetPlayerNameEx(playerid));
                            ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            format(szMessage, sizeof(szMessage), "* You repaired your car for $%d by Car Mechanic %s.",RepairPrice[playerid],GetPlayerNameEx(RepairOffer[playerid]));
                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);

                            if(RepairPrice[playerid] >= 25000 && (PlayerInfo[RepairOffer[playerid]][pLevel] <= 3 || PlayerInfo[RepairOffer[playerid]][pLevel] <= 3)) {
                                format(szMessage, sizeof(szMessage), "%s (IP:%s) has repaired %s (IP:%s) $%d in this session.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(RepairOffer[playerid]), ipex, RepairPrice[playerid]);
                                //Log("logs/pay.log", szMessage);
                                ABroadCast(COLOR_YELLOW, szMessage, 2);
                            }

                            format(szMessage, sizeof(szMessage), "* You fixed %s's car, the $%d has been added to your money on hand!",GetPlayerNameEx(playerid),RepairPrice[playerid]);
                            SendClientMessageEx(RepairOffer[playerid], COLOR_LIGHTBLUE, szMessage);
							if(DoubleXP) {
								SendClientMessageEx(playerid, COLOR_YELLOW, "You have gained 2 mechanic skill points instead of 1. (Double XP Active)");
								PlayerInfo[RepairOffer[playerid]][pMechSkill] += 2;
								PlayerInfo[RepairOffer[playerid]][pXP] += PlayerInfo[RepairOffer[playerid]][pLevel] * XP_RATE * 2;
							}
							else
   							if(PlayerInfo[RepairOffer[playerid]][pDoubleEXP] > 0 && !DoubleXP)
							{
								format(szMessage, sizeof(szMessage), "You have gained 2 mechanic skill points instead of 1. Ban con %d gio con lai nhan doi EXP token.", PlayerInfo[RepairOffer[playerid]][pDoubleEXP]);
								SendClientMessageEx(RepairOffer[playerid], COLOR_YELLOW, szMessage);
   								PlayerInfo[RepairOffer[playerid]][pMechSkill] += 2;
								PlayerInfo[RepairOffer[playerid]][pXP] += PlayerInfo[RepairOffer[playerid]][pLevel] * XP_RATE * 2;
							}
							else
							{
								PlayerInfo[RepairOffer[playerid]][pMechSkill] += 1;
								PlayerInfo[RepairOffer[playerid]][pXP] += PlayerInfo[RepairOffer[playerid]][pLevel] * XP_RATE;
							}

                            RepairOffer[playerid] = INVALID_PLAYER_ID;
                            RepairPrice[playerid] = 0;
                            return 1;
                        }
                        return 1;
                    }
                    return 1;
                }
                else {
                    SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong co du Repair!");
                    return 1;
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   No-one offered you to Repair your Car!");
                return 1;
            }
        }
        else if(strcmp(params,"refill",true) == 0) {
            if(RefillOffer[playerid] != INVALID_PLAYER_ID) {
                if(GetPlayerCash(playerid) > RefillPrice[playerid]) {
                    if(IsPlayerInAnyVehicle(playerid)) {
                        if(IsPlayerConnected(RefillOffer[playerid])) {

	      					if(!ProxDetectorS(8.0, RefillOffer[playerid], playerid))
		  					{
								return SendClientMessageEx(playerid, COLOR_GREY, "You are not near the mechanic.");
							}
                            new Float:fueltogive;
                            new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
                            if(level >= 0 && level < 100) { fueltogive = 2.0; }
                            else if(level >= 100 && level < 201) { fueltogive = 4.0; }
                            else if(level >= 201 && level < 300) { fueltogive = 6.0; }
                            else if(level >= 300 && level < 400) { fueltogive = 8.0; }
                            else if(level >= 1000) { fueltogive = 10.0; }
                            GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            new vehicleid = GetPlayerVehicleID(playerid);
                            VehicleFuel[vehicleid] = floatadd(VehicleFuel[vehicleid], fueltogive);
                            if(VehicleFuel[vehicleid] > 100.0) VehicleFuel[vehicleid] = 100.0;
                            for(new vehicleslot = 0; vehicleslot < MAX_PLAYERVEHICLES; vehicleslot++)
							{
								if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][vehicleslot][pvId]))
								{
									if(vehicleslot != -1) {
										format(szMessage, sizeof(szMessage), "UPDATE `vehicles` SET `pvFuel` = %0.5f WHERE `id` = '%d'", VehicleFuel[vehicleid], PlayerVehicleInfo[playerid][vehicleslot][pvSlotId]);
										mysql_function_query(MainPipeline, szMessage, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
									}
								}
							}
                            GivePlayerCash(RefillOffer[playerid], RefillPrice[playerid]);
                            GivePlayerCash(playerid, -RefillPrice[playerid]);
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(RefillOffer[playerid], ipex, sizeof(ipex));
                            //format(szMessage, sizeof(szMessage), "%s(IP:%s) has refilled the vehicle from %s(IP:%s) for $%d", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(RefillOffer[playerid]), ipex, RefillPrice[playerid]);
                            //Log("logs/pay.log", szMessage);
                            format(szMessage, sizeof(szMessage), "* %s has refilled %s's vehicle.", giveplayer, GetPlayerNameEx(playerid));
                            ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            format(szMessage, sizeof(szMessage), "* You have added %.2f fuel to your car for $%d by Car Mechanic %s.",fueltogive,RefillPrice[playerid],giveplayer);
                            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                            format(szMessage, sizeof(szMessage), "* You added %.2f fuel to %s's car, the $%d has been added to your money on hand!",fueltogive,sendername,RefillPrice[playerid]);
                            SendClientMessageEx(RefillOffer[playerid], COLOR_LIGHTBLUE, szMessage);

							if(DoubleXP) {
								SendClientMessageEx(playerid, COLOR_YELLOW, "You have gained 2 mechanic skill points instead of 1. (Double XP Active)");
								PlayerInfo[RefillOffer[playerid]][pMechSkill] += 2;
								PlayerInfo[RefillOffer[playerid]][pXP] += PlayerInfo[RefillOffer[playerid]][pLevel] * XP_RATE * 2;
							}
							else
 							if(PlayerInfo[RefillOffer[playerid]][pDoubleEXP] > 0 && !DoubleXP)
							{
								format(szMessage, sizeof(szMessage), "You have gained 2 mechanic skill points instead of 1. Ban con %d gio con lai nhan doi EXP token.", PlayerInfo[RefillOffer[playerid]][pDoubleEXP]);
								SendClientMessageEx(RefillOffer[playerid], COLOR_YELLOW, szMessage);
   								PlayerInfo[RefillOffer[playerid]][pMechSkill] += 2;
								PlayerInfo[RefillOffer[playerid]][pXP] += PlayerInfo[RefillOffer[playerid]][pLevel] * XP_RATE * 2;
							}
							else
							{
								PlayerInfo[RefillOffer[playerid]][pMechSkill] += 1;
								PlayerInfo[RefillOffer[playerid]][pXP] += PlayerInfo[RefillOffer[playerid]][pLevel] * XP_RATE;
							}

                            if(RefillPrice[playerid] >= 30000 && (PlayerInfo[playerid][pLevel] <= 3 || PlayerInfo[RefillOffer[playerid]][pLevel] <= 3)) {
                                format(szMessage, sizeof(szMessage), "%s (IP:%s) has refueled %s (IP:%s) $%d in this session.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(RefillOffer[playerid]), ipex, RefillPrice[playerid]);
                                //Log("logs/pay.log", szMessage);
                                ABroadCast(COLOR_YELLOW, szMessage, 2);
                            }

                            RefillOffer[playerid] = INVALID_PLAYER_ID;
                            RefillPrice[playerid] = 0;
                            return 1;
                        }
                        return 1;
                    }
                    return 1;
                }
                else {
                    SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong co du refill!");
                    return 1;
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GREY, "   No-one offered you to refill your Car!");
                return 1;
            }
        }

        else { return 1; }
    }                                             //not connected
    return 1;
}



#include "./includes/Job/truckernew.inc"
CMD:xinviec(playerid, params[]) {
	return cmd_join(playerid, params);
}
CMD:join(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the xin viec trong mot chiec xe.");
	if(GetPlayerState(playerid) == 1 && PlayerInfo[playerid][pJob] == 0 || PlayerInfo[playerid][pJob2] == 0) {
		if(IsPlayerInRangeOfPoint(playerid,3.0, 2211.2983, -2664.5122, 13.5469)) {
			if(PlayerInfo[playerid][pJob] == 0){
				GettingJob[playerid] = 20; // Trucker
				return 1;
			}
			if((PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pFamed] > 0) && PlayerInfo[playerid][pJob2] == 0) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban nhan them cong viec phu. Chi VIP/Famed moi lam duoc dieu nay");
				GettingJob2[playerid] = 20;
				return 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2354.5576,-658.5878,128.0547)) {
			if(PlayerInfo[playerid][pJob] == 0){
				GettingJob[playerid] = 24; // san xuat 
				return 1;
			}
			if((PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pFamed] > 0) && PlayerInfo[playerid][pJob2] == 0) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban nhan them cong viec phu. Chi VIP/Famed moi lam duoc dieu nay");
				GettingJob2[playerid] = 24;
				return 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2098.9050,-1799.5736,13.3889)) {
			if(PlayerInfo[playerid][pJob] == 0){
				GettingJob[playerid] = 21; // Pizza 
				return 1;
			}
			if((PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pFamed] > 0) && PlayerInfo[playerid][pJob2] == 0) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban nhan them cong viec phu. Chi VIP/Famed moi lam duoc dieu nay");
				GettingJob2[playerid] = 21;
				return 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2284.5396,-2211.0012,13.5469)) {
			if(PlayerInfo[playerid][pJob] == 0){
				GettingJob[playerid] = 22; 
				return 1;
			}
			if((PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pFamed] > 0) && PlayerInfo[playerid][pJob2] == 0) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban nhan them cong viec phu. Chi VIP/Famed moi lam duoc dieu nay");
				GettingJob2[playerid] = 22;
				return 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 584.7975,870.5073,-42.4973)) {
			if(PlayerInfo[playerid][pJob] == 0){
				GettingJob[playerid] = 22; // khaithac 
				return 1;
			}
			if((PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pFamed] > 0) && PlayerInfo[playerid][pJob2] == 0) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban nhan them cong viec phu. Chi VIP/Famed moi lam duoc dieu nay");
				GettingJob2[playerid] = 22;
				return 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,2607.03,-1381.83,34.74)){
			if(PlayerInfo[playerid][pJob] == 0){
				GettingJob[playerid] = 25; // suaxe
				return 1;
			}
			if((PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pFamed] > 0) && PlayerInfo[playerid][pJob2] == 0) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban nhan them cong viec phu. Chi VIP/Famed moi lam duoc dieu nay");
				GettingJob2[playerid] = 25;
				return 1;
			}
		}
		else if (IsPlayerInRangeOfPoint(playerid,3.0, 2072.0076,-1835.2234,13.5545)) {
			if(PlayerInfo[playerid][pJob] == 0){
				GettingJob[playerid] = 7; // suaxe
				return 1;
			}
			if((PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pFamed] > 0) && PlayerInfo[playerid][pJob2] == 0) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban nhan them cong viec phu. Chi VIP/Famed moi lam duoc dieu nay");
				GettingJob2[playerid] = 7;
				return 1;
			}
		}
		else if (IsPlayerInRangeOfPoint(playerid,3.0, 2090.7449,-2068.3030,17.3572)){
			if(PlayerInfo[playerid][pJob] == 0){
				GettingJob[playerid] = 23; // nguoivanchuyen
				return 1;
			}
			if((PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pFamed] > 0) && PlayerInfo[playerid][pJob2] == 0) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban nhan them cong viec phu. Chi VIP/Famed moi lam duoc dieu nay");
				GettingJob2[playerid] = 23;
				return 1;
			}
		}
		else if (IsPlayerInRangeOfPoint(playerid,3.0, 2425.5254,-1779.2075,13.5469)){
			if(PlayerInfo[playerid][pJob] == 0){
				GettingJob[playerid] = 18; // thucong
				return 1;
			}
			if((PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pFamed] > 0) && PlayerInfo[playerid][pJob2] == 0) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban nhan them cong viec phu. Chi VIP/Famed moi lam duoc dieu nay");
				GettingJob2[playerid] = 18;
				return 1;
			}
		}
		else if (IsPlayerInRangeOfPoint(playerid,3.0, 2197.3423,-1972.5236,13.5585)){
			if(PlayerInfo[playerid][pJob] == 0){
				GettingJob[playerid] = 10; // than
				return 1;
			}
			if((PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pFamed] > 0) && PlayerInfo[playerid][pJob2] == 0) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban nhan them cong viec phu. Chi VIP/Famed moi lam duoc dieu nay");
				GettingJob2[playerid] = 10;
				return 1;
			}
		}
		else if (IsPlayerInRangeOfPoint(playerid,3.0, 1367.2133,-1276.6790,13.5469)){
			if(PlayerInfo[playerid][pJob] == 0){
				GettingJob[playerid] = 9; // than
				return 1;
			}
			if((PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pFamed] > 0) && PlayerInfo[playerid][pJob2] == 0) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban nhan them cong viec phu. Chi VIP/Famed moi lam duoc dieu nay");
				GettingJob2[playerid] = 9;
				return 1;
			}
		}
		
	}
	else {
		if(PlayerInfo[playerid][pDonateRank] == 0){
			SendClientMessageEx(playerid, COLOR_GREY, "Ban dang co mot cong viec, su dung /nghiviec de thoat khoi cong viec!");
            SendClientMessageEx(playerid, COLOR_YELLOW, "Chi VIP/Famed moi co the nhan duoc hai cong viec!");
		}
		else {
			SendClientMessageEx(playerid, COLOR_GREY, "Ban dang co 2 cong viec, su dung /nghiviec de thoat khoi cong viec!");
		}
	}
    return 1;
}


CMD:sellgunsssss(playerid, params[])
{
    new string[128];
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lam dieu nay khi dang trong su kien Hunger Games!");
    if(GetPVarInt(playerid, "IsInArena") >= 0) {
        SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong the lam dieu nay khi dang trong arena!");
        return 1;
    }
    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1367.2133,-1276.6790,13.5469))
    {
    	SendClientMessage(playerid, COLOR_GREY, "Ban can o cho che tao vu khi moi co the che tao");
    }
   	if(GetPVarInt( playerid, "EventToken") != 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang trong su kien.");
		return 1;
	}
    if (PlayerInfo[playerid][pJob] != 9 && PlayerInfo[playerid][pJob2] != 9) {
        SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong phai Nguoi che tao vu khi!");
        return 1;
    }
    if(WatchingTV[playerid] != 0) {
        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang xem TV!");
        return 1;
    }
    if (PlayerInfo[playerid][pScrewdriver] == 0) {
        SendClientMessageEx(playerid,COLOR_GREY,"   Ban phai la tho thu cong va chiec tua vit de che tao vu khi!");
        return 1;
    }
    if (PlayerInfo[playerid][pJailTime] > 0) {
        SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong the dua sung khi dang trong tu!");
        return 1;
    }
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
    if (GetPVarInt(playerid, "ArmsTimer") > 0) {
        format(string, sizeof(string), "   Ban phai doi %d giay truoc khi dua vu khi cho nguoi  khac.", GetPVarInt(playerid, "ArmsTimer"));
        SendClientMessageEx(playerid,COLOR_GREY,string);
        return 1;
    }
    if(PlayerInfo[playerid][pHospital] > 0) {
        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the tao vu khi khi dang o benh vien.");
        return 1;
    }

    new giveplayerid,x_weapon[20],weapon,price,storageid;

	/*// Find the storageid of the storagedevice.
	new bool:itemEquipped = false;

	for(new i = 0; i < 3; i++)
	{
		if(StorageInfo[playerid][i][sAttached] == 1) {
			storageid = i;
			itemEquipped = true;
		}
	}
	if(itemEquipped == false) return SendClientMessageEx(playerid, COLOR_WHITE, "You don't have a storage device equipped! - /storagehelp");
	*/

    if(sscanf(params, "us[20]", giveplayerid, x_weapon)) {
        SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
        SendClientMessageEx(playerid, COLOR_YELLOW, "<< Danh sach vu khi >>");
        new level = PlayerInfo[playerid][pArmsSkill];
        if(level >= 0 && level < 100) {
            SendClientMessageEx(playerid, COLOR_GRAD1, "sdpistol(2500)	flowers(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "9mm(2500)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "knuckles(250)");
        }
        else if(level >= 100 && level < 201) {
            SendClientMessageEx(playerid, COLOR_GRAD1, "sdpistol(2500)	flowers(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "9mm(2500)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "shotgun(4500)	knuckles(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "baseballbat(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "cane(250)");
        }
        else if(level >= 201 && level < 300) {
            SendClientMessageEx(playerid, COLOR_GRAD1, "sdpistol(2500)	flowers(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "9mm(2500)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "shotgun(4500)	knuckles(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "mp5(6500)		baseballbat(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "cane(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "shovel(250)");
        }
        else if(level >= 300 && level < 400) {
            SendClientMessageEx(playerid, COLOR_GRAD1, "sdpistol(2500)	flowers(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "9mm(2500)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "shotgun(4500)	knuckles(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "mp5(6500)   		baseballbat(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "cane(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "shovel(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "golfclub(250)	poolcue(250)");
        }
        else if(level >= 1000) {
            SendClientMessageEx(playerid, COLOR_GRAD1, "sdpistol(2500)	flowers(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "shotgun(4500)	knuckles(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "mp5(6500)        baseballbat(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "rifle(800)	    cane(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "shovel(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "golfclub(250)	poolcue(250)");
            SendClientMessageEx(playerid, COLOR_GRAD1, "dildo(250)	    katana(250)");
        }
        /*
		if(PlayerInfo[playerid][pDonateRank] >= 3)
        {
       		SendClientMessageEx(playerid, COLOR_YELLOW, "Gold+ VIP Feature: AK-47(10000)");
        }
		*/
        SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
        SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /chetaovukhi [nguoi choi] [ten vu khi]");
        return 1;
    }

	if(!IsPlayerConnected(giveplayerid)) {
		return SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi choi khong hop le.");
	}
	if(HungerPlayerInfo[giveplayerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi do khong the nhan vu khi vao luc nay.");
    if(strcmp(x_weapon,"dildo",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 400) return SendClientMessageEx(playerid, COLOR_GREY, " Ky nang cong viec cua ban khong du de che tao vu khi nay!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 10; price = 250;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"katana",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 400) return SendClientMessageEx(playerid, COLOR_GREY, " Ky nang cong viec cua ban khong du de che tao vu khi nay!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 8; price = 250;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }
    else if(strcmp(x_weapon,"golfclub",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 200) return SendClientMessageEx(playerid, COLOR_GREY, " Ky nang cong viec cua ban khong du de che tao vu khi nay!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 2; price = 250;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"poolcue",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 200) return SendClientMessageEx(playerid, COLOR_GREY, " Ky nang cong viec cua ban khong du de che tao vu khi nay!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 7; price = 250;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"shovel",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 100) return SendClientMessageEx(playerid, COLOR_GREY, " Ky nang cong viec cua ban khong du de che tao vu khi nay!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 6; price = 250;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"cane",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 50) return SendClientMessageEx(playerid, COLOR_GREY, " Ky nang cong viec cua ban khong du de che tao vu khi nay!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 15; price = 250;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"baseballbat",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 50) return SendClientMessageEx(playerid, COLOR_GREY, " Ky nang cong viec cua ban khong du de che tao vu khi nay!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 5; price = 250;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"knuckles",true) == 0) {
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 1; price = 250;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"sdpistol",true) == 0) {
        if(PlayerInfo[playerid][pMats] > 149) {
            weapon = 23; price = 2500;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"flowers",true) == 0) {
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 14; price = 250;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }


    else if(strcmp(x_weapon,"mp5",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 50) return SendClientMessageEx(playerid, COLOR_GREY, " Ky nang cong viec cua ban khong du de che tao vu khi nay!");
        if(PlayerInfo[playerid][pMats] > 649) {
            weapon = 29; price = 6500;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"shotgun",true) == 0) {
        if(PlayerInfo[playerid][pMats] > 399) {
            weapon = 25; price = 4500;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"9mm",true) == 0) {
        if(PlayerInfo[playerid][pMats] > 99) {
            weapon = 22; price = 2500;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }



    else if(strcmp(x_weapon,"rifle",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 50) return SendClientMessageEx(playerid, COLOR_GREY, " Ky nang cong viec cua ban khong du de che tao vu khi nay!");
        if(PlayerInfo[playerid][pMats] > 799) {
            weapon = 33; price = 8000;
        }
        else {
            SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong co du vat lieu!");
            return 1;
        }
    }


    else { SendClientMessageEx(playerid,COLOR_GREY,"   Ten vu  khi khong  hop le!"); return 1; }
    if (ProxDetectorS(5.0, playerid, giveplayerid)) {
        if(PlayerInfo[giveplayerid][pConnectHours] < 2 || PlayerInfo[giveplayerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi do dang bo han che so huu vu  khi!");

        if(giveplayerid == playerid) {
            format(string, sizeof(string), "   Ban da tao cho minh mot %s.", x_weapon);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            SendClientMessageEx(playerid, COLOR_GRAD1, string);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            switch( PlayerInfo[playerid][pSex] ) {
                case 1: format(string, sizeof(string), "* %s da tao mot vu khi tu vat lieu cua minh.", GetPlayerNameEx(playerid));
                case 2: format(string, sizeof(string), "* %s da tao mot vu khi tu vat lieu cua minh.", GetPlayerNameEx(playerid));
            }
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            GivePlayerValidWeapon(playerid,weapon,50000);
            PlayerInfo[playerid][pMats] -= price;
            if(weapon > 15)
			{
				if(PlayerInfo[playerid][pDonateRank] == 2 || PlayerInfo[playerid][pDonateRank] == 3)
 				{
  					PlayerInfo[playerid][pArmsSkill] += 1;
 				}
				else if(DoubleXP) {
					SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da duoc 2 diem ky nang chet tao vu khi thay vi 1. (Double XP Active)");
					PlayerInfo[playerid][pArmsSkill] += 1;
					PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
				}
  				else if(PlayerInfo[playerid][pDoubleEXP] > 0 && PlayerInfo[playerid][pDonateRank] < 2 && !DoubleXP)
				{
					format(string, sizeof(string), "Ban da duoc 2 diem ky nang chet tao vu khi thay vi 1. Ban con %d gio con lai nhan doi EXP token.", PlayerInfo[playerid][pDoubleEXP]);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					PlayerInfo[playerid][pArmsSkill] += 1;
					PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
				}
 				else
  				{
  					PlayerInfo[playerid][pArmsSkill]++;
					PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE;
   				}
            }
            if(PlayerInfo[playerid][pAdmin] < 3) {
                SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
            }
            if(PlayerInfo[playerid][pArmsSkill] == 200)
            { SendClientMessageEx(playerid, COLOR_YELLOW, "* Ky nang che tao vu khi cua ban dat cap do 2, se co them nhieu loai vu khi de ban."); }
            else if(PlayerInfo[playerid][pArmsSkill] == 300)
            { SendClientMessageEx(playerid, COLOR_YELLOW, "* Ky nang che tao vu khi cua ban dat cap do 3, se co them nhieu loai vu khi de ban."); }
            else if(PlayerInfo[playerid][pArmsSkill] == 400)
            { SendClientMessageEx(playerid, COLOR_YELLOW, "* Ky nang che tao vu khi cua ban dat cap do 4, se co them nhieu loai vu khi de ban."); }
            else if(PlayerInfo[playerid][pArmsSkill] == 1000)
            { SendClientMessageEx(playerid, COLOR_YELLOW, "* Ky nang che tao vu khi cua ban dat cap do 5, se co them nhieu loai vu khi de ban."); }
            return 1;
        }

        format(string, sizeof(string), "* Ban cung cap cho %s mua mot khau %s.", GetPlayerNameEx(giveplayerid), x_weapon);
        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
        format(string, sizeof(string), "* Nguoi che tao vu khi %s muon ban cho ban mot %s, (Su dung /chapnhan vukhi) de mua.", GetPlayerNameEx(playerid), x_weapon);
        SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
        GunOffer[giveplayerid] = playerid;
		GunStorageID[giveplayerid] = storageid;
        GunId[giveplayerid] = weapon;
        GunMats[giveplayerid] = price;
	 	SetPVarInt(giveplayerid, "WeaponSeller_SQLId", GetPlayerSQLId(playerid));
        if(PlayerInfo[playerid][pAdmin] < 3) {
            SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
        return 1;
    }
	return 1;
}

CMD:window(playerid, params[])
{
	new string[128];
    if(InsidePlane[playerid] != INVALID_VEHICLE_ID)
	{
        if(GetPlayerInterior(playerid) != 0)
		{
            new
                Float: fSpecPos[6];

            GetPlayerPos(playerid, fSpecPos[0], fSpecPos[1], fSpecPos[2]);
            GetPlayerFacingAngle(playerid, fSpecPos[3]);
            GetPlayerHealth(playerid, fSpecPos[4]);
            GetPlayerArmour(playerid, fSpecPos[5]);

            SetPVarFloat(playerid, "air_Xpos", fSpecPos[0]);
            SetPVarFloat(playerid, "air_Ypos", fSpecPos[1]);
            SetPVarFloat(playerid, "air_Zpos", fSpecPos[2]);
            SetPVarFloat(playerid, "air_Rpos", fSpecPos[3]);
            SetPVarFloat(playerid, "air_HP", fSpecPos[4]);
            SetPVarFloat(playerid, "air_Arm", fSpecPos[5]);
            SetPVarInt(playerid, "air_Int", GetPlayerInterior(playerid));
            SetPVarInt(playerid, "air_Mode", 1);

            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            TogglePlayerSpectating(playerid, 1);
            PlayerSpectateVehicle(playerid, InsidePlane[playerid]);

            format(string, sizeof(string), "* %s nhin ra ngoai cua so.", GetPlayerNameEx(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        else TogglePlayerSpectating(playerid, 0);
    }
    return 1;
}

CMD:changedoorpass(playerid, params[])
{
    for(new i = 0; i < sizeof(DDoorsInfo); i++) {
        if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddExteriorVW] || IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddInteriorVW])
		{
			new doorpass[24];
			if(sscanf(params, "s[24]", doorpass)) { SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /changedoorpass [pass]"); SendClientMessageEx(playerid, COLOR_WHITE, "To remove the password on the door set the password to 'none'."); return 1; }
        	if(DDoorsInfo[i][ddType] == 2 && DDoorsInfo[i][ddFaction] != INVALID_GROUP_ID && PlayerInfo[playerid][pLeader] == DDoorsInfo[i][ddFaction])
			{
				format(DDoorsInfo[i][ddPass], 24, "%s", doorpass);
				SendClientMessageEx(playerid, COLOR_WHITE, "Ban da thay doi mat khau cua canh cua nay.");
				SaveDynamicDoor(i);
			}
			else if(DDoorsInfo[i][ddType] == 3 && DDoorsInfo[i][ddFamily] != INVALID_FAMILY_ID && PlayerInfo[playerid][pFMember] == DDoorsInfo[i][ddFamily] && PlayerInfo[playerid][pRank] == 6)
			{
				format(DDoorsInfo[i][ddPass], 24, "%s", doorpass);
				SendClientMessageEx(playerid, COLOR_WHITE, "Ban da thay doi mat khau cua canh cua nay.");
				SaveDynamicDoor(i);
			}
			else if(DDoorsInfo[i][ddType] == 1 && DDoorsInfo[i][ddOwner] == GetPlayerSQLId(playerid))
			{
				format(DDoorsInfo[i][ddPass], 24, "%s", doorpass);
				SendClientMessageEx(playerid, COLOR_WHITE, "Ban da thay doi mat khau cua canh cua nay.");
				SaveDynamicDoor(i);
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the thay doi mat khau tren canh cua nay.");
		}
	}
	return 1;
}

CMD:lockdoor(playerid, params[])
{
    for(new i = 0; i < sizeof(DDoorsInfo); i++) {
        if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddExteriorVW] || IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddInteriorVW])
		{
        	if(DDoorsInfo[i][ddType] == 2 && DDoorsInfo[i][ddFaction] != INVALID_GROUP_ID && PlayerInfo[playerid][pLeader] == DDoorsInfo[i][ddFaction])
			{
				if(DDoorsInfo[i][ddLocked] == 0)
				{
					DDoorsInfo[i][ddLocked] = 1;
					SendClientMessageEx(playerid, COLOR_WHITE, "Canh cua nay da bi khoa.");
				}
				else if(DDoorsInfo[i][ddLocked] == 1)
				{
					DDoorsInfo[i][ddLocked] = 0;
					SendClientMessageEx(playerid, COLOR_GREY, "Canh cua nay da duoc mo.");
				}
			}
			else if(DDoorsInfo[i][ddType] == 3 && DDoorsInfo[i][ddFamily] != INVALID_FAMILY_ID && PlayerInfo[playerid][pFMember] == DDoorsInfo[i][ddFamily] && PlayerInfo[playerid][pRank] == 6)
			{
				if(DDoorsInfo[i][ddLocked] == 0)
				{
					DDoorsInfo[i][ddLocked] = 1;
					SendClientMessageEx(playerid, COLOR_WHITE, "Canh cua nay da bi khoa.");
				}
				else if(DDoorsInfo[i][ddLocked] == 1)
				{
					DDoorsInfo[i][ddLocked] = 0;
					SendClientMessageEx(playerid, COLOR_GREY, "Canh cua nay da duoc mo.");
				}
			}
			else if(DDoorsInfo[i][ddType] == 1 && DDoorsInfo[i][ddOwner] == GetPlayerSQLId(playerid))
			{
				if(DDoorsInfo[i][ddLocked] == 0)
				{
					DDoorsInfo[i][ddLocked] = 1;
					SendClientMessageEx(playerid, COLOR_WHITE, "Canh cua nay da bi khoa.");
				}
				else if(DDoorsInfo[i][ddLocked] == 1)
				{
					DDoorsInfo[i][ddLocked] = 0;
					SendClientMessageEx(playerid, COLOR_GREY, "Canh cua nay da duoc mo.");
				}
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the khoa cua nay");
		}
	}
	return 1;
}

CMD:doorpass(playerid, params[])
{
    for(new i = 0; i < sizeof(DDoorsInfo); i++) {
        if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddExteriorVW] || IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddInteriorVW]) {
        	if(DDoorsInfo[i][ddPass] < 1)
                return SendClientMessageEx(playerid, COLOR_GREY, "Canh cua nay khong duoc phep, ban co the khoa");
         	if(strcmp(DDoorsInfo[i][ddPass], "None", true) == 0)
                return SendClientMessageEx(playerid, COLOR_GREY, "Canh cua nay khong duoc phep, ban co the khoa");

			ShowPlayerDialog(playerid, DOORLOCK, DIALOG_STYLE_INPUT, "Cua an ninh","Nhap mat khau cua","Dang nhap","Huy bo");
			SetPVarInt(playerid, "Door", i);
		}
	}
	return 1;
}

CMD:carol(playerid, params[]) // Christmas Event
{
	new year, month, day, string[256], cstring[32];
	getdate(year, month, day);
	if(month == 12 && day == 24)
	{
		if(PlayerInfo[playerid][pConnectHours] > 2)
		{
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]))
				{
					if(PlayerInfo[playerid][pTrickortreat] == 0)
					{
						GiftPlayer(MAX_PLAYERS, playerid);
						switch(PlayerInfo[playerid][pDonateRank])
						{
							case 0, 1: PlayerInfo[playerid][pTrickortreat] = 5;
							case 2: PlayerInfo[playerid][pTrickortreat] = 4;
							case 3: PlayerInfo[playerid][pTrickortreat] = 3;
							case 4: PlayerInfo[playerid][pTrickortreat] = 2;
							case 5: PlayerInfo[playerid][pTrickortreat] = 2;
						}

						new rand = Random(1, 5);
						switch(rand)
						{
							case 1: cstring = "Deck the Halls";
							case 2: cstring = "We Wish You a Merry Christmas";
							case 3: cstring = "Jingle Bells";
							case 4: cstring = "Jingle Bells Rock";
							case 5: cstring = "Silent Night";
							default: cstring = "Deck the Halls";
						}

						format(string, sizeof(string), "* %s begins to sing the Christmas Carol %s.",GetPlayerNameEx(playerid), cstring);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						return 1;
					}
					else
					{
						if(GetPVarInt(playerid, "PinConfirmed"))
						{
							format(string, sizeof(string),"Item: Reset Caroling Timer\nCredits cua ban: %s\nCost: {FFD700}%s{A9C4E4}\nCredits con lai: %s", number_format(PlayerInfo[playerid][pCredits]), number_format(20), number_format(PlayerInfo[playerid][pCredits]-20));
							ShowPlayerDialog( playerid, DIALOG_SHOPTOTRESET, DIALOG_STYLE_MSGBOX, "Reset Timer", string, "Purchase", "Exit" );
							SendClientMessageEx(playerid, COLOR_GRAD2, "You have already sang in the last few hours!");
							return 1;
						}
						else
						{
							PinLogin(playerid);
							SendClientMessageEx(playerid, COLOR_GRAD2, "You have already sang in the last few hours!");
							return 1;
						}
					}
				}
			}
			SendClientMessageEx(playerid, COLOR_GREY, "You are not at a house. (green house icon)");
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "You have not played 2 hours.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "It isn't Christmas Eve!");
	return 1;
}

CMD:trickortreat(playerid, params[])
{
	new year, month, day, string[256];
	getdate(year, month, day);
	if(month == 10 && day == 31)
	{
		if(PlayerInfo[playerid][pConnectHours] > 2)
		{
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]))
				{
					if(PlayerInfo[playerid][pTrickortreat] == 0)
					{
						GiftPlayer(MAX_PLAYERS, playerid);
						switch(PlayerInfo[playerid][pDonateRank])
						{
							case 0, 1: PlayerInfo[playerid][pTrickortreat] = 5;
							case 2: PlayerInfo[playerid][pTrickortreat] = 4;
							case 3: PlayerInfo[playerid][pTrickortreat] = 3;
							case 4: PlayerInfo[playerid][pTrickortreat] = 2;
							case 5: PlayerInfo[playerid][pTrickortreat] = 2;
						}
						return 1;
					}
					else
					{
						if(GetPVarInt(playerid, "PinConfirmed"))
						{
							format(string, sizeof(string),"Item: Reset Trick or Treat Timer\nCredits cua ban: %s\nCost: {FFD700}%s{A9C4E4}\nCredits con lai: %s", number_format(PlayerInfo[playerid][pCredits]), number_format(20), number_format(PlayerInfo[playerid][pCredits]-20));
							ShowPlayerDialog( playerid, DIALOG_SHOPTOTRESET, DIALOG_STYLE_MSGBOX, "Reset Gift Timer", string, "Purchase", "Exit" );
							SendClientMessageEx(playerid, COLOR_GRAD2, "You have already trick or treated in the last few hours!");
							return 1;
						}
						else
						{
							PinLogin(playerid);
							SendClientMessageEx(playerid, COLOR_GRAD2, "You have already trick or treated in the last few hours!");
							return 1;
						}
					}
				}
			}
			SendClientMessageEx(playerid, COLOR_GREY, "You are not at a house. (green house icon)");
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "You have not played 2 hours.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "It isn't Halloween!");
	return 1;
}

CMD:vao(playerid, params[])
{
	return cmd_enter(playerid,params);
}

CMD:enter(playerid, params[])
{
    if(GetPVarInt(playerid, "IsInArena") >= 0) {
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay tai dau' truong!");
        return 1;
    }
	if(GetPVarType(playerid, "StreamPrep")) {
		return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu do vao luc nay , hay doi den khi khi ket thuc.");
	}
    if( PlayerCuffed[playerid] >= 1 ) {
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay ngay bay gio.");
        return 1;
    }
	new cCar = GetClosestCar(playerid);
    for(new i = 0; i < sizeof(DDoorsInfo); i++) {
        if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddExteriorVW]) {
            if(DDoorsInfo[i][ddVIP] > 0 && PlayerInfo[playerid][pDonateRank] < DDoorsInfo[i][ddVIP]) {
                SendClientMessageEx(playerid, COLOR_GRAD2, "You can not enter, you are not a high enough VIP level.");
                return 1;
            }

            if(DDoorsInfo[i][ddFamed] > 0 && PlayerInfo[playerid][pFamed] < DDoorsInfo[i][ddFamed]) {
                SendClientMessageEx(playerid, COLOR_GRAD2, "You can not enter, you're not a high enough famed level.");
                return 1;
            }

			if(DDoorsInfo[i][ddDPC] > 0 && PlayerInfo[playerid][pRewardHours] < 150) {
                SendClientMessageEx(playerid, COLOR_GRAD2, "You can not enter, you are not a Dedicated Player.");
                return 1;
            }

            if(DDoorsInfo[i][ddFamily] > 0) {
                if(PlayerInfo[playerid][pFMember] != DDoorsInfo[i][ddFamily]) return SendClientMessageEx(playerid, COLOR_GRAD2, "You can not enter, this door is family restricted.");
				else if(PlayerInfo[playerid][pRank] < DDoorsInfo[i][ddRank]) return SendClientMessageEx(playerid, COLOR_GRAD2, "You are not high enough rank to enter this door.");
            }

			if(DDoorsInfo[i][ddAllegiance] > 0) {
                if(arrGroupData[PlayerInfo[playerid][pMember]][g_iAllegiance] != DDoorsInfo[i][ddAllegiance]) return SendClientMessageEx(playerid, COLOR_GRAD2, "You can not enter, this door is nation restricted.");
				else if(PlayerInfo[playerid][pRank] < DDoorsInfo[i][ddRank]) return SendClientMessageEx(playerid, COLOR_GRAD2, "You are not high enough rank to enter this door.");
            }

			if(DDoorsInfo[i][ddGroupType] > 0) {
                if(arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] != DDoorsInfo[i][ddGroupType] && arrGroupData[PlayerInfo[playerid][pMember]][g_iAllegiance] != DDoorsInfo[i][ddAllegiance]) {
					return SendClientMessageEx(playerid, COLOR_GRAD2, "You can not enter, this door is faction restricted.");
				}
				else if(PlayerInfo[playerid][pRank] < DDoorsInfo[i][ddRank]) return SendClientMessageEx(playerid, COLOR_GRAD2, "You are not high enough rank to enter this door.");
            }

            if(DDoorsInfo[i][ddFaction] != INVALID_GROUP_ID) {
                if(PlayerInfo[playerid][pMember] != DDoorsInfo[i][ddFaction]) return SendClientMessageEx(playerid, COLOR_GRAD2, "You can not enter, this door is faction restricted.");
				else if(PlayerInfo[playerid][pRank] < DDoorsInfo[i][ddRank]) return SendClientMessageEx(playerid, COLOR_GRAD2, "You are not high enough rank to enter this door.");
            }

            if(DDoorsInfo[i][ddAdmin] > 0 && PlayerInfo[playerid][pAdmin] < DDoorsInfo[i][ddAdmin]) {
                SendClientMessageEx(playerid, COLOR_GRAD2, "You can not enter, you are not a high enough admin level.");
                return 1;
            }

            if(DDoorsInfo[i][ddWanted] > 0 && PlayerInfo[playerid][pWantedLevel] != 0) {
                SendClientMessageEx(playerid, COLOR_GRAD2, "You can not enter, this door restricts those with wanted levels.");
                return 1;
            }

			if(DDoorsInfo[i][ddLocked] == 1) {
			    return SendClientMessageEx(playerid, COLOR_GRAD2, "This door is currently locked.");
			}

            SetPlayerInterior(playerid,DDoorsInfo[i][ddInteriorInt]);
            PlayerInfo[playerid][pInt] = DDoorsInfo[i][ddInteriorInt];
            PlayerInfo[playerid][pVW] = DDoorsInfo[i][ddInteriorVW];
            SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddInteriorVW]);
            if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
                SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
                SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorA]);
                SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorVW]);
                LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorInt]);
	            if(GetPVarInt(playerid, "tpForkliftTimer") > 0)
				{
				    SetPVarInt(playerid, "tpJustEntered", 1);
				    new Float: pX, Float: pY, Float: pZ;
					GetPlayerPos(playerid, pX, pY, pZ);
					SetPVarFloat(playerid, "tpForkliftX", pX);
			 		SetPVarFloat(playerid, "tpForkliftY", pY);
			  		SetPVarFloat(playerid, "tpForkliftZ", pZ);
				}
                if(DynVeh[GetPlayerVehicleID(playerid)] != -1)
				{
				    new vw[1];
					vw[0] = GetVehicleVirtualWorld(GetPlayerVehicleID(playerid));
				    if(DynVehicleInfo[DynVeh[GetPlayerVehicleID(playerid)]][gv_iAttachedObjectModel][0] != INVALID_OBJECT_ID)
				    {
				    	Streamer_SetArrayData(STREAMER_TYPE_OBJECT, DynVehicleInfo[DynVeh[GetPlayerVehicleID(playerid)]][gv_iAttachedObjectID][0], E_STREAMER_WORLD_ID, vw[0]);

					}
					if(DynVehicleInfo[DynVeh[GetPlayerVehicleID(playerid)]][gv_iAttachedObjectModel][1] != INVALID_OBJECT_ID)
				    {
						Streamer_SetArrayData(STREAMER_TYPE_OBJECT, DynVehicleInfo[DynVeh[GetPlayerVehicleID(playerid)]][gv_iAttachedObjectID][1], E_STREAMER_WORLD_ID, vw[0]);

					}
				}
                foreach(new passenger: Player)
                {
                    if(passenger != playerid)
                    {
	                    if(IsPlayerInVehicle(passenger, GetPlayerVehicleID(playerid)))
	                    {
		                    SetPlayerInterior(passenger,DDoorsInfo[i][ddInteriorInt]);
				            PlayerInfo[passenger][pInt] = DDoorsInfo[i][ddInteriorInt];
				            PlayerInfo[passenger][pVW] = DDoorsInfo[i][ddInteriorVW];
				            SetPlayerVirtualWorld(passenger, DDoorsInfo[i][ddInteriorVW]);
	                    }
					}
                }
            }
            else {
                SetPlayerPos(playerid,DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
                SetPlayerFacingAngle(playerid,DDoorsInfo[i][ddInteriorA]);
                SetCameraBehindPlayer(playerid);
            }
			if(DDoorsInfo[i][ddCustomInterior]) Player_StreamPrep(playerid, DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ], FREEZE_TIME);
            return 1;
        }
    }
    for(new i = 0; i < sizeof(FamilyInfo); i++) {
        if (IsPlayerInRangeOfPoint(playerid,3.0,FamilyInfo[i][FamilyEntrance][0], FamilyInfo[i][FamilyEntrance][1], FamilyInfo[i][FamilyEntrance][2])) {
            SetPlayerInterior(playerid,FamilyInfo[i][FamilyInterior]);
            PlayerInfo[playerid][pInt] = FamilyInfo[i][FamilyInterior];
            PlayerInfo[playerid][pVW] = FamilyInfo[i][FamilyVirtualWorld];
            SetPlayerVirtualWorld(playerid, FamilyInfo[i][FamilyVirtualWorld]);
            SetPlayerPos(playerid,FamilyInfo[i][FamilyExit][0],FamilyInfo[i][FamilyExit][1],FamilyInfo[i][FamilyExit][2]);
            SetPlayerFacingAngle(playerid,FamilyInfo[i][FamilyExit][3]);
			if(FamilyInfo[i][FamilyCustomMap]) Player_StreamPrep(playerid, FamilyInfo[i][FamilyExit][0],FamilyInfo[i][FamilyExit][1],FamilyInfo[i][FamilyExit][2], FREEZE_TIME);
            return 1;
        }
    }
    for(new i = 0; i < sizeof(HouseInfo); i++) {
        if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]) && GetPlayerInterior(playerid) == HouseInfo[i][hExtIW] && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hExtVW]) {
            if(PlayerInfo[playerid][pPhousekey] == i || PlayerInfo[playerid][pPhousekey2] == i || HouseInfo[i][hLock] == 0 || PlayerInfo[playerid][pRenting] == i) {
                SetPlayerInterior(playerid,HouseInfo[i][hIntIW]);
                PlayerInfo[playerid][pInt] = HouseInfo[i][hIntIW];
                PlayerInfo[playerid][pVW] = HouseInfo[i][hIntVW];
                SetPlayerVirtualWorld(playerid,HouseInfo[i][hIntVW]);
                SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
                SetPlayerFacingAngle(playerid,HouseInfo[i][hInteriorA]);
                SetCameraBehindPlayer(playerid);
                GameTextForPlayer(playerid, "~w~Chao mung ve nha", 5000, 1);
				VoNha[playerid] = 1;
				if(HouseInfo[i][hCustomInterior] == 1) Player_StreamPrep(playerid, HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ], FREEZE_TIME);
				if(i == 10 && PlayerInfo[playerid][pJob] == 25 || i == 10 && PlayerInfo[playerid][pJob2] == 25)
				{
					SetPVarInt(playerid,"HouseTrom",i);
				}
            }
            else GameTextForPlayer(playerid, "~r~Khoa", 5000, 1);
            return 1;
        }
    }

    for(new i = 0; i < sizeof(Businesses); i++) {
        if (IsPlayerInRangeOfPoint(playerid,3,Businesses[i][bExtPos][0], Businesses[i][bExtPos][1], Businesses[i][bExtPos][2])) {
	        if (Businesses[i][bExtPos][1] == 0.0) return 1;
			if (Businesses[i][bStatus]) {
				if (Businesses[i][bType] == BUSINESS_TYPE_GYM)
				{
					if (Businesses[i][bGymEntryFee] > 0 && PlayerInfo[playerid][pCash] < Businesses[i][bGymEntryFee])
					{
						GameTextForPlayer(playerid, "~r~Ban can them tien de vao phong tap the duc nay", 5000, 1);
						return 1;
					}
				}
				SetPVarInt(playerid, "BusinessesID", i);

				if(Businesses[i][bVW] == 0) SetPlayerVirtualWorld(playerid, BUSINESS_BASE_VW + i), PlayerInfo[playerid][pVW] = BUSINESS_BASE_VW + i;
				else SetPlayerVirtualWorld(playerid, Businesses[i][bVW]), PlayerInfo[playerid][pVW] = Businesses[i][bVW];


				SetPlayerInterior(playerid,Businesses[i][bInt]);
	            SetPlayerPos(playerid,Businesses[i][bIntPos][0],Businesses[i][bIntPos][1],Businesses[i][bIntPos][2]);
		        SetPlayerFacingAngle(playerid, Businesses[i][bIntPos][3]);
	         	SetCameraBehindPlayer(playerid);
		        PlayerInfo[playerid][pInt] = Businesses[i][bInt];
		        if(Businesses[i][bCustomInterior]) Player_StreamPrep(playerid, Businesses[i][bIntPos][0], Businesses[i][bIntPos][1], Businesses[i][bIntPos][2], FREEZE_TIME);

				if (Businesses[i][bType] == BUSINESS_TYPE_GYM)
				{
					new string[50];
					format(string, sizeof(string), "Ban da tham gia gym va duoc tinh $%i.", Businesses[i][bGymEntryFee]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					GivePlayerCash(playerid, -Businesses[i][bGymEntryFee]);
					Businesses[i][bSafeBalance] += Businesses[i][bGymEntryFee];

					if (Businesses[i][bGymType] == 1)
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /beginswimming o noi bat dau ho noi.");
						SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /joinboxing de tham gia cac hoat dong.");
					}
					else if (Businesses[i][bGymType] == 2)
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /beginparkour de bat dau packour xe.");
					}
				}
			}
			else GameTextForPlayer(playerid, "~r~Dong", 5000, 1);
			return 1;
        }
    }

    new Float:X, Float:Y, Float:Z;
    GetDynamicObjectPos(Carrier[0], X, Y, Z);
    if(IsPlayerInRangeOfPoint(playerid, 2.0, (X-0.377671),(Y-10.917018),11.6986)) {
		//Battle Carrier
        SetPlayerInterior(playerid, 1);
        SetPlayerVirtualWorld(playerid, 7);
        PlayerInfo[playerid][pVW] = 7;
        Streamer_UpdateEx(playerid, 1170.0106201172,-1355.0770263672,2423.0461425781);
        //Old Hospital: 2087.4626,2806.0630,-16.1744
        SetPlayerPos(playerid,1170.0106201172,-1355.0770263672,2423.0461425781);
        PlayerInfo[playerid][pInt] = 1;
        Player_StreamPrep(playerid, 1170.0106201172,-1355.0770263672,2423.0461425781, FREEZE_TIME);
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, (X-6.422671),(Y-10.898918),11.6986)) {
                                                  //Battle Carrier Armoury
        SetPlayerInterior(playerid, 6);
        SetPlayerVirtualWorld(playerid, 1337);
        SetPlayerPos(playerid, 316.4553,-170.2923,999.5938);
        PlayerInfo[playerid][pVW] = 1337;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 306.4042,-159.0768,999.5938)) {
                                                  //Battle Carrier Armoury
        SetPlayerPos(playerid, 305.6966,-159.1586,999.5938);
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, (X-5.560629),(Y-3.860818),11.6986)) {
                                                  //Engine Room Entrance
        SetPlayerInterior(playerid, 17);
        SetPlayerVirtualWorld(playerid, 1337);
        SetPlayerPos(playerid, -959.6347,1956.4598,9.0000);
        PlayerInfo[playerid][pVW] = 1337;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, (X-15.382171),(Y-2.272918),11.6986)) {
                                                  //Briefing Room Entrance
        SetPlayerInterior(playerid, 3);
        SetPlayerVirtualWorld(playerid, 1337);
        SetPlayerPos(playerid, 1494.3763,1303.5875,1093.2891);
        PlayerInfo[playerid][pVW] = 1337;
    }
//NG/LEO Only Entrance

                                                  // Hitman HQ
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -418.95, -1759.26, 6.22 )) {
        	if (arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] == 2 || arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] == 2) {
            SetPlayerVirtualWorld(playerid, 666420);
            PlayerInfo[playerid][pVW] = 666420;
            SetPlayerInterior(playerid, 6);
            PlayerInfo[playerid][pInt] = 6;
            SetPlayerPos(playerid, -68.8239,1351.4331,1080.6257);
            SetPlayerFacingAngle(playerid, 160);
            SetCameraBehindPlayer(playerid);
            Player_StreamPrep(playerid, -68.8239,1351.4331,1080.6257, FREEZE_TIME);
        }
    }
                                                  // Hitman HQ
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2323.3135, 7.6760, 26.5640)) {
        	if (arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] == 2 || arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] == 2) {
            SetPlayerVirtualWorld(playerid, 666421);
            PlayerInfo[playerid][pVW] = 666421;
            SetPlayerInterior(playerid, 6);
            PlayerInfo[playerid][pInt] = 6;
            SetPlayerPos(playerid, -68.8239,1351.4331,1080.6257);
            SetPlayerFacingAngle(playerid, 160);
            SetCameraBehindPlayer(playerid);
            Player_StreamPrep(playerid, -68.8239,1351.4331,1080.6257, FREEZE_TIME);
        }
    }
                                                  //Garage
    else if (IsPlayerInRangeOfPoint(playerid,8.0,1547.1947,29.8561,24.1406)) {
        GameTextForPlayer(playerid, "~w~GARAGE", 5000, 1);
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
            SetVehiclePos(GetPlayerVehicleID(playerid), -1790.378295,1436.949829,7.187500);
        }
        else {
            SetPlayerPos(playerid,-1790.378295,1436.949829,7.187500);
        }
    }

                                                      //VIP Garage
    else if (IsPlayerInRangeOfPoint(playerid,12.0,1814.6857,-1559.2028,13.4834)) {
        if(PlayerInfo[playerid][pDonateRank] > 0) {
            if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
                SetVehiclePos(GetPlayerVehicleID(playerid),  2425.8677,-1644.1337,1015.2882);
                SetVehicleZAngle(GetPlayerVehicleID(playerid),  180);
            }
            else {
                Streamer_UpdateEx(playerid, 2425.8677,-1644.1337,1015.2882);
                SetPlayerPos(playerid,2425.8677,-1644.1337,1015.2882);
                SetPlayerFacingAngle(playerid, 180);
            }
        }
        else {
            SendClientMessage(playerid, COLOR_WHITE, "* You are not a VIP!");
        }
	}
                                                  // LSPD Panel
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1575.9766845703, -1636.4899902344, 13.555115699768)) {
        if(IsACop(playerid)) {
            SetPlayerInterior(playerid, 0);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerPos(playerid,1579.0098876953, -1636.2879638672, 13.554491043091);
            SetPlayerFacingAngle(playerid, 190.0520);
            SetCameraBehindPlayer(playerid);
            PlayerInfo[playerid][pVW] = 0;
        }
        else {
            SendClientMessageEx(playerid, COLOR_GREY, "You do not have the keys for that door (LSPD restricted access)!");
        }
    }
     // DoC Exterior Entrance
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, -2033.7502, -154.8784, 35.3203)) {
        if(BackEntrance) {
            SetPlayerInterior(playerid, 0);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerPos(playerid,-2045.0183, -211.6728, 991.5364);
            SetCameraBehindPlayer(playerid);
            PlayerInfo[playerid][pVW] = 0;
            SetCameraBehindPlayer(playerid);
            Player_StreamPrep(playerid, -2045.0183, -211.6728, 991.5364, FREEZE_TIME);
        }
        else {
            SendClientMessageEx(playerid, COLOR_GREY, "You do not have the keys for that door (locked)!");
        }
    }
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, -2088.4797, -199.6259, 978.8315)) {
        if(IsACop(playerid)) {
            SetPlayerPos(playerid,-2091.0200,-199.8031,978.8315);
        }
        else {
            SendClientMessageEx(playerid, COLOR_GREY, "You do not have the keys for that door (SFPD restricted)!");
        }
    }
                                                  //SASD - Elevator
    else if (IsPlayerInRangeOfPoint(playerid,3.0,2530.3774,-1689.9998,562.7922)) {
        if(IsACop(playerid)) {
            SetPlayerFacingAngle(playerid, 359);
            GameTextForPlayer(playerid, "~w~GARAGE", 5000, 1);
            SetPlayerPos(playerid,612.6414,-629.8659,-4.0447);
            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pVW] = 0;
			Player_StreamPrep(playerid, 612.6414,-629.8659,-4.0447, FREEZE_TIME);
        }
        else {
            return SendClientMessageEx(playerid, COLOR_GRAD2, "Access Denied.");
        }
    }                                                //Gym Garage
    else if (IsPlayerInRangeOfPoint(playerid,8.0,2273.6787,-1728.9022,13.5039)) {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
            SetVehiclePos(GetPlayerVehicleID(playerid),  2240.7332,-1695.9648,-0.0826 + 1100);
            SetVehicleZAngle(GetPlayerVehicleID(playerid),  180);
        }
        else {
            Streamer_UpdateEx(playerid, 2240.7332,-1695.9648,-0.0826 + 1100);
            SetPlayerPos(playerid,2240.7332,-1695.9648,-0.0826 + 1100);
            SetPlayerFacingAngle(playerid, 180);
        }
    }
                                                  //Courthouse Garage
    else if (IsPlayerInRangeOfPoint(playerid,8.0,1423.0443,-1664.5244,13.5810)) {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
            SetVehiclePos(GetPlayerVehicleID(playerid),  1381.7274,-1676.4248,-13.2229 + 1100);
            SetVehicleZAngle(GetPlayerVehicleID(playerid),  90);
        }
        else {
            Streamer_UpdateEx(playerid,1381.7274,-1676.4248,-13.2229 + 1100);
            SetPlayerPos(playerid,1381.7274,-1676.4248,-13.2229 + 1100);
            SetPlayerFacingAngle(playerid, 90);
        }
    }
                                                  //PB Garage
    else if (IsPlayerInRangeOfPoint(playerid,8.0,1218.69,-1425.01,13.15)) {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
            SetVehiclePos(GetPlayerVehicleID(playerid),  1218.8041,-1449.8579,-46.2308 + 1100);
            SetVehicleZAngle(GetPlayerVehicleID(playerid), 360 + 1100);
        }
        else {
            Streamer_UpdateEx(playerid, 1218.8041,-1449.8579,-46.2308 + 1100);
            SetPlayerPos(playerid,1218.8041,-1449.8579,-46.2308 + 1100);
            SetPlayerFacingAngle(playerid, 90);
        }
    }
                                                  // LAOfficeBuilding Roof Entrance
    else if (IsPlayerInRangeOfPoint(playerid,3.0,1779.0928,-1302.7775,131.7344)) {
        SetPlayerPos(playerid, 1771.0253,-1302.8596,125.7209);
        SetPlayerFacingAngle(playerid, 280);
    }
                                                  // LAOfficeBuilding Roof Entrance
    else if (IsPlayerInRangeOfPoint(playerid,3.0,1771.0253,-1302.8596,125.7209)) {
        SetPlayerPos(playerid,1779.0928,-1302.7775,131.7344);
        SetPlayerFacingAngle(playerid, 280);
    }
                                                  // Gold/Plat VIP
    else if (IsPlayerInRangeOfPoint(playerid,3.0,902.2482,1419.8180,-80.9308)) {
        if(PlayerInfo[playerid][pDonateRank] < 3) {
            SendClientMessageEx(playerid, COLOR_WHITE, "* You are not Gold or Platinum VIP!");
        }
        else {
            SetPlayerPos(playerid,911.6200,1426.2729,-81.1762);
            SetPlayerFacingAngle(playerid, 270);
        }
    }

	else if (cCar != INVALID_VEHICLE_ID && (GetVehicleModel(cCar) == 519 || GetVehicleModel(cCar) == 553) && IsPlayerInRangeOfVehicle(playerid, cCar, 5.0) && GetPlayerVehicleID(playerid) != cCar)
	{
	    if(VehicleStatus{cCar} == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong duc su dung!");
	    new string[47 + MAX_PLAYER_NAME];
   		format(string, sizeof(string), "* %s da duoc chan nhan goi.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

		switch(GetVehicleModel(cCar)) {
			case 519: { // Shamal
				SetPlayerPos(playerid, 2.509036, 23.118730, 1199.593750);
				SetPlayerFacingAngle(playerid, 82.14);
				PlayerInfo[playerid][pInt] = 1;
				SetPlayerInterior(playerid, 1);
			}
			case 553: { // Nevada
				SetPlayerPos(playerid, 315.9396, 973.2628, 1961.5985);
				SetPlayerFacingAngle(playerid, 2.7);
				PlayerInfo[playerid][pInt] = 9;
				SetPlayerInterior(playerid, 9);
			}
		}


        SetCameraBehindPlayer(playerid);
		PlayerInfo[playerid][pVW] = cCar;
		SetPlayerVirtualWorld(playerid, cCar);
		InsidePlane[playerid] = cCar;
		SendClientMessageEx(playerid, COLOR_WHITE, "Type /exit near the door to exit the vehicle, or /window to look outside.");
	}
    return 1;
}

CMD:ra(playerid, params[])
{
	return cmd_exit(playerid,params);
}

CMD:exit(playerid, params[])
{
	VoNha[playerid] = 0;
	if (GetPVarInt(playerid, "_BikeParkourStage") > 0)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "You must finish your parkour activity first, or /leaveparkour.");
		return 1;
	}

	if (GetPVarInt(playerid, "_SwimmingActivity") > 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "You are no longer participating in the swimming activity.");
		DeletePVar(playerid, "_SwimmingActivity");
		DisablePlayerCheckpoint(playerid);
	}

	if (GetPVarInt(playerid, "_BoxingQueue") == 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "You are no longer in the boxing queue.");
		DeletePVar(playerid, "_BoxingQueue");
		DeletePVar(playerid, "_BoxingQueueTick");
	}

    if(GetPVarInt(playerid, "IsInArena") >= 0) {
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay tai dau' truong!");
        return 1;
    }
	if(GetPVarType(playerid, "StreamPrep")) {
		return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu do vao luc nay Wait for streaming to finish.");
	}
    if( PlayerCuffed[playerid] >= 1 || PlayerInfo[playerid][pBeingSentenced] != 0 ) {
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu do vao luc nay");
        return 1;
    }
    for(new i = 0; i <  sizeof(DDoorsInfo); i++) {
        if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddInteriorVW]) {
            SetPlayerInterior(playerid,DDoorsInfo[i][ddExteriorInt]);
            PlayerInfo[playerid][pInt] = DDoorsInfo[i][ddExteriorInt];
            SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddExteriorVW]);
            PlayerInfo[playerid][pVW] = DDoorsInfo[i][ddExteriorVW];
            SetPlayerToTeamColor(playerid);
            if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
                SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
                SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorA]);
                SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorVW]);
                LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorInt]);
                if(GetPVarInt(playerid, "tpForkliftTimer") > 0)
				{
				    SetPVarInt(playerid, "tpJustEntered", 1);
				    new Float: pX, Float: pY, Float: pZ;
					GetPlayerPos(playerid, pX, pY, pZ);
					SetPVarFloat(playerid, "tpForkliftX", pX);
			 		SetPVarFloat(playerid, "tpForkliftY", pY);
			  		SetPVarFloat(playerid, "tpForkliftZ", pZ);
				}
                if(DynVeh[GetPlayerVehicleID(playerid)] != -1)
				{
				    new vw[1];
					vw[0] = GetVehicleVirtualWorld(GetPlayerVehicleID(playerid));
				    if(DynVehicleInfo[DynVeh[GetPlayerVehicleID(playerid)]][gv_iAttachedObjectModel][0] != INVALID_OBJECT_ID)
				    {
				    	Streamer_SetArrayData(STREAMER_TYPE_OBJECT, DynVehicleInfo[DynVeh[GetPlayerVehicleID(playerid)]][gv_iAttachedObjectID][0], E_STREAMER_WORLD_ID, vw[0]);

					}
					if(DynVehicleInfo[DynVeh[GetPlayerVehicleID(playerid)]][gv_iAttachedObjectModel][1] != INVALID_OBJECT_ID)
				    {
						Streamer_SetArrayData(STREAMER_TYPE_OBJECT, DynVehicleInfo[DynVeh[GetPlayerVehicleID(playerid)]][gv_iAttachedObjectID][1], E_STREAMER_WORLD_ID, vw[0]);

					}
				}
                foreach(new passenger: Player)
                {
                    if(passenger != playerid)
                    {
	                    if(IsPlayerInVehicle(passenger, GetPlayerVehicleID(playerid)))
	                    {
		                    SetPlayerInterior(passenger,DDoorsInfo[i][ddExteriorInt]);
				            PlayerInfo[passenger][pInt] = DDoorsInfo[i][ddExteriorInt];
				            PlayerInfo[passenger][pVW] = DDoorsInfo[i][ddExteriorVW];
				            SetPlayerVirtualWorld(passenger, DDoorsInfo[i][ddExteriorVW]);
	                    }
					}
                }
            }
            else {
                SetPlayerPos(playerid,DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
                SetPlayerFacingAngle(playerid, DDoorsInfo[i][ddExteriorA]);
                SetCameraBehindPlayer(playerid);
            }
			if(DDoorsInfo[i][ddCustomExterior]) Player_StreamPrep(playerid, DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ], FREEZE_TIME);
            return 1;
        }
    }
    for(new i = 0; i < sizeof(FamilyInfo); i++) {
        if (IsPlayerInRangeOfPoint(playerid,3.0,FamilyInfo[i][FamilyExit][0], FamilyInfo[i][FamilyExit][1], FamilyInfo[i][FamilyExit][2]) && PlayerInfo[playerid][pVW] == FamilyInfo[i][FamilyVirtualWorld]) {
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerInterior(playerid,0);
            Streamer_UpdateEx(playerid, FamilyInfo[i][FamilyEntrance][0],FamilyInfo[i][FamilyEntrance][1],FamilyInfo[i][FamilyEntrance][2]);
            SetPlayerPos(playerid,FamilyInfo[i][FamilyEntrance][0],FamilyInfo[i][FamilyEntrance][1],FamilyInfo[i][FamilyEntrance][2]);
            SetPlayerFacingAngle(playerid,FamilyInfo[i][FamilyEntrance][3]);
            return 1;
        }
    }
    for(new i = 0; i <  sizeof(HouseInfo); i++) {
        if (IsPlayerInRangeOfPoint(playerid,3.0,HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && PlayerInfo[playerid][pVW] == HouseInfo[i][hIntVW]) {
			SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerPos(playerid,HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
            SetPlayerFacingAngle(playerid, HouseInfo[i][hExteriorA]);
            SetCameraBehindPlayer(playerid);
            SetPlayerVirtualWorld(playerid, HouseInfo[i][hExtVW]);
            PlayerInfo[playerid][pVW] = HouseInfo[i][hExtVW];
			PlayerInfo[playerid][pInt] = HouseInfo[i][hExtIW];
            SetPlayerInterior(playerid, HouseInfo[i][hExtIW]);
			if(HouseInfo[i][hCustomExterior]) Player_StreamPrep(playerid, HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ], FREEZE_TIME);
			if(i == 10)
			{
			    if(GetPVarInt(playerid,"TromVehicle") > 0)
			    {
                    if(GetPVarInt(playerid,"Waring_Trom") < 100)
                    {
				    	new Float:Pos[3];
				    	GetVehiclePos(GetPVarInt(playerid,"TromVehicle"), Pos[0], Pos[1], Pos[2]);
				    	SetPlayerCheckpoint(playerid, Pos[0], Pos[1], Pos[2], 2.0);
	     				CP[playerid] = 303009;
					}
			    }
			    DeletePVar(playerid,"HouseTrom");
			}
            return 1;
        }
    }
    for(new i = 0; i < sizeof(Businesses); i++) {
		if (IsPlayerInRangeOfPoint(playerid,3,Businesses[i][bIntPos][0], Businesses[i][bIntPos][1], Businesses[i][bIntPos][2])) {
		    if(Businesses[i][bVW] == 0 && PlayerInfo[playerid][pVW] == BUSINESS_BASE_VW + i || Businesses[i][bVW] != 0 && PlayerInfo[playerid][pVW] == Businesses[i][bVW]) {
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
        	    SetPlayerPos(playerid,Businesses[i][bExtPos][0],Businesses[i][bExtPos][1],Businesses[i][bExtPos][2]);
        	    SetPlayerFacingAngle(playerid, Businesses[i][bExtPos][3]);
        	    SetCameraBehindPlayer(playerid);
				PlayerInfo[playerid][pInt] = 0;
        	    PlayerInfo[playerid][pVW] = 0;
 				DeletePVar(playerid, "BusinessesID");
           	 	if(Businesses[i][bCustomExterior]) Player_StreamPrep(playerid, Businesses[i][bExtPos][0], Businesses[i][bExtPos][1], Businesses[i][bExtPos][2], FREEZE_TIME);
            	return 1;
			}
        }
    }

    if (IsPlayerInRangeOfPoint(playerid, 3.0, 1753.6423,-1586.9365,13.2424)) {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
            SetVehiclePos(GetPlayerVehicleID(playerid), 1753.4561,-1595.1804,13.5381);
            SetVehicleZAngle(GetPlayerVehicleID(playerid), 347.7918);
        }
        else {
            SetPlayerPos(playerid,1753.4561,-1595.1804,13.5381);
        }
    }
    else if(InsidePlane[playerid] != INVALID_VEHICLE_ID)
	{
	    if(GetPVarType(playerid, "air_Mode")) {
	        SendClientMessageEx(playerid, COLOR_GREY, "You must stop looking out the window! (/window)");
	        return 1;
	    }
	    new string[64];
        format(string, sizeof(string), "* %s exits the airplane.", GetPlayerNameEx(playerid));
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

        if(!IsAPlane(InsidePlane[playerid])) {
            PlayerInfo[playerid][pAGuns][GetWeaponSlot(46)] = 46;
            GivePlayerValidWeapon(playerid, 46, 2);
            SetPlayerPos(playerid, 0.000000, 0.000000, 420.000000); // lol nick
        }
        else {
            new Float:X, Float:Y, Float:Z;
            GetVehiclePos(InsidePlane[playerid], X, Y, Z);
            SetPlayerPos(playerid, X-2.7912, Y+3.2304, Z);
			Player_StreamPrep(playerid, X-2.7912,Y+3.2304,Z, FREEZE_TIME);
            if(Z > 50.0) {
                PlayerInfo[playerid][pAGuns][GetWeaponSlot(46)] = 46;
                GivePlayerValidWeapon(playerid, 46, 2);
            }
        }

        PlayerInfo[playerid][pVW] = 0;
        SetPlayerVirtualWorld(playerid, 0);
        PlayerInfo[playerid][pInt] = 0;
        SetPlayerInterior(playerid, 0);
        InsidePlane[playerid] = INVALID_VEHICLE_ID;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, -2045.0183,-211.6728,991.5364)) {
        if(BackEntrance) {
         	SetPlayerInterior(playerid, 0);
	        SetPlayerVirtualWorld(playerid, 0);
	        SetPlayerPos(playerid, -2033.7502,-154.8784,35.3203);
		 }
		 else return SendClientMessageEx(playerid, COLOR_GREY, "You don't have the keys for that door (locked) !");
    }
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, -2091.0200,-199.8031,978.8315)) {
        if(IsACop(playerid)) {
	        SetPlayerPos(playerid, -2088.4797,-199.6259,978.8315);
		 }
		 else return SendClientMessageEx(playerid, COLOR_GREY, "You don't have the keys for that door (LEO restricted) !");
    }
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1169.67, -1356.32, 2423.04) && GetPlayerVirtualWorld(playerid) == 7) {
                                                  //Battle Carrier
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerFacingAngle(playerid, 180);
        new Float:X, Float:Y, Float:Z;
        GetDynamicObjectPos(Carrier[0], X, Y, Z);
        SetPlayerPos(playerid, (X-0.377671),(Y-10.917018),11.6986);
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 316.4553,-170.2923,999.5938) && GetPlayerVirtualWorld(playerid) == 1337) {
                                                  //Battle Carrier Armoury
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        PlayerInfo[playerid][pVW] = 0;
        new Float:X, Float:Y, Float:Z;
        GetDynamicObjectPos(Carrier[0], X, Y, Z);
        SetPlayerPos(playerid, (X-6.422671),(Y-10.898918),11.6986);
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 305.6966,-159.1586,999.5938)&& GetPlayerVirtualWorld(playerid) == 1337) {
                                                  //Battle Carrier Armoury
        SetPlayerPos(playerid, 306.4042,-159.0768,999.5938);
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -959.6347,1956.4598,9.0000) && GetPlayerVirtualWorld(playerid) == 1337) {
                                                  //Engine Room Exit
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        new Float:X, Float:Y, Float:Z;
        GetDynamicObjectPos(Carrier[0], X, Y, Z);
        SetPlayerPos(playerid, (X-5.560629),(Y-3.853518),11.6986);
        PlayerInfo[playerid][pVW] = 0;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1494.3763,1303.5875,1093.2891) && GetPlayerVirtualWorld(playerid) == 1337) {
                                                  //Briefing Room Exit
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        new Float:X, Float:Y, Float:Z;
        GetDynamicObjectPos(Carrier[0], X, Y, Z);
        SetPlayerPos(playerid, (X-15.382171),(Y-2.272918),11.6986);
        PlayerInfo[playerid][pVW] = 0;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 971.70568847656, 0.73652172088623, 1013.0336914063)) {
        if(PlayerInfo[playerid][pFMember] == 1) {
            SetPlayerPos(playerid, 971.75524902344, 1.949291229248, 1012.8675537109);
            SetCameraBehindPlayer(playerid);
            Player_StreamPrep(playerid, 971.75524902344, 1.949291229248, 1012.8675537109, FREEZE_TIME);
        }
        else {
            SendClientMessageEx(playerid, COLOR_GREY, "You do not have the keys for that door (Hades' Children MC Members only)!");
        }
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -265.52786254883, 1409.2824707031, -2.2975430488586)) {
        if(PlayerInfo[playerid][pFMember] == 1) {
            SetPlayerPos(playerid, -230.57353210449, 1409.3792724609, -5.2974662780762);
            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pVW] = 0;
            SetCameraBehindPlayer(playerid);
            SetPlayerInterior(playerid, 0);
            PlayerInfo[playerid][pInt] = 0;
			Player_StreamPrep(playerid, -230.57353210449, 1409.3792724609, -5.2974662780762, FREEZE_TIME);
        }
        else {
            SendClientMessageEx(playerid, COLOR_GREY, "You do not have the keys for that door (Hades' Children MC Members only)!");
        }
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -270.8628,1417.2441,-2.2902)) {
        if(PlayerInfo[playerid][pFMember] == 1) {
            SetPlayerPos(playerid, 255.84442138672, -158.21658325195, 1.677818775177);
            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pVW] = 0;
            SetCameraBehindPlayer(playerid);
            SetPlayerInterior(playerid, 0);
            PlayerInfo[playerid][pInt] = 0;
			Player_StreamPrep(playerid, 255.84442138672, -158.21658325195, 1.677818775177, FREEZE_TIME);
        }
        else {
            SendClientMessageEx(playerid, COLOR_GREY, "You do not have the keys for that door (Hades' Children MC Members only)!");
        }
    }
                                                  //Garage
    else if (IsPlayerInRangeOfPoint(playerid,8.0,-1790.378295,1436.949829,7.187500)) {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
            SetVehiclePos(GetPlayerVehicleID(playerid), 1551.8052,31.0254,24.1446);
        }
        else {
            SetPlayerPos(playerid,1551.8052,31.0254,24.1446);
        }
    }
                                                        //VIP Garage
    else if (IsPlayerInRangeOfPoint(playerid,8.0,2425.9028,-1640.0483,1015.3889)) {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
            SetVehiclePos(GetPlayerVehicleID(playerid),  1819.3533,-1560.3534,13.5469);
            SetVehicleZAngle(GetPlayerVehicleID(playerid),  253);
        }
        else {
            SetPlayerPos(playerid,1819.3533,-1560.3534,13.5469);
            SetPlayerFacingAngle(playerid,253);
        }
	}
                                                  // Hitman HQ
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -68.845336914063, 1351.3386230469, 1079.2109375 ) && (GetPlayerVirtualWorld(playerid) == 666420)) {
        	if (arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] == 2 || arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] == 2) {
            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pVW] = 0;
            SetPlayerInterior(playerid, 0);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerPos(playerid, -418.95, -1759.26, 6.22);
            SetCameraBehindPlayer(playerid);
        }
    }
                                                  // Hitman HQ
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -68.845336914063, 1351.3386230469, 1079.2109375 ) && (GetPlayerVirtualWorld(playerid) == 666421)) {
        	if (arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] == 2 || arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] == 2) {
            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pVW] = 0;
            SetPlayerInterior(playerid, 0);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerPos(playerid, 2323.3135, 7.6760, 26.5640);
            SetPlayerFacingAngle(playerid, 265.11);
            SetCameraBehindPlayer(playerid);
        }
    }
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 301.228820, 191.181884, 1007.171875)) {
                                                  //SFPD Exit to garage
        if(IsACop(playerid)) {
            SetPlayerInterior(playerid, 0);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerPos(playerid,-1591.450195, 716.007141, -5.242187);
            SetPlayerFacingAngle(playerid, 271.00);
            SetCameraBehindPlayer(playerid);
        }
        else {
            return SendClientMessageEx(playerid, COLOR_GRAD2, "Access Denied.");
        }
    }
                                                  //SASD - Elevator
    else if (IsPlayerInRangeOfPoint(playerid,3.0,612.6414,-629.8659,-4.0447)) {
        if(IsACop(playerid)) {
            SetPlayerFacingAngle(playerid, 268);
            GameTextForPlayer(playerid, "~w~SASD HQ", 5000, 1);
            SetPlayerPos(playerid,2530.3774,-1689.9998,562.7922);
            SetPlayerVirtualWorld(playerid, 1699);
            PlayerInfo[playerid][pVW] = 1699;
			Player_StreamPrep(playerid, 2530.3774,-1689.9998,562.7922, FREEZE_TIME);
        }
        else {
            return SendClientMessageEx(playerid, COLOR_GRAD2, "Access Denied.");
        }
    }
                                                  // FBI garage exit
    else if(IsPlayerInRangeOfPoint(playerid, 3,310.8672,-1484.7493,-33.5292 )) {
        if(IsACop(playerid)) {
            SetPlayerInterior(playerid,0);
            SetPlayerPos(playerid, 314.30,-1512.07,24.92);
            SetPlayerFacingAngle(playerid, 55.76);
            SetCameraBehindPlayer(playerid);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pVW] = 0;
        }
        else {
            SendClientMessageEx(playerid, COLOR_GREY, "You do not have the keys for that door (FBI restricted access)!");
        }
    }
    else if (IsPlayerInRangeOfPoint(playerid, 3, 291.8773,-1481.0674,-33.5308)) {
        if(IsACop(playerid)) {
            SetPlayerInterior(playerid,0);
            SetPlayerPos(playerid,298.26, -1544.53, 76.53);
            SetCameraBehindPlayer(playerid);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pVW] = 0;
        }
        else {
            SendClientMessageEx(playerid, COLOR_GREY, "You do not have the keys for that door (FBI restricted access)!");
        }
    }
    /*else if (IsPlayerInRangeOfPoint(playerid,6.0,-1404.5299,-259.0602,1043.6563)) {
        SetPlayerInterior(playerid,0);
        SetPlayerPos(playerid,2695.6235,-1704.6960,11.8438);
    }
    else if (IsPlayerInRangeOfPoint(playerid,8.0,-1443.0554,-581.1879,1055.0472)) {
        SetPlayerInterior(playerid,0);
        SetPlayerPos(playerid,-2111.5686,-443.9720,38.7344);
    }
    else if (IsPlayerInRangeOfPoint(playerid,8.0,-1464.7732,1557.5533,1052.5313)) {
        SetPlayerInterior(playerid,0);
        SetPlayerPos(playerid,-2080.3079,-406.0309,38.7344);
    }*/
                                                  // NG exit
    else if (IsPlayerInRangeOfPoint(playerid,4.0,-273.884765625,1875.1552734375,29.817853927612)) {
        if (PlayerInfo[playerid][pJailTime] == 0) {
            SetPlayerInterior(playerid,0);
            SetPlayerPos(playerid,200.2569,1869.5732,13.1470);
        }
        else {
            SetPlayerHealth(playerid, 0);
            SendClientMessageEx(playerid, COLOR_WHITE, "You can not escape admin prison!");
        }

    }
                                                  //Courthouse Garage
    else if (IsPlayerInRangeOfPoint(playerid,20.0,1381.7274,-1676.4248,-13.2229+1100.00)) {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
            SetVehiclePos(GetPlayerVehicleID(playerid),  1423.0443,-1664.5244,13.5810);
            SetVehicleZAngle(GetPlayerVehicleID(playerid),  270);
        }
        else {
            SetPlayerPos(playerid,1423.0443,-1664.5244,13.5810);
            SetPlayerFacingAngle(playerid,270);
        }
    }
                                                  //Gym Garage
    else if (IsPlayerInRangeOfPoint(playerid,20.0,2240.7332,-1695.9648,(-0.0826+1100.00))) {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
            SetVehiclePos(GetPlayerVehicleID(playerid),  2273.6787,-1728.9022,13.5039);
            SetVehicleZAngle(GetPlayerVehicleID(playerid),  180);
        }
        else {
            SetPlayerPos(playerid,2273.6787,-1728.9022,13.5039);
            SetPlayerFacingAngle(playerid,180);
        }
    }
                                                  //PB Garage
    else if (IsPlayerInRangeOfPoint(playerid,20.0,1218.60,-1451.69,(-46.85+1100.00))) {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
            SetVehiclePos(GetPlayerVehicleID(playerid),  1218.6017,-1421.5887,13.9084);
            SetVehicleZAngle(GetPlayerVehicleID(playerid),  360);
        }
        else {
            SetPlayerPos(playerid,1218.6017,-1421.5887,13.9084);
        }
    }
                                           // Gold/Plat VIP
    else if (IsPlayerInRangeOfPoint(playerid,3.0, 911.6200,1426.2729,-81.1762)) {
        SetPlayerPos(playerid,902.2482,1419.8180,-80.9308);
        SetPlayerFacingAngle(playerid, 90);
    }
    return 1;
}

CMD:home(playerid, params[])
{
    if(CheckPointCheck(playerid))
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "Xin hay chac chan rang cac diem checkpoint cua ban da bi xoa bo.");
        return 1;
    }
    if(PlayerInfo[playerid][pPhousekey] != INVALID_HOUSE_ID)
	{
        SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPhousekey]][hExteriorX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hExteriorY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hExteriorZ], 4.0);
        GameTextForPlayer(playerid, "~w~Waypoint set ~r~Home", 5000, 1);
        gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
    }
    else
	{
        GameTextForPlayer(playerid, "~w~You are homeless", 5000, 1);
    }
    return 1;
}

CMD:showmehq(playerid, params[])
{
    if(CheckPointCheck(playerid)) {
        SendClientMessageEx(playerid, COLOR_WHITE, "Xin hay chac chan rang cac diem checkpoint cua ban da bi xoa bo.");
        return 1;
    }
	if (IsAHitman(playerid)) {
	    SetPlayerCheckpoint(playerid,-418.95, -1759.26, 6.22, 4.0);
	    GameTextForPlayer(playerid, "~w~Waypoint set ~r~HQ", 5000, 1);
	    gPlayerCheckpointStatus[playerid] = CHECKPOINT_HITMAN;
    }
    return 1;
}


CMD:showmehq2(playerid, params[])
{
    if(CheckPointCheck(playerid)) {
        SendClientMessageEx(playerid, COLOR_WHITE, "Xin hay chac chan rang cac diem checkpoint cua ban da bi xoa bo.");
        return 1;
    }
	if (arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] == 2 || arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] == 2)
	{
	    SetPlayerCheckpoint(playerid,811.087707, -564.493835, 16.335937, 4.0);
	    GameTextForPlayer(playerid, "~w~Waypoint set ~r~HQ", 5000, 1);
	    gPlayerCheckpointStatus[playerid] = CHECKPOINT_HITMAN2;
    }
    return 1;
}


CMD:showmehq3(playerid, params[])
{
    if(CheckPointCheck(playerid)) {
        SendClientMessageEx(playerid, COLOR_WHITE, "Xin hay chac chan rang cac diem checkpoint cua ban da bi xoa bo.");
        return 1;
    }
   	if (arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] == 2 || arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] == 2)
	{
    	SetPlayerCheckpoint(playerid, 1415.727905, -1299.371093, 15.054657, 4.0);
	    GameTextForPlayer(playerid, "~w~Waypoint set ~r~HQ", 5000, 1);
    	gPlayerCheckpointStatus[playerid] = CHECKPOINT_HITMAN3;
	}
    return 1;
}

CMD:lottoinfo(playerid, params[])
{
	new szMessage[128];
	format(szMessage, sizeof(szMessage), "Next drawing is at %i:00, tickets sold %i, and total jackpot is $%s.", NextDrawing, TicketsSold, number_format(Jackpot));
	SendClientMessage(playerid, COLOR_WHITE, szMessage);
	return 1;
}

CMD:myangle(playerid, params[])
{
    new myString[128], Float:a;
    GetPlayerFacingAngle(playerid, a);

    format(myString, sizeof(myString), "Your angle is: %0.2f", a);
    SendClientMessageEx(playerid, 0xFFFFFFFF, myString);

    new myString2[128], Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);

    format(myString2, sizeof(myString), "Your position is: %f, %f, %f", x, y, z);
    SendClientMessageEx(playerid, 0xFFFFFFFF, myString2);
    return 1;
}

CMD:eventstaff(playerid, params[])
{
	new Float:health, Float:armor;
    if( PlayerInfo[ playerid ][ pAdmin ] >= 1 || PlayerInfo[playerid][pHelper] >= 2 ) {
		if(GetPVarType(playerid, "pGodMode"))
			return SendClientMessageEx(playerid, COLOR_GRAD1, "Please disable your god mode before joining the event staff (/god)");
        if(EventKernel[EventJoinStaff] == 1) {
			if(GetPVarInt(playerid, "eventStaff") == 0) {
				for(new i; i < sizeof(EventKernel[EventStaff]); i++) if(EventKernel[EventStaff][i] == INVALID_PLAYER_ID) {
					SetPVarInt( playerid, "EventToken", 1 );
					EventLastVW[playerid] = GetPlayerVirtualWorld(playerid);
					EventLastInt[playerid] = GetPlayerInterior(playerid);
					GetPlayerPos(playerid, EventFloats[playerid][1], EventFloats[playerid][2], EventFloats[playerid][3]);
					GetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
					SetPlayerPos( playerid, EventKernel[ EventPositionX ], EventKernel[ EventPositionY ], EventKernel[ EventPositionZ ] );
					SetPlayerInterior( playerid, EventKernel[ EventInterior ] );
					SetPlayerVirtualWorld( playerid, EventKernel[ EventWorld ] );
					PlayerInfo[playerid][pAGuns][GetWeaponSlot(38)] = 38;
					GivePlayerValidWeapon(playerid, 38, 2);
					EventKernel[EventStaff][i] = playerid;
					GetPlayerHealth(playerid,health);
					SetPVarFloat(playerid, "pPreGodHealth", health);
					GetPlayerArmour(playerid,armor);
					SetPVarFloat(playerid, "pPreGodArmor", armor);
					SetPlayerHealth(playerid, 100);
					SetPlayerArmor(playerid, 100);
					SetPVarInt(playerid, "eventStaff", 1);
					return SendClientMessageEx( playerid, COLOR_WHITE, "You have joined the event staff." );
				}
				SendClientMessageEx(playerid, COLOR_GRAD2, "Unable to join the event staff, max is 5.");
			}
        }
    }
    return 1;
}

CMD:quitevent(playerid, params[])
{
	new Float:health, Float:armor;
	if( GetPVarInt( playerid, "eventStaff" ) == 1) {
		if( EventKernel[ EventStatus ] == 1 || EventKernel[ EventStatus ] == 2 ) {
       		if(EventKernel[EventType] == 3) {
					DisablePlayerCheckpoint(playerid);
            	    ResetPlayerWeapons( playerid );
        			DeletePVar(playerid, "EventToken");
        			SetPlayerWeapons(playerid);
       				SetPlayerToTeamColor(playerid);
        			SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
        			SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
        			SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
        			SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
        			SetPlayerInterior(playerid,EventLastInt[playerid]);
        			Player_StreamPrep(playerid, EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3], FREEZE_TIME);
        			RemovePlayerWeapon(playerid, 38);
        			for(new i = 0; i < 6; i++) {
        	   			EventFloats[playerid][i] = 0.0;
    	   			}
       		}
       		EventLastVW[playerid] = 0;
       		EventLastInt[playerid] = 0;
       		SendClientMessageEx( playerid, COLOR_LIGHTBLUE, "* You have quit the event as event staff." );
       		return 1;
		}
      	ResetPlayerWeapons( playerid );
       	DeletePVar(playerid, "EventToken");
       	SetPlayerWeapons(playerid);
       	SetPlayerToTeamColor(playerid);
       	SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
       	SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
      	SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
       	SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
       	SetPlayerInterior(playerid,EventLastInt[playerid]);
       	Player_StreamPrep(playerid, EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3], FREEZE_TIME);
       	if(EventKernel[EventType] == 4)
		{
			if(GetPVarType(playerid, "pEventZombie")) DeletePVar(playerid, "pEventZombie");
 			SetPlayerToTeamColor(playerid);
		}
       	for(new i = 0; i < 6; i++) {
        	EventFloats[playerid][i] = 0.0;
        }
        EventLastVW[playerid] = 0;
        EventLastInt[playerid] = 0;
        RemovePlayerWeapon(playerid, 38);
		health = GetPVarFloat(playerid, "pPreGodHealth");
		SetPlayerHealth(playerid,health);
		armor = GetPVarFloat(playerid, "pPreGodArmor");
		SetPlayerArmor(playerid, armor);
		DeletePVar(playerid, "pPreGodHealth");
		DeletePVar(playerid, "pPreGodArmor");
		DeletePVar(playerid, "eventStaff");
        return SendClientMessageEx( playerid, COLOR_LIGHTBLUE, "* You have quit the event as event staff." );
	}
    else if( GetPVarInt( playerid, "EventToken" ) == 1 ) {
        if( EventKernel[ EventStatus ] == 1 || EventKernel[ EventStatus ] == 2 ) {
       		if(EventKernel[EventType] == 3) {
					if(IsValidDynamic3DTextLabel(RFLTeamN3D[playerid])) {
						DestroyDynamic3DTextLabel(RFLTeamN3D[playerid]);
					}
					DisablePlayerCheckpoint(playerid);
            	    ResetPlayerWeapons( playerid );
        			DeletePVar(playerid, "EventToken");
        			SetPlayerWeapons(playerid);
       				SetPlayerToTeamColor(playerid);
        			SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
        			SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
        			SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
        			SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
        			SetPlayerInterior(playerid,EventLastInt[playerid]);
        			SetPlayerHealth(playerid, EventFloats[playerid][4]);
        			if(EventFloats[playerid][5] > 0) {
        				SetPlayerArmor(playerid, EventFloats[playerid][5]);
        			}
        			Player_StreamPrep(playerid, EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3], FREEZE_TIME);
        			RemovePlayerWeapon(playerid, 38);
        			for(new i = 0; i < 6; i++) {
        	   			EventFloats[playerid][i] = 0.0;
    	   			}
       		}
       		EventLastVW[playerid] = 0;
       		EventLastInt[playerid] = 0;
       		SendClientMessageEx( playerid, COLOR_LIGHTBLUE, "* You have quit the event." );
       		return 1;
		}
      	ResetPlayerWeapons( playerid );
       	DeletePVar(playerid, "EventToken");
       	SetPlayerWeapons(playerid);
       	SetPlayerToTeamColor(playerid);
       	SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
       	SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
      	SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
       	SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
       	SetPlayerInterior(playerid,EventLastInt[playerid]);
       	SetPlayerHealth(playerid, EventFloats[playerid][4]);
       	if(EventFloats[playerid][5] > 0) {
       		SetPlayerArmor(playerid, EventFloats[playerid][5]);
       	}
       	Player_StreamPrep(playerid, EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3], FREEZE_TIME);
       	if(EventKernel[EventType] == 4)
		{
			if(GetPVarType(playerid, "pEventZombie")) DeletePVar(playerid, "pEventZombie");
 			SetPlayerToTeamColor(playerid);
		}
       	for(new i = 0; i < 6; i++) {
        	EventFloats[playerid][i] = 0.0;
        }
        EventLastVW[playerid] = 0;
        EventLastInt[playerid] = 0;
        RemovePlayerWeapon(playerid, 38);
		health = GetPVarFloat(playerid, "pPreGodHealth");
		if(health > 0) {
			SetPlayerHealth(playerid,health);
		}
		armor = GetPVarFloat(playerid, "pPreGodArmor");
		if(armor > 0) {
			SetPlayerArmor(playerid, armor);
		}
		DeletePVar(playerid, "pPreGodHealth");
		DeletePVar(playerid, "pPreGodArmor");
        SendClientMessageEx( playerid, COLOR_LIGHTBLUE, "* You have quit the event." );
    }
    return 1;
}

CMD:requestevent(playerid, params[])
{
    if( PlayerInfo[ playerid ][ pAdmin ] >= 2 || PlayerInfo[playerid][pHelper] >= 3 || PlayerInfo[playerid][pDonateRank] >= 4 ) {
        new string[128];
        if( EventKernel[ EventStatus ] == 0 ) {
            if(EventKernel[EventRequest] != INVALID_PLAYER_ID || EventKernel[EventCreator] != INVALID_PLAYER_ID) {
                SendClientMessageEx(playerid, COLOR_GRAD2, "There's already someone requesting/making an event.");
                return 1;
            }
            if(EventKernel[EventAdvisor] == 1) {
                SendClientMessageEx(playerid, COLOR_GRAD2, "Another admin/advisor already requested/made an event within the last three hours, please try again later!");
                return 1;
            }
            if(PlayerInfo[ playerid ][ pAdmin ] >= 2 || PlayerInfo[playerid][pHelper] >= 3 || PlayerInfo[playerid][pDonateRank] >= 4) {
                EventKernel[ EventRequest ] = playerid;
                SendClientMessageEx( playerid, COLOR_GRAD2, "You have requested to set up an event, please wait until a Senior Admin approves it." );
                format( string, sizeof( string ), "[MAYCHU] %s would like to set up an event, do you approve? /chapnhanevent or /denyevent.", GetPlayerNameEx(playerid) );
                ABroadCast( COLOR_YELLOW, string, 4 );
                EventKernel[EventAdvisor] = 1;
                EventTimerHandle = SetTimer("ERequested", 9600000, false);
            }
        }
        else {
            SendClientMessageEx( playerid, COLOR_WHITE, "There is already an active event (use /endevent)." );
        }
    }
    return 1;
}

CMD:vipparty(playerid, params[])
{
    if( PlayerInfo[playerid][pDonateRank] == 5 )
	{
        new string[128+MAX_PLAYER_NAME];
        if( EventKernel[ EventStatus ] == 0 )
		{
            if(EventKernel[EventRequest] != INVALID_PLAYER_ID || EventKernel[EventCreator] != INVALID_PLAYER_ID)
			{
                SendClientMessageEx(playerid, COLOR_GRAD2, "There's already someone requesting/making an event.");
                return 1;
            }
            if(EventKernel[EventAdvisor] == 1)
			{
                SendClientMessageEx(playerid, COLOR_GRAD2, "Another admin/advisor already requested/made an event within the last three hours, please try again later!");
                return 1;
            }
            if(PlayerInfo[ playerid ][ pAdmin ] >= 4 || PlayerInfo[playerid][pDonateRank] == 5) {
                EventKernel[ EventRequest ] = playerid;
                SendClientMessageEx( playerid, COLOR_GRAD2, "You have requested to set up an event, please wait until a Senior Admin approves it." );
                format( string, sizeof( string ), "[MAYCHU] VIP Mod %s would like to set up a VIP event - /chapnhanevent or /denyevent", GetPlayerNameEx(playerid) );
                ABroadCast( COLOR_YELLOW, string, 4 );
                EventKernel[EventAdvisor] = 1;
                EventKernel[VipOnly] = 1;
                EventTimerHandle = SetTimer("ERequested", 9600000, false);
            }
        }
        else
		{
            SendClientMessageEx( playerid, COLOR_WHITE, "There is already an active event (use /endevent)." );
        }
    }
    return 1;
}

CMD:nossdadasdsadsawasdw(playerid, params[])
{
	PlayAudioStreamForPlayer(playerid, "http://web.samp-vn.com/cocailon.mp3");
	return 1;
}
CMD:nos(playerid, params[])
{
    if(PlayerInfo[playerid][pNhanvienxang] == 1) {
        if(IsPlayerInAnyVehicle(playerid)) {
			if(GetPVarInt(playerid, "EventToken")) {
				return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the lam dieu nay ben trong su kien.");
			}
   			if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), GetVehicleComponentType(1010)) != 1010 && GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), GetVehicleComponentType(1009)) != 1009 && GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), GetVehicleComponentType(1008)) != 1008)
   			{
            	if(!IsPlayerInInvalidNosVehicle(playerid))
				{
                	new string[128];
                	new nostogive;
               		new level = PlayerInfo[playerid][pMechSkill];
 		 			if(level >= 0 && level < 100) { nostogive = 1010; }
    		 		else if(level >= 100 && level < 201) { nostogive = 1010; }
         			else if(level >= 201 && level < 300) { nostogive = 1010; }
                	else if(level >= 300 && level < 400) { nostogive = 1010; }
                	else if(level >= 1000) { nostogive = 1010; }
                	AddVehicleComponent(GetPlayerVehicleID(playerid),nostogive);
                	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
                	format(string, sizeof(string), "* %s Da Lap Dat Nitro.", GetPlayerNameEx(playerid));
                	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else {
            	    SendClientMessageEx(playerid, COLOR_GREY, "Nitrous khong duoc cai dat tren xe nay.");
            	}
			 }
			 else {
			    SendClientMessageEx(playerid, COLOR_GREY, "Xe nay da co Nitrous.");
		 	}
        }
        else {
            SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong mot chiec xe.");
        }
    }
    else {
        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai tho sua xe!" );
    }
    return 1;
}

CMD:hyd(playerid, params[])
{
    if(PlayerInfo[playerid][pNhanvienxang] == 1) {
        if(IsPlayerInAnyVehicle(playerid)) {
			if(IsPlayerInInvalidNosVehicle(playerid) || (DynVeh[GetPlayerVehicleID(playerid)] != -1 && DynVehicleInfo[DynVeh[GetPlayerVehicleID(playerid)]][gv_igID] != INVALID_GROUP_ID)) return SendClientMessageEx(playerid, COLOR_WHITE, "He thong thuy luc khong duoc cai dat tren xe nay.");
			if(gettime() < PlayerInfo[playerid][pServiceTime]) return SendClientMessage(playerid, COLOR_GREY, "Ban phai tro 20 giay de su dung lai lenh nay.");
			new string[128];
			PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			AddVehicleComponent(GetPlayerVehicleID(playerid), 1087);
			format(string, sizeof(string), "* %s Da Lap Dat He Thong Thuy Luc.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pServiceTime] = gettime()+20;
        }
        else return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong o trong mot chiec xe.");
    }
    else return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong phai Nhan Vien Sua Xe!");
    return 1;
}

CMD:repaircar(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		for(new i; i < MAX_PAYNSPRAYS; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, PayNSprays[i][pnsPosX], PayNSprays[i][pnsPosY], PayNSprays[i][pnsPosZ]) && GetPlayerVirtualWorld(playerid) == PayNSprays[i][pnsVW] && GetPlayerInterior(playerid) == PayNSprays[i][pnsInt])
			{
				if(PayNSprays[i][pnsStatus] > 0)
				{
					if(DynVeh[GetPlayerVehicleID(playerid)] != -1 && DynVehicleInfo[DynVeh[GetPlayerVehicleID(playerid)]][gv_igID] != INVALID_GROUP_ID)
					{
						new iGroupID = DynVehicleInfo[DynVeh[GetPlayerVehicleID(playerid)]][gv_igID];
						if(arrGroupData[iGroupID][g_iBudget] >= PayNSprays[i][pnsGroupCost])
						{
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "Co quan cua ban khong du ngan quy de tra cho viec nay!");
					}
					else
					{
						if(PlayerInfo[playerid][pCash] >= PayNSprays[i][pnsRegCost])
						{
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "Ban khong du tien de tra cho viec nay!");
					}
					SetTimerEx("PayNSpray", 5000, false, "iii", playerid, i, GetPlayerVehicleID(playerid));
					TogglePlayerControllable(playerid, 0);
					GameTextForPlayer(playerid, "Repairing...", 5000, 5);
					return 1;
				}
			}
		}
		SendClientMessage(playerid, COLOR_WHITE, "You are not at a Pay N' Spray!");
	}
	else SendClientMessage(playerid, COLOR_WHITE, "Ban khong o trong xe!");
	return 1;
}


CMD:turfs(playerid, params[])
{
    if(turfWarsRadar[playerid] == 0) {
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban da bat Turf Minimap Radar.");
        ShowTurfWarsRadar(playerid);
    }
    else {
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban da tat Turf Minimap Radar.");
        HideTurfWarsRadar(playerid);
    }
    return 1;
}

CMD:shutdown(playerid, params[])
{
    if(IsACop(playerid)) {
        new string[128];
        new tw = GetPlayerTurfWarsZone(playerid);
        new rank = PlayerInfo[playerid][pRank];
        if(rank < 3) {
            SendClientMessageEx(playerid, COLOR_GRAD2, "Ban can phai it nhat rank 3 de shutdown turfs!");
            return 1;
        }
        if(tw != -1) {
            if(TurfWars[tw][twLocked] == 1) {
                SendClientMessageEx(playerid, COLOR_GRAD2, "Turf da bi khoa boi mot admin, ban khong the tat turf!");
                return 1;
            }
            if(TurfWars[tw][twVulnerable] == 0) {
                if(TurfWars[tw][twActive] == 0) {
                    SendClientMessageEx(playerid, COLOR_GRAD2, "Turf khong phai la hoat dong turf war, Bam khong co ly do de tat turf!");
                }
                else {
                    new count = 0;
                    if(TurfWars[tw][twAttemptId] == -1) {
                        SendClientMessageEx(playerid, COLOR_GRAD2, "LEO Factions dang co gang tat turf war!");
                        return 1;
                    }

                    foreach(new i: Player)
					{
                        if(TurfWars[tw][twAttemptId] == PlayerInfo[i][pFMember]) {
                            if(GetPlayerTurfWarsZone(i) == tw) {
                                count++;
                            }
                        }
                    }
                    if(count != 0) {
                        format(string,sizeof(string),"Hien van con %d thanh vien tan cong Turf, ban phai loai bo chung truoc khi tat no!",count);
                        SendClientMessageEx(playerid, COLOR_GRAD2, string);
                    }
                    else {
                        ShutdownTurfWarsZone(tw);
                    }
                }
            }
            else {
                SendClientMessageEx(playerid, COLOR_GRAD2, "Turf nay khong bi tan cong, ban khong the tat!");
                SendClientMessageEx(playerid, COLOR_GRAD1, "Neu ban dang o trong FBI, Ban can lien he admin de khoa turf voi mot IC Casefile.");
            }
        }
        else {
            SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khai o trong turf moi co the tat turfs!");
        }
    }
    else {
        SendClientMessageEx(playerid, COLOR_GRAD2, "Ban phai la LEO Faction, ban khong the tat turfs!");
    }
	return 1;
}

CMD:pclaim(playerid, params[]) // Add a 30 second wait timer to prevent spam.
{
	g_mysql_Check_Store(playerid);
	return 1;
}


CMD:claim(playerid, params[])
{
	if(servernumber == 2)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "This command is disabled!");
	    return 1;
	}
    new string[128];
    new tw = GetPlayerTurfWarsZone(playerid);
    new family = PlayerInfo[playerid][pFMember];
//    new rank = PlayerInfo[playerid][pRank];
    if(family == INVALID_FAMILY_ID) {
        SendClientMessageEx(playerid, COLOR_GRAD2, "You are not in a family/gang, you can not claim turfs!");
        return 1;
    }
    /*if(rank < 5) {
        SendClientMessageEx(playerid, COLOR_GRAD2, "You have to be at least Rank 5 to claim turfs!");
        return 1;
    }*/
    if(FamilyInfo[family][FamilyTurfTokens] < 12) {
        SendClientMessageEx(playerid, COLOR_GRAD2, "Your family/gang does not have any turf claim tokens, please wait at least 12 hours.");
        return 1;
    }
    if(tw != -1) {
        if(TurfWars[tw][twLocked] == 1) {
            SendClientMessageEx(playerid, COLOR_GRAD2, "The turf is currently locked by a admin, you can not claim it!");
            return 1;
        }
        if(TurfWars[tw][twVulnerable] == 0) {
            if(TurfWars[tw][twActive] == 0) {
                if(TurfWars[tw][twOwnerId] == family) {
                    SendClientMessageEx(playerid, COLOR_GRAD2, "Your family/gang already owns this turf, you are unable to claim it!");
                    return 1;
                }
                new count = 0;
                foreach(new i: Player)
				{
                    if(family == PlayerInfo[i][pFMember]) {
                        if(GetPlayerTurfWarsZone(i) == tw) {
                            count++;
                        }
                    }
                }

                if(count > 2) {
                    FamilyInfo[family][FamilyTurfTokens] -= 12;
                    TakeoverTurfWarsZone(family, tw);
                }
                else {
                    SendClientMessageEx(playerid, COLOR_GRAD2, "You need at least 3 of your family/gang members on the turf, to be able to claim it!");
                }
            }
            else {
                new count = 0;
                new leocount = 0;
                if(TurfWars[tw][twAttemptId] == family) {
                    SendClientMessageEx(playerid, COLOR_GRAD2, "You are already attempting to capture this turf!");
                    return 1;
                }

                foreach(new i: Player)
				{
                    if(TurfWars[tw][twAttemptId] == PlayerInfo[i][pFMember]) {
                        if(GetPlayerTurfWarsZone(i) == tw) {
                            count++;
                        }
                    }
                    if(TurfWars[tw][twAttemptId] == -1) {
                        if(IsACop(i)) {
                            if(GetPlayerTurfWarsZone(i) == tw) {
                                leocount++;
                            }
                        }
                    }
                }

                if(count == 0 && leocount == 0) {
                    if(family != TurfWars[tw][twOwnerId]) {
                        FamilyInfo[family][FamilyTurfTokens] -= 12;
                    }
                    foreach(new i: Player)
					{
                        if(PlayerInfo[i][pGangModerator] >= 1) {
                            format(string,sizeof(string),"%s has attempted to takeover turf %d for family %s",GetPlayerNameEx(playerid),tw,FamilyInfo[family][FamilyName]);
                            SendClientMessageEx(i,COLOR_YELLOW,string);
                        }
                    }
                    TakeoverTurfWarsZone(family, tw);
                }
                else {
                    if(leocount == 0) {
                        format(string,sizeof(string),"There is still %d Attacking Members on the Turf, you must get rid of them before reclaiming!",count);
                        SendClientMessageEx(playerid, COLOR_GRAD2, string);
                    }
                    else {
                        format(string,sizeof(string),"There is still %d Officers on the Turf, you must get rid of them before reclaiming!",leocount);
                        SendClientMessageEx(playerid, COLOR_GRAD2, string);
                    }
                }
            }
        }
        else {
            SendClientMessageEx(playerid, COLOR_GRAD2, "This turf is currently not vulnerable, you are unable to claim it!");
        }
    }
    else {
        SendClientMessageEx(playerid, COLOR_GRAD2, "You have to be in a turf to be able to claim turfs!");
    }

    if(turfWarsRadar[playerid] == 0) {
        ShowTurfWarsRadar(playerid);
    }
    return 1;
}

CMD:diemarena(playerid, params[]) {
	return cmd_scores(playerid, params);
}

CMD:scores(playerid, params[])
{
    if(GetPVarInt(playerid, "IsInArena") >= 0)
	{
        PaintballScoreboard(playerid, GetPVarInt(playerid, "IsInArena"));
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong o trong arena!");
    }
    return 1;
}

CMD:present(playerid, params[])
{
  	if(IsAJudge(playerid))
	{
		new giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /present [player]");
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
			if(PlayerInfo[giveplayerid][pBeingSentenced] == 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "That person isn't pending a sentence!");
			if(courtjail[giveplayerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "That person isn't in the courthouse jail!");
			if(courtjail[giveplayerid] > 0)
			{
				SetPlayerPos(giveplayerid, 1406.145, -1774.3, 7308.95);
		    	SetPlayerFacingAngle(giveplayerid, 93.34);
			}
			courtjail[giveplayerid] = 0;
		    SetCameraBehindPlayer(giveplayerid);
		}
	}
	else
	{
	    return SendClientMessageEx(playerid, COLOR_GRAD1, "You are not a part of the Judicial System!");
	}
	return 1;
}

CMD:offerappeal(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] == 2 || PlayerInfo[playerid][pJob2] == 2)
	{
	    new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /offerappeal [player]");
		if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
		if(IsPlayerConnected(giveplayerid))
		{
		    if(PlayerInfo[giveplayerid][pBeingSentenced] == 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi do khong co khang an!");
		    if(AppealOfferAccepted[giveplayerid] == 1) return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi do da chap nhan luat su de khang cao cho anh ta!");
			AppealOffer[giveplayerid] = playerid;
		    format(string, sizeof(string), "Ban cung cap mot dich vu luat su cho %s.",GetPlayerNameEx(giveplayerid));
		    SendClientMessageEx(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), "%s da cung cap dich vu luat su cua ho (use /chapnhan appeal de chap nhan chung).", GetPlayerNameEx(playerid));
		    SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		}
	}
	else
	{
	    return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong phai luat su!");
	}
	return 1;
}

/*CMD:nchange(playerid, params[]) return cmd_namechanges(playerid, params);

CMD:namechanges(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
 	{

		new
			nstring[64 + (MAX_PLAYER_NAME * 2)],
			newname[ MAX_PLAYER_NAME ];

  		SendClientMessageEx(playerid, COLOR_GREEN, "* Pending name changes:");
   		foreach(new i: Player)
		{
			if(GetPVarType(i, "RequestingNameChange"))
			{
  				GetPVarString(i, "NewNameRequest", newname, MAX_PLAYER_NAME);
				format(nstring, sizeof(nstring), "Current name: %s (ID: %d) | Requested name: %s | Price: %d", GetPlayerNameEx(i), i, newname, GetPVarInt(i, "NameChangeCost"));
				SendClientMessageEx(playerid, COLOR_YELLOW, nstring);
			}
		}
		SendClientMessageEx(playerid, COLOR_GREEN, "_____________________________________________________");
	}
	return 1;
} */

/*CMD:doiten(playerid, params[]) {
	return cmd_changename(playerid, params);
}
CMD:changename(playerid, params[])
{
	if(IsAtNameChange(playerid))
	{
	    if(gettime()-GetPVarInt(playerid, "LastNameChange") < 120) {
			return SendClientMessageEx(playerid, COLOR_GRAD2, "Doi ten khong thanh cong,Moi lan doi ten phai cach nhau 2 phut.");
		}
	    new iGroupID = PlayerInfo[playerid][pMember];
		if((0 <= iGroupID < MAX_GROUPS) && PlayerInfo[playerid][pRank] >= arrGroupData[iGroupID][g_iFreeNameChange])
		{
			ShowPlayerDialog( playerid, DIALOG_NAMECHANGE, DIALOG_STYLE_INPUT, "Thay Doi Ten","Vui long nhap ten moi cua ban!\n\nNote: Ten thay doi mien phi cho thanh vien Factions.", "Doi ten", "Huy bo" );
		}
		else
		{
			ShowPlayerDialog( playerid, DIALOG_NAMECHANGE, DIALOG_STYLE_INPUT, "Thay Doi Ten","Vui long nhap ten moi cua ban\n\nNote: Phi doi ten la $3000 cho moi level.", "Doi ten", "Huy bo" );
		}
	}
	else if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[playerid][pSMod] > 0) ShowPlayerDialog( playerid, DIALOG_NAMECHANGE, DIALOG_STYLE_INPUT, "Thay Doi Ten","Vui long nhap ten moi cua ban!\n\nNote: Thay doi ten mien phi cho Senior Moderator.", "Doi ten", "Huy bo" );
	else
	{
		SendClientMessageEx( playerid, COLOR_WHITE, "   Ban khong o diem doi ten !" );
	}
	return 1;
}*/

CMD:finishappeal(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] == 2 || PlayerInfo[playerid][pJob2] == 2)
	{
	    new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /finishappeal [player]");
		if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
		if(IsPlayerConnected(giveplayerid))
		{
		    if(AppealOffer[giveplayerid] != playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong cung cap dich vu cho nguoi choi nay!");
		    format(string, sizeof(string), "Ban da hoan thanh dich vu luat su cua minh %s.",GetPlayerNameEx(giveplayerid));
		    SendClientMessageEx(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), "%s da hoan thanh dich vu luat su cua minh.", GetPlayerNameEx(playerid));
		    SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		    AppealOffer[giveplayerid] = INVALID_PLAYER_ID;
			AppealOfferAccepted[giveplayerid] = 0;
		}
	}
	else
	{
       	return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong phai luat su!");
	}
	return 1;
}

CMD:checkjudgements(playerid, params[])
{
    if(IsACop(playerid) || IsAJudge(playerid))
    {

    	if(JudgeOnlineCheck() == 0) return SendClientMessageEx(playerid, COLOR_GRAD4, "Phai co it nhat mot tham phan moi co the su dung lenh nay!");
		SendClientMessageEx(playerid, COLOR_YELLOW, "Pending Judgements List:");

		new
			string[128],
			fCounter;

		foreach(new i: Player)
		{
			if(PlayerInfo[i][pJudgeJailType] == 1)
			{
	  			if(PlayerInfo[i][pJailTime] > 1)
		    	{
					format(string, sizeof(string), "Ket an: %s - jail (transport completed) - time: %d.",GetPlayerNameEx(i),PlayerInfo[i][pJudgeJailTime]);
					SendClientMessageEx(playerid, COLOR_GRAD1, string);
					++fCounter;
				}
				else
				{
    				format(string, sizeof(string), "Ket an: %s - jail (being transported) - time: %d.",GetPlayerNameEx(i),PlayerInfo[i][pJudgeJailTime]);
					SendClientMessageEx(playerid, COLOR_GRAD1, string);
					++fCounter;
				}
			}
			else if(PlayerInfo[i][pJudgeJailType] == 2)
			{
				if(PlayerInfo[i][pJailTime] > 1)
    			{
					format(string, sizeof(string), "Ket an: %s - prison (transport completed) - time: %d.",GetPlayerNameEx(i),PlayerInfo[i][pJudgeJailTime]);
					SendClientMessageEx(playerid, COLOR_GRAD1, string);
					++fCounter;
				}
				else
				{
    				format(string, sizeof(string), "Ket an: %s  - prison (being transported) - time: %d.",GetPlayerNameEx(i),PlayerInfo[i][pJudgeJailTime]);
					SendClientMessageEx(playerid, COLOR_GRAD1, string);
					++fCounter;
				}
			}
		}
		if(fCounter == 0)
		{
  			SendClientMessageEx(playerid, COLOR_GRAD1, "Nobody is pending judgement.");
		}
  	}
	return 1;
}

CMD:freezebank(playerid, params[])
{
  	if(!IsAJudge(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "You are not part of the Judicial System!");
	if(PlayerInfo[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 4+ can do this.");
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /freezebank [player]");
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	new	string[128],
		rank[GROUP_MAX_RANK_LEN],
		division[GROUP_MAX_DIV_LEN],
		employer[GROUP_MAX_NAME_LEN];
	if(PlayerInfo[giveplayerid][pFreezeBank] == 0)
    {
        PlayerInfo[giveplayerid][pFreezeBank] = 1;
       	GetPlayerGroupInfo(playerid, rank, division, employer);
	   	format(string, sizeof(string), "[MAYCHU] %s %s has froze %s bank account.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
    	ABroadCast(COLOR_YELLOW,string, 2);
    	format(string, sizeof(string), "You have frozen %s's bank account.", GetPlayerNameEx(giveplayerid));
   	 	SendClientMessageEx(playerid, COLOR_WHITE, string);
   	 	format(string, sizeof(string), "Your bank account has been frozen by %s", GetPlayerNameEx(playerid));
   	 	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
    }
    else
    {
		PlayerInfo[giveplayerid][pFreezeBank] = 0;
		format(string, sizeof(string), "[MAYCHU] %s %s has unfrozen %s bank account.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		ABroadCast(COLOR_YELLOW,string, 2);
		format(string, sizeof(string), "You have unfrozen %s's bank account.", GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_WHITE, string);
   	 	format(string, sizeof(string), "Your bank account has been unfrozen by %s", GetPlayerNameEx(playerid));
   	 	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:freezeassets(playerid, params[])
{
  	if(!IsAJudge(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "You are not part of the Judicial System!");
	if(PlayerInfo[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 4+ can do this.");
	new giveplayerid, houseorcar[8];
	if(sscanf(params, "us[8]", giveplayerid, houseorcar)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /freezeassets [player] [house/car]");
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	new string[128],
		rank[GROUP_MAX_RANK_LEN],
		division[GROUP_MAX_DIV_LEN],
		employer[GROUP_MAX_NAME_LEN];
    if(strcmp(houseorcar, "house", true) == 0)
	{
		if(PlayerInfo[giveplayerid][pFreezeHouse] == 0)
	    {
			PlayerInfo[giveplayerid][pFreezeHouse] = 1;
	       	GetPlayerGroupInfo(playerid, rank, division, employer);
		   	format(string, sizeof(string), "[MAYCHU] %s %s has frozen %s house assets.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		   	ABroadCast(COLOR_YELLOW,string, 2);
		   	format(string, sizeof(string), "You have frozen %s's house assets.", GetPlayerNameEx(giveplayerid));
	   	 	SendClientMessageEx(playerid, COLOR_WHITE, string);
	   	 	format(string, sizeof(string), "Your house assets have been frozen by %s", GetPlayerNameEx(playerid));
	   	 	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
	    }
	    else
	    {
	        PlayerInfo[giveplayerid][pFreezeHouse] = 0;
			format(string, sizeof(string), "[MAYCHU] %s %s has unfrozen %s house assets.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	    	ABroadCast(COLOR_YELLOW,string, 2);
		   	format(string, sizeof(string), "You have unfrozen %s's house assets.", GetPlayerNameEx(giveplayerid));
	   	 	SendClientMessageEx(playerid, COLOR_WHITE, string);
	   	 	format(string, sizeof(string), "Your house assets have been unfrozen by %s", GetPlayerNameEx(playerid));
	   	 	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		}
	}
	else if(strcmp(houseorcar, "xe", true) == 0)
	{
	    if(PlayerInfo[giveplayerid][pFreezeCar] == 0)
		{
			PlayerInfo[giveplayerid][pFreezeCar] = 1;
	       	GetPlayerGroupInfo(playerid, rank, division, employer);
			format(string, sizeof(string), "[MAYCHU] %s %s has frozen %s vehicle assets.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	    	ABroadCast(COLOR_YELLOW,string, 2);
	    	format(string, sizeof(string), "You have frozen %s's vehicle assets.", GetPlayerNameEx(giveplayerid));
	   	 	SendClientMessageEx(playerid, COLOR_WHITE, string);
	   	 	format(string, sizeof(string), "Your vehicle assets have been frozen by %s", GetPlayerNameEx(playerid));
		 	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
	    }
	    else
	    {
	        PlayerInfo[giveplayerid][pFreezeCar] = 0;
	        format(string, sizeof(string), "[MAYCHU] %s %s has unfrozen %s vehicle assets.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	    	ABroadCast(COLOR_YELLOW,string, 2);
	    	format(string, sizeof(string), "You have unfrozen %s's vehicle assets.", GetPlayerNameEx(giveplayerid));
		 	SendClientMessageEx(playerid, COLOR_WHITE, string);
		 	format(string, sizeof(string), "Your vehicle assets have been unfrozen by %s", GetPlayerNameEx(playerid));
		 	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
	    }
	}
	else
	{
	    return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /freezeassets [player] [house/car]");
	}
	return 1;
}

CMD:reward(playerid, params[])
{

    if(!IsAJudge(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "You are not part of the Judicial System!");
	if(PlayerInfo[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 4+ can do this.");

	new
		giveplayerid,
		money;

	if(sscanf(params, "ud", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /reward [player] [money(max of $50,000)]");
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
	if(IsPlayerConnected(giveplayerid))
	{
		new
			string[64 + (MAX_PLAYER_NAME * 2)];

  		if(money < 1 || money > 50000) return SendClientMessageEx(playerid, COLOR_GRAD5, "Reward amount cannot be lower than $1 or higher than $50,000!");
    	new rank[GROUP_MAX_RANK_LEN], division[GROUP_MAX_DIV_LEN], employer[GROUP_MAX_NAME_LEN];
   		GetPlayerGroupInfo(playerid, rank, division, employer);
	    format(string, sizeof(string), "[MAYCHU] %s %s has just rewarded %s $%d.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), money);
	    ABroadCast(COLOR_YELLOW,string, 2);

		format(string, sizeof(string), "AdmCmd: %s %s has just rewarded %s $%d", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), money);
		Log("logs/rpspecial.log", string);
		Tax -= money;
  		GivePlayerCash(giveplayerid, money);
    	format(string, sizeof(string), "You have given a reward of $%d to %s.", money, GetPlayerNameEx(giveplayerid));
	    SendClientMessageEx(playerid, COLOR_WHITE, string);
	    format(string, sizeof(string), "You have recieved a reward of $%d from %s %s.", money, rank, GetPlayerNameEx(playerid));
	   	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:reversejudgement(playerid, params[])
{

    if(!IsAJudge(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "You are not part of the Judicial System!");
	if(PlayerInfo[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 4+ can do this.");

	new
		giveplayerid; // For future reference - sscanf plugin is 3 times as fast as ReturnUser, even when used on only one argument

	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /reversejudgement [player]");
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
	if(IsPlayerConnected(giveplayerid))
	{
 		if(PlayerInfo[giveplayerid][pJudgeJailTime] != 0)
   		{
     		new rank[GROUP_MAX_RANK_LEN], division[GROUP_MAX_DIV_LEN], employer[GROUP_MAX_NAME_LEN], string[52 + (MAX_PLAYER_NAME * 2)];
       		GetPlayerGroupInfo(playerid, rank, division, employer);
			if(PlayerInfo[giveplayerid][pJailTime] != 0) PlayerInfo[giveplayerid][pJailTime] = 0;
			PlayerInfo[giveplayerid][pJudgeJailTime] = 0;
   			switch(PlayerInfo[playerid][pSex])
			{
			    case 1: format(string, sizeof(string), "%s %s has reversed %s's judgement, he is free to go.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			    case 2: format(string, sizeof(string), "%s %s has reversed %s's judgement, she is free to go.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			}
   			SendGroupMessage(1, DEPTRADIO, string);
   		}
	    else
   		{
        	SendClientMessageEx(playerid, COLOR_GRAD1, "That person doesn't have a jail/prison sentence.");
   		}
	}
	return 1;
}

CMD:commute(playerid, params[])
{
	if(IsAGovernment(playerid) && PlayerInfo[playerid][pRank] >= Group_GetMaxRank(PlayerInfo[playerid][pMember]))
 	{
		new
			giveplayerid;

		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /commute [player]");
		if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pJudgeJailTime] != 0)
		    {
				new string[68 + (MAX_PLAYER_NAME * 2)];
				if(PlayerInfo[giveplayerid][pJailTime] != 0) PlayerInfo[giveplayerid][pJailTime] = PlayerInfo[giveplayerid][pJailTime]/2;
				PlayerInfo[giveplayerid][pJudgeJailTime] = PlayerInfo[giveplayerid][pJudgeJailTime]/2;
				switch(PlayerInfo[playerid][pSex])
				{
					case 1: format(string, sizeof(string), "President %s has commuted %s, his sentence is now half (%d seconds).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pJudgeJailTime]);
					case 2: format(string, sizeof(string), "President %s has commuted %s, her sentence is now half (%d seconds).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pJudgeJailTime]);
				}
			    SendGroupMessage(1, DEPTRADIO, string);
	    	}
	    	else
   			{
	        	SendClientMessageEx(playerid, COLOR_GRAD1, "That person doesn't have a jail/prison sentence.");
   			}
		}
   	}
   	else
   	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Only the President can use this command.");
	}
	return 1;
}

CMD:pardon(playerid, params[])
{
    if(IsAGovernment(playerid) && PlayerInfo[playerid][pRank] >= Group_GetMaxRank(PlayerInfo[playerid][pMember]))
    {
		new
			giveplayerid;

        if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /pardon [player]");
		if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
		if(IsPlayerConnected(giveplayerid))
		{
		    if(PlayerInfo[giveplayerid][pJudgeJailTime] != 0)
		    {
				new string[58 + (MAX_PLAYER_NAME * 2)];
		        if(PlayerInfo[giveplayerid][pJailTime] != 0) PlayerInfo[giveplayerid][pJailTime] = 0;
		        PlayerInfo[giveplayerid][pJudgeJailTime] = 0;
		        switch(PlayerInfo[playerid][pSex])
				{
				    case 1: format(string, sizeof(string), "President %s has forgiven %s of his crimes, he's now free.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				    case 2: format(string, sizeof(string), "President %s has forgiven %s of his crimes, she's now free.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				}
			    SendGroupMessage(1, DEPTRADIO, string);
		    }
		    else
	   		{
	       		SendClientMessageEx(playerid, COLOR_GRAD1, "That person doesn't have a jail/prison sentence.");
	   		}
		}
	}
 	else
  	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Only the President can use this command.");
  	}
	return 1;
}

CMD:wants(playerid, params[])
{
    if(IsACop(playerid) || IsAJudge(playerid))
    {
    	if(JudgeOnlineCheck() == 0) return SendClientMessageEx(playerid, COLOR_GRAD4, "There must be at least one judge online to use this command!");
		SendClientMessageEx(playerid, COLOR_YELLOW, "Outstanding Warrants List:");

		new
			fCounter,
			string[128];

		foreach(new i: Player)
		{
			if(!isnull(PlayerInfo[i][pWarrant]) || PlayerInfo[i][pWarrant] != 0)
			{
				format(string, sizeof(string), "%s (%d) - reason: %s.",GetPlayerNameEx(i), i, PlayerInfo[i][pWarrant]);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				++fCounter;
			}
		}
		if(fCounter <= 0)
		{
		    SendClientMessageEx(playerid, COLOR_GRAD1, "Nobody has any pending warrants.");
		}
  	}
	return 1;
}

CMD:mywarrants(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid, 3.0, 361.8299,173.7117,1008.3828))
    {
		if(!isnull(PlayerInfo[playerid][pWarrant]))
  		{
			SendClientMessageEx(playerid, COLOR_WHITE, "You do have active warrants for your arrest. Please considering calling 911 to turn yourself in.");
   		}
     	else
      	{
       		SendClientMessageEx(playerid, COLOR_WHITE, "You do not have active warrants.");
      	}
   	}
    else
    {
    	SendClientMessageEx(playerid, COLOR_GRAD1, "You need to be at the point in City Hall to check if you have active warrants.");
    }
	return 1;
}

CMD:jarrest(playerid, params[])
{
    if(IsAJudge(playerid))
	{
 		if(!IsAtArrestPoint(playerid, 4))
		{
  			SendClientMessageEx(playerid, COLOR_GREY, "You aren't at the arrest point.");
	    	return 1;
		}
		new suspect = GetClosestPlayer(playerid), string[256];
		if(IsPlayerConnected(suspect))
		{
			if(ProxDetectorS(5.0, playerid,suspect))
			{
				if(PlayerInfo[suspect][pJudgeJailType] != 1) { return SendClientMessageEx(playerid, COLOR_GREY, "That person doesn't need to complete a sentence in jail."); }
				format(string, sizeof(string), "* You arrested %s!", GetPlayerNameEx(suspect));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				ResetPlayerWeaponsEx(suspect);
				for(new x; x < MAX_PLAYERVEHICLES; x++) if(PlayerVehicleInfo[suspect][x][pvTicket] >= 1) {
					PlayerVehicleInfo[suspect][x][pvTicket] = 0;
				}
				SetPlayerInterior(suspect, 5);
				SetPlayerPos(suspect,318.5971,312.9619,999.1484);
				PlayerInfo[suspect][pJailTime] = PlayerInfo[suspect][pJudgeJailTime];
				DeletePVar(suspect, "IsFrozen");
				PhoneOnline[suspect] = 1;
				PlayerInfo[suspect][pArrested] += 1;
				SetPlayerFree(suspect,playerid, "was arrested");
				PlayerInfo[suspect][pWantedLevel] = 0;
				SetPlayerToTeamColor(suspect);
				SetPlayerWantedLevel(suspect, 0);
				WantLawyer[suspect] = 1;
				TogglePlayerControllable(suspect, 1);
				ClearAnimations(suspect);
				if(PlayerCuffed[suspect] == 2)
				{
					SetPlayerHealth(suspect, GetPVarFloat(suspect, "cuffhealth"));
					SetPlayerArmor(suspect, GetPVarFloat(suspect, "cuffarmor"));
					DeletePVar(suspect, "cuffhealth");
					DeletePVar(suspect, "PlayerCuffed");
				}
				PlayerCuffed[suspect] = 0;
				DeletePVar(suspect, "PlayerCuffed");
				PlayerCuffedTime[suspect] = 0;
				PlayerInfo[suspect][pVW] = 0;
				SetPlayerVirtualWorld(suspect, 0);
			}
		}
	}
	return 1;
}

CMD:deliver(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 8.0, 1991.7953,-2321.2532,13.5469))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o San bay quoc te Los Santos.");
		return 1;
	}
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /deliver [player]");
	if(PlayerInfo[playerid][pRank] < 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban phai co it nhat rank 1.");
		return 1;
	}
	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the tu dua minh vao tu!"); return 1; }
		if(PlayerInfo[giveplayerid][pJudgeJailTime] == 0 && PlayerInfo[giveplayerid][pJudgeJailType] != 2) { SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong can o trong tu!"); return 1; }
		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			new string[37 + MAX_PLAYER_NAME];
  			DeletePVar(giveplayerid, "IsFrozen");
			format(string, sizeof(string), "* Ban da dua %s vao Department of Corrections(DOC).", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* %s da dua ban den Department of Corrections(DOC).", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			GameTextForPlayer(giveplayerid, "~w~Chao mung den ~n~~r~the Department of Corrections", 5000, 3);
			ClearAnimations(giveplayerid);
			PlayerCuffed[giveplayerid] = 0;
			DeletePVar(giveplayerid, "PlayerCuffed");
			format(PlayerInfo[giveplayerid][pPrisonedBy], 24, "%s", GetPlayerNameEx(playerid));
			format(PlayerInfo[giveplayerid][pPrisonReason], 128, "[IC] Tham phan Beo dep trai");
			PlayerInfo[giveplayerid][pWantedLevel] = 0;
			SetPlayerToTeamColor(giveplayerid);
			SetPlayerWantedLevel(giveplayerid, 0);
			SetPlayerSkin(giveplayerid, 50);
			PhoneOnline[giveplayerid] = 1;
			PlayerInfo[giveplayerid][pJailTime] = PlayerInfo[giveplayerid][pJudgeJailTime];
			SetPlayerInterior(giveplayerid, 10);
			PlayerInfo[giveplayerid][pInt] = 10;
			SetPlayerSkin(giveplayerid, 50);
			SetPlayerVirtualWorld(giveplayerid, 0);
			PlayerInfo[giveplayerid][pVW] = 0;
			SetPlayerColor(giveplayerid, TEAM_ORANGE_COLOR);
			new rand = random(sizeof(DocPrison));
			SetPlayerFacingAngle(giveplayerid, 0);
			SetPlayerPos(giveplayerid, DocPrison[rand][0], DocPrison[rand][1], DocPrison[rand][2]);
			ResetPlayerWeaponsEx(giveplayerid);
			Player_StreamPrep(giveplayerid, DocPrison[rand][0], DocPrison[rand][1], DocPrison[rand][2], FREEZE_TIME);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		return 1;
	}
	return 1;
}

CMD:me(playerid, params[])
{
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /me [noi dung]");
	new string[128];
	if(HideName[playerid] == 1)
	{
         format(string, sizeof(string), "{FF8000}* {C2A2DA}%d Che Mat: %s", PlayerInfo[playerid][pUidMask], params);
	     SetPlayerChatBubble(playerid,string,COLOR_PURPLE,60.0,8000);
	     ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	     return 1;
	}
	if(PlayerInfo[playerid][pChetne] == 1)
	{
         SendClientMessageEx(playerid, COLOR_GREY, "Ban da chet.");
	}
	else
	{
		format(string, sizeof(string), "{FF8000}* {C2A2DA}%s %s", GetPlayerNameEx(playerid), params);
		ProxDetectorWrap(playerid, string, 92, 30.0, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	}
	return 1;
}
CMD:ame(playerid, params[])
{
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /ame [action]");
	new string[128];
	format(string, sizeof(string), "{FF8000}* {C2A2DA}%s %s", GetPlayerNameEx(playerid), params);
	SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 20.0, 5000);
	return 1;
}

CMD:whisper(playerid, params[]) {
	return cmd_w(playerid, params);
}

CMD:w(playerid, params[])
{
	new giveplayerid, whisper[128];

	if(gPlayerLogged{playerid} == 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban chua dang nhap.");
		return 1;
	}
	if(sscanf(params, "us[128]", giveplayerid, whisper))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/w)hisper [player] [noi dung]");
		return 1;
	}
	if(WatchingTV[playerid] != 0 && PlayerInfo[playerid][pAdmin] < 2)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lam dieu nay khi dang xem TV.");
		return 1;
	}
	if (IsPlayerConnected(giveplayerid))
	{
		if(HidePM[giveplayerid] > 0 && PlayerInfo[playerid][pAdmin] < 2)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "That person is blocking whispers!");
			return 1;
		}
		new giveplayer[MAX_PLAYER_NAME], sendername[MAX_PLAYER_NAME], string[128];
		sendername = GetPlayerNameEx(playerid);
		giveplayer = GetPlayerNameEx(giveplayerid);
		if(giveplayerid == playerid)
		{
			if(PlayerInfo[playerid][pSex] == 1) format(string, sizeof(string), "* %s mutters something to himself.", GetPlayerNameEx(playerid));
			else format(string, sizeof(string), "* %s mutters something to herself.", GetPlayerNameEx(playerid));
			return ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		if(ProxDetectorS(5.0, playerid, giveplayerid) || PlayerInfo[playerid][pAdmin] >= 2)
		{
		    foreach(new i: Player)
		    {
		        if(GetPVarInt(i, "BigEar") == 6 && (GetPVarInt(i, "BigEarPlayer") == playerid || GetPVarInt(i, "BigEarPlayer")  == giveplayerid))
		        {
					format(string, sizeof(string), "(BE)%s(ID %d) thi tham voi %s(ID %d): %s", GetPlayerNameEx(playerid), playerid, GetPlayerNameEx(giveplayerid), giveplayerid, whisper);
					SendClientMessageWrap(i, COLOR_YELLOW, 92, string);
				}
			}

			format(string, sizeof(string), "%s (ID %d) thi tham voi ban: %s", GetPlayerNameEx(playerid), playerid, whisper);
			SendClientMessageWrap(giveplayerid, COLOR_YELLOW, 92, string);

			format(string, sizeof(string), "Ban thi tham voi %s: %s", GetPlayerNameEx(giveplayerid),whisper);
			SendClientMessageWrap(playerid, COLOR_YELLOW, 92, string);
			return 1;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
		}
		return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	return 1;
}

CMD:do(playerid, params[])
{
	if	(gPlayerLogged{playerid} == 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban chua dang nhap.");
		return 1;
	}
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /do [noi dung]");
	else if(strlen(params) > 120) return SendClientMessageEx(playerid, COLOR_GREY, "Ban Khong Duoc Su Dung Qua 120 Chu.");
	new
		iCount,
		iPos,
		iChar;

	while((iChar = params[iPos++])) {
		if(iChar == '@') iCount++;
	}
	if(iCount >= 5) {
		return SendClientMessageEx(playerid, COLOR_GREY, "The specified message must not contain more than 4 '@' symbols.");
	}
	new string[150];
    if(PlayerInfo[playerid][pChetne] == 1)
	{
         SendClientMessageEx(playerid, COLOR_GREY, "Ban da chet.");
	}
	if(HideName[playerid] == 1)
	{
         format(string, sizeof(string), "* %s Che Mat: %d", PlayerInfo[playerid][pUidMask], params);
	     SetPlayerChatBubble(playerid,string,COLOR_PURPLE,60.0,8000);
	     ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	     return 1;
	}
	else
	{
		format(string, sizeof(string), "* %s (( %s ))", params, GetPlayerNameEx(playerid));
		ProxDetectorWrap(playerid, string, 92, 30.0, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	}
	return 1;
}

CMD:o(playerid, params[])
{
	if(gPlayerLogged{playerid} == 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban chua dang nhap.");
		return 1;
	}
	if ((noooc) && PlayerInfo[playerid][pAdmin] < 2 && EventKernel[EventCreator] != playerid)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Kenh chat OOC da bi tat boi Admin!");
		return 1;
	}
	if(gOoc[playerid])
	{
		SendClientMessageEx(playerid, TEAM_CYAN_COLOR, "Ban da an hien thi OOC chat, de hien len su dung /togooc!");
		return 1;
	}
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/o)oc [ooc chat]");

	if(PlayerInfo[playerid][pAdmin] == 1)
	{
		new string[128];
		format(string, sizeof(string), "(( ??? %s: %s ))", GetPlayerNameEx(playerid), params);
		OOCOff(COLOR_OOC,string);
	}
	else if(PlayerInfo[playerid][pAdmin] > 1)
	{
		new string[128];
		format(string, sizeof(string), "(( {33FF99}A{FFCC66}d{00CC00}m{CC99FF}i{FF6600}n{FFFFFF} %s: %s ))", GetPlayerNameEx(playerid), params);
		OOCOff(COLOR_OOC,string);
	}
	else if(PlayerInfo[playerid][pHelper] >= 1)
	{
		new string[128];
		format(string, sizeof(string), "(( Helper %s: %s ))", GetPlayerNameEx(playerid), params);
		OOCOff(COLOR_OOC,string);
		return 1;
	}
	else if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] <= 2)
	{
		new string[128];
		format(string, sizeof(string), "(( Member %s: %s ))", GetPlayerNameEx(playerid), params);
		OOCOff(COLOR_OOC,string);
		return 1;
	}
	return 1;
}


CMD:shout(playerid, params[]) {
	return cmd_s(playerid, params);
}

CMD:s(playerid, params[])
{
	if(gPlayerLogged{playerid} == 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban chua dang nhap.");
		return 1;
	}

	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/s)hout [shout chat]");
	new string[128];
	if(HideName[playerid] == 1)
	{
		format(string, sizeof(string), "(Het to) %s!", params);
	    SetPlayerChatBubble(playerid,string,COLOR_WHITE,60.0,5000);
	   	format(string, sizeof(string), "%d Che Mat Het To: %s", PlayerInfo[playerid][pUidMask], params);
	    ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2, 1);
		return 1;
	}
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SUDUNG: (/s)hout [shout chat]");
	if(PlayerInfo[playerid][pChetne] == 1)
	{
         SendClientMessageEx(playerid, COLOR_RED, "Ban da chet.");
	}
	else
	{
		format(string, sizeof(string), "(het to) %s!", params);
		SetPlayerChatBubble(playerid,string,COLOR_WHITE,60.0,5000);
		format(string, sizeof(string), "%s het to: %s!", GetPlayerNameEx(playerid), params);
		ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2, 1);
	}
	return 1;
}

CMD:low(playerid, params[]) {
	return cmd_l(playerid, params);
}

CMD:l(playerid, params[])
{
	if(gPlayerLogged{playerid} == 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban chua dang nhap.");
		return 1;
	}

	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/l)ow [close chat]");

	new string[128];
	if(HideName[playerid] == 10)
	{
        format(string, sizeof(string), "%d Che Mat: noi nho: %s", PlayerInfo[playerid][pUidMask], params);
	    ProxDetector(5.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5, 1);
	    format(string, sizeof(string), "(noi nho) %s", params);
	    SetPlayerChatBubble(playerid,string,COLOR_WHITE,5.0,5000);
	    return 1;
	}
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SUDUNG: (/l)ow [close chat]");

	if(PlayerInfo[playerid][pChetne] == 1)
	{
        SendClientMessageEx(playerid, COLOR_RED, "[!]Ban da chet.");
	}
	else
	{
		format(string, sizeof(string), "%s noi nho: %s", GetPlayerNameEx(playerid), params);
		ProxDetector(5.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5, 1);
		format(string, sizeof(string), "(noi nho) %s", params);
		SetPlayerChatBubble(playerid,string,COLOR_WHITE,5.0,5000);
	}
	return 1;
}

CMD:b(playerid, params[])
{
	if(gPlayerLogged{playerid} == 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban chua dang nhap.");
		return 1;
	}
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /b [Chat ooc]");
	new string[128];
	if(PlayerInfo[playerid][pChetne] == 1)
	{
         SendClientMessageEx(playerid, COLOR_RED, "Ban da chet.");
	}
	format(string, sizeof(string), "[%d] %s: (( %s ))",playerid, GetPlayerNameEx(playerid), params);
	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);

	foreach(new i: Player)
	{
	    if(PlayerInfo[i][pAdmin] > 1 && GetPVarInt(i, "BigEar") == 2)
	    {
			new szAntiprivacy[128];
			format(szAntiprivacy, sizeof(szAntiprivacy), "(BE) %s: %s", GetPlayerNameEx(playerid), params);
			SendClientMessageEx(i, COLOR_FADE1, szAntiprivacy);
		}
	}
	return 1;
}

IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    if (x > minx && x < maxx && y > miny && y < maxy) return 1;
    return 0;
}

FoundTreasure(playerid)
{
	new szMessage[128];

	switch(PlayerInfo[playerid][pTreasureSkill])
	{
	    case 1..149:
	    {
	        new FoundAnything = Random(1, 100);
	        if(FoundAnything >= 1 && FoundAnything <= 50)
	        {
	            new ItemFound = Random(1, 10);
	            if(ItemFound >= 1 && ItemFound <= 2)
	            {
	                SetPVarInt(playerid, "junkmetal", GetPVarInt(playerid, "junkmetal")+1);
	                SaveTreasureInventory(playerid);

	                format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds junk metal.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else if(ItemFound >= 3 && ItemFound <= 4)
	            {
	                SetPVarInt(playerid, "newcoin", GetPVarInt(playerid, "newcoin")+1);
	                SaveTreasureInventory(playerid);

	                format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a new coin.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
                else if(ItemFound >= 5 && ItemFound <= 6)
	            {
	                SetPVarInt(playerid, "oldcoin", GetPVarInt(playerid, "oldcoin")+1);
	                SaveTreasureInventory(playerid);

	                format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a old coin.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else if(ItemFound >= 7 && ItemFound <= 8)
	            {
	                SetPVarInt(playerid, "brokenwatch", GetPVarInt(playerid, "brokenwatch")+1);
	                SaveTreasureInventory(playerid);

	                format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a broken watch.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else if(ItemFound >= 9 && ItemFound <= 10)
	            {
	                SetPVarInt(playerid, "oldkey", GetPVarInt(playerid, "oldkey")+1);
	                SaveTreasureInventory(playerid);

	                format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a old key.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	        }
	        else
	        {
	            SendClientMessageEx(playerid, COLOR_WHITE, "You did not discover anything.");

	            format(szMessage, 128, "%s's metal detector has seemed to malfunctioned", GetPlayerNameEx(playerid));
  				ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        }
	    }
	    case 150..299:
	    {
	        new FoundAnything = Random(1, 100);
	        if(FoundAnything >= 1 && FoundAnything <= 75)
	        {
	            new ItemFound = Random(1, 10);
         		if(ItemFound >= 1 && ItemFound <= 2)
          		{
       	    		SetPVarInt(playerid, "junkmetal", GetPVarInt(playerid, "junkmetal")+1);
         	    	SaveTreasureInventory(playerid);

         	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds junk metal.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
           		}
            	else if(ItemFound == 3 && ItemFound <= 4)
            	{
      	    		SetPVarInt(playerid, "newcoin", GetPVarInt(playerid, "newcoin")+1);
        	    	SaveTreasureInventory(playerid);

        	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a new coin.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else if(ItemFound == 5 && ItemFound <= 6)
            	{
        	    	SetPVarInt(playerid, "oldcoin", GetPVarInt(playerid, "oldcoin")+1);
         	    	SaveTreasureInventory(playerid);

         	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a old coin.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else if(ItemFound == 7)
            	{
        	    	SetPVarInt(playerid, "brokenwatch", GetPVarInt(playerid, "brokenwatch")+1);
         	    	SaveTreasureInventory(playerid);

         	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a broken watch.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else if(ItemFound == 8 || ItemFound == 9)
            	{
        	    	SetPVarInt(playerid, "oldkey", GetPVarInt(playerid, "oldkey")+1);
         	    	SaveTreasureInventory(playerid);

         	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a old key.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
				else if(ItemFound == 10)
				{
				    new VeryRare = Random(1, 90);
				    if(VeryRare >= 1 && VeryRare <= 30)
				    {
				        SetPVarInt(playerid, "goldwatch", GetPVarInt(playerid, "goldwatch")+1);
	            	    SaveTreasureInventory(playerid);

	            	    format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a gold watch!", GetPlayerNameEx(playerid));
  						ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    }
				    else if(VeryRare >= 31 && VeryRare <= 60)
				    {
				        SetPVarInt(playerid, "silvernugget", GetPVarInt(playerid, "silvernugget")+1);
	            	    SaveTreasureInventory(playerid);

	            	    format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a silver nugget!", GetPlayerNameEx(playerid));
  						ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    }
				    else if(VeryRare >= 61 && VeryRare <= 90)
				    {
				        SetPVarInt(playerid, "goldnugget", GetPVarInt(playerid, "goldnugget")+1);
	            	    SaveTreasureInventory(playerid);

	            	    format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a gold nugget!", GetPlayerNameEx(playerid));
  						ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    }
				}
	        }
	        else
	        {
	            SendClientMessageEx(playerid, COLOR_WHITE, "You did not discover anything.");

	            format(szMessage, 128, "%s's metal detector has seemed to malfunctioned", GetPlayerNameEx(playerid));
  				ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        }
	    }
	    case 300..499:
	    {
	        new FoundAnything = Random(1, 125);
	        if(FoundAnything >= 1 && FoundAnything <= 75)
	        {
        		new ItemFound = Random(1, 10);
         		if(ItemFound >= 1 && ItemFound <= 2)
          		{
       	    		SetPVarInt(playerid, "junkmetal", GetPVarInt(playerid, "junkmetal")+1);
         	    	SaveTreasureInventory(playerid);

         	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds junk metal.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
           		}
            	else if(ItemFound == 3 && ItemFound <= 4)
            	{
      	    		SetPVarInt(playerid, "newcoin", GetPVarInt(playerid, "newcoin")+1);
        	    	SaveTreasureInventory(playerid);

        	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a new coin.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else if(ItemFound == 5 && ItemFound <= 6)
            	{
        	    	SetPVarInt(playerid, "oldcoin", GetPVarInt(playerid, "oldcoin")+1);
         	    	SaveTreasureInventory(playerid);

         	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a old coin.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else if(ItemFound == 7)
            	{
        	    	SetPVarInt(playerid, "brokenwatch", GetPVarInt(playerid, "brokenwatch")+1);
         	    	SaveTreasureInventory(playerid);

         	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a broken watch.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else if(ItemFound == 8 || ItemFound == 9)
            	{
        	    	SetPVarInt(playerid, "oldkey", GetPVarInt(playerid, "oldkey")+1);
         	    	SaveTreasureInventory(playerid);

         	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a old key.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
				else if(ItemFound == 10)
				{
				    new VeryRare = Random(1, 90);
				    if(VeryRare >= 1 && VeryRare <= 30)
				    {
				        SetPVarInt(playerid, "goldwatch", GetPVarInt(playerid, "goldwatch")+1);
	            	    SaveTreasureInventory(playerid);

	            	    format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a gold watch!", GetPlayerNameEx(playerid));
  						ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    }
				    else if(VeryRare >= 31 && VeryRare <= 60)
				    {
				        SetPVarInt(playerid, "silvernugget", GetPVarInt(playerid, "silvernugget")+1);
	            	    SaveTreasureInventory(playerid);

	            	    format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a silver nugget!", GetPlayerNameEx(playerid));
  						ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    }
				    else if(VeryRare >= 61 && VeryRare <= 90)
				    {
				        SetPVarInt(playerid, "goldnugget", GetPVarInt(playerid, "goldnugget")+1);
	            	    SaveTreasureInventory(playerid);

	            	    format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a gold nugget!", GetPlayerNameEx(playerid));
  						ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    }
				}
	        }
	        else
	        {
	            SendClientMessageEx(playerid, COLOR_WHITE, "You did not discover anything.");

	            format(szMessage, 128, "%s's metal detector has seemed to malfunctioned", GetPlayerNameEx(playerid));
  				ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        }
	    }
		case 500..9999:
		{
		    new FoundAnything = Random(1, 125);
	        if(FoundAnything >= 1 && FoundAnything <= 75)
	        {
        		new ItemFound = Random(1, 10);
         		if(ItemFound >= 1 && ItemFound <= 2)
          		{
       	    		SetPVarInt(playerid, "junkmetal", GetPVarInt(playerid, "junkmetal")+1);
         	    	SaveTreasureInventory(playerid);

         	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds junk metal.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
           		}
            	else if(ItemFound == 3 && ItemFound <= 4)
            	{
      	    		SetPVarInt(playerid, "newcoin", GetPVarInt(playerid, "newcoin")+1);
        	    	SaveTreasureInventory(playerid);

        	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a new coin.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else if(ItemFound == 5 && ItemFound <= 6)
            	{
        	    	SetPVarInt(playerid, "oldcoin", GetPVarInt(playerid, "oldcoin")+1);
         	    	SaveTreasureInventory(playerid);

         	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a old coin.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else if(ItemFound == 7)
            	{
        	    	SetPVarInt(playerid, "brokenwatch", GetPVarInt(playerid, "brokenwatch")+1);
         	    	SaveTreasureInventory(playerid);

         	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a broken watch.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else if(ItemFound == 8)
            	{
        	    	SetPVarInt(playerid, "oldkey", GetPVarInt(playerid, "oldkey")+1);
         	    	SaveTreasureInventory(playerid);

         	    	format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a old key.", GetPlayerNameEx(playerid));
  					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
				else if(ItemFound == 9 || ItemFound == 10)
				{
				    new VeryRare = Random(1, 100);
				    if(VeryRare >= 1 && VeryRare <= 35)
				    {
				        SetPVarInt(playerid, "goldwatch", GetPVarInt(playerid, "goldwatch")+1);
	            	    SaveTreasureInventory(playerid);

	            	    format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a gold watch!", GetPlayerNameEx(playerid));
  						ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    }
				    else if(VeryRare >= 36 && VeryRare <= 65)
				    {
				        SetPVarInt(playerid, "silvernugget", GetPVarInt(playerid, "silvernugget")+1);
	            	    SaveTreasureInventory(playerid);

	            	    format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a silver nugget!", GetPlayerNameEx(playerid));
  						ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    }
				    else if(VeryRare >= 66 && VeryRare <= 99)
				    {
				        SetPVarInt(playerid, "goldnugget", GetPVarInt(playerid, "goldnugget")+1);
	            	    SaveTreasureInventory(playerid);

	            	    format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a gold nugget!", GetPlayerNameEx(playerid));
  						ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    }
				    else if(VeryRare == 100)
				    {
				        SetPVarInt(playerid, "treasure", GetPVarInt(playerid, "treasure")+1);
	            	    SaveTreasureInventory(playerid);

	            	    format(szMessage, 128, "%s's sweeps the ground with a metal detector and finds a hidden treasure!", GetPlayerNameEx(playerid));
  						ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

  						format(szMessage, 128, "[MAYCHU] %s has just found hidden treasure ($1,000,000)", GetPlayerNameEx(playerid));
						ABroadCast(COLOR_YELLOW, szMessage, 2);
				    }
				}
	        }
	        else
	        {
	            SendClientMessageEx(playerid, COLOR_WHITE, "You did not discover anything.");

	            format(szMessage, 128, "%s's metal detector has seemed to malfunctioned", GetPlayerNameEx(playerid));
  				ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        }
		}
	}
	return 1;
}


CMD:search(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 22 && PlayerInfo[playerid][pJob2] != 22) {
		return SendClientMessageEx(playerid, COLOR_GREY, "You are not a treasure hunter.");
	}
	else if(PlayerInfo[playerid][pMetalDetector] == 0) {
		return SendClientMessageEx(playerid, COLOR_GREY, "You don't have a metal detector. You can recieve one from a craftsman.");
	}
	else if(IsPlayerInAnyVehicle(playerid)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "You are not allowed to metal detect while in a vehicle. " );
	}
	else if(gettime()-GetPVarInt(playerid, "LastScan") < GetPVarInt(playerid, "ScanReload")) {
		return SendClientMessageEx(playerid, COLOR_GRAD2, "Your metal detector is still charging.");
	}

	else if(!GetPVarType(playerid, "HiddenTreasure")) { // New Treasure
 		SetPVarInt(playerid, "HiddenTreasure", random(sizeof(HiddenTreasure)));
	}

	new
		szMessage[128],
		Float:distance = GetPlayerDistanceFromPoint(playerid, HiddenTreasure[GetPVarInt(playerid, "HiddenTreasure")][0], HiddenTreasure[GetPVarInt(playerid, "HiddenTreasure")][1], HiddenTreasure[GetPVarInt(playerid, "HiddenTreasure")][2]);

    if(IsPlayerInArea(playerid, 402.2964, 737.5547, -1923.9410, -1752.8732) && distance > 3)
  	{
   		PlayerInfo[playerid][pMetalDetector]--;

   		if(PlayerInfo[playerid][pMetalDetector] == 1) {
			SendClientMessageEx(playerid, COLOR_WHITE, "INFO: You only have 1 metal detector charge left.");
		}

        SetPlayerCheckpoint(playerid,HiddenTreasure[GetPVarInt(playerid, "HiddenTreasure")][0], HiddenTreasure[GetPVarInt(playerid, "HiddenTreasure")][1], HiddenTreasure[GetPVarInt(playerid, "HiddenTreasure")][2], 3);
        SetTimerEx("DisableCheckPoint", 2000, 0, "i", playerid);

   		format(szMessage, 128, "You are %f meters away from the treasure. ", distance);
     	SendClientMessageEx(playerid, COLOR_WHITE, szMessage);

      	format(szMessage, 128, "%s sweeps the ground with a metal detector.", GetPlayerNameEx(playerid));
       	ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

        if(PlayerInfo[playerid][pTreasureSkill] >=0 && PlayerInfo[playerid][pTreasureSkill] <= 24) SetPVarInt(playerid, "ScanReload", 20);
		else if(PlayerInfo[playerid][pTreasureSkill] >=25 && PlayerInfo[playerid][pTreasureSkill] <= 299) SetPVarInt(playerid, "ScanReload", 15);
		else if(PlayerInfo[playerid][pTreasureSkill] >=300 && PlayerInfo[playerid][pTreasureSkill] <= 599) SetPVarInt(playerid, "ScanReload", 10);
		else if(PlayerInfo[playerid][pTreasureSkill] >=600) SetPVarInt(playerid, "ScanReload", 5);

  		SetPVarInt(playerid, "LastScan", gettime());

	}
 	else if(distance <= 3) // Finds Treasure
  	{
  	    FoundTreasure(playerid);
  	    PlayerInfo[playerid][pMetalDetector]--;
		/*if(PlayerInfo[playerid][pDoubleEXP] > 0)
		{
			format(szMessage, 128, "You have gained 2 treasure hunting skill points instead of 1. Ban con %d gio con lai nhan doi EXP token.", PlayerInfo[playerid][pDoubleEXP]);
			SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
			PlayerInfo[playerid][pTreasureSkill] += 2;
		}
		else ++PlayerInfo[playerid][pTreasureSkill];*/
		++PlayerInfo[playerid][pTreasureSkill];
  	    DeletePVar(playerid, "HiddenTreasure");

  	    if(PlayerInfo[playerid][pMetalDetector] == 1) {
			SendClientMessageEx(playerid, COLOR_WHITE, "INFO: You only have 1 metal detector charge left.");
		}

  	    if(PlayerInfo[playerid][pTreasureSkill] == 25) {
  	        SendClientMessageEx(playerid, COLOR_WHITE, "* Your Treasure Hunting Skill is now Level 2, the time it takes for your metal detector to charge is now 15 seconds!");
  	    }
  	    if(PlayerInfo[playerid][pTreasureSkill] == 150) {
  	        SendClientMessageEx(playerid, COLOR_WHITE, "* Your Treasure Hunting Skill is now Level 3, your chance to find a rare is now 10%!");
  	    }
  	    if(PlayerInfo[playerid][pTreasureSkill] == 300) {
  	        SendClientMessageEx(playerid, COLOR_WHITE, "* Your Treasure Hunting Skill is now Level 4, the time it takes for your metal detector to charge is now 10 seconds!");
  	    }
  	    if(PlayerInfo[playerid][pTreasureSkill] == 600) {
  	        SendClientMessageEx(playerid, COLOR_WHITE, "* Your Treasure Hunting Skill is now Level 5, your chance to find a rare is now 20%!");
  	    }
   	}
    else {
    	SendClientMessageEx(playerid, COLOR_GREY, "You are not at a beach.");
    }
	return 1;
}
CMD:pay(playerid, params[])
{
	new id, storageid, amount;

	if(sscanf(params, "ud", id, amount)) {
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /pay [player] [so tien]");
	}
	else if(!IsPlayerConnected(id)) {
		SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	else if(id == playerid) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the chuyen tien cho chinh minh!");
	}
	else if(amount > 100000 && PlayerInfo[playerid][pLevel] < 2) {
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban phai dat level 2, de co the chuyen tien hon $100,000.");
	}
	else if(!(1 <= amount <= 500000)) {
		SendClientMessageEx(playerid, COLOR_GRAD1, "Khong chuyen tien duoi $1, va cao hon $500,000.");
	}
	else if(gettime()-GetPVarInt(playerid, "LastTransaction") < 5) {
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban chi co the giao dich 5 giay 1 lan!");
	}
	else if(PlayerInfo[playerid][pCash] < 0 || PlayerInfo[playerid][pAccount] < 0) {
		SendClientMessageEx(playerid, COLOR_GRAD1, "Tien hien tai cua ban,trong ngan hang dang bi am!");
	}
	else if(ProxDetectorS(5.0, playerid, id)) {
		TransferStorage(id, -1, playerid, storageid, 1, amount, -1, -1);
		OnPlayerStatsUpdate(playerid);
		OnPlayerStatsUpdate(id);
		SetPVarInt(playerid, "LastTransaction", gettime());
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
	return 1;
}

CMD:tutu(playerid, params[]) {
	return cmd_kill(playerid, params);
}
CMD:kill(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong the tu tu vao thoi diem nay.");
	else if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the tu tu khi dang trong su kien Hunger Games!");
    else if(GetPVarInt( playerid, "EventToken" ) == 1 || PlayerInfo[playerid][pBeingSentenced] != 0 || GetPVarInt(playerid, "Injured") != 0 || PlayerCuffed[playerid] != 0 || PlayerInfo[playerid][pHospital] != 0 || PlayerInfo[playerid][pJailTime] != 0) return SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong the lam dieu nay vao thoi diem nay.");
	else
	{
		if(GetPVarInt(playerid, "EventToken") >= 1 || GetPVarInt(playerid, "IsInArena") >= 0)
		{
		    if(GetPVarInt(playerid, "IsInArena") >= 0)
		    {
				if(PaintBallArena[GetPVarInt(playerid, "IsInArena")][pbGameType] == 3)
				{
				    if(GetPVarInt(playerid, "AOSlotPaintballFlag") != -1)
				    {
				        SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co the tu tu khi dang cam mot la co.");
				        return 1;
				    }
				}
		    }
			ResetPlayerWeapons(playerid);
		}

		if(GetPVarInt(playerid, "commitSuicide") == 1) {
		    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da yeu cau tu tu.");
		}
		else {
			SetTimerEx("killPlayer", 10000, false, "i", playerid);
			SetPVarInt(playerid, "commitSuicide", 1);
			SendClientMessageEx(playerid, COLOR_YELLOW, "Ban yeu cau duoc tu tu, xin vui long dung im va cho 10 giay...");
		}
	}
	return 1;
}

CMD:stopani(playerid, params[])
{
	if(StopaniFloats[playerid][0] != 0)
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban yeu cau dung lai moi hanh dong cua minh!");
		return 1;
	}
	if(GetPVarInt(playerid, "Injured") != 0 || PlayerCuffed[playerid] != 0 || PlayerInfo[playerid][pHospital] != 0 || PlayerInfo[playerid][pBeingSentenced] != 0|| GetPVarType(playerid, "IsTackled") || GetPVarType(playerid, "Tackling"))
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lam dieu nay bay gio.");
	}
	else
	{
	    GetPlayerPos(playerid, StopaniFloats[playerid][0], StopaniFloats[playerid][1], StopaniFloats[playerid][2]);
		SetTimerEx("StopaniTimer", 10000, 0, "d", playerid);
		SendClientMessageEx (playerid, COLOR_YELLOW, "Vui long khong di chuyen trong vong 10 giay...!");
	}
	return 1;
}

CMD:eventhelp(playerid, params[])
{
	if (EventKernel[EventCreator] == playerid || PlayerInfo[playerid][pAdmin] >= 4)
	{
	    SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
		SendClientMessageEx(playerid, COLOR_GRAD4,"*** EVENT HELP *** Nhap lenh de biet them thong tin");
		SendClientMessageEx(playerid, COLOR_WHITE,"*** EVENT HELP *** /seteventpos /seteventinfo /startevent /lockevent /endevent /announceevent /beginevent /quitevent");
		SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
	}
	return 1;
}

CMD:kynang(playerid, params[]) {
	return cmd_skill(playerid, params);
}
CMD:skill(playerid, params[])
{
	if(isnull(params))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /kynang [number]");
		SendClientMessageEx(playerid, COLOR_GREY, "| 1: Tham tu 																	 6: Nguoi che tao vu khi");
		SendClientMessageEx(playerid, COLOR_GREY, "| 2: Luat su						   											 7: Tho sua xe");
		SendClientMessageEx(playerid, COLOR_GREY, "| 3: Gai diem										  	 						 8: Boxer");
		SendClientMessageEx(playerid, COLOR_GREY, "| 4: Nguoi ban thuoc phien								  9: Cau ca");
		SendClientMessageEx(playerid, COLOR_GREY, "| 5: Buon ma tuy 						    	10: Trucker");
		SendClientMessageEx(playerid, COLOR_GREY, "| 11: Treasure Hunter");
		return 1;
	}
	else switch(strval(params)) {
		case 1: //Tham tu
		{
			new level = PlayerInfo[playerid][pDetSkill], string[48];
			if(level >= 0 && level < 100) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Tham tu cap do = 1."); format(string, sizeof(string), "You need to find %d more people to level up.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 201) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Tham tu cap do = 2."); format(string, sizeof(string), "You need to find %d more people to level up.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 201 && level < 300) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Tham tu cap do = 3."); format(string, sizeof(string), "You need to find %d more people to level up.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 300 && level < 400) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Tham tu cap do = 4."); format(string, sizeof(string), "You need to find %d more people to level up.", 400 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 1000) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Tham tu cap do = 5."); }
		}
		case 2://Luat su
		{
			new level = PlayerInfo[playerid][pLawSkill], string[48];
			if(level >= 0 && level < 100) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Luat su cap do = 1."); format(string, sizeof(string), "You need to free %d more people to level up.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 201) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Luat su cap do = 2."); format(string, sizeof(string), "You need to free %d more people to level up.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 201 && level < 300) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Luat su cap do = 3."); format(string, sizeof(string), "You need to free %d more people to level up.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 300 && level < 400) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Luat su cap do = 4."); format(string, sizeof(string), "You need to free %d more people to level up.", 400 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 1000) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Luat su cap do = 5."); }
		}
		case 3://Gai diem
		{
			new level = PlayerInfo[playerid][pSexSkill], string[48];
			if(level >= 0 && level < 100) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Gai diem cap do = 1."); format(string, sizeof(string), "You need to have sex %d times more to level up.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 201) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Gai diem cap do = 2."); format(string, sizeof(string), "You need to have sex %d times more to level up.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 201 && level < 300) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Gai diem cap do = 3."); format(string, sizeof(string), "You need to have sex %d times more to level up.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 300 && level < 400) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Gai diem cap do = 4."); format(string, sizeof(string), "You need to have sex %d times more to level up.", 400 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 1000) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Gai diem cap do = 5."); }
		}
		case 4://Drugs Dealer
		{
			new level = PlayerInfo[playerid][pDrugsSkill], string[50];
			if(level >= 0 && level < 100) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Nguoi ban thuoc phien cap do = 1."); format(string, sizeof(string), "You need to sell drugs %d times more to level up.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 201) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Nguoi ban thuoc phien cap do = 2."); format(string, sizeof(string), "You need to sell drugs %d times more to level up.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 201 && level < 300) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Nguoi ban thuoc phien cap do = 3."); format(string, sizeof(string), "You need to sell drugs %d times more to level up.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 300 && level < 400) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Nguoi ban thuoc phien cap do = 4."); format(string, sizeof(string), "You need to sell drugs %d times more to level up.", 400 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 1000) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Nguoi ban thuoc phien cap do = 5."); }
		}
		case 5://Buon ma tuy
		{
			new level = PlayerInfo[playerid][pSmugSkill], string[53];
			if(level >= 0 && level < 20) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Buon ma tuy cap do = 1."); format(string, sizeof(string), "You need to smuggle %d more drug crates to level up.", 20 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 20 && level < 50) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Buon ma tuy cap do = 2."); format(string, sizeof(string), "You need to smuggle %d more drug crates to level up.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 201) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Buon ma tuy cap do = 3."); format(string, sizeof(string), "You need to smuggle %d more drug crates to level up.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 201 && level < 300) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Buon ma tuy cap do = 4."); format(string, sizeof(string), "You need to smuggle %d more drug crates to level up.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 200) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Buon ma tuy cap do = 5."); }
		}
		case 6://Nguoi che tao vu khi
		{
			new level = PlayerInfo[playerid][pArmsSkill], string[48];
			if(level >= 0 && level < 100) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Nguoi che tao vu khi cap do = 1."); format(string, sizeof(string), "You need to sell %d more guns to level up.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 201) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Nguoi che tao vu khi cap do = 2."); format(string, sizeof(string), "You need to sell %d more guns to level up.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 201 && level < 300) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Nguoi che tao vu khi cap do = 3."); format(string, sizeof(string), "You need to sell %d more guns to level up.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 300 && level < 400) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Nguoi che tao vu khi cap do = 4."); format(string, sizeof(string), "You need to sell %d more guns to level up.", 400 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 1000) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Nguoi che tao vu khi cap do = 5."); }
		}
		case 7://Car Tho sua xe
		{
			new level = PlayerInfo[playerid][pMechSkill], string[60];
			if(level >= 0 && level < 100) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Car Tho sua xe cap do = 1."); format(string, sizeof(string), "You need to repair/refill a car for %d times more to level up.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 201) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Car Tho sua xe cap do = 2."); format(string, sizeof(string), "You need to repair/refill a car for %d times more to level up.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 201 && level < 300) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Car Tho sua xe cap do = 3."); format(string, sizeof(string), "You need to repair/refill a car for %d times more to level up.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 300 && level < 400) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Car Tho sua xe cap do = 4."); format(string, sizeof(string), "You need to repair/refill a car for %d times more to level up.", 400 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 1000) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Car Tho sua xe cap do = 5."); }
		}
		case 8://Boxer
		{
			new level = PlayerInfo[playerid][pBoxSkill], string[48];
			if(level >= 0 && level < 100) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Boxing cap do = 1."); format(string, sizeof(string), "You need to Win %d more Matches to level up.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 201) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Boxing cap do = 2."); format(string, sizeof(string), "You need to Win %d more Matches to level up.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 201 && level < 300) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Boxing cap do = 3."); format(string, sizeof(string), "You need to Win %d more Matches to level up.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 300 && level < 400) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Boxing cap do = 4."); format(string, sizeof(string), "You need to Win %d more Matches to level up.", 400 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 1000) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Boxing cap do = 5."); }
		}
		case 9://Fishing
		{
			new level = PlayerInfo[playerid][pFishSkill], string[48];
			if(level >= 0 && level <= 50) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Fishing cap do = 1."); format(string, sizeof(string), "You need to Fish %d more Fishes to level up.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 50 && level <= 100) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Fishing cap do = 2."); format(string, sizeof(string), "You need to Fish %d more Fishes to level up.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level <= 200) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Fishing cap do = 3."); format(string, sizeof(string), "You need to Fish %d more Fishes to level up.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 200 && level <= 400) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Fishing cap do = 4."); format(string, sizeof(string), "You need to Fish %d more Fishes to level up.", 400 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 1000) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Fishing cap do = 5."); }
		}
		case 10://Trucker
		{
			new level = PlayerInfo[playerid][pTruckSkill], string[50];
			if(level >= 0 && level < 100) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Trucker cap do = 1."); format(string, sizeof(string), "You need to transport goods %d times to level up.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 101 && level < 200) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Trucker cap do = 2."); format(string, sizeof(string), "You need to transport goods %d times to level up.", 201 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 201 && level < 300) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Trucker cap do = 3."); format(string, sizeof(string), "You need to transport goods %d times to level up.", 301 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 301 && level < 1000) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Trucker cap do = 4."); format(string, sizeof(string), "You need to transport goods %d times to level up.", 1000 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			else if(level >= 1000) { SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Trucker cap do = 5."); }
		}
		case 11://Treasure Hunter
		{
		    new level = PlayerInfo[playerid][pTreasureSkill], string[50];
            if(level >=0 && level <= 24) SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Treasure Hunting cap do = 1"), format(string, sizeof(string), "You need to find treasure %d times to level up.", 25 - level), SendClientMessageEx(playerid, COLOR_YELLOW, string);
            else if(level >= 25 && level <= 149) SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Treasure Hunting cap do = 2"), format(string, sizeof(string), "You need to find treasure %d times to level up.", 150 - level), SendClientMessageEx(playerid, COLOR_YELLOW, string);
			else if(level >=150 && level <= 299) SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Treasure Hunting cap do = 3"), format(string, sizeof(string), "You need to find treasure %d times to level up.", 300 - level), SendClientMessageEx(playerid, COLOR_YELLOW, string);
			else if(level >=300 && level <= 599) SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Treasure Hunting cap do = 4"), format(string, sizeof(string), "You need to find treasure %d times to level up.", 600 - level), SendClientMessageEx(playerid, COLOR_YELLOW, string);
			else if(level >=600) SendClientMessageEx(playerid, COLOR_YELLOW, "Ky nang Treasure Hunting cap do = 5");
		}
		default:
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Cong viec khong hop le.");
		}
	}
	return 1;
}

CMD:checkcargo(playerid, params[]) {
	return cmd_kiemtrahang(playerid, params);
}

CMD:kiemtrahang(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 20 && PlayerInfo[playerid][pJob2] != 20 && !IsACop(playerid))
	{
        SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong phai chu lo hang hoac canh sat!");
        return 1;
	}

	new carid = GetPlayerVehicleID(playerid);
 	new closestcar = GetClosestCar(playerid, carid);
  	if(IsPlayerInRangeOfVehicle(playerid, closestcar, 6.0) && IsATruckerCar(closestcar))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the kiem tra lo hang khi dang trong xe.");
			return 1;
		}
		new engine,lights,alarm,doors,bonnet,boot,objective;
		GetVehicleParamsEx(closestcar,engine,lights,alarm,doors,bonnet,boot,objective);
		if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET)
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "Than xe phai duoc mo ra moi co the kiem tra.");
			return 1;
		}

		new string[128];

     	SendClientMessageEx(playerid, COLOR_GREEN,"_______________ LO HANG _______________");
		if(IsPlayerInVehicle(playerid, closestcar))
  		{
    		SendClientMessageEx(playerid, COLOR_WHITE, "Co mot nguoi dang dieu khien xe, nguoi do phai xuong xe moi co the tiep tuc kiem tra lo hang.");
      		return 1;
		}
		new iTruckContents = TruckContents{closestcar};
		new truckcontentname[50];
		if(iTruckContents == 1)
		{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Thuc an & Do uong");}
		else if(iTruckContents == 2)
		{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Quan ao"); }
		else if(iTruckContents == 3)
		{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Vat lieu hop phap"); }
		else if(iTruckContents == 4)
		{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Vat pham 24/7"); }
		else if(iTruckContents == 5)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Vu khi"); }
		else if(iTruckContents == 6)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Ma tuy"); }
		else if(iTruckContents == 7)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Vat lieu pham phap"); }
		format(string, sizeof(string), "Giay to xe: %s (%d)", GetVehicleName(closestcar), closestcar);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		if(iTruckContents == 0)
		{ format(truckcontentname, sizeof(truckcontentname), "%s",  GetInventoryType(TruckDeliveringTo[closestcar])); }
		format(string, sizeof(string), "Noi dung: %s", truckcontentname);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		if(IsACop(playerid))
		{
			SendClientMessageEx(playerid, COLOR_YELLOW, "De loai bo hang hoa pham phap, su dung /clearcargo gan xe tai.");
		}

		if(PlayerInfo[playerid][pJob] == 20 || PlayerInfo[playerid][pJob2] == 20)
		{
			if(TruckDeliveringTo[closestcar] > 0 && TruckUsed[playerid] == INVALID_VEHICLE_ID)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW, "De cuop hang hoa, su dung /cuophang.");
			}
			else if(TruckUsed[playerid] == INVALID_VEHICLE_ID)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW, "De cung cap hang hoa, su dung /layhang cho tai xe.");
			}
			else if(TruckUsed[playerid] == closestcar && gPlayerCheckpointStatus[playerid] == CHECKPOINT_RETURNTRUCK)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban chua tra xe lai cho ben cang, luong cua ban khong duoc tra.");
			}
			else if(TruckUsed[playerid] == closestcar)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW, "Day la xe cua ban, ban da khong  giao hang dung hen.");
			}
			else if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da co cong viec khac. Su dung /huybo giaohang de huy bo viec giao hang.");
			}
		}
     	SendClientMessageEx(playerid, COLOR_GREEN,"_________________________________________________________");
    }
	else
	{
 		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong dung canh xe van chuyen hang hoa.");
 	}
    return 1;
}

CMD:clearcargo(playerid, params[])
{
	if(!IsACop(playerid))
	{
        SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong phai nhan vien thuc thi phap luat!");
        return 1;
	}

	new carid = GetPlayerVehicleID(playerid);
 	new closestcar = GetClosestCar(playerid, carid);
  	if(IsPlayerInRangeOfVehicle(playerid, closestcar, 6.0) && IsATruckerCar(closestcar))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
		    SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong xoa hang hoa khi dang ben trong mot chiec xe.");
		    return 1;
		}
		if(TruckContents{closestcar} == 0)
		{
		 	if(TruckDeliveringTo[closestcar] != INVALID_BUSINESS_ID && (Businesses[TruckDeliveringTo[closestcar]][bType] != BUSINESS_TYPE_GASSTATION || Businesses[TruckDeliveringTo[closestcar]][bType] == BUSINESS_TYPE_NEWCARDEALERSHIP))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lay hang hoa di.");
				return 1;
			}
		}
		new truckcontentname[50];
		new iTruckContents = TruckContents{closestcar};
		if(iTruckContents >= 0 && iTruckContents < 5)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Khong co vat pham pham phap tren xe.");
			return 1;
		}
		else if(TruckDeliveringTo[closestcar] == INVALID_BUSINESS_ID && iTruckContents == 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Khong co vat pham pham phap tren xe.");
			return 1;
		}
		if(iTruckContents == 5)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Vu khi pham phap"); }
		else if(iTruckContents == 6)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Ma tuy pham phap"); }
		else if(iTruckContents == 7)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Vat lieu pham phap"); }
		else format(truckcontentname, sizeof(truckcontentname), "{FF0606}Vat lieu pham phap");
 		foreach(new i: Player)
		{
  			if(TruckUsed[i] == closestcar)
     		{
				TruckUsed[i] = INVALID_VEHICLE_ID;
				TruckDeliveringTo[closestcar] = INVALID_BUSINESS_ID;
				TruckContents{closestcar} = 0;
				TruckRoute[closestcar] = 0;
				DisablePlayerCheckpoint(i);
				gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
				DeletePVar(i, "TruckDeliver");
 				SendClientMessageEx(i, COLOR_WHITE, "Viec giao hang cua ban that bai, mot nhan vien canh sat da tich thu lo hang cua ban.");
       		}
		}
		new string[128];
		format(string, sizeof(string), "Ban da loai bo %s {FFFFFF}khoi chiec xe.", truckcontentname);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "* %s da lay vat pham pham phap ra khoi xe.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
   	else
	{
 		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong dung gan mot chiec xe giao hang.");
 	}
    return 1;
}

CMD:cuophang(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 20 || PlayerInfo[playerid][pJob2] == 20)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsATruckerCar(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
     		if(!CheckPointCheck(playerid))
	        {
         		if(GetPVarInt(playerid, "LoadTruckTime") > 0)
	            {
	                SendClientMessageEx(playerid, COLOR_WHITE, "Ban dang doi van chuyen hang hoa len xe tai cua ban!");
					return 1;
	            }
	            if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
	            {
	                SendClientMessageEx(playerid, COLOR_WHITE, "Ban da co mot chuyen hang truoc do, su dung /huybo giaohang de huy bo don dat hang hien tai.");
					return 1;
	            }
				if(TruckDeliveringTo[vehicleid] == 0 && TruckContents{vehicleid} == 0)
				{
				    SendClientMessageEx(playerid, COLOR_WHITE, "Xe tai nay khong co bat ki hang hoa nao!");
				    return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 65, 2508.7222,-2118.6780,13.5469))
				{
				    SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the cuop hang khi xe da han ben cang San Fierro!");
					return 1;
				}
				if(!IsABoat(vehicleid))
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban dang co gang cuop mot lo hang tu xe tai, xin vui long cho...");
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban dang co gang cuop mot lo hang tu thuyen, xin vui long cho....");
				}

				TogglePlayerControllable(playerid, 0);
				SetPVarInt(playerid, "IsFrozen", 1);

				SetPVarInt(playerid, "LoadTruckTime", 10);
				SetTimerEx("HijackTruck", 1000, 0, "dd", playerid);
	        }
	        else return SendClientMessageEx(playerid, COLOR_WHITE, "Xin hay chac chan rang cac diem checkpoint cua ban da bi xoa bo.");
	    }
	    else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong lai xe van chuyen hang hoa!");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la nguoi van chuyen hang hoa");
	return 1;
}


/*CMD:layhang(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 20 || PlayerInfo[playerid][pJob2] == 20)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsATruckerCar(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	        if(!CheckPointCheck(playerid))
	        {
	            if(GetPVarInt(playerid, "LoadTruckTime") > 0)
	            {
	                SendClientMessageEx(playerid, COLOR_WHITE, "Dang dua cac mat hang len xe!");
					return 1;
	            }
	            if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
	            {
	                SendClientMessageEx(playerid, COLOR_WHITE, "Ban dang giao mat hang khac, su dung /huybo giaohang de huy bo giao hang.");
					return 1;
	            }
				if(TruckContents{vehicleid} != 0)
				{
				    return SendClientMessageEx(playerid, COLOR_GRAD2, "Da dua hang len xe thanh cong.");
				}
				if(TruckDeliveringTo[vehicleid] != INVALID_BUSINESS_ID && TruckContents{vehicleid} == 0)
				{
				    return SendClientMessageEx(playerid, COLOR_GRAD2, "Da dua hang len xe thanh cong.");
				}
	            gPlayerCheckpointStatus[playerid] = CHECKPOINT_LOADTRUCK;
	            if(!IsABoat(vehicleid))
	            {
		            SetPlayerCheckpoint(playerid,2508.7222,-2118.6780,13.5469, 4);
		            GameTextForPlayer(playerid, "~w~Dia diem ~r~OCEAN DOCKS", 5000, 1);
		            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Chon hang hoa de van chuyen tai OCEAN DOCKS (Di theo diem cham do tren radar).");
				}
				else
				{
		            SetPlayerCheckpoint(playerid,2098.6543,-104.3568,-0.4820, 4);
		            GameTextForPlayer(playerid, "~w~Dia diem ~r~Ben cang Palamino", 5000, 1);
		            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Chon hang hoa de van chuyen tai ben cang Palamino (Di theo diem cham do tren radar).");
				}
	        }
	        else return SendClientMessageEx(playerid, COLOR_WHITE, "Xin hay chac chan rang cac diem checkpoint cua ban da bi xoa bo.");
	    }
	    else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong lai chiec xe tai cho hang hoa yeu cau!");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai Trucker!");
	return 1;
}*/

CMD:useheroin(playerid, params[])
{
	if(PlayerInfo[playerid][pHeroin] < 10)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban can it nhat 10 milligrams heroin.");

	if(PlayerInfo[playerid][pSyringes] == 0)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co ong tiem de chich thuoc.");

    if(gettime()-GetPVarInt(playerid, "HeroinLastUsed") < 300)
		return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban chi co the su dung heroin 5 phut mot lan.");

    if(GetPVarInt(playerid, "Injured") != 1) {
		new szMessage[128];

		SetPVarInt(playerid, "HeroinLastUsed", gettime());
		PlayerInfo[playerid][pHeroin] -= 10;
		PlayerInfo[playerid][pSyringes] -= 1;

		SetPVarInt(playerid, "InjectHeroinStanding", SetTimerEx("InjectHeroinStanding", 5000, 0, "i", playerid));

		SendClientMessageEx(playerid, COLOR_GREEN, "Ban da tiem mot luong heroin vao nguoi, tac dong cua thuoc se suat hien sau 5  giay.");
		format(szMessage, sizeof(szMessage), "* %s tiem mot luong heroin vao nguoi.", GetPlayerNameEx(playerid));
		ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

		if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",2.1,0,0,0,0,0);

        return 1;
	}

	new szMessage[128];

	SetPVarInt(playerid, "HeroinLastUsed", gettime());
	PlayerInfo[playerid][pHeroin] -= 10;
	PlayerInfo[playerid][pSyringes] -= 1;

	SetPVarInt(playerid, "Health", 30);
	SetPVarInt(playerid, "InjectHeroin", SetTimerEx("InjectHeroin", 5000, 0, "i", playerid));

	SendClientMessageEx(playerid, COLOR_GREEN, "Ban da tiem mot luong heroin vao nguoi, tac dong cua thuoc se suat hien sau 5  giay.");
	format(szMessage, sizeof(szMessage), "* %s tiem mot luong heroin vao nguoi.", GetPlayerNameEx(playerid));
	ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}


CMD:makeheroin(playerid, params[]) {

	if(!IsPlayerInRangeOfPoint(playerid, 5.0, -882.2048,1109.3385,5442.8193))
	    return SendClientMessageEx(playerid, COLOR_GREY, "You are not at the purification lab.");

	if(PlayerInfo[playerid][pRawOpium] == 0)
	    return SendClientMessageEx(playerid, COLOR_GREY, "You don't have any raw opium to purify.");

	if(Purification[0] == 1)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Only one player may attempt to purify their opium at a time.");

	new szMessage[128];
	SendClientMessageEx(playerid, COLOR_GREEN, "You must wait 30 seconds, for purification to be complete.");

    format(szMessage, sizeof(szMessage), "* %s begins the purification process.", GetPlayerNameEx(playerid));
	ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

	Purification[0] = 1;
	SetPVarInt(playerid, "AttemptPurify", SetTimerEx("AttemptPurify", 1000, 1, "i", playerid));
	return 1;
}

CMD:plantopiumseeds(playerid, params[]) {
	if(PlayerInfo[playerid][pJob] != 4 && PlayerInfo[playerid][pJob2] != 4) {
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai nguoi buon ma tuy.");
	}
 	else if(PlayerInfo[playerid][pOpiumSeeds] > 0) {
		if(PlayerInfo[playerid][pWeedObject] > 0)
		{
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Ban dang co cay phat trien." );
		    return 1;
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SendClientMessageEx(playerid, COLOR_WHITE, "You cannot plant seeds while inside a vehicle!");
		for(new i = 0; i < MAX_PLANTS; ++i)
		{
		    if(Plants[i][pObject] == 0)
		    {
		        new
					szMessage[48],
					Float:xyz[3];

        		ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_In", 4.0, 0, 0, 0, 0, 0, 1);
				SendClientMessageEx(playerid, COLOR_GREEN, "Ban da trong mot so cay thuoc phien, can 2 tieng de cay phat trien va thu hoach.");
		        GetPlayerPos(playerid, xyz[0], xyz[1], xyz[2]);
		        xyz[2] -= 1.0;

		        PlayerInfo[playerid][pOpiumSeeds]--;
		        PlayerInfo[playerid][pWeedObject] = 1;
				PlacePlant(i, GetPlayerSQLId(playerid), 2, 859, PlayerInfo[playerid][pDrugsSkill], xyz[0], xyz[1], xyz[2], GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
				SavePlant(i);
				new string[128];
				format(string, sizeof(string), "%s (IP:%s) da trong cay thuoc phien (%d)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), i);
				Log("logs/plant.log", string);
				format(szMessage, sizeof(szMessage), "* %s da trong cay thuoc phien.", GetPlayerNameEx(playerid));
				ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "May chu da dat toi da de co the trong them cay");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co du hat giong de trong cay thuoc phien - hay toi drug house de lay hat giong can thiet (/getopiumseeds).");
	return 1;
}


CMD:getopiumseeds(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 4 && PlayerInfo[playerid][pJob2] != 4)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai nguoi buon ma tuy.");

	else if(PlayerInfo[playerid][pOpiumSeeds] == 3)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban chi co the giu toi da 3 tui hat giong thuoc phien.");

	else if(GetPlayerCash(playerid) < 75000)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co $75,000.");

	else {

    	for (new i=0; i<MAX_POINTS; i++)
  		{
	   		if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 3)
	   		{
			    if(Points[i][Stock] < 1 && PlayerInfo[playerid][pDonateRank] < 1) return SendClientMessageEx(playerid, COLOR_GREY, "   Drug house khong co hat giong.");
				if(PlayerInfo[playerid][pDonateRank] < 1)
				{
					new string[32];
					Points[i][Stock] -= 1;
					format(string, sizeof(string), " POT/THUOC PHIEN CO SAN: %d/1000.", Points[i][Stock]);
					UpdateDynamic3DTextLabelText(Points[i][TextLabel], COLOR_YELLOW, string);
				}
				PlayerInfo[playerid][pOpiumSeeds] += 1;
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da mua mot tui hat giong tu drug house.");
				GivePlayerCash(playerid, -75000);
				GameTextForPlayer(playerid, "~r~-$75000", 3000, 1 );
				for(new z = 0; z < sizeof(FamilyInfo); z++)
				{
					if(strcmp(Points[i][Owner], FamilyInfo[z][FamilyName], true) == 0)
					{
						FamilyInfo[z][FamilyBank] += 2500;
					}
				}
				return 1;
			}
   		}
   		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o drug house.");
	}
	return 1;
}

CMD:getseeds(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] != 4 && PlayerInfo[playerid][pJob2] != 4)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai nguoi buon ma tuy.");
		return 1;
	}
	if(PlayerInfo[playerid][pWSeeds] > 0)
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban da co tui hat giong, hay su dung no dau tien.");
	    return 1;
	}
	if(GetPlayerCash(playerid) < 1000)
	{
	    SendClientMessageEx(playerid, COLOR_GREY, " Ban khong co $10,000.");
	    return 1;
	}
	new mypoint = -1;
	for (new i=0; i<MAX_POINTS; i++)
  	{
	   	if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 3)
	   	{
			mypoint = i;
		}
   	}
   	if (mypoint == -1)
   	{
		SendClientMessageEx(playerid, COLOR_GREY, " Ban khong o Drug House!");
		return 1;
   	}
	if(Points[mypoint][Stock] < 1 && PlayerInfo[playerid][pDonateRank] < 1) return SendClientMessageEx(playerid, COLOR_GREY, "   drug house khong co hat giong nao.");
	if(PlayerInfo[playerid][pDonateRank] < 1)
	{
		new string[32];
		Points[mypoint][Stock] -= 1;
		format(string, sizeof(string), " POT/THUOC PHIEN CO SAN: %d/1000.", Points[mypoint][Stock]);
		UpdateDynamic3DTextLabelText(Points[mypoint][TextLabel], COLOR_YELLOW, string);
	}
	PlayerInfo[playerid][pWSeeds] += 3;
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, " Ban da mua mot tui hat giong tai Drug House. ");
	GivePlayerCash(playerid, -1000);
	GameTextForPlayer(playerid, "~r~-$1000", 3000, 1 );
	for(new i = 0; i < sizeof(FamilyInfo); i++)
	{
		if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
		{
			FamilyInfo[i][FamilyBank] += 250;
		}
	}
	return 1;
}


CMD:vipnum(playerid, params[])
{
    if(!(IsPlayerInRangeOfPoint(playerid, 3.0, 2549.548095, 1404.047729, 7699.584472 ) || IsPlayerInRangeOfPoint(playerid, 3.0, 1832.6000, 1375.1700, 1464.4600)) )
    {
    	SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o dia diem thay doi so dien thoai VIP!");
     	return 1;
   	}
    if(PlayerInfo[playerid][pDonateRank] < 2)
    {
    	SendClientMessageEx(playerid, COLOR_GRAD1, "Ban phai Silver VIP tro len moi co the su dung chuc nang nay .");
     	return 1;
	}
	ShowPlayerDialog(playerid, VIPNUMMENU, DIALOG_STYLE_INPUT, "So dien thoai moi","Nhap so dien thoai:", "Lua chon", "Huy bo");
	return 1;
}

CMD:safebalance(playerid, params[]) {
	if(PlayerInfo[playerid][pFMember] < INVALID_FAMILY_ID) {
		if(FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyUSafe] < 1) {
			SendClientMessageEx(playerid, COLOR_GRAD1, "Family cua ban khong co safe.");
		}
		else
		{
			new string[128];

			new weaponsinlocker;
			for(new s = 0; s < 10; s++)
			{
				if(FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyGuns][s] != 0)
				{
					weaponsinlocker++;
				}
			}

			format(string, sizeof(string), " Safe: %s | Gunlockers: %d/10 | Tien: $%d | Pot: %d | Crack: %d | Vat lieu: %d | Heroin: %d", FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyName], weaponsinlocker, FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyCash], FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyPot], FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyCrack], FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyMats], FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyHeroin]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong family.");
	return 1;
}

CMD:safehelp(playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________________");
	SendClientMessageEx(playerid, COLOR_WHITE, "SAFE HELP: Nhap lenh de biet them thong tin.");
	SendClientMessageEx(playerid, COLOR_WHITE, "SAFE: /safebalance /safedeposit /safewithdraw /fstoregun /fgetgun.");
	return 1;
}

/*CMD:buylock(playerid, params[])
{
    if(IsAt247(playerid))
	{
	    ShowPlayerDialog(playerid, DIALOG_CDLOCKBUY, DIALOG_STYLE_LIST, "24/7", "Alarm Lock		$10000\nElectric Lock		$500000\nIndustrial Lock		$50000", "Buy", "Cancel");
		return 1;
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GRAD2, "   You are not in a 24-7 !");
	}
	return 1;
}*/

/*CMD:gbuylock(playerid, params[])
{

    if(!IsAt247(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   You are not in a 24-7 !");
		return 1;
	}
	if(PlayerInfo[playerid][pFMember] != INVALID_FAMILY_ID && PlayerInfo[playerid][pRank] >= 6)
	{
		ShowPlayerDialog(playerid, DIALOG_CDGLOCKBUY, DIALOG_STYLE_LIST, "24/7", "Alarm Lock		$10000\nElectric Lock		$500000\nIndustrial Lock		$50000", "Buy", "Cancel");
	}
	else
	{
 		SendClientMessageEx(playerid, COLOR_GRAD2, "You need to be in a family and have rank 6 to use this command.");
	}
	return 1;

} */



/*CMD:jobhelp(playerid, params[]) {
    return ShowPlayerDialog(playerid, JOBHELPMENU, DIALOG_STYLE_LIST, "Which job do you need help with?","Detective\nLawyer\nWhore\nDrug Dealer\nMechanic\nBodyguard\nArms Dealer\nBoxer\nTaxi Driver\nDrug Smuggling\nCraftsman\nBartender\nTRUCKER\nPizza Boy", "Lua chon", "Huy bo");
}*/
CMD:pdsiren(playerid, params[])
{
    if(IsACop(playerid))
    {
        new type;
        new VID = GetPlayerVehicleID(playerid);
        if(sscanf(params, "d", type))
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "SU DUNG:{FFFFFF} /pdsiren [type]");
            SendClientMessage(playerid, COLOR_GRAD2, "Type: 1 = Inside, 2 = Roof, 3 = Off.");
            return 1;
        }
        switch(type)
        {
            case 1:
            {
                if(Siren[VID] == 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTRED, "[ ! ]{ffffff} Tren xe da co 1 siren, vui long tat!");
                    return 1;
                }
               // new sendername[MAX_PLAYER_NAME];
                Siren[VID] = 1;
               // GetPlayerName(playerid, sendername, sizeof(sendername));
                SirenObject[VID] = CreateDynamicObject(18646, 0.0, 0.0, 1000.0, 0.0, 0.0, 0.0);
                AttachDynamicObjectToVehicle(SirenObject[VID], VID, 0.0, 0.75, 0.275, 0.0, 0.1, 0.0);
                return 1;
            }
            case 2:
            {
                if(Siren[VID] == 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTRED, "[ ! ]{ffffff} Tren xe da co 1 siren, vui long tat!");
                    return 1;
                }
                //new sendername[MAX_PLAYER_NAME];
                Siren[VID] = 1;
               // GetPlayerName(playerid, sendername, sizeof(sendername));
                SirenObject[VID] = CreateDynamicObject(18646, 10.0, 10.0, 10.0, 0.0, 0.0, 0.0);
                AttachDynamicObjectToVehicle(SirenObject[VID], VID, -0.43, 0.0, 0.785, 0.0, 0.1, 0.0);
                return 1;
            }
            case 3:
            {
                if(Siren[VID] == 0)
                {
                    SendClientMessage(playerid, COLOR_LIGHTRED, "[ ! ]{ffffff} Khong co siren nao tren xe.");
                    return 1;
                }
                Siren[VID] = 0;
                //new sendername[MAX_PLAYER_NAME];
                //GetPlayerName(playerid, sendername, sizeof(sendername));
               // DestroyObject(SirenObject[VID]);
                DestroyDynamicObject(SirenObject[VID]);
                SirenObject[VID] = INVALID_OBJECT_ID;
                return 1;
            }
            default:
            {
                SendClientMessage(playerid, COLOR_LIGHTRED, "SU DUNG:{FFFFFF} /pdsiren [chon]");
                SendClientMessage(playerid, COLOR_GRAD2, "Chon: 1 = Roof, 2 = Inside, 3 = Off.");
            }
        }
    }
   // else SendClientMessage(playerid, COLOR_GREY, " Ban khong the su dung lenh nay.");
    return 1;
}

/*CMD:testfundage(playerid, params[])
{
	new string[128];
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD2, " You don't have access to this");
	for(new iGroupID; iGroupID < MAX_GROUPS; iGroupID++)
	{
	    if(arrGroupData[iGroupID][g_iAllegiance] == 1)
	    {
	        if(arrGroupData[iGroupID][g_iGroupType] == 1 || arrGroupData[iGroupID][g_iGroupType] == 3 || arrGroupData[iGroupID][g_iGroupType] == 6 || arrGroupData[iGroupID][g_iGroupType] == 7)
	        {
	            if(arrGroupData[iGroupID][g_iBudgetPayment] > 0)
	            {
	                if(Tax > arrGroupData[iGroupID][g_iBudgetPayment])
	                {
		                Tax -= arrGroupData[iGroupID][g_iBudgetPayment];
		                arrGroupData[iGroupID][g_iBudget] += arrGroupData[iGroupID][g_iBudgetPayment];
	                	new str[128], file[32];
		                format(str, sizeof(str), "Gov Paid $%d to %s budget fund.", arrGroupData[iGroupID][g_iBudgetPayment], arrGroupData[iGroupID][g_szGroupName]);
		                new month, day, year;
						getdate(year,month,day);
						format(file, sizeof(file), "grouppay/%d/%d-%d-%d.log", iGroupID, month, day, year);
						Log(file, str);
		                Misc_Save();
		                SaveGroup(iGroupID);
					}
					else
					{
						format(string, sizeof(string), "Warning: The Government Vault has insufficient funds to fund %s.", arrGroupData[iGroupID][g_szGroupName]);
		    			SendGroupMessage(5, COLOR_RED, string);
		    			SendFamilyMessage(iGroupID, COLOR_RED, string);
					}
	            }
			    for(new iDvSlotID = 0; iDvSlotID < MAX_DYNAMIC_VEHICLES; iDvSlotID++)
				{
				    if(DynVehicleInfo[iDvSlotID][gv_igID] != INVALID_GROUP_ID && DynVehicleInfo[iDvSlotID][gv_igID] == iGroupID)
				    {
					    if(DynVehicleInfo[iDvSlotID][gv_iModel] != 0 && (400 < DynVehicleInfo[iDvSlotID][gv_iModel] < 612))
					    {
					        if(arrGroupData[iGroupID][g_iBudget] >= DynVehicleInfo[iDvSlotID][gv_iUpkeep])
					        {
								arrGroupData[iGroupID][g_iBudget] -= DynVehicleInfo[iDvSlotID][gv_iUpkeep];
								new str[128], file[32];
				                format(str, sizeof(str), "Vehicle ID %d (Slot ID %d) Maintainence fee cost $%d to %s's budget fund.",DynVehicleInfo[iDvSlotID][gv_iSpawnedID], iDvSlotID, DynVehicleInfo[iDvSlotID][gv_iUpkeep], arrGroupData[iGroupID][g_szGroupName]);
				                new month, day, year;
								getdate(year,month,day);
								format(file, sizeof(file), "grouppay/%d/%d-%d-%d.log", iGroupID, month, day, year);
								Log(file, str);
							}
							else
							{
							    DynVehicleInfo[iDvSlotID][gv_iDisabled] = 1;
							}
					    }
					}
				}
				SaveGroup(iGroupID);
	        }
	    }
	}
	return 1;
}*/

CMD:viewbudget(playerid, params[])
{
	new i = PlayerInfo[playerid][pMember];
	new string[128];
	if(arrGroupData[i][g_iGroupType] == 1 || arrGroupData[i][g_iGroupType] == 3 || arrGroupData[i][g_iGroupType] == 6 || arrGroupData[i][g_iGroupType] == 7 || arrGroupData[i][g_iGroupType] == 10)
	{
	    SendClientMessage(playerid, 0x008EFC00, "            BALANCE SHEET            ");
		if(arrGroupData[i][g_szGroupName][0] && arrGroupData[i][g_hDutyColour] != 0) format(string, sizeof(string), "{%6x}%s {AFAFAF} [Balance: $%s] [Hourly Payments: $%s]| ", arrGroupData[i][g_hDutyColour], arrGroupData[i][g_szGroupName], number_format(arrGroupData[i][g_iBudget]), number_format(arrGroupData[i][g_iBudgetPayment]));
		else if(arrGroupData[i][g_szGroupName][0]) format(string, sizeof(string), "%s [Balance: $%s] [Hourly Payments: $%s]| ", arrGroupData[i][g_szGroupName], number_format(arrGroupData[i][g_iBudget]), number_format(arrGroupData[i][g_iBudgetPayment]));
		SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	else return SendClientMessage(playerid, COLOR_GRAD2, "Co quan cua ban khong nhan duoc khoan thanh toan cua chinh phu.");
	return 1;
}

CMD:setbudget(playerid, params[])
{
	if(arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] == 5)
	{
	    if(PlayerInfo[playerid][pRank] == Group_GetMaxRank(PlayerInfo[playerid][pMember]))
	    {
		    new
				iGroupID,
				iBudgetAmt,
				string[128];

			if(sscanf(params, "iii", iGroupID, iBudgetAmt))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /setbudget [Group ID] [$ Per Budget Payment (Hourly)]");
				for(new i = 0; i < MAX_GROUPS; i++)
				{
				    if(arrGroupData[PlayerInfo[playerid][pMember]][g_iAllegiance] == arrGroupData[i][g_iAllegiance])
				    {
					    if(arrGroupData[i][g_iGroupType] == 1 || arrGroupData[i][g_iGroupType] == 3 || arrGroupData[i][g_iGroupType] == 6 || arrGroupData[i][g_iGroupType] == 7)
					    {
						    if(arrGroupData[i][g_szGroupName][0] && arrGroupData[i][g_hDutyColour] != 0) format(string, sizeof(string), "%d - {%6x}%s {AFAFAF} [Balance: $%s] [Current Budget: $%s]| ", i, arrGroupData[i][g_hDutyColour], arrGroupData[i][g_szGroupName], number_format(arrGroupData[i][g_iBudget]), number_format(arrGroupData[i][g_iBudgetPayment]));
							else if(arrGroupData[i][g_szGroupName][0]) format(string, sizeof(string), "%d - %s [Balance: $%s] [Current Budget: $%s]| ", i, arrGroupData[i][g_szGroupName], number_format(arrGroupData[i][g_iBudget]), number_format(arrGroupData[i][g_iBudgetPayment]));
							SendClientMessageEx(playerid, COLOR_GRAD2, string);
						}
					}
				}
				return 1;
			}
			if(0 <= iGroupID < MAX_GROUPS && (arrGroupData[iGroupID][g_iGroupType] == 1 || arrGroupData[iGroupID][g_iGroupType] == 3 || arrGroupData[iGroupID][g_iGroupType] == 6 || arrGroupData[iGroupID][g_iGroupType] == 7 || arrGroupData[iGroupID][g_iGroupType] == 10))
			{
			    if(arrGroupData[PlayerInfo[playerid][pMember]][g_iAllegiance] == arrGroupData[iGroupID][g_iAllegiance])
			    {
					arrGroupData[iGroupID][g_iBudgetPayment] = iBudgetAmt;
					format(string, sizeof(string), "You have set %s's Budget Payment to $%d. This will be issued hourly to pay for their vehicles, weapons and staffing", arrGroupData[iGroupID][g_szGroupName], iBudgetAmt);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
				else return SendClientMessage(playerid, COLOR_GRAD2, "Co quan nay khong thuoc chinh phu cua ban.");
			}
			else return SendClientMessage(playerid, COLOR_GRAD2, "Invalid Group ID");

	    }
	}
	else return SendClientMessage(playerid, COLOR_GRAD2, "Ban khong phai la mot Government Official!");
	return 1;
}

CMD:gwithdraw(playerid, params[])
{
	new iGroupID;
	new string[128], amount, reason[64];
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(sscanf(params, "dds[64]", iGroupID, amount, reason))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /gwithdraw [groupid] [amount] [reason]");
			return 1;
		}
		if(!(-1 < iGroupID <= MAX_GROUPS))
		{
			SendClientMessageEx(playerid, COLOR_RED, "* Invalid Group ID");
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /gwithdraw [groupid] [amount] [reason]");
			return 1;
		}
	}
	else if(-1 < PlayerInfo[playerid][pLeader] <= MAX_GROUPS && PlayerInfo[playerid][pRank] == Group_GetMaxRank(PlayerInfo[playerid][pLeader]))
	{
		iGroupID = PlayerInfo[playerid][pLeader];
		if(sscanf(params, "ds[64]", amount, reason))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /gwithdraw [amount] [reason]");
			format(string, sizeof(string), "* VAULT BALANCE: $%d.", arrGroupData[iGroupID][g_iBudget]);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			return 1;
		}
	}
	else return SendClientMessage(playerid, COLOR_GRAD3, " Ban khong phai la mot nha danh dao nhom hoac mot quan tri vien co tham quyen. ");



	if(amount < 0)
	{
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "So luong quy dinh khong hop le.");
		return 1;
	}
	if( arrGroupData[iGroupID][g_iBudget] > amount )
	{
		arrGroupData[iGroupID][g_iBudget] -= amount;
    	new str[128], file[32];
        format(str, sizeof(str), "%s has withdrawn $%d from %s's Budget Fund - reason: %s", GetPlayerNameEx(playerid), amount, arrGroupData[iGroupID][g_szGroupName], reason);
        new month, day, year;
		getdate(year,month,day);
		format(file, sizeof(file), "grouppay/%d/%d-%d-%d.log", iGroupID, month, day, year);
		Log(file, str);
        Misc_Save();
        SaveGroup(iGroupID);
		GivePlayerCash( playerid, amount );
		format( string, sizeof( string ), "You have withdrawn $%d from the group vault.", amount );
		SendClientMessageEx( playerid, COLOR_WHITE, string );
		format(string,sizeof(string),"[MAYCHU] %s has withdrawn $%d of the group money from their vault, reason: %s.",GetPlayerNameEx(playerid),amount,reason);
		ABroadCast( COLOR_YELLOW, string, 2);
 		format(string,sizeof(string),"%s da bi thu hoi $%s so tien nhom tu %s's vault, reason: %s.",GetPlayerNameEx(playerid),number_format(amount),arrGroupData[iGroupID][g_szGroupName],reason);
		Log("logs/rpspecial.log", string);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Khong du so tien co san.");
	}
	return 1;
}

CMD:gdonate(playerid, params[])
{
	new iGroupID = PlayerInfo[playerid][pMember];
	if((0 <= iGroupID <= MAX_GROUPS))
	{
		if(arrGroupData[iGroupID][g_iGroupType] == 1 || arrGroupData[iGroupID][g_iGroupType] == 3 || arrGroupData[iGroupID][g_iGroupType] == 6 || arrGroupData[iGroupID][g_iGroupType] == 7 || arrGroupData[iGroupID][g_iGroupType] == 10)
		{
			new string[128], moneys;
			if(sscanf(params, "d", moneys)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /gdonate [amount]");

			if(moneys < 1)
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "That is not enough.");
				return 1;
			}
			if(GetPlayerCash(playerid) < moneys)
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co nhieu tien.");
				return 1;
			}
			GivePlayerCash(playerid, -moneys);
			arrGroupData[iGroupID][g_iBudget] += moneys;
			new str[128], file[32];
            format(str, sizeof(str), "%s da dong gop $%s de %s von ngan sach.", GetPlayerNameEx(playerid), number_format(moneys), arrGroupData[iGroupID][g_szGroupName]);
            new month, day, year;
			getdate(year,month,day);
			format(file, sizeof(file), "grouppay/%d/%d-%d-%d.log", iGroupID, month, day, year);
			Log(file, str);
			SaveGroup(iGroupID);
			OnPlayerStatsUpdate(playerid);
			format(string, sizeof(string), "%s, ban da dong gop $%s ngan sach co quan cua ban.",GetPlayerNameEx(playerid), number_format(moneys));
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessageEx(playerid, COLOR_GRAD1, string);
			format(string, sizeof(string), "%s has donated $%s to %s's budget vault.",GetPlayerNameEx(playerid), number_format(moneys), arrGroupData[iGroupID][g_szGroupName]);
			Log("logs/pay.log", string);
			return 1;
		}
		else
		{
		    SendClientMessageEx(playerid, COLOR_GRAD2,  "Ban dang khong trong mot co quan chinh phu!");
		}
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o trong mot nhom.");
	}
	return 1;
}

CMD:ordercrates(playerid, params[])
{
	new iGroupID = PlayerInfo[playerid][pMember], string[128];
	if((0 <= iGroupID <= MAX_GROUPS) && PlayerInfo[playerid][pRank] >= (Group_GetMaxRank(iGroupID) - 4))
	{
		if(arrGroupData[iGroupID][g_iLockerCostType] == 0)
		{
			new moneys;
			if(sscanf(params, "d", moneys)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /ordercrates [order amount]");
			if(!(0 <= moneys <= (MAX_LOCKER_STOCK/100))) return SendClientMessageEx(playerid, COLOR_GREY, "You cannot order more than 15 crates!");
			format(string, sizeof(string), "Bay gio ban co tong cong %d cac thung dat hang cho %s.", moneys, arrGroupData[iGroupID][g_szGroupName]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
			arrGroupData[iGroupID][g_iCratesOrder] = moneys;
			format(string, sizeof(string), "%s has just placed a Crate Order for %s.", GetPlayerNameEx(playerid), arrGroupData[iGroupID][g_szGroupName]);
			SendGroupMessage(1, TEAM_BLUE_COLOR, string);
			return 1;
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD2, "Nhom cua ban khong doi hoi thung ngan sach.");
	}
    else return SendClientMessage(playerid, COLOR_GRAD2, " Ban khong the su dung lenh nay.");
}

CMD:viewcrateorders(playerid, params[])
{
	new iGroupID = PlayerInfo[playerid][pMember];
	if((0 <= iGroupID <= MAX_GROUPS) && PlayerInfo[playerid][pRank] >= arrGroupData[iGroupID][g_iCrateIsland])
	{
		new
			szDialogStr[MAX_GROUPS * (GROUP_MAX_NAME_LEN + 32)],
			iCount;

		while(iCount < MAX_GROUPS) {
		    if(arrGroupData[iCount][g_iAllegiance] == arrGroupData[iGroupID][g_iAllegiance])
		    {
		        if(arrGroupData[iCount][g_iCratesOrder] > 0)
		        {
					if(arrGroupData[iCount][g_szGroupName][0])
						format(szDialogStr, sizeof szDialogStr, "%s\n(%i) {%s}%s{FFFFFF} - %d Crates [Current Stock: %d]", szDialogStr, iCount+1, Group_NumToDialogHex(arrGroupData[iCount][g_hDutyColour]), arrGroupData[iCount][g_szGroupName], arrGroupData[iCount][g_iCratesOrder], arrGroupData[iCount][g_iLockerStock]);
				}
			}
			++iCount;
		}
		if(!szDialogStr[0]) format(szDialogStr, sizeof(szDialogStr), "No orders to fill.");
		return ShowPlayerDialog(playerid, DIALOG_NOTHING, DIALOG_STYLE_MSGBOX, "Group List", szDialogStr, "Lua chon", "Huy bo");
	}
    else return SendClientMessage(playerid, COLOR_GRAD2, " Ban khong the su dung lenh nay.");
}

CMD:dvtrackcar(playerid, params[])
{
    new iGroupID = PlayerInfo[playerid][pMember],
		iFamilyID = PlayerInfo[playerid][pFMember];

	if((0 <= iGroupID <= MAX_GROUPS))
	{
		new vstring[2500];
		for(new i; i < MAX_DYNAMIC_VEHICLES; i++) {
			new iModelID = DynVehicleInfo[i][gv_iModel];
			if(400 <= iModelID < 612 && DynVehicleInfo[i][gv_igID] == iGroupID) {
				if(DynVehicleInfo[i][gv_iDisabled]) {
					format(vstring, sizeof(vstring), "%s\n(%d)%s (Upkeep: $%s) (repo'd)", vstring, i, VehicleName[iModelID - 400], number_format(DynVehicleInfo[i][gv_iUpkeep]));
				}
				else if(DynVehicleInfo[i][gv_iSpawnedID] != INVALID_VEHICLE_ID) {
					format(vstring, sizeof(vstring), "%s\n(%d) %s (Upkeep: $%s) (VID: %d)", vstring, i, VehicleName[iModelID - 400], number_format(DynVehicleInfo[i][gv_iUpkeep]), DynVehicleInfo[i][gv_iSpawnedID]);
				}
			}
		}
		ShowPlayerDialog(playerid, DV_TRACKCAR, DIALOG_STYLE_LIST, "Vehicle GPS Tracking", vstring, "Track", "Cancel");
	}
	else if((1 <= iFamilyID <= MAX_FAMILY))
	{
        new vstring[2500];
		for(new i; i < MAX_DYNAMIC_VEHICLES; i++) {
			new iModelID = DynVehicleInfo[i][gv_iModel];
			if(400 <= iModelID < 612 && DynVehicleInfo[i][gv_ifID] == iFamilyID) {
				if(DynVehicleInfo[i][gv_iDisabled]) {
					format(vstring, sizeof(vstring), "%s\n(%d)%s (repo'd)", vstring, i, VehicleName[iModelID - 400]);
				}
				else if(DynVehicleInfo[i][gv_iSpawnedID] != INVALID_VEHICLE_ID) {
					format(vstring, sizeof(vstring), "%s\n(%d) %s (VID: %d)", vstring, i, VehicleName[iModelID - 400], DynVehicleInfo[i][gv_iSpawnedID]);
				}
			}
		}
		ShowPlayerDialog(playerid, DV_TRACKCAR, DIALOG_STYLE_LIST, "Vehicle GPS Tracking", vstring, "Track", "Cancel");
	}
	return 1;
}

CMD:grepocars(playerid, params[])
{
	new iGroupID = PlayerInfo[playerid][pMember], string[128];
	if((0 <= iGroupID <= MAX_GROUPS) && PlayerInfo[playerid][pRank] == Group_GetMaxRank(iGroupID))
	{
	    SendClientMessageEx(playerid, COLOR_GREEN, "Repossessed Agency Vehicles:");
	    SendClientMessageEx(playerid, COLOR_GRAD4, "NOTE: Type /gvbuyback to purchase these cars back when your agency can afford it.");
	    for(new iDvSlotID = 0; iDvSlotID < MAX_DYNAMIC_VEHICLES; iDvSlotID++)
		{
		    if(DynVehicleInfo[iDvSlotID][gv_igID] != INVALID_GROUP_ID && DynVehicleInfo[iDvSlotID][gv_igID] == iGroupID)
		    {
			    if(DynVehicleInfo[iDvSlotID][gv_iModel] != 0 && (400 < DynVehicleInfo[iDvSlotID][gv_iModel] < 612))
			    {
			        if(DynVehicleInfo[iDvSlotID][gv_iDisabled] == 1)
			        {
			            format(string, sizeof(string), "Vehicle ID: %d - %s - Buyback Cost $%d.", iDvSlotID, VehicleName[DynVehicleInfo[iDvSlotID][gv_iModel] - 400], floatround(DynVehicleInfo[iDvSlotID][gv_iUpkeep] * 2), floatround(DynVehicleInfo[iDvSlotID][gv_iUpkeep] / 2));
			            SendClientMessageEx(playerid, COLOR_GRAD1, string);
					}
			    }
			}
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD2, " Ban khong the su dung lenh nay.");
	return 1;
}

CMD:gvbuyback(playerid, params[])
{
	new iVehicle[6];
	new iGroupID = PlayerInfo[playerid][pLeader], string[128];
	if((0 <= iGroupID <= MAX_GROUPS) && PlayerInfo[playerid][pRank] == Group_GetMaxRank(iGroupID))
	{
		if(sscanf(params, "s[6]", iVehicle)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /gvbuyback [ID/all] *You may buy an individual car back, or all of your repo'd cars.");
			return SendClientMessageEx(playerid, COLOR_GREY, "Note: ID is indicated under /grepocars");
		}
		if(strcmp(iVehicle, "all", true) == 0)
		{
		    for(new iDvSlotID = 0; iDvSlotID < MAX_DYNAMIC_VEHICLES; iDvSlotID++)
			{
			    if(DynVehicleInfo[iDvSlotID][gv_igID] != INVALID_GROUP_ID && DynVehicleInfo[iDvSlotID][gv_igID] == iGroupID)
			    {
				    if(DynVehicleInfo[iDvSlotID][gv_iModel] != 0 && (400 < DynVehicleInfo[iDvSlotID][gv_iModel] < 612))
				    {
				        if(DynVehicleInfo[iDvSlotID][gv_iDisabled] == 1)
				        {
							if(arrGroupData[iGroupID][g_iBudget] > floatround(DynVehicleInfo[iDvSlotID][gv_iUpkeep] * 2))
							{
							    arrGroupData[iGroupID][g_iBudget] -= floatround(DynVehicleInfo[iDvSlotID][gv_iUpkeep] * 2);
							    SaveGroup(iGroupID);
							    DynVehicleInfo[iDvSlotID][gv_iDisabled] = 0;
							    DynVeh_Save(iDvSlotID);
							    DynVeh_Spawn(iDvSlotID);
							    format(string, sizeof(string), "You have bought back your %s with ID %d for $%d", GetVehicleName(DynVehicleInfo[iDvSlotID][gv_iModel]), iDvSlotID, floatround(DynVehicleInfo[iDvSlotID][gv_iUpkeep] * 2));
							    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
							    new str[128], file[32];
				                format(str, sizeof(str), "Vehicle Slot ID %d buyback fee cost $%d to %s's budget fund.",iDvSlotID, floatround(DynVehicleInfo[iDvSlotID][gv_iUpkeep] * 2), arrGroupData[iGroupID][g_szGroupName]);
				                new month, day, year;
								getdate(year,month,day);
								format(file, sizeof(file), "grouppay/%d/%d-%d-%d.log", iGroupID, month, day, year);
								Log(file, str);
								return 1;
							}
							else
							{
								format(string, sizeof(string), "Your agency could not afford to buy back your %s with ID %d for $%d", GetVehicleName(DynVehicleInfo[iDvSlotID][gv_iModel]), iDvSlotID, floatround(DynVehicleInfo[iDvSlotID][gv_iUpkeep] * 2));
							    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
							    return 1;
							}
						}
				    }
				}
			}
		}
		else if((0 <= strval(iVehicle) <= MAX_DYNAMIC_VEHICLES))
		{
		    new iDvSlotID = strval(iVehicle);
		    if(DynVehicleInfo[iDvSlotID][gv_iDisabled] && DynVehicleInfo[iDvSlotID][gv_igID] == iGroupID)
			{
    			if(arrGroupData[iGroupID][g_iBudget] > floatround(DynVehicleInfo[iDvSlotID][gv_iUpkeep] * 2))
				{
					arrGroupData[iGroupID][g_iBudget] -= floatround(DynVehicleInfo[iDvSlotID][gv_iUpkeep] * 2);
				    SaveGroup(iGroupID);
				    DynVehicleInfo[iDvSlotID][gv_iDisabled] = 0;
				    DynVeh_Save(iDvSlotID);
				    DynVeh_Spawn(iDvSlotID);
				    format(string, sizeof(string), "You have bought back your %s with ID %d for $%d", GetVehicleName(DynVehicleInfo[iDvSlotID][gv_iModel]), iDvSlotID, floatround(DynVehicleInfo[iDvSlotID][gv_iUpkeep] * 2));
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				    new str[128], file[32];
	                format(str, sizeof(str), "Vehicle Slot ID %d buyback fee cost $%d to %s's budget fund.",iDvSlotID, floatround(DynVehicleInfo[iDvSlotID][gv_iUpkeep] * 2), arrGroupData[iGroupID][g_szGroupName]);
	                new month, day, year;
					getdate(year,month,day);
					format(file, sizeof(file), "grouppay/%d/%d-%d-%d.log", iGroupID, month, day, year);
					Log(file, str);
				    return 1;
				}
				else
				{
					format(string, sizeof(string), "Your agency could not afford to buy back your %s with ID %d for $%d", GetVehicleName(DynVehicleInfo[iDvSlotID][gv_iModel]), iDvSlotID, floatround(DynVehicleInfo[iDvSlotID][gv_iUpkeep] * 2));
				    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				    return 1;
				}
			}
			else return SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "That car has either not been repossessed or does not belong to your agency.");
		}
		else SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Invalid ID");
	}
    else SendClientMessage(playerid, COLOR_GRAD2, " Ban khong the su dung lenh nay.");
	return 1;
}

CMD:adjustdvrank(playerid, params[])
{
	if(gettime() < GetPVarInt(playerid, "DvAdjust_Time")) return SendClientMessageEx(playerid, COLOR_GREY, " You need to wait 10 seconds before using this command again !");
	if(PlayerInfo[playerid][pFMember] == INVALID_FAMILY_ID) return SendClientMessageEx(playerid, COLOR_GREY, "You are not part of a family!");
	if(PlayerInfo[playerid][pRank] < 6) return SendClientMessageEx(playerid, COLOR_GREY, "You are not a family leader!");
	new vid, rank;
	if(sscanf(params, "dd", vid, rank))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Syntax: /adjustdvrank <vehicleid> <rank>");
		SendClientMessageEx(playerid, COLOR_GREY, "NOTE: Use /dl to get the vehicleid.");
		SendClientMessageEx(playerid, COLOR_GREY, "NOTE: Rank 0 = Disabled.");
		return 1;
	}
	new iDvSlotID = DynVeh[vid];
	if(iDvSlotID == -1 || iDvSlotID > MAX_DYNAMIC_VEHICLES || DynVehicleInfo[iDvSlotID][gv_iSpawnedID] != vid) return SendClientMessageEx(playerid, COLOR_GRAD1, " Invalid Dynamic Vehicle ID Provided!");
	if(DynVehicleInfo[iDvSlotID][gv_ifID] != PlayerInfo[playerid][pFMember]) return SendClientMessageEx(playerid, COLOR_GRAD1, " This Vehicle is not owned by your family!");
	if(DynVehicleInfo[iDvSlotID][gv_igID] != INVALID_GROUP_ID) return SendClientMessageEx(playerid, COLOR_GRAD1, "This Vehicle is owned by a faction!");
	if(rank > 6 || rank < 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ranks can't go below 0 or above 6");
	new string[128];
	SetPVarInt(playerid, "DvAdjust_Time", gettime()+10);
	DynVehicleInfo[iDvSlotID][gv_irID] = rank;
	format(string, sizeof(string), "You have adjusted the rank of this vehicle to %d.", rank);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	DynVeh_Save(iDvSlotID);
	return 1;
}

CMD:dvpark(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vehicleid = GetPlayerVehicleID(playerid), iDvSlotID = DynVeh[vehicleid];
 		if(iDvSlotID == -1 || iDvSlotID > MAX_DYNAMIC_VEHICLES || DynVehicleInfo[iDvSlotID][gv_iSpawnedID] != vehicleid)
		{
			return SendClientMessageEx(playerid, COLOR_GRAD1, " Invalid Dynamic Vehicle ID Provided!" );
		}
		if(PlayerInfo[playerid][pAdmin] >= 4 || (PlayerInfo[playerid][pLeader] == DynVehicleInfo[iDvSlotID][gv_igID]) && DynVehicleInfo[iDvSlotID][gv_igID] != INVALID_GROUP_ID || DynVehicleInfo[iDvSlotID][gv_ifID] != 0 && (PlayerInfo[playerid][pFMember] == DynVehicleInfo[iDvSlotID][gv_ifID] && PlayerInfo[playerid][pRank] >=6)) {
			GetVehiclePos(vehicleid, DynVehicleInfo[iDvSlotID][gv_fX], DynVehicleInfo[iDvSlotID][gv_fY], DynVehicleInfo[iDvSlotID][gv_fZ]);
			GetVehicleZAngle(vehicleid, DynVehicleInfo[iDvSlotID][gv_fRotZ]);
			DynVehicleInfo[iDvSlotID][gv_iVW] = GetPlayerVirtualWorld(playerid);
			DynVehicleInfo[iDvSlotID][gv_iInt] = GetPlayerInterior(playerid);
			DynVeh_Save(iDvSlotID);
			DynVeh_Spawn(iDvSlotID);
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the dau xe nay.");
	}
	return 1;
}

CMD:dvrespawn(playerid, params[])
{
	new szString[128],
		iGroupID = PlayerInfo[playerid][pMember],
	    iFamilyID = PlayerInfo[playerid][pFMember];

    if(PlayerInfo[playerid][pLeader] != INVALID_GROUP_ID || PlayerInfo[playerid][pFMember] != INVALID_FAMILY_ID && PlayerInfo[playerid][pRank] >= 5)
    {
		if((0 <= iGroupID <= MAX_GROUPS))
		{
			for(new i; i < MAX_DYNAMIC_VEHICLES; i++)
			{
			    new iModelID = DynVehicleInfo[i][gv_iModel];
			    if(400 <= iModelID < 612 && DynVehicleInfo[i][gv_igID] == iGroupID)
			    {
					if(!IsVehicleOccupied(DynVehicleInfo[i][gv_iSpawnedID]))
					{
						DynVeh_Spawn(i);
					}
			    }
			}
			format(szString, sizeof(szString), "** Respawning all dynamic group vehicles...");
			foreach(new i: Player)
			{
				if(PlayerInfo[i][pMember] == iGroupID)
				{
					SendClientMessageEx(i, arrGroupData[iGroupID][g_hRadioColour] * 256 + 255, szString);
				}
			}
            format(szString, sizeof(szString), "%s has respawned group ID %d dynamic group vehicles.", GetPlayerNameEx(playerid), iGroupID+1);
   			Log("logs/group.log", szString);
		}
		else if((1 <= iFamilyID <= MAX_FAMILY))
		{
		    for(new i; i < MAX_DYNAMIC_VEHICLES; i++)
		    {
		        new iModelID = DynVehicleInfo[i][gv_iModel];
		        if(400 <= iModelID < 612 && DynVehicleInfo[i][gv_ifID] == iFamilyID)
		        {
					if(!IsVehicleOccupied(DynVehicleInfo[i][gv_iSpawnedID]))
					{
						DynVeh_Spawn(i);
					}
		        }
		    }
			format(szString, sizeof(szString), "** Respawning all dynamic family vehicles...");
		    foreach(new i: Player)
			{
				if(PlayerInfo[i][pFMember] == iFamilyID)
				{
					SendClientMessageEx(i, COLOR_LIGHTBLUE, szString);
				}
			}
		    format(szString, sizeof(szString), "%s has respawned family %d dynamic group vehicles.", GetPlayerNameEx(playerid), iFamilyID);
      		Log("logs/family.log", szString);
		}
	}
	return 1;
}


CMD:siren(playerid, params[])
{
	if(IsACop(playerid) || IsAHitman(playerid) || IsAGovernment(playerid))
	{
	    if(GetPVarType(playerid, "Siren"))
		{
  			if(IsPlayerAttachedObjectSlotUsed(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 2)) RemovePlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 2);
    		if(IsPlayerAttachedObjectSlotUsed(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 1)) RemovePlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 1);
      		DeletePVar(playerid, "Siren");
      		SendClientMessageEx(playerid, COLOR_WHITE, "Siren disabled.");
			return 1;
		}
	    else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
			if(IsPlayerAttachedObjectSlotUsed(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 2)) RemovePlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 2);
			if(IsPlayerAttachedObjectSlotUsed(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 1)) RemovePlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 1);
			switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
			{
				case 415:
				{
					SetPlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 2, 18646, 10, -0.20, 0.30, 0.3, -90, -30, 0);
					SetPlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 1, 18646, 10, -0.20, 0.30, 0.3, -90, -30, 0);
				}
				case 402:
				{
					SetPlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 2, 18646, 10, -0.20, 0.5, 0.4, -90, -50, 0);
					SetPlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 1, 18646, 10, -0.20, 0.5, 0.4, -90, -50, 0);
				}
				case 541, 411:
				{
					SetPlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 2, 18646, 10, 0.0, 0.2, 0.4, -90, -30, 0);
					SetPlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 1, 18646, 10, 0.0, 0.2, 0.4, -90, -30, 0);
				}
				case 451: {
					SetPlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 2, 18646, 10, -0.30, 0.4, 0.6, -90, -50, 0);
					SetPlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 1, 18646, 10, -0.30, 0.4, 0.6, -90, -50, 0);
				}
				default:
				{
					SetPlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 2, 18646, 10, -0.30, 0.4, 0.4, -90, -50, 0);
					SetPlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS - 1, 18646, 10, -0.30, 0.4, 0.4, -90, -50, 0);
				}
			}
			SetPVarInt(playerid, "Siren", 1);
			SendClientMessageEx(playerid, COLOR_WHITE, "Siren enabled.");
			return 1;
	    }
		SendClientMessage(playerid, COLOR_GRAD2, "This vehicle does not support mounted sirens.");
	}
	return 1;
}
CMD:deploy(playerid, params[])
{
	return ShowPlayerDialog(playerid,DIALOG_DEPLOY,DIALOG_STYLE_LIST,"He thong rao chan","Cade\nSpikes\nFlare\nCone\nBarrel\nCau Thang\nBang Gon","Dat","Huy");
}
CMD:deploydialog(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != INVALID_GROUP_ID)
	{
		new type, object[12];
		if(sscanf(params, "s[12]D(0)", object, type))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /deploy [object] [type (option for barricades)]");
			SendClientMessageEx(playerid, COLOR_GRAD1, "Objects: Cade, Spikes, Flare, Cone, Barrel");
			return 1;
		}
		else if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Ban phai di bo de su dung lenh nay.");
		if(strcmp(object, "cade", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBarricades])
			{
				for(new i; i < sizeof(Barricades); i++)
				{
					if(Barricades[i][sX] == 0 && Barricades[i][sY] == 0 && Barricades[i][sZ] == 0)
					{
						new Float: f_TempAngle, string[128];

						GetPlayerPos(playerid, Barricades[i][sX], Barricades[i][sY], Barricades[i][sZ]);
						GetPlayerFacingAngle(playerid, f_TempAngle);
						switch(type)
						{
							case 0:
							{
								Barricades[i][sObjectID] = CreateDynamicObject(981, Barricades[i][sX], Barricades[i][sY], Barricades[i][sZ], 0.0, 0.0, f_TempAngle);
								SetPlayerPos(playerid, Barricades[i][sX] + 2, Barricades[i][sY] + 2, Barricades[i][sZ] + 2);
							}
							case 1:
							{
								Barricades[i][sObjectID] = CreateDynamicObject(4504, Barricades[i][sX], Barricades[i][sY], Barricades[i][sZ] + 1.6996, 0.0, 0.0, f_TempAngle + 270);
								SetPlayerPos(playerid, Barricades[i][sX] + 10, Barricades[i][sY] + 10, Barricades[i][sZ] + 5);
							}
							case 2:
							{
								Barricades[i][sObjectID] = CreateDynamicObject(4505, Barricades[i][sX], Barricades[i][sY], Barricades[i][sZ] + 1.6996, 0.0, 0.0, f_TempAngle + 270);
								SetPlayerPos(playerid, Barricades[i][sX] + 10, Barricades[i][sY] + 10, Barricades[i][sZ] + 5);
							}
							case 3:
							{
								Barricades[i][sObjectID] = CreateDynamicObject(4514, Barricades[i][sX], Barricades[i][sY], Barricades[i][sZ] + 1.2394, 0.0, 0.0, f_TempAngle + 270);
								SetPlayerPos(playerid, Barricades[i][sX] + 10, Barricades[i][sY] + 10, Barricades[i][sZ] + 5);
							}
							case 4:
							{
								Barricades[i][sObjectID] = CreateDynamicObject(4526, Barricades[i][sX], Barricades[i][sY], Barricades[i][sZ] + 0.7227, 0.0, 0.0, f_TempAngle);
								SetPlayerPos(playerid, Barricades[i][sX] + 10, Barricades[i][sY] + 10, Barricades[i][sZ] + 5);
							}
							case 5:
							{
								Barricades[i][sObjectID] = CreateDynamicObject(978, Barricades[i][sX], Barricades[i][sY], Barricades[i][sZ], 0.0, 0.0, f_TempAngle);
								SetPlayerPos(playerid, Barricades[i][sX] + 2, Barricades[i][sY] + 2, Barricades[i][sZ]);
							}
							case 6:
							{
								Barricades[i][sObjectID] = CreateDynamicObject(979, Barricades[i][sX], Barricades[i][sY], Barricades[i][sZ], 0.0, 0.0, f_TempAngle);
								SetPlayerPos(playerid, Barricades[i][sX] + 2, Barricades[i][sY] + 2, Barricades[i][sZ]);
							}
							
							default:
							{
								Barricades[i][sObjectID] = CreateDynamicObject(981, Barricades[i][sX], Barricades[i][sY], Barricades[i][sZ], 0.0, 0.0, f_TempAngle);
								SetPlayerPos(playerid, Barricades[i][sX] + 2, Barricades[i][sY] + 2, Barricades[i][sZ] + 2);
							}
						}
						GetPlayer3DZone(playerid, Barricades[i][sDeployedAt], MAX_ZONE_NAME);
						Barricades[i][sDeployedBy] = GetPlayerNameEx(playerid);
						if(PlayerInfo[playerid][pAdmin] > 1 && PlayerInfo[playerid][pTogReports] != 1) Barricades[i][sDeployedByStatus] = 1;
						else Barricades[i][sDeployedByStatus] = 0;
						format(string,sizeof(string),"Barricade ID: %d da tao thanh cong.", i);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "HQ: Mot truong ngai vat da duoc trien khai boi %s at %s.", GetPlayerNameEx(playerid), Barricades[i][sDeployedAt]);
						foreach(new x: Player)
						{
							if(PlayerInfo[x][pMember] == PlayerInfo[playerid][pMember]) SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
						}
						return 1;
					}
				}
				SendClientMessageEx(playerid, COLOR_WHITE, "Khong the them nhieu truong ngai vat , gioi han la " #MAX_BARRICADES# ".");
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
		else if(strcmp(object, "spikes", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iSpikeStrips])
			{
				for(new i; i < sizeof(SpikeStrips); i++)
				{
					if(SpikeStrips[i][sX] == 0 && SpikeStrips[i][sY] == 0 && SpikeStrips[i][sZ] == 0)
					{
						new
							Float: f_TempAngle,
							string[128];

						GetPlayerPos(playerid, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]);
						GetPlayerFacingAngle(playerid, f_TempAngle);
						SpikeStrips[i][sObjectID] = CreateDynamicObject(2899, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]-0.8, 0.0, 0.0, f_TempAngle);
						SpikeStrips[i][sPickupID] = CreateDynamicPickup(19300, 14, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]);
						GetPlayer3DZone(playerid, SpikeStrips[i][sDeployedAt], MAX_ZONE_NAME);
						SpikeStrips[i][sDeployedBy] = GetPlayerNameEx(playerid);
						if(PlayerInfo[playerid][pAdmin] > 1 && PlayerInfo[playerid][pTogReports] != 1) SpikeStrips[i][sDeployedByStatus] = 1;
						else SpikeStrips[i][sDeployedByStatus] = 0;
						format(string,sizeof(string),"Spike ID: %d tao thanh cong.", i);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "HQ: Mot truong ngai vat da duoc tao boi %s tai %s.", GetPlayerNameEx(playerid), SpikeStrips[i][sDeployedAt]);
						foreach(new x: Player)
						{
							if(PlayerInfo[x][pMember] == PlayerInfo[playerid][pMember]) SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
						}
						return 1;
					}
				}
				SendClientMessageEx(playerid, COLOR_WHITE, "Khong the them nhieu truong ngai vat , gioi han la " #MAX_SPIKES# ".");
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
		else if(strcmp(object, "flare", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iFlares])
			{
				for(new i; i < sizeof(Flares); i++)
				{
					if(Flares[i][sX] == 0 && Flares[i][sY] == 0 && Flares[i][sZ] == 0)
					{
						new
							Float: f_TempAngle,
							string[128];

						GetPlayerPos(playerid, Flares[i][sX], Flares[i][sY], Flares[i][sZ]);
						GetPlayerFacingAngle(playerid, f_TempAngle);
						Flares[i][sObjectID] = CreateDynamicObject(18728, Flares[i][sX], Flares[i][sY], Flares[i][sZ]-2.4, 0.0, 0.0, f_TempAngle);
						GetPlayer3DZone(playerid, Flares[i][sDeployedAt], MAX_ZONE_NAME);
						Flares[i][sDeployedBy] = GetPlayerNameEx(playerid);
						if(PlayerInfo[playerid][pAdmin] > 1 && PlayerInfo[playerid][pTogReports] != 1) Flares[i][sDeployedByStatus] = 1;
						else Flares[i][sDeployedByStatus] = 0;
						format(string,sizeof(string),"Flare ID: %d tao thanh cong", i);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						return 1;
					}
				}
				SendClientMessageEx(playerid, COLOR_WHITE, "Khong the them nhieu truong ngai vat , gioi han la " #MAX_FLARES# ".");
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
		else if(strcmp(object, "cone", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iCones])
			{
				for(new i; i < sizeof(Cones); i++)
				{
					if(Cones[i][sX] == 0 && Cones[i][sY] == 0 && Cones[i][sZ] == 0)
					{
						new
							Float: f_TempAngle,
							string[128];

						GetPlayerPos(playerid, Cones[i][sX], Cones[i][sY], Cones[i][sZ]);
						GetPlayerFacingAngle(playerid, f_TempAngle);
						Cones[i][sObjectID] = CreateDynamicObject(1238, Cones[i][sX], Cones[i][sY], Cones[i][sZ]-0.7, 0.0, 0.0, f_TempAngle);
						GetPlayer3DZone(playerid, Cones[i][sDeployedAt], MAX_ZONE_NAME);
						Cones[i][sDeployedBy] = GetPlayerNameEx(playerid);
						if(PlayerInfo[playerid][pAdmin] > 1 && PlayerInfo[playerid][pTogReports] != 1) Cones[i][sDeployedByStatus] = 1;
						else Cones[i][sDeployedByStatus] = 0;
						format(string,sizeof(string),"Cone ID: %d tao thanh cong.", i);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						return 1;
					}
				}
				SendClientMessageEx(playerid, COLOR_WHITE, "Khong the them nhieu truong ngai vat , gioi han la " #MAX_CONES# ".");
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
		else if(strcmp(object, "barrel", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBarrels])
			{
				for(new i; i < sizeof(Barrels); i++)
				{
					if(Barrels[i][sX] == 0 && Barrels[i][sY] == 0 && Barrels[i][sZ] == 0)
					{
						new
							Float: f_TempAngle,
							string[128];

						GetPlayerPos(playerid, Barrels[i][sX], Barrels[i][sY], Barrels[i][sZ]);
						GetPlayerFacingAngle(playerid, f_TempAngle);
						Barrels[i][sObjectID] = CreateDynamicObject(1237, Barrels[i][sX], Barrels[i][sY], Barrels[i][sZ]-1, 0.0, 0.0, f_TempAngle);
						GetPlayer3DZone(playerid, Barrels[i][sDeployedAt], MAX_ZONE_NAME);
						Barrels[i][sDeployedBy] = GetPlayerNameEx(playerid);
						if(PlayerInfo[playerid][pAdmin] > 1 && PlayerInfo[playerid][pTogReports] != 1) Barrels[i][sDeployedByStatus] = 1;
						else Barrels[i][sDeployedByStatus] = 0;
						format(string,sizeof(string),"Barrel ID: %d tao thanh cong.", i);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						return 1;
					}
				}
				SendClientMessageEx(playerid, COLOR_WHITE, "Khong the them nhieu truong ngai vat , gioi han la " #MAX_BARRELS# ".");
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
		else if(strcmp(object, "cauthang", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBarrels])
			{
				for(new i; i < sizeof(CauThangls); i++)
				{
					if(CauThangls[i][sX] == 0 && CauThangls[i][sY] == 0 && CauThangls[i][sZ] == 0)
					{
						new
							Float: f_TempAngle,
							string[128];
      					new Float:X, Float:Y, Float:Z;
						GetPlayerPos(playerid, X, Y, Z);
						SetPlayerPos(playerid, X, Y, Z+3);
						GetPlayerPos(playerid, CauThangls[i][sX], CauThangls[i][sY], CauThangls[i][sZ]);
						GetPlayerFacingAngle(playerid, f_TempAngle);
						CauThangls[i][sObjectID] = CreateDynamicObject(1428, CauThangls[i][sX], CauThangls[i][sY], CauThangls[i][sZ]+0.6, 0.0, 0.0, f_TempAngle);
						GetPlayer3DZone(playerid, CauThangls[i][sDeployedAt], MAX_ZONE_NAME);
						CauThangls[i][sDeployedBy] = GetPlayerNameEx(playerid);
						if(PlayerInfo[playerid][pAdmin] > 1 && PlayerInfo[playerid][pTogReports] != 1) CauThangls[i][sDeployedByStatus] = 1;
						else CauThangls[i][sDeployedByStatus] = 0;
						format(string,sizeof(string),"Cau thang ID: %d tao thanh cong.", i);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						return 1;
					}
				}
				SendClientMessageEx(playerid, COLOR_WHITE, "Khong the them nhieu truong ngai vat , gioi han la " #MAX_CAUTHANGLS# ".");
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
		else if(strcmp(object, "banggon", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBarrels])
			{
				for(new i; i < sizeof(BangGonls); i++)
				{
					if(BangGonls[i][sX] == 0 && BangGonls[i][sY] == 0 && BangGonls[i][sZ] == 0)
					{
						new
							Float: f_TempAngle,
							string[128];
      					new Float:X, Float:Y, Float:Z;
						GetPlayerPos(playerid, X, Y, Z);
						SetPlayerPos(playerid, X, Y, Z+1);
						GetPlayerPos(playerid, BangGonls[i][sX], BangGonls[i][sY], BangGonls[i][sZ]);
						GetPlayerFacingAngle(playerid, f_TempAngle);
						BangGonls[i][sObjectID] = CreateDynamicObject(19834, BangGonls[i][sX], BangGonls[i][sY], BangGonls[i][sZ]-0.5, 0.0, 0.0, f_TempAngle);
						GetPlayer3DZone(playerid, BangGonls[i][sDeployedAt], MAX_ZONE_NAME);
						BangGonls[i][sDeployedBy] = GetPlayerNameEx(playerid);
						if(PlayerInfo[playerid][pAdmin] > 1 && PlayerInfo[playerid][pTogReports] != 1) BangGonls[i][sDeployedByStatus] = 1;
						else BangGonls[i][sDeployedByStatus] = 0;
						format(string,sizeof(string),"Bang Gon ID: %d tao thanh cong.", i);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						return 1;
					}
				}
				SendClientMessageEx(playerid, COLOR_WHITE, "Khong the them nhieu truong ngai vat , gioi han la " #MAX_BANGGONLS# ".");
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
	return 1;
}

CMD:destroy(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != INVALID_GROUP_ID)
	{
		new type, object[12];
		if(sscanf(params, "s[12]d", object, type))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /destroy [object] [ID]");
			SendClientMessageEx(playerid, COLOR_GRAD1, "Objects: Cade, Spikes, Flare, Cone, Barrel, cauthang, banggon");
			return 1;
		}
		else if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Ban phai di bo de su dung lenh nay.");
		if(strcmp(object, "cade", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBarricades])
			{
				if(!(0 <= type < sizeof(Barricades)) || (Barricades[type][sX] == 0 && Barricades[type][sY] == 0 && Barricades[type][sZ] == 0)) return SendClientMessageEx(playerid, COLOR_WHITE, "Invalid barricade ID.");
				else if(PlayerInfo[playerid][pAdmin] < 2 && Barricades[type][sDeployedByStatus] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "You cannot destroy a barricade that an Administrator deployed.");
				else
				{
					new string[43 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
					DestroyDynamicObject(Barricades[type][sObjectID]);
					Barricades[type][sX] = 0;
					Barricades[type][sY] = 0;
					Barricades[type][sZ] = 0;
					Barricades[type][sObjectID] = INVALID_OBJECT_ID;
					Barricades[type][sDeployedBy] = INVALID_PLAYER_ID;
					Barricades[type][sDeployedByStatus] = 0;
					format(string, sizeof(string), "Barricade ID: %d xoa thanh cong.", type);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "HQ: Mot truong ngai vat da bi pha huy boi %s tai %s.", GetPlayerNameEx(playerid), Barricades[type][sDeployedAt]);
					foreach(new x: Player)
					{
						if(PlayerInfo[x][pMember] == PlayerInfo[playerid][pMember]) SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
					}
					return 1;
				}
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
		else if(strcmp(object, "spikes", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iSpikeStrips])
			{
				if(!(0 <= type < sizeof(SpikeStrips)) || (SpikeStrips[type][sX] == 0 && SpikeStrips[type][sY] == 0 && SpikeStrips[type][sZ] == 0)) return SendClientMessageEx(playerid, COLOR_WHITE, "Invalid spike ID.");
				else if(PlayerInfo[playerid][pAdmin] < 2 && SpikeStrips[type][sDeployedByStatus] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "You cannot destroy a spikestrip that an Administrator deployed.");
				else
				{
					new string[43 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
					DestroyDynamicObject(SpikeStrips[type][sObjectID]);
					DestroyDynamicPickup(SpikeStrips[type][sPickupID]);
					SpikeStrips[type][sX] = 0;
					SpikeStrips[type][sY] = 0;
					SpikeStrips[type][sZ] = 0;
					SpikeStrips[type][sObjectID] = INVALID_OBJECT_ID;
					SpikeStrips[type][sDeployedBy] = INVALID_PLAYER_ID;
					SpikeStrips[type][sDeployedByStatus] = 0;
					format(string,sizeof(string),"Spike %d xoa thanh cong.", type);
					SendClientMessageEx(playerid, COLOR_WHITE, string);

					format(string, sizeof(string), "HQ: Mot truong ngai vat da bi pha huy boi %s tai %s.", GetPlayerNameEx(playerid), SpikeStrips[type][sDeployedAt]);
					foreach(new x: Player)
					{
						if(PlayerInfo[x][pMember] == PlayerInfo[playerid][pMember]) SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
					}
					return 1;
				}
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
		else if(strcmp(object, "flare", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iFlares])
			{
				if(!(0 <= type < sizeof(Flares)) || (Flares[type][sX] == 0 && Flares[type][sY] == 0 && Flares[type][sZ] == 0)) return SendClientMessageEx(playerid, COLOR_WHITE, "Invalid flare ID.");
				else if(PlayerInfo[playerid][pAdmin] < 2 && Flares[type][sDeployedByStatus] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "You cannot destroy a flare that an Administrator deployed.");
				else
				{
					new string[43 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
					DestroyDynamicObject(Flares[type][sObjectID]);
					Flares[type][sX] = 0;
					Flares[type][sY] = 0;
					Flares[type][sZ] = 0;
					Flares[type][sObjectID] = INVALID_OBJECT_ID;
					Flares[type][sDeployedBy] = INVALID_PLAYER_ID;
					Flares[type][sDeployedByStatus] = 0;
					format(string,sizeof(string),"Flare ID: %d xoa bo thanh cong.", type);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
		else if(strcmp(object, "cone", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iCones])
			{
				if(!(0 <= type < sizeof(Cones)) || (Cones[type][sX] == 0 && Cones[type][sY] == 0 && Cones[type][sZ] == 0)) return SendClientMessageEx(playerid, COLOR_WHITE, "Invalid cone ID.");
				else if(PlayerInfo[playerid][pAdmin] < 2 && Cones[type][sDeployedByStatus] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "You cannot destroy a cone that an Administrator deployed.");
				else
				{
					new string[43 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
					DestroyDynamicObject(Cones[type][sObjectID]);
					Cones[type][sX] = 0;
					Cones[type][sY] = 0;
					Cones[type][sZ] = 0;
					Cones[type][sObjectID] = INVALID_OBJECT_ID;
					Cones[type][sDeployedBy] = INVALID_PLAYER_ID;
					Cones[type][sDeployedByStatus] = 0;
					format(string,sizeof(string),"Cone ID: %d xoa bo thanh cong.", type);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
		else if(strcmp(object, "barrel", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBarrels])
			{
				if(!(0 <= type < sizeof(Barrels)) || (Barrels[type][sX] == 0 && Barrels[type][sY] == 0 && Barrels[type][sZ] == 0)) return SendClientMessageEx(playerid, COLOR_WHITE, "Invalid barrel ID.");
				else if(PlayerInfo[playerid][pAdmin] < 2 && Barrels[type][sDeployedByStatus] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "You cannot destroy a barrel that an Administrator deployed.");
				else
				{
					new string[43 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
					DestroyDynamicObject(Barrels[type][sObjectID]);
					Barrels[type][sX] = 0;
					Barrels[type][sY] = 0;
					Barrels[type][sZ] = 0;
					Barrels[type][sObjectID] = INVALID_OBJECT_ID;
					Barrels[type][sDeployedBy] = INVALID_PLAYER_ID;
					Barrels[type][sDeployedByStatus] = 0;
					format(string,sizeof(string),"Barrel ID: %d xoa bo thanh cong.", type);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
		else if(strcmp(object, "cauthang", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBarrels])
			{
				if(!(0 <= type < sizeof(CauThangls)) || (CauThangls[type][sX] == 0 && CauThangls[type][sY] == 0 && CauThangls[type][sZ] == 0)) return SendClientMessageEx(playerid, COLOR_WHITE, "Invalid CAU THANG ID.");
				else if(PlayerInfo[playerid][pAdmin] < 2 && CauThangls[type][sDeployedByStatus] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong phai admin khong the huy bo");
				else
				{
					new string[43 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
					DestroyDynamicObject(CauThangls[type][sObjectID]);
					CauThangls[type][sX] = 0;
					CauThangls[type][sY] = 0;
					CauThangls[type][sZ] = 0;
					CauThangls[type][sObjectID] = INVALID_OBJECT_ID;
					CauThangls[type][sDeployedBy] = INVALID_PLAYER_ID;
					CauThangls[type][sDeployedByStatus] = 0;
					format(string,sizeof(string),"Cau Thang ID: %d xoa bo thanh cong.", type);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
		else if(strcmp(object, "banggon", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBarrels])
			{
				if(!(0 <= type < sizeof(BangGonls)) || (BangGonls[type][sX] == 0 && BangGonls[type][sY] == 0 && BangGonls[type][sZ] == 0)) return SendClientMessageEx(playerid, COLOR_WHITE, "Invalid CAU THANG ID.");
				else if(PlayerInfo[playerid][pAdmin] < 2 && BangGonls[type][sDeployedByStatus] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong phai admin khong the huy bo");
				else
				{
					new string[43 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
					DestroyDynamicObject(BangGonls[type][sObjectID]);
					BangGonls[type][sX] = 0;
					BangGonls[type][sY] = 0;
					BangGonls[type][sZ] = 0;
					BangGonls[type][sObjectID] = INVALID_OBJECT_ID;
					BangGonls[type][sDeployedBy] = INVALID_PLAYER_ID;
					BangGonls[type][sDeployedByStatus] = 0;
					format(string,sizeof(string),"Bang gon ID: %d xoa bo thanh cong.", type);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					return 1;
				}
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
	return 1;
}

CMD:cades(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != INVALID_GROUP_ID && arrGroupData[PlayerInfo[playerid][pMember]][g_iBarricades] != -1 && PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBarricades])
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Rao chan da duoc chien khai:");
		for(new i, string[56 + MAX_ZONE_NAME + MAX_PLAYER_NAME]; i < sizeof(Barricades); i++)
		{
			if(Barricades[i][sX] != 0 && Barricades[i][sY] != 0 && Barricades[i][sZ] != 0) // Checking for next available ID.
			{
				format(string, sizeof(string), "HQ: Barricade #%d | Deployed location: %s | Deployed by: %s", i, Barricades[i][sDeployedAt], Barricades[i][sDeployedBy]);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep.");
	}
	return 1;
}

CMD:spikes(playerid, params[])
{
	if (PlayerInfo[playerid][pMember] != INVALID_GROUP_ID && PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iSpikeStrips]) {
		SendClientMessageEx(playerid, COLOR_WHITE, "Current deployed spikes:");
		for(new i, string[56 + MAX_ZONE_NAME + MAX_PLAYER_NAME]; i < sizeof(SpikeStrips); i++)
		{
			if(SpikeStrips[i][sX] != 0 && SpikeStrips[i][sY] != 0 && SpikeStrips[i][sZ] != 0) // Checking for next available ID.
			{
				format(string, sizeof(string), "HQ: Spike ID: %d | Deployed location: %s | Deployed by: %s", i, SpikeStrips[i][sDeployedAt], SpikeStrips[i][sDeployedBy]);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
		}
	} else SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
	return 1;
}

CMD:flares(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != INVALID_GROUP_ID && PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iFlares])
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Current deployed flares:");
		for(new i, string[58 + MAX_ZONE_NAME + MAX_PLAYER_NAME]; i < sizeof(Flares); i++)
		{
			if(Flares[i][sX] != 0 && Flares[i][sY] != 0 && Flares[i][sZ] != 0) // Checking for next available ID.
			{
				format(string, sizeof(string), "HQ: Flare ID: %d | Deployed location: %s | Deployed by: %s", i, Flares[i][sDeployedAt], Flares[i][sDeployedBy]);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep.");
	}
	return 1;
}

CMD:cones(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != INVALID_GROUP_ID && PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iCones])
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Current deployed cones:");
		for(new i, string[56 + MAX_ZONE_NAME + MAX_PLAYER_NAME]; i < sizeof(Cones); i++)
		{
			if(Cones[i][sX] != 0 && Cones[i][sY] != 0 && Cones[i][sZ] != 0) // Checking for next available ID.
			{
				format(string, sizeof(string), "HQ: Cone ID: %d | Deployed location: %s | Deployed by: %s", i, Cones[i][sDeployedAt], Cones[i][sDeployedBy]);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep.");
	}
	return 1;
}

CMD:barrels(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != INVALID_GROUP_ID && PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBarrels])
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Current deployed barrels:");
		for(new i, string[56 + MAX_ZONE_NAME + MAX_PLAYER_NAME]; i < sizeof(Barrels); i++)
		{
			if(Barrels[i][sX] != 0 && Barrels[i][sY] != 0 && Barrels[i][sZ] != 0) // Checking for next available ID.
			{
				format(string, sizeof(string), "HQ: Barrel ID: %d | Deployed location: %s | Deployed by: %s", i, Barrels[i][sDeployedAt], Barrels[i][sDeployedBy]);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep.");
	}
	return 1;
}

CMD:eba(playerid, params[]) {
	return cmd_emergencybutton(playerid, params);
}

CMD:emergencybutton(playerid, params[]) {
	if(arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] == 7 || arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] == 7) {
		new
	    	string[128],
			Location[MAX_ZONE_NAME];

        if( PlayerCuffed[ playerid ] >= 1 || PlayerInfo[ playerid ][ pJailTime ] > 0 || PlayerInfo[playerid][pHospital] > 0 || PlayerTied[playerid] > 0 ) {
			SendClientMessageEx( playerid, COLOR_WHITE, "Ban khong the lam dieu do vao luc nay" );
		}

		GetPlayer2DZone(playerid, Location, MAX_ZONE_NAME);
	    foreach(new i: Player)
		{
	    	if(IsACop(i)) {
				SendClientMessageEx(i, TEAM_BLUE_COLOR, "HQ: All Units APB: Reporter: Taxi Company Office");
				format(string, sizeof(string), "HQ: A distress signal is forwarded from the Taxi Company Office for %s at %s",GetPlayerNameEx(playerid), Location);
				SendClientMessageEx(i, TEAM_BLUE_COLOR, string);
			}
		}
		format(string, sizeof(string), "* An alarm engages in %s's taxi at %s. A message is dispatched to the Companies office.", GetPlayerNameEx(playerid), Location);
		SendTaxiMessage(TEAM_AZTECAS_COLOR, string);
		SendClientMessage(playerid, COLOR_WHITE, "You have pressed the emergency button, police have been informed.");
	}
	return 1;
}

CMD:backup(playerid, params[])
{
    if(IsACop(playerid) || IsAMedic(playerid))
	{
	    new code[10],
		zone[MAX_ZONE_NAME],
		string[128];
	    GetPlayer3DZone(playerid, zone, sizeof(zone));
		if(sscanf(params, "s[10]", code) && (Backup[playerid] == 0 || Backup[playerid] == 2)) {
			format(string, sizeof(string), "* %s yeu cau backup tren radio cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			format(string, sizeof(string), "* %s yeu cau backup tai %s. {AA3333}Dap ung Code 3 [Lights and Sirens].", GetPlayerNameEx(playerid), zone);
            ShowBackupActiveForPlayer(playerid);
			Backup[playerid] = 1;

			foreach(new i:Player)
			{
				if(PlayerInfo[playerid][pMember] == PlayerInfo[i][pMember])
				{
      				SetPlayerMarkerForPlayer(i, playerid, 0x2641FEAA);
					SendClientMessageEx(i, arrGroupData[PlayerInfo[playerid][pMember]][g_hRadioColour] * 256 + 255, string);
				}
			}
			SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /backup mot lan nua de ha thap yeu cau backup cua ban xuong code 2.");
			SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /nobackup de xoa yeu cau backup.");
			if(BackupClearTimer[playerid] != 0)
			{
				KillTimer(BackupClearTimer[playerid]);
				BackupClearTimer[playerid] = 0;
			}
			BackupClearTimer[playerid] = SetTimerEx("BackupClear", 300000, false, "ii", playerid, 1);
		}
		else if(strcmp(code, "code2", true) == 0 && (Backup[playerid] == 0 || Backup[playerid] == 1))
		{
			format(string, sizeof(string), "* %s yeu cau backup tren radio cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			format(string, sizeof(string), "* %s yeu cau backup tai %s. {00FF33}Dap ung Code 2 [No Lights and Sirens].", GetPlayerNameEx(playerid), zone);
            ShowBackupActiveForPlayer(playerid);
			Backup[playerid] = 2;

			foreach(new i:Player)
			{
				if(PlayerInfo[playerid][pMember] == PlayerInfo[i][pMember])
				{
      				SetPlayerMarkerForPlayer(i, playerid, 0x00FF33AA);
					SendClientMessageEx(i,  arrGroupData[PlayerInfo[playerid][pMember]][g_hRadioColour] * 256 + 255, string);
				}
			}
			SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /backup mot lan nua de nang yeu cau backup cua ban len code 3.");
			SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /nobackup de xoa yeu cau backup.");
			if(BackupClearTimer[playerid] != 0)
			{
				KillTimer(BackupClearTimer[playerid]);
				BackupClearTimer[playerid] = 0;
			}
			BackupClearTimer[playerid] = SetTimerEx("BackupClear", 300000, false, "ii", playerid, 1);
		}
		else if(code[0] && !(strcmp(code, "code2", true) == 0))
		{
		    return SendClientMessageEx(playerid, COLOR_GREY, "Tham so khong chinh sac - su dung /backup hoac /backup hai lan cho code2");
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "  Ban da yeu cau mot backup hoat dong! Su dung /nobackup de huy bo.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban khong phai nhan vien thuc thi phap luat hoac bac si!");
	}
	return 1;
}

CMD:backupall(playerid, params[])
{
    if(IsACop(playerid) || IsAMedic(playerid))
	{
	    new
			zone[MAX_ZONE_NAME],
			string[128];
	    GetPlayer3DZone(playerid, zone, sizeof(zone));
		if(Backup[playerid] == 0 || Backup[playerid] == 1)
		{
			format(string, sizeof(string), "* %s yeu cau backup tren radio cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			format(string, sizeof(string), "* %s yeu cau backup %s. {AA3333}Dap ung Code 3A [Lights and Sirens].", GetPlayerNameEx(playerid), zone);
            ShowBackupActiveForPlayer(playerid);
			Backup[playerid] = 3;
			foreach(new i:Player)
			{
				if(IsACop(i))
				{
      				SetPlayerMarkerForPlayer(i, playerid, 0x2641FEAA);
					SendClientMessageEx(i, DEPTRADIO, string);
				}
			}
			SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /nobackup de xoa yeu cau backup cua ban.");
			if(BackupClearTimer[playerid] != 0)
			{
				KillTimer(BackupClearTimer[playerid]);
				BackupClearTimer[playerid] = 0;
			}
			BackupClearTimer[playerid] = SetTimerEx("BackupClear", 300000, false, "ii", playerid, 1);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "  Ban khong co yeu cau backup nao hoat dong! Su dung /nobackup de huy bo.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban khong phai nhan vien thuc thi phap luat hoac bac si!");
	}
	return 1;
}

CMD:nobackup(playerid, params[])
{
    BackupClear(playerid, 0);
	return 1;
}

CMD:lock(playerid, params[])
{
   	if(PlayerInfo[playerid][pLock] == 1)
	{
 		if(IsPlayerInAnyVehicle(playerid))
   		{
			if(PlayerInfo[playerid][pLockCar] != GetPlayerVehicleID(playerid) && PlayerInfo[playerid][pLockCar] != INVALID_VEHICLE_ID) return SendClientMessageEx(playerid, COLOR_GRAD2, "You don't have a lock for this vehicle!");
   			if(GetPlayerVehicleSeat(playerid) != 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Khong the khoa xe khi la hanh khac!");
   			new v = -1;
   			foreach(new i: Player)
   			{
	    		v = GetPlayerVehicle(i, GetPlayerVehicleID(playerid));
		    	if(v != -1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Khong the khoa xe!");
			}
   			if(PlayerInfo[playerid][pLockCar] == INVALID_VEHICLE_ID) PlayerInfo[playerid][pLockCar] = GetPlayerVehicleID(playerid);
      		if(LockStatus{GetPlayerVehicleID(playerid)} == 0)
        	{
				LockStatus{GetPlayerVehicleID(playerid)} = 1;
    			GameTextForPlayer(playerid, "~r~khoa", 1000, 6);
       			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
          		vehicle_lock_doors(PlayerInfo[playerid][pLockCar]);
      		}
        	else
	        {
				LockStatus{GetPlayerVehicleID(playerid)} = 0;
   				vehicle_unlock_doors(PlayerInfo[playerid][pLockCar]);
      			GameTextForPlayer(playerid, "~g~mo khoa", 1000, 6);
        		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
 	        }
   		}
	    else
	    {
     		new Float: x, Float: y, Float: z;
       		GetVehiclePos(PlayerInfo[playerid][pLockCar], x, y, z);
        	if(IsPlayerInRangeOfPoint(playerid, 4.0, x, y, z))
        	{
         		if(LockStatus{PlayerInfo[playerid][pLockCar]} == 0)
           		{
            		vehicle_lock_doors(PlayerInfo[playerid][pLockCar]);
            		GameTextForPlayer(playerid, "~r~khoa", 1000, 6);
	            	PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
 	            }
 	            else
 	            {
	            	vehicle_unlock_doors(PlayerInfo[playerid][pLockCar]);
	            	GameTextForPlayer(playerid, "~g~mo khoa", 1000, 6);
	            	PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
          		}
   	        }
   	        else
   	        {
            	SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o gan xe cua ban!");
	            return 1;
   	        }
       	}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, " Ban khong co khoa!");
		return 1;
 	}
	return 1;
}

CMD:quitgroup(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] >= 0 || PlayerInfo[playerid][pLeader] >= 0)
	{
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban da roi khoi nhom, gio ban la nguoi dan binh  thuong.");
		new string[128];
		format(string, sizeof(string), "%s da bo %s khoi rank %i", GetPlayerNameEx(playerid), arrGroupData[PlayerInfo[playerid][pMember]][g_szGroupName], PlayerInfo[playerid][pRank]);
		Log("logs/group.log", string);
		PlayerInfo[playerid][pMember] = INVALID_GROUP_ID;
		PlayerInfo[playerid][pRank] = INVALID_RANK;
		PlayerInfo[playerid][pDuty] = 0;
		PlayerInfo[playerid][pPwInvite] = 0;
		PlayerInfo[playerid][pNameRank] = 0;
		PlayerInfo[playerid][pKhuVuc] = 0;
		PlayerInfo[playerid][pLeader] = INVALID_GROUP_ID;
		PlayerInfo[playerid][pDivision] = INVALID_DIVISION;
		if(!IsValidSkin(GetPlayerSkin(playerid)))
		{
  			new rand = random(sizeof(CIV));
			SetPlayerSkin(playerid,CIV[rand]);
			PlayerInfo[playerid][pModel] = CIV[rand];
		}
		SetPlayerToTeamColor(playerid);
		player_remove_vip_toys(playerid);
		ResetPlayerWeaponsEx(playerid);
   		pTazer{playerid} = 0;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong nhom.");
	}
	return 1;
}

CMD:dvstorage(playerid, params[])
{
	new iGroupID = PlayerInfo[playerid][pMember];
	if((0 <= iGroupID <= MAX_GROUPS))
	{
		if(PlayerInfo[playerid][pLeader] == iGroupID)
		{
			if(IsPlayerInRangeOfPoint(playerid, 100.0, arrGroupData[iGroupID][g_fGaragePos][0], arrGroupData[iGroupID][g_fGaragePos][1], arrGroupData[iGroupID][g_fGaragePos][2]))
			{
				new vstring[2500];
				for(new i; i < MAX_DYNAMIC_VEHICLES; i++)
				{
					new iModelID = DynVehicleInfo[i][gv_iModel];
					if(400 <= iModelID < 612 && DynVehicleInfo[i][gv_igID] == iGroupID)
					{
						if(DynVehicleInfo[i][gv_iDisabled]) {
							format(vstring, sizeof(vstring), "%s\n(%d)%s (Disabled) [VehicleID : %d]", vstring, i, VehicleName[iModelID - 400], DynVehicleInfo[i][gv_iSpawnedID]);
						}
						else if(DynVehicleInfo[i][gv_iSpawnedID] != INVALID_VEHICLE_ID) {
							format(vstring, sizeof(vstring), "%s\n(%d) %s (Spawned) [VehicleID : %d]", vstring, i, VehicleName[iModelID - 400], DynVehicleInfo[i][gv_iSpawnedID]);
						}
						else if(DynVehicleInfo[i][gv_iSpawnedID] == INVALID_VEHICLE_ID) {
							format(vstring, sizeof(vstring), "%s\n(%d) %s (Stored)", vstring, i, VehicleName[iModelID - 400], DynVehicleInfo[i][gv_iSpawnedID]);
						}
					}
				}
				ShowPlayerDialog(playerid, DV_STORAGE, DIALOG_STYLE_LIST, "Dynamic Group Vehicle Storage", vstring, "Track", "Cancel");
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD1, "You're not in range of your group garage!");
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD1, "You're not a group leader!");
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "You're not in a group!");
	return 1;
}
/*CMD:chinhxe(playerid, params[])
{
			new zone[MAX_ZONE_NAME];
			if(PlayerTied[playerid] != 0 || PlayerCuffed[playerid] != 0 || PlayerInfo[playerid][pJailTime] > 0 || GetPVarInt(playerid, "Injured")) return ChatHoTro(playerid, 255, "Ban khong the lam dieu nay vao luc nay.",5000);
			if(PlayerInfo[playerid][pFreezeCar] == 0 || PlayerInfo[playerid][pAdmin] >= 2)
			{
				new 
		            status[32],
		            vstring[4096] = "Ten\tDo ben\tTrang thai\tTinh trang\n", 
		            icount = GetPlayerVehicleSlots(playerid);
				
		        for(new i, iModelID; i < icount; i++) 
		        {
					if((iModelID = PlayerVehicleInfo[playerid][i][pvModelId] - 400) >= 0) 
		            {
						Get3DZone(PlayerVehicleInfo[playerid][i][pvPosX], PlayerVehicleInfo[playerid][i][pvPosY], PlayerVehicleInfo[playerid][i][pvPosZ], zone, sizeof(zone));
		                switch(PlayerVehicleInfo[playerid][i][pvHealth])
		                {
		                    case 0..600: status = "{ba1e1e}(Hu hong)";
		                    case 601..900: status = "{2b82e3}(Trung binh)";
		                    default: status = "{67f045}(Tot)";
		                }
		                if(!PlayerVehicleInfo[playerid][i][pvSpawned])
							format(vstring, sizeof(vstring), "%s\n%s\t%0.2f\t%s\tTrong kho", vstring, VehicleName[iModelID],PlayerVehicleInfo[playerid][i][pvHealth], status);
						else format(vstring, sizeof(vstring), "%s\n%s\t%0.2f\t%s\tDa lay", vstring, VehicleName[iModelID],PlayerVehicleInfo[playerid][i][pvHealth], status);
						//format(vstring, sizeof(vstring), "Ten\tVi tri\tDo ben\tTrang thai\n%s%s\t%s\t%0.2f\t(Dang dung)", vstring, VehicleName[iModelID],zone,PlayerVehicleInfo[playerid][i][pvHealth]);
					}
					else strcat(vstring, "\nTrong\n");
				}
				format(vstring, sizeof(vstring), "%s\n{40FFFF}Them slot xe {FFD700}(Credits: %s){A9C4E4}", vstring, number_format(ShopItems[23][sItemPrice]));
				ShowPlayerDialog(playerid, VEHICLESTORAGE, DIALOG_STYLE_TABLIST_HEADERS, "Phuong tien", vstring, "Chinh xe", "Huy bo");
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD2, "Chiec xe nay da bi thu boi so canh sat, vui long toi DMV de lam thu tuc lay xe ra.");
			return 1;
		}
*/
/*CMD:chinhxe(playerid, params)
{
	ChatHoTro(playerid, 255,"Hay den garage de lay xe ra",5000);
	return 1;
}*/

CMD:chinhxe(playerid, params[])
{
	new zone[MAX_ZONE_NAME];
	if(PlayerTied[playerid] != 0 || PlayerCuffed[playerid] != 0 || PlayerInfo[playerid][pJailTime] > 0 || GetPVarInt(playerid, "Injured")) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lam dieu nay vao luc nay.");
	if(PlayerInfo[playerid][pFreezeCar] == 0 || PlayerInfo[playerid][pAdmin] >= 2)
	{
		new 
            status[32],
            vstring[4096] = "Ten\tVi tri\tDo ben\tTrang thai\n", 
            icount = GetPlayerVehicleSlots(playerid);
		
        for(new i, iModelID; i < icount; i++) 
        {
			if((iModelID = PlayerVehicleInfo[playerid][i][pvModelId] - 400) >= 0) 
            {
				Get3DZone(PlayerVehicleInfo[playerid][i][pvPosX], PlayerVehicleInfo[playerid][i][pvPosY], PlayerVehicleInfo[playerid][i][pvPosZ], zone, sizeof(zone));
                switch(PlayerVehicleInfo[playerid][i][pvHealth])
                {
                    case 0..600: status = "{ba1e1e}(Hu hong)";
                    case 601..900: status = "{2b82e3}(Trung binh)";
                    default: status = "{67f045}(Tot)";
                }
				format(vstring, sizeof(vstring), "%s\n%s\t%s\t%0.2f\t%s", vstring, VehicleName[iModelID],zone,PlayerVehicleInfo[playerid][i][pvHealth], status);
				//format(vstring, sizeof(vstring), "Ten\tVi tri\tDo ben\tTrang thai\n%s%s\t%s\t%0.2f\t(Dang dung)", vstring, VehicleName[iModelID],zone,PlayerVehicleInfo[playerid][i][pvHealth]);
			}
			else strcat(vstring, "\nTrong\n");
		}
		format(vstring, sizeof(vstring), "%s\n{40FFFF}Them slot xe {FFD700}(Credits: %s){A9C4E4}", vstring, number_format(ShopItems[23][sItemPrice]));
		ShowPlayerDialog(playerid, VEHICLESTORAGE, DIALOG_STYLE_TABLIST_HEADERS, "Phuong tien", vstring, "Chinh xe", "Huy bo");
	}
	else { return SendClientMessageEx(playerid, COLOR_GRAD2, "Chiec xe nay da bi thu boi so canh sat, vui long toi DMV de lam thu tuc lay xe ra."); }
	return 1;
}


CMD:timxe(playerid, params[])
{
    if(GetPVarType(playerid, "RentedVehicle")) {
        ShowPlayerDialog(playerid, TRACKCAR2, DIALOG_STYLE_LIST, "TIM KIEM PHUONG TIEN", "Xe thue\nXe so huu", "Tim", "Huy");
	}
	else
	{
		new vstring[1024], icount = GetPlayerVehicleSlots(playerid);
		for(new i, iModelID; i < icount; i++) {
			if((iModelID = PlayerVehicleInfo[playerid][i][pvModelId] - 400) >= 0) {
				if(PlayerVehicleInfo[playerid][i][pvImpounded]) {
					format(vstring, sizeof(vstring), "%s\n%s (GIAM)", vstring, VehicleName[iModelID]);
				}
				else if(PlayerVehicleInfo[playerid][i][pvDisabled]) {
					format(vstring, sizeof(vstring), "%s\n%s (DONG BANG)", vstring, VehicleName[iModelID]);
				}
				else if(!PlayerVehicleInfo[playerid][i][pvSpawned]) {
					format(vstring, sizeof(vstring), "%s\n%s (CAT)", vstring, VehicleName[iModelID]);
				}
				else format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[iModelID]);
			}
		}
		ShowPlayerDialog(playerid, TRACKCAR, DIALOG_STYLE_LIST, "TIM KIEM PHUONG TIEN", vstring, "Tim", "Huy");
	}
	return 1;
}

CMD:viethoadon(playerid, params[])
{
    if(IsAMechanic(playerid))
    {

        new string[128], giveplayerid, moneys, reason[64];
        if(sscanf(params, "uds[64]", giveplayerid, moneys, reason)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /viethoadon [playerid] [Gia tien] [Ly do]");

        if(giveplayerid == playerid)
        {
            SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the viet hoa don cho chinh ban.");
            return 1;
        }

        if(moneys < 1 || moneys > 1000000) { SendClientMessageEx(playerid, COLOR_GREY, "Hoa don khong duoi 1$ hoac cao hon $1,000,000."); return 1; }
        if(IsPlayerConnected(giveplayerid))
        {
            if(giveplayerid != INVALID_PLAYER_ID)
            {
                if (ProxDetectorS(8.0, playerid, giveplayerid))
                {
                    if(giveplayerid == playerid) return 1;

                    format(string, sizeof(string), "* Ban da dua cho %s mot hoa don tri gia $%d, ly do: %s", GetPlayerNameEx(giveplayerid), moneys, reason);
                    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "* %s da viet cho ban mot hoa don $%d, ly do: %s", GetPlayerNameEx(playerid), moneys, reason);
                    SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "* %s da viet mot hoa don va dua cho %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "* Su dung (/chapnhan hoadon), de chap nhan hoa don, (/huybo hoadon) de tu choi hoa don.");
                    HoaDonOffer[giveplayerid] = playerid;
                    HoaDonMoney[giveplayerid] = moneys;
                    return 1;
                }
                else
                {
                    SendClientMessageEx(playerid, COLOR_GREY, "Nguoi ban muon viet hoa don khong o gan ban.");
                    return 1;
                }
            }
        }
        else
        {
            SendClientMessageEx(playerid, COLOR_GREY, "nguoi choi khong hop le.");
            return 1;
        }
    }
    return 1;
}

CMD:makeadmin(playerid, params[])  {
	if(PlayerInfo[playerid][pAdmin] >= 8 || PlayerInfo[playerid][pAP] >= 2 || PlayerInfo[playerid][pHR] >= 3) {

		new
			iAdminValue,
			iTargetID;

		if(sscanf(params, "ui", iTargetID, iAdminValue)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /makeadmin [player] [level]");
		}
		else if(IsPlayerConnected(iTargetID)) {
			if(PlayerInfo[iTargetID][pHelper] >= 1) {
				SendClientMessageEx(playerid, COLOR_GRAD1, "You cannot make Junior Helpers admins!");
			}
			if(PlayerInfo[iTargetID][pAdmin] == iAdminValue) return SendClientMessageEx(playerid, COLOR_GREY, "This person already has this administrator level.");
			else {

				new
					szMessage[47 + (MAX_PLAYER_NAME * 2)];

                PriorityReport[iTargetID] = TextDrawCreate(261.000000, 373.000000, "Bao cao moi");
				TextDrawBackgroundColor(PriorityReport[iTargetID], 255);
				TextDrawFont(PriorityReport[iTargetID], 2);
				TextDrawLetterSize(PriorityReport[iTargetID], 0.460000, 1.800000);
				TextDrawColor(PriorityReport[iTargetID], -65281);
				TextDrawSetOutline(PriorityReport[iTargetID], 0);
				TextDrawSetProportional(PriorityReport[iTargetID], 1);
				TextDrawSetShadow(PriorityReport[iTargetID], 1);


				new szRank[128];
				switch(iAdminValue) {
					case 0: format(szRank, sizeof(szRank), "AdmCmd: %s has removed %s's administrator rank.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
					case 1: format(szRank, sizeof(szRank), "AdmCmd: %s has made %s a Server Moderator.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
					case 2: format(szRank, sizeof(szRank), "AdmCmd: %s has made %s a Junior Administrator.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
					case 3: format(szRank, sizeof(szRank), "AdmCmd: %s has made %s a General Administrator.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
					case 4: format(szRank, sizeof(szRank), "AdmCmd: %s has made %s a Senior Administrator.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
					case 5: format(szRank, sizeof(szRank), "AdmCmd: %s has made %s a Head Administrator.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
					case 6: format(szRank, sizeof(szRank), "AdmCmd: %s has made %s a Lead Head Administrator.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
					case 7: format(szRank, sizeof(szRank), "AdmCmd: %s has made %s an Executive Administrator.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
					case 8: format(szRank, sizeof(szRank), "AdmCmd: %s has made %s an Founder Administrator.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
					default: format(szRank, sizeof(szRank), "AdmCmd: %s has made %s an undefined level administrator.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
				}

				PlayerInfo[iTargetID][pAdmin] = iAdminValue;
				ABroadCast(COLOR_LIGHTRED, szRank, 2);
				Log("logs/admin.log", szMessage);

				switch(iAdminValue) {
					case 0: format(szRank, sizeof(szRank), "Your administrator rank has been removed by %s.", GetPlayerNameEx(playerid));
					case 1: format(szRank, sizeof(szRank), "You have been made a Server Moderator by %s.", GetPlayerNameEx(playerid));
					case 2: format(szRank, sizeof(szRank), "You have been made a Junior Administrator by %s.", GetPlayerNameEx(playerid));
					case 3: format(szRank, sizeof(szRank), "You have been made a General Administrator by %s.", GetPlayerNameEx(playerid));
					case 4: format(szRank, sizeof(szRank), "You have been made a Senior Administrator by %s.", GetPlayerNameEx(playerid));
					case 5: format(szRank, sizeof(szRank), "You have been made a Head Administrator by %s.", GetPlayerNameEx(playerid));
					case 6: format(szRank, sizeof(szRank), "You have been made a Lead Head Administrator by %s.", GetPlayerNameEx(playerid));
					case 7: format(szRank, sizeof(szRank), "You have been made an Executive Administrator by %s.", GetPlayerNameEx(playerid));
					case 8: format(szRank, sizeof(szRank), "You have been made an Founder Administrator by %s.", GetPlayerNameEx(playerid));
					default: format(szRank, sizeof(szRank), "You have been made an undefined level administrator by %s.", GetPlayerNameEx(playerid));
				}
				SendClientMessageEx(iTargetID, COLOR_LIGHTBLUE, szRank);

				switch(iAdminValue) {
					case 0: format(szRank, sizeof(szRank), "You have removed %s's administrator rank.", GetPlayerNameEx(iTargetID));
					case 1: format(szRank, sizeof(szRank), "Ban da tuyen dung %s thanh Server Moderator.", GetPlayerNameEx(iTargetID));
					case 2: format(szRank, sizeof(szRank), "Ban da tuyen dung %s thanh Junior Administrator.", GetPlayerNameEx(iTargetID));
					case 3: format(szRank, sizeof(szRank), "Ban da tuyen dung %s thanh General Administrator.", GetPlayerNameEx(iTargetID));
					case 4: format(szRank, sizeof(szRank), "Ban da tuyen dung %s thanh Senior Administrator.", GetPlayerNameEx(iTargetID));
					case 5: format(szRank, sizeof(szRank), "Ban da tuyen dung %s thanh Head Administrator.", GetPlayerNameEx(iTargetID));
					case 6: format(szRank, sizeof(szRank), "Ban da tuyen dung %s thanh Lead Head Administrator.", GetPlayerNameEx(iTargetID));
					case 7: format(szRank, sizeof(szRank), "Ban da tuyen dung %s thanhn Executive Administrator.", GetPlayerNameEx(iTargetID));
					case 8: format(szRank, sizeof(szRank), "AdmCmd: %s has made %s an Founder Administrator.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
					default: format(szRank, sizeof(szRank), "Ban da tuyen dung %s thanhn undefined level administrator.", GetPlayerNameEx(iTargetID));
				}
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szRank);
			}
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi choi khong hop le.");
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
	return 1;
}
CMD:unmodcar(playerid, params[]) {
	for(new d = 0; d < MAX_PLAYERVEHICLES; d++) if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId])) {
		new modList[512], string[16];
		new count = 0;
		for(new f = 0; f < MAX_MODS; f++) if(GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f) != 0) {
			if(f != 9 && f != 7 && f != 8) {
				format(modList, sizeof(modList), "%s\n%s - %s", modList, partType(f), partName(GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f)));
			}
			else format(modList, sizeof(modList), "%s\n%s", modList, partType(f));

			format(string, sizeof(string), "partList%d", count);
			SetPVarInt(playerid, string, GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f));
			count++;
		}
		if (count == 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, " This vehicle does not have any modifications.");
			return 1;
		}
		format(modList, sizeof(modList), "%s\nAll", modList);
		format(string, sizeof(string), "partList%d", count);
		SetPVarInt(playerid, string, 999);
		count++;
		SetPVarInt(playerid, "modCount", count);
		return ShowPlayerDialog(playerid, UNMODCARMENU, DIALOG_STYLE_LIST, "Remove Modifications", modList, "Lua chon", "Huy bo");
	}
	SendClientMessageEx(playerid, COLOR_GREY, " You need to be inside a vehicle that you own.");
 	return 1;
}

CMD:deletecar(playerid, params[])
{
	new vstring[1024], icount = GetPlayerVehicleSlots(playerid);
	for(new i, iModelID; i < icount; i++) {
		if((iModelID = PlayerVehicleInfo[playerid][i][pvModelId] - 400) >= 0)
		{
			if(PlayerVehicleInfo[playerid][i][pvImpounded]) format(vstring, sizeof(vstring), "%s\n%s (impounded)", vstring, VehicleName[iModelID]);
			else if(PlayerVehicleInfo[playerid][i][pvDisabled]) format(vstring, sizeof(vstring), "%s\n%s (disabled)", vstring, VehicleName[iModelID]);
			else if(!PlayerVehicleInfo[playerid][i][pvSpawned]) format(vstring, sizeof(vstring), "%s\n%s (stored)", vstring, VehicleName[iModelID]);
			else format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[iModelID]);
		}
		else strcat(vstring, "\nEmpty");
	}
	return ShowPlayerDialog(playerid, DIALOG_DELETECAR, DIALOG_STYLE_LIST, "Delete Vehicle", vstring, "Delete", "Cancel");
}

CMD:parktrailer(playerid, params[]) {
	for(new i = 0, Float: fVehiclePos[4], iVehicleID; i != MAX_PLAYERVEHICLES; ++i) switch(GetVehicleModel((iVehicleID = PlayerVehicleInfo[playerid][i][pvId]))) {
		case 435, 450, 584, 591, 606, 607, 608, 610, 611: {
			GetVehiclePos(iVehicleID, fVehiclePos[0], fVehiclePos[1], fVehiclePos[2]);
			if(IsPlayerInRangeOfPoint(playerid, 10.0, fVehiclePos[0], fVehiclePos[1], fVehiclePos[2])) {

				new
					szMessage[64];

				GetVehicleZAngle(iVehicleID, fVehiclePos[3]);
				UpdatePlayerVehicleParkPosition(playerid, i, fVehiclePos[0], fVehiclePos[1], fVehiclePos[2], fVehiclePos[3], 1000.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));

				format(szMessage, sizeof szMessage, "* %s has parked their trailer.", GetPlayerNameEx(playerid));
				return ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			}
		}
	}
	return 1;
}


CMD:dauxe(playerid, params[])
{
	new
		iVehicle = GetPlayerVehicleID(playerid),
		iBusiness = GetCarBusiness(iVehicle),
		Float: XYZ[4];

    if(iVehicle == GetPVarInt(playerid, "RentedVehicle"))
	{
	    new Float:x, Float:y, Float:z, Float:health;
		GetVehicleHealth(iVehicle, health);
  		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban phai ngoi ghe lai.");
  		if (GetPlayerCash(playerid) >= 50000) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong du 50,000 SAD De mua cho dau xe,");
		if(health < 800) return SendClientMessageEx(playerid, COLOR_WHITE, " Xe ban hong nang nen khong the do.");
		if(PlayerInfo[playerid][pLockCar] == GetPlayerVehicleID(playerid)) PlayerInfo[playerid][pLockCar] = INVALID_VEHICLE_ID;
		GetPlayerPos(playerid, x, y, z);

		SetTimerEx("ParkRentedVehicle", 1000, false, "iiifff", playerid, iVehicle, GetVehicleModel(iVehicle), x, y, z);
		SendClientMessageEx (playerid, COLOR_YELLOW, "Khong di chuyen khi da do xe!");
		return 1;
	}
	if (iVehicle != 0 && iBusiness != INVALID_BUSINESS_ID)
	{
	 	if (iBusiness != PlayerInfo[playerid][pBusiness]) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong duoc phep do xe nay.");
		new
			iSlot = GetBusinessCarSlot(iVehicle);

		GetVehiclePos(iVehicle, XYZ[0], XYZ[1], XYZ[2]);
		GetVehicleZAngle(iVehicle, XYZ[3]);

		Businesses[iBusiness][bParkPosX][iSlot] = XYZ[0];
		Businesses[iBusiness][bParkPosY][iSlot] = XYZ[1];
		Businesses[iBusiness][bParkPosZ][iSlot] = XYZ[2];
		Businesses[iBusiness][bParkAngle][iSlot] = XYZ[3];

		DestroyVehicle(Businesses[iBusiness][bVehID][iSlot]);
		Businesses[iBusiness][bVehID][iSlot] = CreateVehicle(Businesses[iBusiness][bModel][iSlot], Businesses[iBusiness][bParkPosX][iSlot], Businesses[iBusiness][bParkPosY][iSlot], Businesses[iBusiness][bParkPosZ][iSlot],
		Businesses[iBusiness][bParkAngle][iSlot], 0, 0, -1);

        SaveDealershipVehicle(iBusiness, iSlot);
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da do xe.");
		return 1;
	}

	if(PlayerInfo[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
	{
		new ownerid = PlayerInfo[playerid][pVehicleKeysFrom];
		if(IsPlayerConnected(ownerid))
		{
			new d = PlayerInfo[playerid][pVehicleKeys];
			if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[ownerid][d][pvId]))
			{
			    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban phai ngoi ghe lai.");
				new Float:x, Float:y, Float:z, Float:health;
				GetVehicleHealth(PlayerVehicleInfo[ownerid][d][pvId], health);
				if(health < 800) return SendClientMessageEx(playerid, COLOR_WHITE, " Xe ban hong nang nen khong the do.");
				if(PlayerInfo[playerid][pLockCar] == GetPlayerVehicleID(playerid)) PlayerInfo[playerid][pLockCar] = INVALID_VEHICLE_ID;

                GetPlayerPos(playerid, x, y, z);
                SetTimerEx("ParkVehicle", 1000, false, "iiiifff", playerid, ownerid, PlayerVehicleInfo[ownerid][d][pvId], d, x, y, z);
                SendClientMessageEx (playerid, COLOR_YELLOW, "Khong di chuyen khi da do xe!");
				return 1;
			}
		}
	}
	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
		{
			new Float:x, Float:y, Float:z, Float:health;
			GetVehicleHealth(PlayerVehicleInfo[playerid][d][pvId], health);
            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban phai ngoi ghe lai.");
			if(health < 800) return SendClientMessageEx(playerid, COLOR_WHITE, " Xe ban hong nang nen khong the do.");
			if(PlayerInfo[playerid][pLockCar] == GetPlayerVehicleID(playerid)) PlayerInfo[playerid][pLockCar] = INVALID_VEHICLE_ID;
			GetPlayerPos(playerid, x, y, z);

   			SetTimerEx("ParkVehicle", 1000, false, "iiiifff", playerid, INVALID_PLAYER_ID, PlayerVehicleInfo[playerid][d][pvId], d, x, y, z);
      		SendClientMessageEx (playerid, COLOR_YELLOW, "Khong di chuyen khi da do xe!");
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_WHITE, "Ban phai o trong xe cua ban.");
	return 1;
}

CMD:c(playerid, params[]) {
	return cmd_staff(playerid, params);
}
CMD:staff(playerid, params[]) {
	if((PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pDonateRank] == 5 || PlayerInfo[playerid][pWatchdog] == 1) && advisorchat[playerid]) {
		if(!isnull(params)) {

			new
				szMessage[128];

			if(PlayerInfo[playerid][pAdmin] == 2) format(szMessage, sizeof(szMessage), "** Junior Admin %s: %s", GetPlayerNameEx(playerid), params);
			else if(PlayerInfo[playerid][pAdmin] == 3) format(szMessage, sizeof(szMessage), "** General Admin %s: %s", GetPlayerNameEx(playerid), params);
			else if(PlayerInfo[playerid][pAdmin] == 4) format(szMessage, sizeof(szMessage), "** Senior Admin %s: %s", GetPlayerNameEx(playerid), params);
			else if(PlayerInfo[playerid][pAdmin] == 5) format(szMessage, sizeof(szMessage), "** Head Admin %s: %s", GetPlayerNameEx(playerid), params);
			else if(PlayerInfo[playerid][pAdmin] == 6) format(szMessage, sizeof(szMessage), "** Lead Head Admin %s: %s", GetPlayerNameEx(playerid), params);
			else if(PlayerInfo[playerid][pAdmin] == 7) format(szMessage, sizeof(szMessage), "** Executive Admin %s: %s", GetPlayerNameEx(playerid), params);
			else if(PlayerInfo[playerid][pAdmin] == 8) format(szMessage, sizeof(szMessage), "** Founder %s: %s", GetPlayerNameEx(playerid), params);
			else if(PlayerInfo[playerid][pHelper] == 1) format(szMessage, sizeof(szMessage), "** Helper %s: %s", GetPlayerNameEx(playerid), params);
			else if(PlayerInfo[playerid][pHelper] == 2) format(szMessage, sizeof(szMessage), "** Junior Helper %s: %s", GetPlayerNameEx(playerid), params);
			else if(PlayerInfo[playerid][pHelper] == 3) format(szMessage, sizeof(szMessage), "** Senior Helper %s: %s", GetPlayerNameEx(playerid), params);
			else if(PlayerInfo[playerid][pHelper] >= 4) format(szMessage, sizeof(szMessage), "** Chief Helper %s: %s", GetPlayerNameEx(playerid), params);
			else if(PlayerInfo[playerid][pAdmin] == 1)
			{
				if(PlayerInfo[playerid][pSMod] != 0) format(szMessage, sizeof(szMessage), "** Senior Moderator %s: %s", GetPlayerNameEx(playerid), params);
				else format(szMessage, sizeof(szMessage), "** Server Moderator %s: %s", GetPlayerNameEx(playerid), params);
			}
			else if(PlayerInfo[playerid][pDonateRank] == 5) format(szMessage, sizeof(szMessage), "** VIP Moderator %s: %s", GetPlayerNameEx(playerid), params);
			else if(PlayerInfo[playerid][pWatchdog] == 1) format(szMessage, sizeof(szMessage), "** Watchdog %s: %s", GetPlayerNameEx(playerid), params);
			else format(szMessage, sizeof(szMessage), "** Undefined Admin (%d) %s: %s", PlayerInfo[playerid][pAdmin], GetPlayerNameEx(playerid), params);

			SendAdvisorMessage(COLOR_COMBINEDCHAT, szMessage);
			Log("logs/staffchat.log", szMessage);
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /staff [chat]");
	}
	return 1;
}



CMD:editcarspawn(playerid, params[])
{
    if(PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai chu so huu dai ly do.");
	}
	else if(Businesses[PlayerInfo[playerid][pBusiness]][bType] != BUSINESS_TYPE_NEWCARDEALERSHIP && Businesses[PlayerInfo[playerid][pBusiness]][bType] != BUSINESS_TYPE_OLDCARDEALERSHIP) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai chu so huu cua dai ly ban xe.");
	}
	else if(!IsPlayerInRangeOfPoint(playerid, 20.0, Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][0], Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][1], Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][2])) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban can dung o vi tri loi vao.");
	}
	else if(PlayerInfo[playerid][pBusinessRank] < 5) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du rank de chinh sua phuong tien.");
	}
	else {
		new Float: Positionsz[4];
		GetPlayerPos(playerid, Positionsz[0], Positionsz[1], Positionsz[2]);
		GetPlayerFacingAngle(playerid, Positionsz[3]);
		Businesses[PlayerInfo[playerid][pBusiness]][bPurchaseX] = Positionsz[0];
		Businesses[PlayerInfo[playerid][pBusiness]][bPurchaseY] = Positionsz[1];
		Businesses[PlayerInfo[playerid][pBusiness]][bPurchaseZ] = Positionsz[2];
		Businesses[PlayerInfo[playerid][pBusiness]][bPurchaseAngle] = Positionsz[3];
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da di chuyen dia diem mua xe.");
		SaveDealershipSpawn(PlayerInfo[playerid][pBusiness]);
	}
	return 1;
}

CMD:entrancefee(playerid, params[])
{
    if(PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID) {
		return SendClientMessageEx(playerid, COLOR_GREY, "You don't own a business.");
	}
	else if(Businesses[PlayerInfo[playerid][pBusiness]][bType] != BUSINESS_TYPE_GYM) {
		return SendClientMessageEx(playerid, COLOR_GREY, "You don't own a gym.");
	}
	else if(!IsPlayerInRangeOfPoint(playerid, 5.0, Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][0], Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][1], Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][2])) {
		return SendClientMessageEx(playerid, COLOR_GREY, "You need to be standing near the gym entrance.");
	}
	else {
		new amount;
		if(sscanf(params, "d", amount)) {
			return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /entrancefee [Price]");
		}
		else if(amount < 0 || amount > 10000) {
			return SendClientMessageEx(playerid, COLOR_GREY, "The price can't be set the price below $0 and above $10,000.");
		}

		else {
			new string[128];
			Businesses[PlayerInfo[playerid][pBusiness]][bGymEntryFee] = amount;
			format(string, sizeof(string), "You have set the gym entry fee to $%i.", number_format(amount));
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			RefreshBusinessPickup(PlayerInfo[playerid][pBusiness]);
			SaveBusiness(PlayerInfo[playerid][pBusiness]);
		}
	}
	return 1;
}

CMD:copxe(playerid, params[])
{
	 if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
     {
        new vehicleid = GetPlayerVehicleID(playerid);
        if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510)
        {
            return SendClientMessageEx(playerid,COLOR_WHITE,"Lenh nay khong the duoc su dung trong chiec xe nay.");
        }
            SetVehicleTrunk(vehicleid, playerid);
        }
        else if(!IsPlayerInAnyVehicle(playerid))
        {
            new closestcar = GetClosestCar(playerid);
             if(IsPlayerInRangeOfVehicle(playerid, closestcar, 5.0))
            {
               if(GetVehicleModel(closestcar) == 481 || GetVehicleModel(closestcar) == 509 || GetVehicleModel(closestcar) == 510)
               {
                    return SendClientMessageEx(playerid,COLOR_WHITE,"Lenh nay khong the duoc su dung trong chiec xe nay.");
               }
                SetVehicleTrunk(closestcar, playerid);
        }
    }
    return 1;
}

CMD:editcarprice(playerid, params[])
{
    if(PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai chu so huu.");
	}
	else if(Businesses[PlayerInfo[playerid][pBusiness]][bType] != BUSINESS_TYPE_NEWCARDEALERSHIP && Businesses[PlayerInfo[playerid][pBusiness]][bType] != BUSINESS_TYPE_OLDCARDEALERSHIP) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai chu so huu cua dai ly ban xe.");
	}
	else if(!IsPlayerInRangeOfPoint(playerid, 5.0, Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][0], Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][1], Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][2])) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban can dung gan dai ly.");
	}
	else if(PlayerInfo[playerid][pBusinessRank] < Businesses[PlayerInfo[playerid][pBusiness]][bMinSupplyRank]) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du rank de chinh sua gia phuong tien.");
	}
	else {
		new vehicleid, amount;
		if(sscanf(params, "dd", vehicleid, amount)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editcarprice [VehicleID] [Price]");
		}
		else if(PlayerInfo[playerid][pBusiness] != GetCarBusiness(vehicleid)) {
			SendClientMessageEx(playerid, COLOR_GREY, "Chiec xe do khong phai cua dai ly xe.");
		}
		else if(amount < 0) {
			SendClientMessageEx(playerid, COLOR_GREY, "Gia phuong tien khong the duoi 0");
		}
		else {

 			new
				iSlot = GetBusinessCarSlot(vehicleid),
				Message[1280];

			Businesses[PlayerInfo[playerid][pBusiness]][bPrice][iSlot] = amount;
			format(Message, sizeof(Message), "{ff3300}SHOP XE{FFFFFF}\n{00b33a}%s{FFFFFF} Hien dang ban\nGia ban hien tai: {00b33a}$%s{FFFFFF}.",GetVehicleName(Businesses[PlayerInfo[playerid][pBusiness]][bVehID][iSlot]), number_format(Businesses[PlayerInfo[playerid][pBusiness]][bPrice][iSlot]));
            UpdateDynamic3DTextLabelText(Businesses[PlayerInfo[playerid][pBusiness]][bVehicleLabel][iSlot], COLOR_LIGHTBLUE, Message);
			format(Message, sizeof(Message), "Phuong tien %s gia da duoc thay doi thanh $%s", GetVehicleName(vehicleid), number_format(amount));
			SendClientMessageEx(playerid, COLOR_WHITE, Message);
			SaveDealershipVehicle(PlayerInfo[playerid][pBusiness], iSlot);
		}
	}
	return 1;
}

CMD:quitfamily(playerid, params[]) {
	return cmd_quitgang(playerid, params);
}

CMD:diminutone(playerid, params[]) {
	PlayerInfo[playerid][pGang] = 0;
	return;
}

CMD:quitgang(playerid, params[])
{
    if(PlayerInfo[playerid][pFMember] != INVALID_FAMILY_ID)
	{
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da roi khoi Family,Bay gio ban la nguoi dan.");
		new string[128], file[32], month, day, year;
		getdate(year,month,day);
		format(string, sizeof(string), "%s da roi khoi %s rank %i", GetPlayerNameEx(playerid), FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyName], PlayerInfo[playerid][pRank]);
		format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", PlayerInfo[playerid][pFMember], year, month, day);
		Log(file, string);
		PlayerInfo[playerid][pFMember] = INVALID_FAMILY_ID;
		PlayerInfo[playerid][pRank] = 0;
		PlayerInfo[playerid][pDivision] = -1;
		if(!IsValidSkin(GetPlayerSkin(playerid)))
		{
		    new rand = random(sizeof(CIV));
			SetPlayerSkin(playerid,CIV[rand]);
			PlayerInfo[playerid][pModel] = CIV[rand];
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong family.");
	}
	return 1;
}

CMD:warrant(playerid, params[])
{
	if(!IsAJudge(playerid))
	{
  		SendClientMessageEx(playerid, COLOR_GRAD1, "You are not part of the Judicial System!");
  		return 1;
	}
	if(PlayerInfo[playerid][pRank] < 3)
	{
  		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 3+ can do this.");
  		return 1;
	}

	new string[128], crime[64], giveplayerid;
	if(sscanf(params, "us[64]", giveplayerid, crime)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /warrant [player] [crime]");

	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "You can't place warrants on yourself!");
	if(IsPlayerConnected(giveplayerid))
	{
		if(!isnull(PlayerInfo[giveplayerid][pWarrant])) return SendClientMessageEx(playerid, COLOR_GRAD5, "That person has active warrants already.");
		format(PlayerInfo[giveplayerid][pWarrant], 64, crime);
		format(string, sizeof(string), "You are hereby commanded to apprehend and present to the court %s to answer the charges of:", GetPlayerNameEx(giveplayerid));
		SendGroupMessage(1, DEPTRADIO, string);
		format(string, sizeof(string), "%s", crime);
		SendGroupMessage(1, DEPTRADIO, string);
		return 1;
	}
	return 1;
}

CMD:warrantwd(playerid, params[])
{
    if(!IsAJudge(playerid))
	{
  		SendClientMessageEx(playerid, COLOR_GRAD1, "You are not part of the Judicial System!");
  		return 1;
 	}
	if(PlayerInfo[playerid][pMember] < 3)
	{
  		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 3+ can do this.");
  		return 1;
  	}

  	new string[128], giveplayerid;
  	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /warrantwd [player]");

	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "You can't remove warrants on yourself!");
	if(IsPlayerConnected(giveplayerid))
	{
 		if(strlen(PlayerInfo[giveplayerid][pWarrant]) == 0) return SendClientMessageEx(playerid, COLOR_GRAD5, "That person doesn't have any active warrants.");
		format(PlayerInfo[giveplayerid][pWarrant], 128, "");
		format(string, sizeof(string), "You have successfully recalled %s's warrant.", GetPlayerNameEx(giveplayerid));
  		SendClientMessageEx(playerid, COLOR_GRAD2, string);
		return 1;
	}
	return 1;
}

CMD:warrantarrest(playerid, params[])
{
    new string[256];

    if(IsACop(playerid))
	{
	    if(JudgeOnlineCheck() == 0) return SendClientMessageEx(playerid, COLOR_GRAD4, "Phai co it nhat mot tham pham truc tuyen de lam dieu nay!");
        if(!IsAtArrestPoint(playerid, 3))
		{
  			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o diem bat giu.");
	    	return 1;
		}

		new suspect = GetClosestPlayer(playerid);
		if(IsPlayerConnected(suspect))
		{
			if(ProxDetectorS(5.0, playerid,suspect))
			{
				if(strlen(PlayerInfo[suspect][pWarrant]) < 1)
				{
	   				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do phai co hoat dong dang thuc hien.");
				    return 1;
				}
				format(string, sizeof(string), "* Ban da bi bat %s!", GetPlayerNameEx(suspect));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				ResetPlayerWeaponsEx(suspect);
				format(string, sizeof(string), "<< Bao cao %s da duoc gui cho tham phan phien toa boi %s >>", GetPlayerNameEx(suspect), GetPlayerNameEx(playerid));
				SendGroupMessage(6, DEPTRADIO, string);
				SetPlayerInterior(suspect, 1);
				PlayerInfo[suspect][pInt] = 1;
				SetPlayerVirtualWorld(suspect, 0);
				PlayerInfo[suspect][pVW] = 0;
				new rand = random(sizeof(WarrantJail));
				SetPlayerFacingAngle(suspect, 0);
				SetPlayerPos(suspect, WarrantJail[rand][0], WarrantJail[rand][1], WarrantJail[rand][2]);
				if(rand != 0) courtjail[suspect] = 2;
				else courtjail[suspect] = 1;
				SetCameraBehindPlayer(suspect);
				DeletePVar(suspect, "IsFrozen");
				PlayerCuffed[suspect] = 0;
				DeletePVar(suspect, "PlayerCuffed");
				PlayerCuffedTime[suspect] = 0;
				PhoneOnline[suspect] = 1;
				PlayerInfo[suspect][pArrested] += 1;
				SetPlayerFree(suspect,playerid, "duoc lenh bat giu");
				PlayerInfo[suspect][pWantedLevel] = 0;
				SetPlayerToTeamColor(suspect);
				SetPlayerWantedLevel(suspect, 0);
				WantLawyer[suspect] = 1;
				ClearAnimations(suspect);
				PlayerInfo[suspect][pBeingSentenced] = 60;
				SetPlayerColor(suspect, SHITTY_JUDICIALSHITHOTCH);
				SendClientMessageEx(suspect, COLOR_LIGHTBLUE, "Ban da bi bat va cho duoc xet xu, hay doi mot phien toa xet xu.");
				Player_StreamPrep(suspect, WarrantJail[rand][0], WarrantJail[rand][1], WarrantJail[rand][2], FREEZE_TIME);

			}
		}
		else
		{
  			SendClientMessageEx(playerid, COLOR_GREY, "   Khong o gan de bat giu.");
	    	return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban khong phai nhan vien thuc thi phap luat!");
   		return 1;
	}
	return 1;
}

CMD:adjourn(playerid, params[])
{
	new string[128], giveplayerid;

    if(!IsAJudge(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "You are not part of the Judicial System!");
	if(PlayerInfo[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 3+ can do this.");
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /adjourn [player]");
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
	if(IsPlayerConnected(giveplayerid))
	{
	    if(PlayerInfo[giveplayerid][pBeingSentenced])
	    {
	    	PlayerInfo[giveplayerid][pBeingSentenced] = 0;
	    	TogglePlayerControllable(giveplayerid, 1);
	    	DeletePVar(giveplayerid, "IsFrozen");
			PhoneOnline[giveplayerid] = 0;
			format(PlayerInfo[giveplayerid][pWarrant], 128, "");
	    	format(string, sizeof(string), "You have released %s from the courtroom.", GetPlayerNameEx(giveplayerid));
	    	SendClientMessageEx(playerid, COLOR_WHITE, string);
	    	format(string, sizeof(string), "%s has released you from the courtroom, you can now leave.", GetPlayerNameEx(playerid));
	    	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "The person needs to be on the courtroom being sentenced");
	}
	return 1;
}

CMD:sentence(playerid, params[]) {

	new giveplayerid;

    if(!IsAJudge(playerid)) {
		SendClientMessageEx(playerid, COLOR_GRAD1, "You are not part of the Judicial System!");
	}
	else if(PlayerInfo[playerid][pRank] < 3) {
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 3+ can do this.");
	}
	else if(sscanf(params, "u", giveplayerid)) {
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /sentence [player]");
	}
	else if(IsPlayerConnected(giveplayerid)) {
		if(giveplayerid == playerid) {
			SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
		}
 		else if(PlayerInfo[giveplayerid][pBeingSentenced]) {
			PlayerInfo[giveplayerid][pBeingSentenced] = 0;
	    	TogglePlayerControllable(giveplayerid, 0);
	    	SetPVarInt(giveplayerid, "IsFrozen", 1);
			PhoneOnline[giveplayerid] = 1;
			PlayerInfo[giveplayerid][pWarrant][0] = 0;
			SetPlayerPos(giveplayerid, 1384.0507,-1688.8254,13.5341);
			SetPlayerInterior(giveplayerid, 0);
			PlayerInfo[giveplayerid][pInt] = 0;
			SetPlayerVirtualWorld(giveplayerid, 0);
			PlayerInfo[giveplayerid][pVW] = 0;
			new string[58 + MAX_PLAYER_NAME];
  			format(string, sizeof(string), "You have released %s from the courtroom.", GetPlayerNameEx(giveplayerid));
    		SendClientMessageEx(playerid, COLOR_WHITE, string);
	    	format(string, sizeof(string), "%s has released you from the courtroom, you can now leave.", GetPlayerNameEx(playerid));
	    	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "The person needs to be in the courtroom being sentenced.");
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	return 1;
}

CMD:trial(playerid, params[])
{
	new string[128], giveplayerid;

    if(!IsAJudge(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "You are not part of the Judicial System!");
	if(PlayerInfo[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 3+ can do this.");
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /trial [player]");
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
	if(IsPlayerConnected(giveplayerid))
	{
	    if(PlayerInfo[giveplayerid][pBeingSentenced])
	    {
	    	PlayerInfo[giveplayerid][pBeingSentenced] += 10;
	    	format(string, sizeof(string), "You have extended %s's courtroom time by 10 minutes, courtroom time: %d", GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pBeingSentenced]);
	    	SendClientMessageEx(playerid, COLOR_WHITE, string);
	    	format(string, sizeof(string), "%s has extended your courtroom time by 10 minutes, courtroom time: %d", GetPlayerNameEx(playerid), PlayerInfo[giveplayerid][pBeingSentenced]);
	    	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "The person needs to be in the courtroom being sentenced");
	}
	return 1;
}

CMD:subpoena(playerid, params[])
{
	new string[128], dates[32], message[64], giveplayerid;

    if(!IsAJudge(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "You are not part of the Judicial System!");
	if(PlayerInfo[playerid][pRank] < 1) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 1+ can do this.");
	if(sscanf(params, "us[32]s[64]", giveplayerid, dates, message)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /subpoena [player] [date] [message]");
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
	if(IsPlayerConnected(giveplayerid))
	{
	    SendClientMessageEx(giveplayerid, COLOR_WHITE, "|___________ Important Message from the Courts ___________|");
	    format(string, sizeof(string), "You have been summoned for a Court Appearance on the day of %s for the following reason(s): %s", dates, message);
		SendClientMessageEx(giveplayerid, COLOR_YELLOW, string);
		SendClientMessageEx(giveplayerid, COLOR_WHITE, "|_________________________________________________________|");
		format(string, sizeof(string), "You have summoned %s for a Court Appearance", GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:judgejail(playerid, params[])
{
    if(!IsAJudge(playerid))
	{
  		SendClientMessageEx(playerid, COLOR_GRAD1, "You are not part of the Judicial System!");
  		return 1;
	}
	if(PlayerInfo[playerid][pRank] < 3)
	{
  		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 3+ can do this.");
  		return 1;
	}

	new string[128], giveplayerid, jailtime, reason[64];
	if(sscanf(params, "uds[64]", giveplayerid, jailtime, reason)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /judgejail [player] [time (minutes)] [reason]");

	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
	if(IsPlayerConnected(giveplayerid))
	{
		if(!PlayerInfo[giveplayerid][pBeingSentenced]) return SendClientMessageEx(playerid, COLOR_GRAD5, "That person isn't being sentenced!");
		if(jailtime < 0)
		{
			return SendClientMessageEx(playerid, COLOR_GRAD5, "Sentence must be at least 1 minute!");
		}
		if(jailtime > 360)
		{
			return SendClientMessageEx(playerid, COLOR_GRAD5, "Maximum sentence is 6 Hours / 360 Minutes");
		}
		PlayerInfo[giveplayerid][pJudgeJailType] = 1;
		PlayerInfo[giveplayerid][pJudgeJailTime] = jailtime*60;
		format(string, sizeof(string), "You have sentenced %s to fulfill %d minutes in jail, reason: %s", GetPlayerNameEx(giveplayerid), jailtime, reason);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "You have been sentenced to fulfill %d minutes in jail boi %s, ly do: %s", jailtime, GetPlayerNameEx(playerid), reason);
		SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		if(IsACop(giveplayerid))
		{
		    SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE,"* You have been auto-removed from your faction by being sentenced to jail, you are now a civilian again.");
			PlayerInfo[giveplayerid][pMember] = INVALID_GROUP_ID;
			PlayerInfo[giveplayerid][pLeader] = INVALID_GROUP_ID;
			PlayerInfo[giveplayerid][pRank] = INVALID_RANK;
			PlayerInfo[giveplayerid][pDuty] = 0;
			if(!IsValidSkin(GetPlayerSkin(giveplayerid)))
			{
			    new rand = random(sizeof(CIV));
				SetPlayerSkin(giveplayerid,CIV[rand]);
				PlayerInfo[giveplayerid][pModel] = CIV[rand];
			}
			player_remove_vip_toys(giveplayerid);
			SetPlayerToTeamColor(giveplayerid);
			pTazer{giveplayerid} = 0;
		}
	}
	return 1;
}

CMD:judgeprison(playerid, params[])
{
    if(!IsAJudge(playerid))
	{
  		SendClientMessageEx(playerid, COLOR_GRAD1, "You are not part of the Judicial System!");
  		return 1;
	}
	if(PlayerInfo[playerid][pRank] < 3)
	{
  		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 3+ can do this.");
  		return 1;
	}

	new string[128], giveplayerid, jailtime, reason[64];
	if(sscanf(params, "uds[64]", giveplayerid, jailtime, reason)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /judgeprison [player] [time (mins)] [reason]");

	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
	if(IsPlayerConnected(giveplayerid))
	{
	    if(!PlayerInfo[giveplayerid][pBeingSentenced]) return SendClientMessageEx(playerid, COLOR_GRAD5, "That person isn't being sentenced!");
		if(jailtime < 0)
		{
			return SendClientMessageEx(playerid, COLOR_GRAD5, "Sentence must be at least 1 minute!");
		}
		if(jailtime > 360)
		{
			return SendClientMessageEx(playerid, COLOR_GRAD5, "Maximum sentence is 6 Hours / 360 Minutes");
		}
		PlayerInfo[giveplayerid][pJudgeJailType] = 2;
		PlayerInfo[giveplayerid][pJudgeJailTime] = jailtime*60;
		format(string, sizeof(string), "You have sentenced %s to fulfill %d minutes in prison, reason: %s", GetPlayerNameEx(giveplayerid), jailtime, reason);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "You have been sentenced to fulfill %d minutes in prison boi %s, ly do: %s", jailtime, GetPlayerNameEx(playerid), reason);
		SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		if(IsACop(giveplayerid))
		{
		    SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE,"* You have been auto-removed from your faction by being sentenced to jail, you are now a civilian again.");
			PlayerInfo[giveplayerid][pMember] = INVALID_GROUP_ID;
			PlayerInfo[giveplayerid][pLeader] = INVALID_GROUP_ID;
			PlayerInfo[giveplayerid][pRank] = INVALID_RANK;
			PlayerInfo[giveplayerid][pDuty] = 0;
			if(!IsValidSkin(GetPlayerSkin(giveplayerid)))
			{
			    new rand = random(sizeof(CIV));
				SetPlayerSkin(giveplayerid,CIV[rand]);
				PlayerInfo[giveplayerid][pModel] = CIV[rand];
			}
			player_remove_vip_toys(giveplayerid);
			SetPlayerToTeamColor(giveplayerid);
   			pTazer{giveplayerid} = 0;
		}
	}
	return 1;
}

CMD:judgefine(playerid, params[])
{
    if(!IsAJudge(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "You are not part of the Judicial System!");
  		return 1;
	}
	if(PlayerInfo[playerid][pRank] < 3)
	{
  		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 3+ can do this.");
  		return 1;
	}

	new giveplayerid, judgefine, reason[64], totalwealth;

	if(sscanf(params, "uds[64]", giveplayerid, judgefine, reason)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /judgefine [player] [amount] [reason]");
	totalwealth = PlayerInfo[giveplayerid][pCash] + PlayerInfo[giveplayerid][pAccount];
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
	if(!(1 <= judgefine <= 2000000)) return SendClientMessageEx(playerid, COLOR_GREY, "Fine amount cannot be lower than $1 or higher than $2,000,000!");
	if(totalwealth < 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "That person is already in debt - contact an administrator.");
	if(IsPlayerConnected(giveplayerid))
	{
	    if(!PlayerInfo[giveplayerid][pBeingSentenced]) return SendClientMessageEx(playerid, COLOR_GRAD5, "That person isn't being sentenced!");
		SetPVarInt(playerid, "judgefine", judgefine);
		SetPVarInt(playerid, "jfined", giveplayerid);
		SetPVarString(playerid, "jreason", reason);
		Group_ListGroups(playerid, DIALOG_JFINECONFIRM);
	}
	return 1;
}

CMD:probation(playerid, params[])
{
    if(!IsAJudge(playerid))
	{
        SendClientMessageEx(playerid, COLOR_GRAD1, "You are not part of the Judicial System!");
        return 1;
    }
    if(PlayerInfo[playerid][pRank] < 3)
	{
        SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay - only rank 3+ can do this.");
        return 1;
    }

	new string[128], giveplayerid, probtime, reason[64];
	if(sscanf(params, "uds[64]", giveplayerid, probtime, reason)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /probation [player] [time 1-360 Minutes] [reason and terms]");

    if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay voi chinh minh!");
    if(IsPlayerConnected(giveplayerid))
	{
        if(!PlayerInfo[giveplayerid][pBeingSentenced]) return SendClientMessageEx(playerid, COLOR_GRAD5, "That person isn't being sentenced!");
        if(probtime < 1 && probtime > 360) return SendClientMessageEx(playerid, COLOR_GRAD5, "Time cannot be lower 1 minute or higher than 360 minutes!");
        PlayerInfo[giveplayerid][pProbationTime] = probtime;
        format(string, sizeof(string), "You have set %s in probation for %d minutes, reason and terms: %s", GetPlayerNameEx(giveplayerid), probtime, reason);
        SendClientMessageEx(playerid, COLOR_WHITE, string);
        format(string, sizeof(string), "You have been set in probation for %d minutes boi %s, ly do and terms: %s", probtime, GetPlayerNameEx(playerid), reason);
        SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
    }
    return 1;
}

CMD:guisec(playerid, params[]) {
	return cmd_writecheck(playerid, params);
}

CMD:writecheck(playerid, params[])
{
	new string[128], giveplayerid, monies, reason[64];
	if(sscanf(params, "uds[64]", giveplayerid, monies, reason)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /guisec [ID hoac Ten nguoi choi] [So tien] [Loi nhan]");

    if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
    if(monies > 1000 && PlayerInfo[playerid][pLevel] < 3)
	{
        SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban phai dat Level 3 de viet 1 tam sec co gia tri lon hon $1000 !");
        return 1;
    }
    if(monies < 1 || monies > 10000000)
	{
        SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban khong the viet mot tam sec duoi $1 hoac qua $10.000,000 !");
        return 1;
    }
	if(PlayerInfo[playerid][pCash] < 0 || PlayerInfo[playerid][pAccount] < 0)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "So tien trong nguoi hoac so tien trong ngan hang cua ban dang bi am!");
	}
    if(PlayerInfo[playerid][pChecks] == 0)
	{
        SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban phai co mot to ngan phieu de viet sec !");
        return 1;
    }
    if(gettime()-GetPVarInt(playerid, "LastTransaction") < 10) return SendClientMessageEx(playerid, COLOR_GRAD2, "10 giay cho moi giao dich thanh cong, xin vui long doi!");
    if(strlen(reason) > 64) return SendClientMessageEx(playerid, COLOR_GRAD1, "Kiem tra lai chi tiet, tat ca khong dai hon 64 ki tu cho phep.");
    if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the viet mot tam sec cho chinh minh"); return 1; }
    if(ProxDetectorS(5.0, playerid, giveplayerid))
	{
     	new playermoney = PlayerInfo[playerid][pAccount];
      	if(monies > 0 && playermoney >= monies)
		{
			GivePlayerCashEx(playerid, TYPE_BANK, -monies);
			GivePlayerCashEx(giveplayerid, TYPE_BANK, monies);
			/*PlayerInfo[playerid][pAccount] = PlayerInfo[playerid][pAccount] - monies;
     		PlayerInfo[giveplayerid][pCheckCash] = PlayerInfo[giveplayerid][pCheckCash]+monies;*/
       		if(PlayerInfo[playerid][pDonateRank] == 0)
			{
   				new fee = (monies*8)/100;
       			GivePlayerCash(playerid, (0 - fee));
          		format(string, sizeof(string), "   Ban da viet tam sex tri gia $%d cho %s (loi nhan %s) va da bi tru thue VAT la 8 phan tram.",monies,GetPlayerNameEx(giveplayerid),reason);
            	SendClientMessageEx(playerid, COLOR_GRAD1, string);
             	PlayerInfo[playerid][pChecks]--;
              	format(string, sizeof(string), "   Bay gio ban co %d vui long kiem tra lai.",PlayerInfo[playerid][pChecks]);
               	SendClientMessageEx(playerid, COLOR_GRAD1, string);
      		}
          	else
			{
   				format(string, sizeof(string), "   Ban da viet tam sex tri gia $%d cho %s (loi nhan %s) va da bi tru thue VAT la 8 phan tram..",monies,GetPlayerNameEx(giveplayerid),reason);
       			SendClientMessageEx(playerid, COLOR_GRAD1, string);
          		PlayerInfo[playerid][pChecks]--;
            	format(string, sizeof(string), "   Bay gio ban co %d vui long kiem tra lai.",PlayerInfo[playerid][pChecks]);
             	SendClientMessageEx(playerid, COLOR_GRAD1, string);
			}
   			format(string, sizeof(string), "   Ban da nhan duoc mot tam sec $%d tu %s loi nhan: %s", monies,GetPlayerNameEx(playerid),reason);
      		SendClientMessageEx(giveplayerid, COLOR_GRAD1, string);
        	format(string, sizeof(string), "* %s lay tu trong tui ao ra mot to ngan phieu, viet thong tin vao to sec va gui cho %s.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
         	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
          	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
           	PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
           	SetPVarInt(playerid, "LastTransaction", gettime());

           	/*OnPlayerStatsUpdate(playerid);
			OnPlayerStatsUpdate(giveplayerid);*/

			new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
 			format(string, sizeof(string), "[CHECK] %s (IP:%s) da dua $%s cho %s (IP:%s)", GetPlayerNameEx(playerid), ip, number_format(monies), GetPlayerNameEx(giveplayerid), ipex);
  			Log("logs/pay.log", string);
		}
  		else
		{
  			SendClientMessageEx(playerid, COLOR_GRAD1, "   So tien giao dich khong hop le, hoac ban khong co du tien de giao dich!");
     	}
	}
 	else
	{
 		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong o gan ban.");
   	}
    return 1;
}

CMD:bug(playerid, params[])
{
	if (PlayerInfo[playerid][pMember] != INVALID_GROUP_ID && PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBugAccess])
	{
        new
			iTargetID;

        if(sscanf(params, "u", iTargetID)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /bug [player]");
		}
        else if(PlayerInfo[iTargetID][pAdmin] >= 2) {
			SendClientMessageEx(playerid, COLOR_GREY, "You cannot place bugs on admins.");
		}
		else if(GetPVarInt(iTargetID, "AdvisorDuty") == 1) {
    		SendClientMessageEx(playerid, COLOR_GREY, "You cannot place bugs on advisors while they are on duty.");
		}
  		else if(PlayerInfo[iTargetID][pBugged] != INVALID_GROUP_ID) {

			new
				szMessage[32 + MAX_PLAYER_NAME];

    		PlayerInfo[iTargetID][pBugged] = INVALID_GROUP_ID;
     		format(szMessage,sizeof(szMessage),"The bug on %s has been disabled.", GetPlayerNameEx(iTargetID));
       		SendClientMessageEx(playerid, COLOR_GRAD1, szMessage);
		}
		else if(ProxDetectorS(4.0, playerid, iTargetID)) {

			new
				szMessage[28 + MAX_PLAYER_NAME];

			PlayerInfo[iTargetID][pBugged] = PlayerInfo[playerid][pMember];
	    	format(szMessage,sizeof(szMessage),"You have placed a bug on %s.",GetPlayerNameEx(iTargetID));
		    SendClientMessageEx(playerid, COLOR_GRAD1, szMessage);
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "You need to be close to the person.");
	} else SendClientMessageEx(playerid, COLOR_GREY, "You do not have access to this radio frequency.");
	return 1;
}


CMD:checkrequestcount(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 4 || PlayerInfo[playerid][pHelper] >= 3 || PlayerInfo[playerid][pPR] > 0)
	{
		new string[128], adminname[MAX_PLAYER_NAME], tdate[11];
		if(sscanf(params, "s[24]s[11]", adminname, tdate)) return SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /checkrequestcount [advisor name] [date (YYYY-MM-DD)]");
		new giveplayerid = ReturnUser(adminname);
		if(IsPlayerConnected(giveplayerid))
		{
			format(string, sizeof(string), "SELECT SUM(count) FROM `tokens_request` WHERE `playerid` = %d AND `date` = '%s'", GetPlayerSQLId(giveplayerid), tdate);
			mysql_function_query(MainPipeline, string, true, "QueryCheckCountFinish", "issi", playerid, GetPlayerNameEx(giveplayerid), tdate, 2);
			format(string, sizeof(string), "SELECT `count`, `hour` FROM `tokens_request` WHERE `playerid` = %d AND `date` = '%s' ORDER BY `hour` ASC", GetPlayerSQLId(giveplayerid), tdate);
			mysql_function_query(MainPipeline, string, true, "QueryCheckCountFinish", "issi", playerid, GetPlayerNameEx(giveplayerid), tdate, 3);
		}
		else
		{
			new tmpName[MAX_PLAYER_NAME];
			mysql_escape_string(adminname, tmpName);
			format(string, sizeof(string), "SELECT `id`, `Username` FROM `accounts` WHERE `Username` = '%s'", tmpName);
			mysql_function_query(MainPipeline, string, true, "QueryUsernameCheck", "isi", playerid, tdate, 1);
		}
    }
    return 1;
}

CMD:carkeys(playerid, params[])
{
    new vstring[4096], iValidVehicles;
	for(new i=0; i<MAX_PLAYERVEHICLES; i++)
	{
	    if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID) {
	        if(PlayerVehicleInfo[playerid][i][pvAllowedPlayerId] != INVALID_PLAYER_ID) {
				format(vstring, sizeof(vstring), "%s\n%s | Keys: %s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], GetPlayerNameEx(PlayerVehicleInfo[playerid][i][pvAllowedPlayerId])), ++iValidVehicles;
			}
			else {
                format(vstring, sizeof(vstring), "%s\n%s | Keys: No-one", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);
			}
		}
        else if((PlayerVehicleInfo[playerid][i][pvImpounded] == 1 || PlayerVehicleInfo[playerid][i][pvSpawned] == 0) && PlayerVehicleInfo[playerid][i][pvModelId] != 0) {
            format(vstring, sizeof(vstring), "%s\n%s | Keys: Unavailable", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);
		}
        else {
			format(vstring, sizeof(vstring), "%s\nEmpty", vstring);
		}
	}
	if(iValidVehicles != 0)
	{
		ShowPlayerDialog(playerid, REMOVEKEYS, DIALOG_STYLE_LIST, "Please select a vehicle.", vstring, "Remove Keys", "Cancel");
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GRAD2, "You don't have any keys given out.");
	}
	return 1;
}

CMD:sb(playerid, params[]) return cmd_seatbelt(playerid, params);

CMD:seatbelt(playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid) == 0)
	{
        SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lam dieu nay tren xe!");
        return 1;
    }
	new string[60 + MAX_PLAYER_NAME];
    if(IsPlayerInAnyVehicle(playerid) == 1 && Seatbelt[playerid] == 0)
	{
        Seatbelt[playerid] = 1;
        if(IsABike(GetPlayerVehicleID(playerid)))
		{
            format(string, sizeof(string), "{FF8000}** {C2A2DA}%s lay mu bao hiem va doi len dau.", GetPlayerNameEx(playerid));
            SendClientMessageEx(playerid, COLOR_WHITE, "Ban da doi mu bao hiem len dau.");
        }
        else
		{
            format(string, sizeof(string), "{FF8000}** {C2A2DA}%s keo day an toan qua nguoi va khoa lai.", GetPlayerNameEx(playerid));
            SendClientMessageEx(playerid, COLOR_WHITE, "Ban da keo day an toan.");
        }

    }
    else if(IsPlayerInAnyVehicle(playerid) == 1 && Seatbelt[playerid] == 1)
	{
        Seatbelt[playerid] = 0;
        if(IsABike(GetPlayerVehicleID(playerid)))
		{
            format(string, sizeof(string), "{FF8000}** {C2A2DA}%s lay mua bao hiem tu tren dau xuong.", GetPlayerNameEx(playerid));
            SendClientMessageEx(playerid, COLOR_WHITE, "Ban da bo mu bao hiem ra khoi dau.");
        }
        else
		{
            format(string, sizeof(string), "{FF8000}** {C2A2DA}%s mo chot khoa an toan va keo day an toan ra khoi nguoi.", GetPlayerNameEx(playerid));
            SendClientMessageEx(playerid, COLOR_WHITE, "Ban da thao chot day an toan ra khoi nguoi.");
        }
    }
    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    return 1;
}

CMD:cb(playerid, params[]) return cmd_checkbelt(playerid, params);

CMD:checkbelt(playerid, params[])
{
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /checkbelt [player]");

    if(GetPlayerState(giveplayerid) == PLAYER_STATE_ONFOOT)
	{
        SendClientMessageEx(playerid,COLOR_GREY,"Nguoi do khong trong bat ky xe nao!");
        return 1;
    }
    if (ProxDetectorS(9.0, playerid, giveplayerid))
	{
		new string[128];
        new stext[4];
        if(Seatbelt[giveplayerid] == 0) { stext = "off"; }
        else { stext = "on"; }
        if(IsABike(GetPlayerVehicleID(playerid)))
		{
            format(string, sizeof(string), "%s's helmet is currently %s." , GetPlayerNameEx(giveplayerid) , stext);
            SendClientMessageEx(playerid,COLOR_WHITE,string);

            format(string, sizeof(string), "* %s looks at %s, checking to see if they are wearing a helmet.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        else
		{
            format(string, sizeof(string), "%s's seat belt is currently %s." , GetPlayerNameEx(giveplayerid) , stext);
            SendClientMessageEx(playerid,COLOR_WHITE,string);

            format(string, sizeof(string), "* %s peers through the window at %s, checking to see if they are wearing a seatbelt.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
    }
    else { SendClientMessageEx(playerid, COLOR_GREY, "You are not around that player!"); }
    return 1;
}

CMD:duachiakhoa(playerid, params[]) {
	return cmd_givekeys(playerid, params);
}

CMD:givekeys(playerid, params[])
{
	new
		giveplayerid;

    if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /givekeys [Player]");
    if(IsPlayerConnected(giveplayerid))
	{
        if(playerid == giveplayerid) return 1;
        if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
            new
				iValidVehicles,
				vstring[4096];

			for(new i; i < MAX_PLAYERVEHICLES; i++) if(PlayerVehicleInfo[playerid][i][pvModelId] >= 400)
			{
				if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1)
					format(vstring, sizeof(vstring), "%s\n%s (Dang bi thu giu)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

				else if(PlayerVehicleInfo[playerid][i][pvDisabled] == 1)
					format(vstring, sizeof(vstring), "%s\n%s (Khong the su dung)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

				else if(PlayerVehicleInfo[playerid][i][pvSpawned] == 0)
					format(vstring, sizeof(vstring), "%s\n%s (Trong gara)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

				else
					format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]), ++iValidVehicles;
			}
			else strcat(vstring, "\nEmpty");
            if(iValidVehicles != 0)
			{
                GiveKeysTo[playerid] = giveplayerid;
                ShowPlayerDialog(playerid, GIVEKEYS, DIALOG_STYLE_LIST, "Chon mot chiec xe.", vstring, "Dua khoa xe", "Huy bo");
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co phuong tien nao co khoa de dua.");
            }
        }
        else
		{
            SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o gan nguoi can dua khoa.");
        }
    }
    return 1;
}

CMD:capcuu(playerid, params[])
{
	return cmd_deliverpt(playerid, params);
}

CMD:deliverpt(playerid, params[])
{
    if(IsAMedic(playerid))
	{
        if(IsPlayerInAnyVehicle(playerid))
		{
			new string[128], giveplayerid;
		    if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /deliverpt [nguoi choi]");

            new carid = GetPlayerVehicleID(playerid);
            new caridex = GetPlayerVehicleID(giveplayerid);
            if(IsAnAmbulance(carid))
			{
                if(carid == caridex)
				{
                    if(IsAtDeliverPatientPoint(playerid))
					{
                        if(playerid == giveplayerid)
						{
                            SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the tu dua minh vao benh vien!");
                            return 1;
                        }
                        if(GetPVarInt(giveplayerid, "Injured") == 0)
						{
                            return SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi do khong bi thuong!");
                        }
                        if(playerTabbed[giveplayerid] >= 1)
						{
                            SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi choi dang tam dung ket noi, ban khong the cuu.!");
                            return 1;
                        }
                        SetPlayerHealth(giveplayerid, 100);
                        if(GetPVarType(giveplayerid, "STD"))
						{
							DeletePVar(giveplayerid, "STD");
                            SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "* Benh vien da chua tri chi ban khoi STD.!");
                        }
						PlayerTextDrawHide(playerid, NotiEms[playerid]);
                        GivePlayerCash(giveplayerid, -50);
                        Tax += 50;
                        PlayerInfo[playerid][pCash] += 70;
                        KillEMSQueue(giveplayerid);
                        SetPVarInt(giveplayerid, "MedicBill", 0);
                        SendClientMessageEx(giveplayerid, TEAM_CYAN_COLOR, "Hoa don y te cua ban la $50. Chuc mot ngay tot lanh!");
                        format(string,sizeof(string),"Ban nhan duoc $70 cho viec chua tri benh nhan!");
                        SendClientMessageEx(playerid, TEAM_CYAN_COLOR, string);
                        PlayAudioStreamForPlayer(playerid, "http://web.samp-vn.com/vaobv.mp3");
                        SetPlayerPos(giveplayerid, 1179.6940,-1323.3947,14.1821);
                        Streamer_UpdateEx(giveplayerid, 1179.6940,-1323.3947,14.1821);
                        Player_StreamPrep(giveplayerid, 1179.6940,-1323.3947,14.1821,FREEZE_TIME);
                        SetPlayerInterior(giveplayerid, 0);
                        PlayerInfo[giveplayerid][pInt] = 0;
                        PlayerInfo[playerid][pPatientsDelivered]++;
                        format(string, sizeof(string), "Tai xe EMS %s da chuyen giao thanh cong benh nhan %s toi benh vien.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
						SendGroupMessage(3, TEAM_MED_COLOR, string);
						PlayerInfo[giveplayerid][pHydration] = 100;
						new Float:X, Float:Y, Float:Z;
                        GetDynamicObjectPos(Carrier[0], X, Y, Z);
                        if(IsPlayerInRangeOfPoint(playerid, 5.0,1178.0042,-1338.6444,13.9075) || IsPlayerInRangeOfPoint(playerid, 5.0, 1162.6141,-1363.3646,26.6531)) // All Saints
						{
                            SetPlayerVirtualWorld(giveplayerid, 0);
                            PlayerInfo[giveplayerid][pVW] = 0;
                        }
                        else if(IsPlayerInRangeOfPoint(playerid, 5.0,1158.2274,-1324.1265,15.3331) || IsPlayerInRangeOfPoint(playerid, 5.0, 1158.2274,-1324.1265,15.3331)) // County General
					 	{
                            SetPlayerVirtualWorld(giveplayerid, 0);
                            PlayerInfo[giveplayerid][pVW] = 0;
                        }
                        /*else if(IsPlayerInRangeOfPoint(playerid, 5.0,1227.2339,306.4730,19.7028) || IsPlayerInRangeOfPoint(playerid, 5.0, 1233.3384,316.4022,24.7578)) // Montgomery
						{
                            SetPlayerVirtualWorld(giveplayerid, 2);
                            PlayerInfo[giveplayerid][pVW] = 2;
                        }
                        else if(IsPlayerInRangeOfPoint(playerid, 5.0,-339.2989,1055.8138,19.7392) || IsPlayerInRangeOfPoint(playerid, 5.0, -334.1560,1051.4434,26.0125)) // Fort Carson
						{
                            SetPlayerVirtualWorld(giveplayerid, 4);
                            PlayerInfo[giveplayerid][pVW] = 4;
                        }
                        else if(IsPlayerInRangeOfPoint(playerid, 5.0,-2695.5725,639.4147,14.4531) || IsPlayerInRangeOfPoint(playerid, 5.0, -2656.0339,615.2567,66.0938)) // SF
						{
                            SetPlayerVirtualWorld(giveplayerid, 6);
                            PlayerInfo[giveplayerid][pVW] = 6;
                        }
                        else if(IsPlayerInRangeOfPoint(playerid, 250,X, Y, Z))
						{
                            SetPlayerVirtualWorld(giveplayerid, 7);
                            PlayerInfo[giveplayerid][pVW] = 7;
                        }
                        else if(IsPlayerInRangeOfPoint(playerid, 5.0,-1528.814331, 2540.706054, 55.835937)) // El Quebrados
						{
                            SetPlayerVirtualWorld(giveplayerid, 99);
                            PlayerInfo[giveplayerid][pVW] = 99;
                        }
						else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1579.58,1768.88,10.82)) // LV
						{
							SetPlayerVirtualWorld(giveplayerid, 11720);
							PlayerInfo[giveplayerid][pVW] = 11720;
						}
						else if(IsPlayerInRangeOfPoint(playerid, 5.0, 225.3467,1981.8497,17.6406)) // Demorgan
						{
							SetPlayerVirtualWorld(giveplayerid, 13);
							PlayerInfo[giveplayerid][pVW] = 13;
						}
						else if(IsPlayerInRangeOfPoint(playerid, 5.0, -2482.4338,2231.1106,4.8463)) // TR - Bayside
						{
							SetPlayerVirtualWorld(giveplayerid, 14);
							PlayerInfo[giveplayerid][pVW] = 14;
						}*/
                    }
                    else
					{
                        SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o dia diem dua benh nhan vao vien.");
                    }
                }
                else
				{
                    SendClientMessageEx(playerid, COLOR_GRAD2, "Benh nhan phai nam tren xe cua ban.");
                }
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o tren xe FDSA.");
            }
        }
    }
    return 1;
}

CMD:loadpt(playerid, params[])
{
    if(IsAMedic(playerid))
	{
        if(IsPlayerInAnyVehicle(playerid))
		{
            SendClientMessageEx(playerid, COLOR_GREY, "   Khong the su dung khi ban dang tren mot chiec xe!");
            return 1;
        }

        new string[128], giveplayerid, seat;
        if(sscanf(params, "ud", giveplayerid, seat)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /loadpt [Nguoi choi] [ID nghe]");

        if(IsPlayerConnected(giveplayerid))
		{
            if(giveplayerid != INVALID_PLAYER_ID)
			{
                if(!(2 <= seat <= 3))
				{
                    SendClientMessageEx(playerid, COLOR_GRAD1, "ID nghe ngoi khong duoc tren 3 va duoi 2.");
                    return 1;
                }
                if(GetPVarInt(giveplayerid, "Injured") != 1)
				{
                    SendClientMessageEx(playerid, COLOR_GREY, "Benh nhan khong bi thuong, ban khong the dua len xe");
                    return 1;
                }
                if(IsPlayerInAnyVehicle(giveplayerid))
				{
                    SendClientMessageEx(playerid, COLOR_GREY, "Benh nhan do dang tren mot chiec xe, ban khong the dua len xe");
                    return 1;
                }
                if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
                    if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the tai benh nhan!"); return 1; }
                    if(PlayerInfo[giveplayerid][pJailTime] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay voi nguoi choi dang o tu");
                    new carid = gLastCar[playerid];
                    if(IsAnAmbulance(carid))
					{
                        if(IsVehicleOccupied(carid, seat)) {
							SendClientMessageEx(playerid, COLOR_GREY, "Nghe do dang co nguoi dung.");
							return 1;
						}
						if(IsPlayerInRangeOfVehicle(giveplayerid, carid, 10.0) && IsPlayerInRangeOfVehicle(playerid, carid, 10.0)) {
							format(string, sizeof(string), "* Ban da duoc dua len xe cuu thuong boi nhan vien %s.", GetPlayerNameEx(playerid));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Ban da dua benh nhan %s len xe cuu thuong.", GetPlayerNameEx(giveplayerid));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s dua %s len xe cuu thuong.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SetPVarInt(giveplayerid, "EMSAttempt", 3);
							ClearAnimations(giveplayerid);
							IsPlayerEntering{giveplayerid} = true;
							PutPlayerInVehicle(giveplayerid,carid,seat);
							TogglePlayerControllable(giveplayerid, false);
						}
						else SendClientMessageEx(playerid, COLOR_GREY, "Ban va benh nhanh phai dung gan xe cuu thuong.");
                    }
                    else
					{
                        SendClientMessageEx(playerid, COLOR_GRAD2, "Xe gan ban phai la xe cuu thuong!");
                    }
                }
                else
				{
                    SendClientMessageEx(playerid, COLOR_GREY, " Ban khong o gan nguoi hoac xe cua ban!");
                    return 1;
                }
            }
        }
        else
		{
            SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
            return 1;
        }
    }
    else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban khong phai la bac si!");
    }
    return 1;
}

CMD:triage(playerid, params[])
{
    if(IsAMedic(playerid))
	{
 		if(PlayerInfo[playerid][pTriageTime] != 0)
   		{
     		SendClientMessageEx(playerid, COLOR_GREY, "Ban phai doi 2 phut moi co the su  dung lenh nay.");
       		return 1;
	    }

	    new string[128], giveplayerid;
	    if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /triage [player]");

   		if(IsPlayerConnected(giveplayerid))
   		{
    	    if(playerid == giveplayerid) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay voi chinh minh.");
    	    if (ProxDetectorS(5.0, playerid, giveplayerid))
			{
	    	    new Float: health;
	    	    GetPlayerHealth(giveplayerid, health);
	    	    if(health >= 85) SetPlayerHealth(giveplayerid, 100);
				else SetPlayerHealth(giveplayerid, health+15.0);
	    	    format(string, sizeof(string), "* %s ban da cho %s 15 mau.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	    	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[playerid][pTriageTime] = 120;
			}
			else
			{
			    SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
			}
 		}
	}
	return 1;
}

CMD:dmvrelease(playerid, params[]) {
	if(IsACop(playerid) || IsATowman(playerid))
    {
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 833.60, 3.23, 1004.17)) {

			new
				iTargetID;

			if(sscanf(params, "u", iTargetID)) {
				SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /dmvrelease [player]");
			}
			else if(IsPlayerConnected(iTargetID)) {

				new
					vstring[4096],
					iCount,
					pVehSlots = GetPlayerVehicleSlots(iTargetID);

				for(new i; i < pVehSlots; i++) {
					if(PlayerVehicleInfo[iTargetID][i][pvPrice] < 1) PlayerVehicleInfo[iTargetID][i][pvPrice] = 2000000;
					if(PlayerVehicleInfo[iTargetID][i][pvId] > INVALID_PLAYER_VEHICLE_ID) {
						if(PlayerVehicleInfo[iTargetID][i][pvTicket]) {
							format(vstring, sizeof(vstring), "%s\n%s (ve phat - $%i)", vstring, VehicleName[PlayerVehicleInfo[iTargetID][i][pvModelId] - 400], PlayerVehicleInfo[iTargetID][i][pvTicket]);
							++iCount;
						}
						else format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[iTargetID][i][pvModelId] - 400]);
					}
					else if(PlayerVehicleInfo[iTargetID][i][pvImpounded]) {
						format(vstring, sizeof(vstring), "%s\n%s (Dang bi thu giu - $%i de lay xe ra)", vstring, VehicleName[PlayerVehicleInfo[iTargetID][i][pvModelId] - 400], (PlayerVehicleInfo[iTargetID][i][pvPrice] / 20) + PlayerVehicleInfo[iTargetID][i][pvTicket] + (PlayerInfo[iTargetID][pLevel] * 3000));
						++iCount;
					}
					else format(vstring, sizeof(vstring), "%s\nNone", vstring);
				}
				if(iCount) ShowPlayerDialog(playerid, MPSPAYTICKETSCOP, DIALOG_STYLE_LIST, "Vehicles", vstring, "Phong thich", "Huy bo"), SetPVarInt(playerid, "vRel", iTargetID);
				else SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi nay khong co xe nao bi phat hoac da duoc phong thich.");
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o trong diem rut ve phat DMV tai Dillimore (ben trong DMV).");
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
	return 1;
}

CMD:vephatzzzzz(playerid, params[])
{
	new vstring[1024], icount, icountz = GetPlayerVehicleSlots(playerid);
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 2412.2241, 2616.9341, 1045.2081)) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong diem rut ve phat DMV tai CityHall (ben trong DMV).");
	if(PlayerInfo[playerid][pCarLic] == 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "Kiem tra chiec xe thanh cong. Hay tra tien ve phat de lay chiec xe ra.");

	for(new i; i < icountz; i++) {
		if(PlayerVehicleInfo[playerid][i][pvPrice] < 1) PlayerVehicleInfo[playerid][i][pvPrice] = 1000;
		if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID) {
			if(PlayerVehicleInfo[playerid][i][pvTicket]) {
				format(vstring, sizeof(vstring), "%s\n%s (ve phat - $%i)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], PlayerVehicleInfo[playerid][i][pvTicket]);
				++icount;
			}
			else format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);
		}
		else if(PlayerVehicleInfo[playerid][i][pvImpounded]) {
			//format(vstring, sizeof(vstring), "%s\n%s (Dang bi thu giu - $%i de lay xe ra)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], (PlayerVehicleInfo[playerid][i][pvPrice] / 20) + PlayerVehicleInfo[playerid][i][pvTicket] + (PlayerInfo[playerid][pLevel] * 3000));
			format(vstring, sizeof(vstring), "%s\n%s (Dang bi thu giu - $%i de lay xe ra)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], 200);
			++icount;
		}
		else format(vstring, sizeof(vstring), "%s\nKhong co", vstring);
	}
	if(icount) {
		ShowPlayerDialog(playerid, MPSPAYTICKETS, DIALOG_STYLE_LIST, "Phuong tien cua toi", vstring, "Lay xe", "Huy bo");
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD2, "Khong co bat ki ve phat giao thong nao duoc viet.");
	return 1;
}

CMD:vmdc(playerid, params[])
{
    if(IsACop(playerid) || IsATowman(playerid) || PlayerInfo[playerid][pAdmin] >= 2)
    {
        new string[128], giveplayerid;
        if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /vmdc [player]");

   		if(IsPlayerConnected(giveplayerid))
    	{
	        SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
			format(string, sizeof(string), "*** %s' Vehicles  ***", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
	        for(new i=0; i<MAX_PLAYERVEHICLES; i++)
         	{
			    if(PlayerVehicleInfo[giveplayerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
				{
    				format(string, sizeof(string), "Giay to xe: %d | Vehicle Name: %s | Ve phat: $%d.",PlayerVehicleInfo[giveplayerid][i][pvId],GetVehicleName(PlayerVehicleInfo[giveplayerid][i][pvId]),PlayerVehicleInfo[giveplayerid][i][pvTicket]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
	    		}
				else if(PlayerVehicleInfo[giveplayerid][i][pvImpounded])
				{
    				format(string, sizeof(string), "Giay to xe: Voided (tich thu) | Vehicle Name: %s | Ve phat: $%d.",VehicleName[PlayerVehicleInfo[giveplayerid][i][pvModelId]-400],PlayerVehicleInfo[giveplayerid][i][pvTicket]);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
	    		}
	    	}
	    	SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
   		}
    }
	return 1;
}

CMD:vticket(playerid, params[])
{
    if(IsACop(playerid) || IsATowman(playerid))
    {
        if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /vticket [id xe]");

        if(PlayerInfo[playerid][pTicketTime] != 0)
		{
            SendClientMessageEx(playerid, COLOR_GRAD2, "Ban phai doi 1 phut de tiep tuc su dung lenh nay!");
            return 1;
        }

        new Float: x, Float: y, Float: z, vehicleid = strval(params);
        GetVehiclePos(vehicleid, x, y, z);
        if(IsPlayerInRangeOfPoint(playerid, 5.0, x, y, z))
		{
            if(vehicleid != INVALID_VEHICLE_ID)
			{
                foreach(new i: Player)
				{
                    new v = GetPlayerVehicle(i, vehicleid);
                    if(v != -1)
					{
						new string[62 + MAX_PLAYER_NAME];
                        PlayerVehicleInfo[i][v][pvTicket] += 50;
                        PlayerInfo[playerid][pTicketTime] = 60;
                        format(string, sizeof(string), "Ban da viet ve phat $50 cho %s (%s).",GetPlayerNameEx(i), GetVehicleName(PlayerVehicleInfo[i][v][pvId]));
                        SendClientMessageEx(playerid, COLOR_WHITE, string);
                        return 1;
                    }
                }
                SendClientMessageEx(playerid, COLOR_GRAD2, "Chiec xe nay khong co dang ki!");
            }
        }
        else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban phai toi gan chiec xe!");
    }
    return 1;
}

CMD:vcheck(playerid, params[])
{
    if(IsACop(playerid) || IsATowman(playerid) || PlayerInfo[playerid][pAdmin] >= 2)
	{
        new carid = GetPlayerVehicleID(playerid);
        new closestcar = GetClosestCar(playerid, carid);
        if(IsTrailerAttachedToVehicle(carid))
		{
            new carbeingtowed = GetVehicleTrailer(carid);
            new dynveh = DynVeh[carbeingtowed];
			foreach(new i: Player)
			{
                new v = GetPlayerVehicle(i, carbeingtowed);

                if(v != -1)
				{
					new string[78 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Giay to xe: %d | Name: %s | Chu so huu: %s | Ve phat: $%s", carbeingtowed, GetVehicleName(PlayerVehicleInfo[i][v][pvId]), GetPlayerNameEx(i), number_format(PlayerVehicleInfo[i][v][pvTicket]));
                    SendClientMessageEx(playerid, COLOR_WHITE, string);
                    return 1;
                }
            }
            if(dynveh != -1)
			{
			    if(DynVehicleInfo[dynveh][gv_igID] != -1 && DynVehicleInfo[dynveh][gv_ifID] == 0)
			    {
					new string[78 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Giay to xe: %d | Name: %s | Chu so huu: %s | Ve phat: EXEMPT", carbeingtowed, GetVehicleName(carbeingtowed), arrGroupData[DynVehicleInfo[dynveh][gv_igID]][g_szGroupName]);
                    SendClientMessageEx(playerid, COLOR_WHITE, string);
                    return 1;
				}
				else if(DynVehicleInfo[dynveh][gv_igID] == -1 && DynVehicleInfo[dynveh][gv_ifID] != 0)
			    {
					new string[78 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Giay to xe: %d | Name: %s | Chu so huu: %s", carbeingtowed, GetVehicleName(carbeingtowed), FamilyInfo[DynVehicleInfo[dynveh][gv_ifID]][FamilyName]);
                    SendClientMessageEx(playerid, COLOR_WHITE, string);
                    return 1;
				}
            }
            SendClientMessageEx(playerid, COLOR_GRAD2, "Xe nay khong co chu so huu!");
        }
        else if(IsPlayerInRangeOfVehicle(playerid, closestcar, 9.0) && !IsTrailerAttachedToVehicle(carid))
		{
		    new dynveh = DynVeh[closestcar];
            foreach(new i: Player)
			{

                new v = GetPlayerVehicle(i, closestcar);
                if(v != -1)
				{
					new string[78 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Giay to xe: %d | Name: %s | Chu so huu: %s | Ve phat: $%d | Toc do: %.0f MPH", closestcar, GetVehicleName(PlayerVehicleInfo[i][v][pvId]), GetPlayerNameEx(i), PlayerVehicleInfo[i][v][pvTicket],  vehicle_get_speed(closestcar));
                    SendClientMessageEx(playerid, COLOR_WHITE, string);
                    return 1;
                }
            }
            if(dynveh != -1)
			{
			    if(DynVehicleInfo[dynveh][gv_igID] != -1 && DynVehicleInfo[dynveh][gv_ifID] == 0)
			    {
					new string[78 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Giay to xe: %d | Name: %s | Chu so huu: %s | Ve phat: EXEMPT", closestcar, GetVehicleName(closestcar), arrGroupData[DynVehicleInfo[dynveh][gv_igID]][g_szGroupName]);
                    SendClientMessageEx(playerid, COLOR_WHITE, string);
                    return 1;
				}
				else if(DynVehicleInfo[dynveh][gv_igID] == -1 && DynVehicleInfo[dynveh][gv_ifID] != 0)
			    {
					new string[78 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Giay to xe: %d | Name: %s | Chu so huu: %s", closestcar, GetVehicleName(closestcar), FamilyInfo[DynVehicleInfo[dynveh][gv_ifID]][FamilyName]);
                    SendClientMessageEx(playerid, COLOR_WHITE, string);
                    return 1;
				}
            }
            SendClientMessageEx(playerid, COLOR_GRAD2, "Xe nay khong co chu so huu!");
        }
        else SendClientMessageEx(playerid, COLOR_GRAD1, "ERROR: Ban khong keo xe hoac gan chiec xe do.");
    }
    else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
    return 1;
}

CMD:cmotd(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 4 || PlayerInfo[playerid][pHelper] >= 4 || PlayerInfo[playerid][pPR] > 0)
    {
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /cmotd [message]");
		new string[128];
		format(CAMOTD, sizeof(CAMOTD), "%s", params);
		if(PlayerInfo[playerid][pAdmin] >= 4 || PlayerInfo[playerid][pPR] > 0)
		{
			format(string, sizeof(string), "AdmCmd: %s da thay doi thong bao danh cho Junior Helper thanh : %s.", GetPlayerNameEx(playerid), params);
			ABroadCast( COLOR_LIGHTRED, string, 4);
		}
		else if(PlayerInfo[playerid][pHelper] >= 4)
		{
		    format(string, sizeof(string), "CACmd: %s da thay doi thong bao danh cho Junior Helper thanh: %s.", GetPlayerNameEx(playerid), params);
			CBroadCast( COLOR_YELLOW, string, 2);
		}
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da thay doi thong bao danh Junior Helper.");
		g_mysql_SaveMOTD();
	}
	return 1;
}

CMD:banxetoi(playerid, params[]) {
	return cmd_sellmycar(playerid, params);
}

CMD:sellmycar(playerid, params[])
{
    if(PlayerInfo[playerid][pFreezeCar] == 1)
    {
   		return SendClientMessageEx(playerid, COLOR_WHITE, "ERROR: Tai san cua ban dang bi dong bang, ban khong the ban xe!");
	}
    for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
        if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
 		{
            new Float:health;
            GetVehicleHealth(PlayerVehicleInfo[playerid][d][pvId], health);
            if(PlayerInfo[playerid][pLevel] == 1)
			{
                SendClientMessageEx(playerid, COLOR_GREY, "Ban phai dat cap do 2 tro len moi co the ban xe.");
                return 1;
            }
            if(health < 500) return SendClientMessageEx(playerid, COLOR_GREY, " Xe cua ban hu hong qua nang de co the ban.");

            new string[128], giveplayerid, price;
			if(sscanf(params, "ud", giveplayerid, price)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /banxetoi [nguoi choi] [gia tien]");

            if(price < 1 || price > 1000000000) return SendClientMessageEx(playerid, COLOR_GREY, "Gia xe phai cao hon 0 va thap hon 1,000,000,000.");
            if(PlayerInfo[giveplayerid][pLevel] == 1)
			{
                SendClientMessageEx(playerid, COLOR_GREY, "Nguoi mua phai dat cap do 2 tro len moi co the giao dich");
                return 1;
            }
            if(playerid == giveplayerid)
			{
                SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung lenh nay voi chinh minh");
                return 1;
            }
            if(IsRestrictedVehicle(PlayerVehicleInfo[playerid][d][pvModelId]))
            {
                SendClientMessageEx(playerid, COLOR_GREY, "Ban khong duoc phep ban xe dang bi tich thu.");
                return 1;
            }
			if(gettime()-GetPVarInt(playerid, "LastTransaction") < 60)
			{
				SendClientMessageEx(playerid, COLOR_GRAD2, "Ban chi co the ban xe tren 60 giay sau moi lan giao dich!");
				return 1;
			}
			if(PlayerVehicleInfo[playerid][d][pvTicket] > 0)
			{
			    SendClientMessageEx(playerid, COLOR_GREY, "Your vehicle currently has unpaid tickets, you need to pay them before selling.");
			    return 1;
			}
            if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Player is currently not connected to the server.");
            if (ProxDetectorS(8.0, playerid, giveplayerid))
		 	{
		 	    if(PlayerInfo[giveplayerid][pFreezeCar] == 1)
	 		    {
	            	SendClientMessageEx(giveplayerid, COLOR_WHITE, "ERROR: Your car assets are frozen, you cannot buy a car!");
	            	SendClientMessageEx(playerid, COLOR_WHITE, "ERROR: Their car assets are frozen, they cannot buy a car!");
	            	return 1;
				}
				SetPVarInt(playerid, "LastTransaction", gettime());
                VehicleOffer[giveplayerid] = playerid;
                VehicleId[giveplayerid] = d;
                VehiclePrice[giveplayerid] = price;
                format(string, sizeof(string), "* You offered %s to buy this %s for $%s.", GetPlayerNameEx(giveplayerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]), number_format(price));
                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
                format(string, sizeof(string), "* %s has offered you their %s (VID: %d) for $%s, (Su dung /chapnhan xe) to buy.", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]), PlayerVehicleInfo[playerid][d][pvId], number_format(price));
                SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
                return 1;
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi do khong gan ban.");
                return 1;
            }
        }
    }
    SendClientMessageEx(playerid, COLOR_GREY, " You need to be inside a vehicle that you own.");
    return 1;
}

CMD:bannhatoi(playerid, params[]) {
	return cmd_sellmyhouse(playerid, params);
}

CMD:sellmyhouse(playerid, params[])
{
	if(servernumber == 2) return SendClientMessage(playerid, COLOR_WHITE, "Lenh nay da bi vo hieu hoa!");
	if(Homes[playerid] > 0)
	{
		if(PlayerInfo[playerid][pFreezeHouse] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "LOI: Ngoi nha cua ban da bi vo hieu hoa, ban khong the ban ngoi nha nay!");
		new string[128], giveplayerid, price;
		if(sscanf(params, "ud", giveplayerid, price)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /bannhatoi [Player] [Gia tien]");
		if(price < 1) return SendClientMessageEx(playerid, COLOR_GREY, "Gia ban phai cao hon 0.");
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong ket noi may chu.");
		if(Homes[giveplayerid] >= MAX_OWNABLE_HOUSES) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong the so huu them ngoi nha khac.");
		if(PlayerInfo[giveplayerid][pFreezeHouse] == 1)
		{
			SendClientMessageEx(giveplayerid, COLOR_WHITE, "LOI: Tai san cua ban da bi vo hieu hoa, ban khong the mua ngoi nha nay!");
			SendClientMessageEx(playerid, COLOR_WHITE, "LOI: Tai san cua ban da bi vo hieu hoa, ban khong the mua ngoi nha nay!");
			return 1;
		}

		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hExtVW] && GetPlayerInterior(playerid) == HouseInfo[i][hExtIW])
			{
				if(PlayerInfo[giveplayerid][pLevel] >= HouseInfo[PlayerInfo[playerid][pPhousekey]][hLevel])
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid) && GetPlayerVirtualWorld(giveplayerid) == HouseInfo[i][hExtVW] && GetPlayerInterior(giveplayerid) == HouseInfo[i][hExtIW])
					{
						HouseOffer[giveplayerid] = playerid;
						HousePrice[giveplayerid] = price;
						House[giveplayerid] = i;
						format(string, sizeof(string), "* Ban ban cho %s nha cua ban voi gia $%s.", GetPlayerNameEx(giveplayerid), number_format(price));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s de nghi ban mua can nha cua ho voi gia $%s, (su dung /chapnhan house de mua).", GetPlayerNameEx(playerid), number_format(price));
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
						return 1;
					}
					else return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi ma ban muon ban can nha level khong du de thuc hien giao dich.Vui long thu lai sau!");
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong ngoi nha cua ban.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu ngoi nha");
    return 1;
}

CMD:pvlock(playerid, params[])
{
    new Float: x, Float: y, Float: z;
	new str[1280];
    if(PlayerInfo[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
	{
        new ownerid = PlayerInfo[playerid][pVehicleKeysFrom];
        if(IsPlayerConnected(ownerid))
		{
            new d = PlayerInfo[playerid][pVehicleKeys];
            if(PlayerVehicleInfo[ownerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[ownerid][d][pvId], x, y, z);
            if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
			{
                if(PlayerVehicleInfo[ownerid][d][pvLocked] == 0)
				{
                    //GameTextForPlayer(playerid,"~r~Vehicle Locked!",5000,6);
                    PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                    PlayerVehicleInfo[ownerid][d][pvLocked] = 1;
                    LockPlayerVehicle(ownerid, PlayerVehicleInfo[ownerid][d][pvId]);
                	format(str, sizeof(str), "~r~khoa phuong tien (~g~Thanh Cong)");
					PlayerTextDrawSetString(playerid, VehicleText[playerid][0],str);
					PlayerTextDrawShow(playerid, VehicleText[playerid][0]);
					// await task_ms(1000);
					SetTimerEx("PVLockLoad", 1000, false, "d", playerid);  
					return 1;
                }
                else
				{
                    //GameTextForPlayer(playerid,"~g~Vehicle Unlocked!",5000,6);
                    PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                    PlayerVehicleInfo[ownerid][d][pvLocked] = 0;
                    UnLockPlayerVehicle(ownerid, PlayerVehicleInfo[ownerid][d][pvId]);
                    format(str, sizeof(str), "~g~Mo khoa phuong tien (~g~Thanh Cong)");
					PlayerTextDrawSetString(playerid, VehicleText[playerid][0],str);
					PlayerTextDrawShow(playerid, VehicleText[playerid][0]);
					// await task_ms(1000);
					SetTimerEx("PVLockLoad", 1000, false, "d", playerid);  
					return 1;
                }
                /*else
				{
                    SendClientMessageEx(playerid, COLOR_GREY, " You don't have a lock system installed on this vehicle.");
                    return 1;
                }*/
            }
        }
    }
    for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
    {
        if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
        if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
		{
            if(PlayerVehicleInfo[playerid][d][pvLocked] == 0)
			{
                GameTextForPlayer(playerid,"~r~Khoa xe!",5000,6);
                PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                PlayerVehicleInfo[playerid][d][pvLocked] = 1;
                LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]);
				//format(str, sizeof(str), "~r~khoa phuong tien (~g~Thanh Cong)");
				//PlayerTextDrawSetString(playerid, VehicleText[playerid][0],str);
				//PlayerTextDrawShow(playerid, VehicleText[playerid][0]);
				//await task_ms(1000);
				//PlayerTextDrawHide(playerid, VehicleText[playerid][0]);
				return 1;
            }
            else if(PlayerVehicleInfo[playerid][d][pvLocked] == 1)
			{
                GameTextForPlayer(playerid,"~g~Mo khoa xe!",5000,6);
                PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                PlayerVehicleInfo[playerid][d][pvLocked] = 0;
				UnLockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]);
				//format(str, sizeof(str), "~g~Mo khoa phuong tien (~g~Thanh Cong)");
				//PlayerTextDrawSetString(playerid, VehicleText[playerid][0],str);
				//PlayerTextDrawShow(playerid, VehicleText[playerid][0]);
				//await task_ms(1000);
				//PlayerTextDrawHide(playerid, VehicleText[playerid][0]);
				return 1;

            }
            return 1;
        }
    }
    //SendClientMessageEx(playerid, COLOR_GREY, " You are not near any vehicle that you own.");
    return 1;
}
forward PVLockLoad(playerid);
public PVLockLoad(playerid)
{
	PlayerTextDrawHide(playerid, VehicleText[playerid][0]);  
}
CMD:vehid(playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid))
    {
		new string[128];
    	new idcar = GetPlayerVehicleID(playerid);
		format(string, sizeof(string), "* Vehicle Name: %s | Vehicle Model:%d | Vehicle ID: %d.",GetVehicleName(idcar), GetVehicleModel(idcar), idcar);
		SendClientMessageEx(playerid, COLOR_GREY, string);
	}
	return 1;
}

CMD:reporttips(playerid, params[])
{
	ShowPlayerDialog(playerid,7955,DIALOG_STYLE_MSGBOX,"Report tips","Tips when reporting:\n- Report what you need, not who you need.\n- Be specific, report exactly what you need.\n- Do not make false reports.\n- Do not flame admins.\n- Report only for in-game items.\n- For shop orders use the /shoporder command","Dong", "");
	return 1;
}

CMD:changes(playerid, params[])
{
	/*new rev[16], string[64];
	format(rev, sizeof(rev), "%s", str_replacexx("NG:RP ", "", SERVER_GM_TEXT));
	format(string, sizeof(string), "%s/~nmphosti/dev/server.php?revision=%s", WEB_SERVER, rev);
	HTTP(playerid, HTTP_GET, string, "", "RevisionListHTTP");*/
	SendClientMessageEx(playerid, COLOR_YELLOW, "* No siginificant changes currently.");
	return 1;
}

/* Disabled until we start using it
CMD:adminchanges(playerid, params[])
{
	new string[128];

	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		SendClientMessageEx(playerid, COLOR_YELLOW, "______________________________________________");
		format(string, sizeof(string), "Version: %s", SERVER_GM_TEXT);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
		SendClientMessageEx(playerid, COLOR_WHITE, " Armor Hacking warnings added ");
		SendClientMessageEx(playerid, COLOR_WHITE, " Re-made /dvrespawn & added /dvrespawnall for HA+");
		//SendClientMessageEx(playerid, COLOR_WHITE, " /goto dillimore has been added");
		SendClientMessageEx(playerid, COLOR_YELLOW, "______________________________________________");
	}
	return 1;
}
*/

CMD:duavukhi(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban dang Onduty, ban khong the lam dieu nay!");
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lam dieu nay khi dang trong su kien Hunger Games!");
	if(GetPVarInt(playerid, "IsInArena") >= 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay trong dau truong!");
		return 1;
	}
	if(GetPVarInt( playerid, "EventToken") != 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang trong su kien.");
		return 1;
	}
	new Float:health;
	GetPlayerHealth(playerid, health);
	if (health < 80)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give weapons if your health is below 80!");
		return 1;
	}

	if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||PlayerInfo[playerid][pHospital]!=0||GetPlayerState(playerid) == 7)
	{
		SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong the lam dieu nay vao luc nay.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
		SendClientMessageEx (playerid, COLOR_GRAD2, "You can not give weapons in a vehicle!");
		return 1;
	}

	if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		new string[58];
		format(string, sizeof(string), "Ban phai doi  %d giay before giving another weapon.", GetPVarInt(playerid, "GiveWeaponTimer"));
		SendClientMessageEx(playerid,COLOR_GREY,string);
		return 1;
	}

	new string[128], giveplayerid, weapon[64];
	if(sscanf(params, "us[64]", giveplayerid, weapon))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /giveweapon [player] [weapon name]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ten co san : sdpistol, shotgun, 9mm, mp5, uzi, tec9, rifle, deagle, ak47, m4, spas12, sniper");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ten co san : flowers, knuckles, baseballbat, cane, shovel, poolcue, golfclub, katana, dildo, parachute");
		return 1;
	}
	if (!IsPlayerConnected(giveplayerid)) {
		return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	if(IsPlayerInAnyVehicle(giveplayerid))
	{
		SendClientMessageEx (playerid, COLOR_GRAD2, "You can not give weapons to players in vehicles!");
		return 1;
	}
	if(giveplayerid == playerid)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give a weapon to yourself!");
		return 1;
	}
	if(!ProxDetectorS(3.0, playerid, giveplayerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
		return 1;
	}
	if(PlayerInfo[playerid][pMember] != PlayerInfo[giveplayerid][pMember] && PlayerInfo[playerid][pMember] != INVALID_GROUP_ID)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give weapons to players outside your faction!");
		return 1;
	}
	if(PlayerInfo[giveplayerid][pConnectHours] < 2 || PlayerInfo[giveplayerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "That person is currently restricted from possessing weapons");
	if(IsPlayerInAnyVehicle(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Please exit the vehicle, before using this command.");
	if(strcmp(weapon, "sdpistol", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 2 ] == 23)
		{
			if(PlayerInfo[giveplayerid][pGuns][ 2 ] != 23 && PlayerInfo[giveplayerid][pGuns][ 2 ] != 24)
			{
			    if(PlayerInfo[playerid][pDonateRank] > 2)
					return SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give away weapons if you're Gold+ VIP!");


				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your silenced pistol.");
				format(string, sizeof(string), "* %s has given %s their silenced pistol.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 23);
				GivePlayerValidWeapon(giveplayerid, 23, 60000);
				/*new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s(IP:%s) has given %s (IP:%s) their silenced pistol.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/pay.log", string);*/
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "That person already has a silenced pistol or Desert Eeagle!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	if(strcmp(weapon, "9mm", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 2 ] == 22)
		{
			if(PlayerInfo[giveplayerid][pGuns][ 2 ] != 22 && PlayerInfo[giveplayerid][pGuns][ 2 ] != 24)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your 9mm pistol.");
				format(string, sizeof(string), "* %s has given %s their 9mm pistol.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 22);
				GivePlayerValidWeapon(giveplayerid, 22, 1);
				/*new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their 9mm pistol.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/pay.log", string);*/
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "That person already has a silenced pistol or Desert Eeagle!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "shotgun", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 3 ] == 25)
		{
			if(PlayerInfo[giveplayerid][pGuns][ 3 ] != 25 && PlayerInfo[giveplayerid][pGuns][ 3 ] != 27)
			{
			    if(PlayerInfo[playerid][pDonateRank] > 2)
					return SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give away weapons if you're Gold+ VIP!");

				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your shotgun.");
				format(string, sizeof(string), "* %s has given %s their shotgun.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 25);
				GivePlayerValidWeapon(giveplayerid, 25, 60000);
				/*new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s(IP:%s) has given %s (IP:%s) their shotgun.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/pay.log", string);*/
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "That person already has a MP5, Micro SMG or Tec-9!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "mp5", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 4 ] == 29)
		{
			if(PlayerInfo[giveplayerid][pGuns][ 4 ] != 28 && PlayerInfo[giveplayerid][pGuns][ 4 ] != 29 && PlayerInfo[giveplayerid][pGuns][ 4 ] != 32)
			{
			    if(PlayerInfo[playerid][pDonateRank] > 2)
					return SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give away weapons if you're Gold+ VIP!");

				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your MP5.");
				format(string, sizeof(string), "* %s has given %s their MP5.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 29);
				GivePlayerValidWeapon(giveplayerid, 29, 60000);
				/*new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their MP5.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/pay.log", string);*/
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "That person already has a MP5!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "uzi", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 4 ] == 28)
		{
			if(PlayerInfo[giveplayerid][pGuns][ 4 ] != 28 && PlayerInfo[giveplayerid][pGuns][ 4 ] != 29 && PlayerInfo[giveplayerid][pGuns][ 4 ] != 32)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your Micro SMG.");
				format(string, sizeof(string), "* %s has given %s their Micro SMG.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 28);
				GivePlayerValidWeapon(giveplayerid, 28, 60000);
				/*new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their Micro SMG.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/pay.log", string);*/
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "That person already has a MP5, Micro SMG or Tec-9!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "tec9", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 4 ] == 32)
		{
			if(PlayerInfo[giveplayerid][pGuns][ 4 ] != 28 && PlayerInfo[giveplayerid][pGuns][ 4 ] != 29 && PlayerInfo[giveplayerid][pGuns][ 4 ] != 32)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your Tec-9.");
				format(string, sizeof(string), "* %s has given %s their Tec-9.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 32);
				GivePlayerValidWeapon(giveplayerid, 32, 60000);
				/*new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their Tec-9.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/pay.log", string);*/
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "That person already has a MP5, Micro SMG or Tec-9!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "deagle", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 2 ] == 24)
		{
			if(PlayerInfo[giveplayerid][pGuns][ 2 ] != 24)
			{
			    if(PlayerInfo[playerid][pDonateRank] > 2)
					return SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give away weapons if you're Gold+ VIP!");

				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your Desert Eagle.");
				format(string, sizeof(string), "* %s has given %s their Desert Eagle.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 24);
				GivePlayerValidWeapon(giveplayerid, 24, 60000);
				/*new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their Desert Eagle.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/pay.log", string);*/
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "That person already has a Desert Eeagle!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "rifle", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 6 ] == 33)
		{
			if(PlayerInfo[giveplayerid][pGuns][ 6 ] != 33 && PlayerInfo[giveplayerid][pGuns][ 6 ] != 34)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your rifle.");
				format(string, sizeof(string), "* %s has given %s their rifle.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 33);
				GivePlayerValidWeapon(giveplayerid, 33, 60000);
				/*new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their rifle.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/pay.log", string);*/
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "That person already has a rifle!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "ak47", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 5 ] == 30)
		{
			if(PlayerInfo[giveplayerid][pGuns][ 5 ] != 30 && PlayerInfo[giveplayerid][pGuns][ 5 ] != 31)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your AK-47.");
				format(string, sizeof(string), "* %s has given %s their AK-47.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 30);
				GivePlayerValidWeapon(giveplayerid, 30, 60000);
				/*new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their AK-47.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/pay.log", string);*/
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "That person already has a AK-47 or M4!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "m4", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 5 ] == 31)
		{
			if(PlayerInfo[giveplayerid][pGuns][ 5 ] != 31)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your M4.");
				format(string, sizeof(string), "* %s has given %s their M4.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 31);
				GivePlayerValidWeapon(giveplayerid, 31, 60000);
				/*new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their M4.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/pay.log", string);*/
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "That person already has a M4!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "spas12", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 3 ] == 27)
		{
			if(PlayerInfo[giveplayerid][pGuns][ 3 ] != 27)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your SPAS-12.");
				format(string, sizeof(string), "* %s has given %s their SPAS-12.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 27);
				GivePlayerValidWeapon(giveplayerid, 27, 60000);
				/*new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their SPAS-12.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/pay.log", string);*/
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "That person already has a SPAS-12!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "sniper", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 6 ] == 34)
		{
			if(PlayerInfo[giveplayerid][pGuns][ 6 ] != 34)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your sniper rifle.");
				format(string, sizeof(string), "* %s has given %s their sniper rifle.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 34);
				GivePlayerValidWeapon(giveplayerid, 34, 60000);
				/*new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their sniper rifle.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/pay.log", string);*/
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "That person already has a sniper rifle!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "flowers", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 10 ] == 14)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your flowers.");
			format(string, sizeof(string), "* %s has given %s their flowers.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 14);
			GivePlayerValidWeapon(giveplayerid, 14, 60000);
			/*new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their flowers.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
			Log("logs/pay.log", string);*/
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "knuckles", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 0 ] == 1)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your brass knuckles.");
			format(string, sizeof(string), "* %s has given %s their brass knuckles.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 1);
			GivePlayerValidWeapon(giveplayerid, 1, 60000);
			/*new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their brass knuckles.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
			Log("logs/pay.log", string);*/
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "baseballbat", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 5)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your baseball bat.");
			format(string, sizeof(string), "* %s has given %s their baseball bat.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 5);
			GivePlayerValidWeapon(giveplayerid, 5, 60000);
			/*new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their baseball bat.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
			Log("logs/pay.log", string);*/
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "cane", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 10 ] == 15)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your cane.");
			format(string, sizeof(string), "* %s has given %s their cane.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 15);
			GivePlayerValidWeapon(giveplayerid, 15, 60000);
			/*new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their cane.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
			Log("logs/pay.log", string);*/
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "shovel", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 6 ] == 6)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your shovel.");
			format(string, sizeof(string), "* %s has given %s their shovel.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 6);
			GivePlayerValidWeapon(giveplayerid, 6, 60000);
			/*new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their shovel.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
			Log("logs/pay.log", string);*/
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "golfclub", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 2)
		{
		    if(PlayerInfo[playerid][pDonateRank] > 2)
				return SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give away weapons if you're Gold+ VIP!");

			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your golf club.");
			format(string, sizeof(string), "* %s has given %s golf club.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 2);
			GivePlayerValidWeapon(giveplayerid, 2, 60000);
			/*new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their golf club.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
			Log("logs/pay.log", string);*/
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "katana") == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 8)
		{
		    if(PlayerInfo[playerid][pDonateRank] > 2)
				return SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give away weapons if you're Gold+ VIP!");

			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your katana.");
			format(string, sizeof(string), "* %s has given %s their katana.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 8);
			GivePlayerValidWeapon(giveplayerid, 8, 60000);
			/*new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their katana.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
			Log("logs/pay.log", string);*/
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "dildo", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 10 ] == 10)
		{
		    if(PlayerInfo[playerid][pDonateRank] > 2)
				return SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give away weapons if you're Gold+ VIP!");

			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your dildo.");
			format(string, sizeof(string), "* %s has given %s their dildo.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 10);
			GivePlayerValidWeapon(giveplayerid, 10, 60000);
			/*new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their dildo.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
			Log("logs/pay.log", string);*/
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(weapon, "parachute", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 11 ] == 46)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have given away your parachute.");
			format(string, sizeof(string), "* %s has given %s their parachute.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 46);
			GivePlayerValidWeapon(giveplayerid, 46, 60000);
			/*new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
			format(string, sizeof(string), "%s (IP:%s) has given %s (IP:%s) their parachute.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
			Log("logs/pay.log", string);*/
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "You have entered an invalid weapon name.");
	}
	return 1;
}


CMD:dropgun(playerid, params[])
{
	if(isnull(params))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /dropgun [weapon name]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ten co san : sdpistol, shotgun, 9mm, mp5, uzi, tec9, rifle, deagle, ak47, m4, spas12, sniper, camera");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ten co san : flowers, knuckles, baseballbat, cane, shovel, poolcue, golfclub, katana, dildo, parachute");
		if (IsAHitman(playerid))
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "Ten co san : knife");
		}
		if(IsACop(playerid))
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "Ten co san : nitestick, mace, smoke, chainsaw, fire");
		}

		return 1;
		}

	if(IsPlayerInAnyVehicle(playerid))
	{
		SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong the vut bo vu khi tren xe!");
		return 1;
	}
	if(GetPVarInt(playerid, "IsInArena") >= 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay trong dau truong!");
		return 1;
	}
	if(GetPVarInt( playerid, "EventToken") != 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang trong su kien.");
		return 1;
	}
	new string[128];
	if(strcmp(params, "sdpistol", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 2 ] == 23)
		{
			if(pTazer{playerid} == 1) return SendClientMessageEx(playerid, COLOR_RED, "You cannot drop your tazer.");
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo silenced pistol.");
			format(string, sizeof(string), "* %s has dropped their silenced pistol.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 23);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "camera", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 9 ] == 43)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo camera.");
			format(string, sizeof(string), "* %s has dropped their camera.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 43);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "nitestick", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 3)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo nitestick.");
			format(string, sizeof(string), "* %s has dropped their nitestick.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 3);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "mace", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][9] == 41)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo mace.");
			format(string, sizeof(string), "* %s has dropped their mace.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 41);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "knife", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 4)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo knife.");
			format(string, sizeof(string), "* %s has dropped their knife.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 4);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "9mm", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 2 ] == 22)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo 9mm pistol.");
			format(string, sizeof(string), "* %s has dropped their 9mm pistol.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 22);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "shotgun", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 3 ] == 25)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo shotgun.");
			format(string, sizeof(string), "* %s has dropped their shotgun.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 25);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "mp5", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 4 ] == 29)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo MP5.");
			format(string, sizeof(string), "* %s has dropped their MP5.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 29);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "uzi", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 4 ] == 28)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo Micro SMG.");
			format(string, sizeof(string), "* %s has dropped their Micro SMG.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 28);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "uzi", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 4 ] == 32)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo Tec-9.");
			format(string, sizeof(string), "* %s has dropped their Tec-9.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 32);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "deagle", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 2 ] == 24)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo Desert Eagle.");
			format(string, sizeof(string), "* %s has dropped their Desert Eagle.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 24);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "rifle", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 6 ] == 33)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo rifle.");
			format(string, sizeof(string), "* %s has dropped their rifle.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 33);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "ak47", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 5 ] == 30)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo AK-47.");
			format(string, sizeof(string), "* %s has dropped their AK-47.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 30);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "m4", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 5 ] == 31)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo M4.");
			format(string, sizeof(string), "* %s has dropped their M4.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 31);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "spas12", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 3 ] == 27)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo SPAS-12.");
			format(string, sizeof(string), "* %s has dropped their SPAS-12.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 27);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "sniper", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 6 ] == 34)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo sniper rifle.");
			format(string, sizeof(string), "* %s has dropped their sniper rifle.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 34);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "flowers", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 10 ] == 14)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo flowers.");
			format(string, sizeof(string), "* %s has dropped their flowers.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 14);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "knuckles", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 0 ] == 1)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo brass knuckles.");
			format(string, sizeof(string), "* %s has dropped their brass knuckles.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 1);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "baseballbat", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 5)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo baseball bat.");
			format(string, sizeof(string), "* %s has dropped their baseball bat.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 5);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "cane", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 10 ] == 15)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo cane.");
			format(string, sizeof(string), "* %s has dropped their cane.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pGuns][ 10 ] = 0;
			RemovePlayerWeapon(playerid, 15);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "shovel", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 6)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo shovel.");
			format(string, sizeof(string), "* %s has dropped their shovel.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 6);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "golfclub", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 2)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo golf club.");
			format(string, sizeof(string), "* %s has dropped their golf club.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 2);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "katana") == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 8)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo katana.");
			format(string, sizeof(string), "* %s has dropped their katana.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 8);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "dildo", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 10 ] == 10)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo dildo.");
			format(string, sizeof(string), "* %s has dropped their dildo.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 10);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "parachute", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 11 ] == 46)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo parachute.");
			format(string, sizeof(string), "* %s has dropped their parachute.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 46);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "smoke", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 8 ] == 17)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo smoke grenade.");
			format(string, sizeof(string), "* %s has dropped their smoke grenade.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 17);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "chainsaw", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 9)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo chainsaw.");
			format(string, sizeof(string), "* %s has dropped their chainsaw.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 9);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "fire", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 9 ] == 42)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo fire extinguisher.");
			format(string, sizeof(string), "* %s has dropped their fire extinguisher.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 42);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "minigun", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 7 ] == 38)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo minigun.");
			format(string, sizeof(string), "* %s has dropped their minigun.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 38);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else if(strcmp(params, "poolcue", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][ 1 ] == 7)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da vut bo pool cue.");
			format(string, sizeof(string), "* %s has dropped their pool cue.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 7);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co vu khi!");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban da nhap vu khi khong hop le.");
	}
	return 1;
}

/*CMD:buddyinvite(playerid, params[])
{
	if(PlayerInfo[playerid][pDonateRank] >= 2)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /buddyinvite [player]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pDonateRank] < 1)
			{
				new days;
				new daytime;
				if(PlayerInfo[playerid][pDonateRank] == 2)
				{
					daytime = 7;
				}
				else if(PlayerInfo[playerid][pDonateRank] >= 3)
				{
					daytime = 1;
				}
				ConvertTime(gettime() - PlayerInfo[playerid][pVIPInviteDay], .ctd=days);
				if(days >= daytime || PlayerInfo[playerid][pAdmin] >= 6)
				{
					PlayerInfo[giveplayerid][pDonateRank] = 1;
					PlayerInfo[giveplayerid][pTempVIP] = 10800;
					PlayerInfo[giveplayerid][pBuddyInvited] = 1;
					format(string, sizeof(string), "You have invited %s to become a Bronze VIP for 3 hours.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "You have been invited by %s to become a Bronze VIP for 3 hours. Enjoy!", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "BUDDY INVITE: %s has invited %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					Log("logs/setvip.log", string);
					PlayerInfo[playerid][pVIPInviteDay] = gettime();
					new query[128];
					format(query, sizeof(query), "UPDATE `accounts` SET `VIPInviteDay` = %d WHERE `id` = '%d'",
					PlayerInfo[playerid][pVIPInviteDay], GetPlayerSQLId(playerid));
                    mysql_function_query(MainPipeline, query, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "You must wait 7 days as silver or 1 day as gold, before inviting another person to become a VIP.");
    				//format(string, sizeof(string), "You can buddy invite again in %s", ConvertTimeS(PlayerInfo[playerid][pVIPInviteDay]-(gettime()-PlayerInfo[playerid][pVIPInviteDay])));
					//SendClientMessageEx(playerid, COLOR_WHITE, string);
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Unable to invite: That person is already a VIP.");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "That person is not connected!");
		}

	}
	return 1;
}*/

CMD:travel(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 13.0, 2491.7783,2397.6230,4.2109))
	{
	    if(PlayerInfo[playerid][pFamed] >= 1)
	    {
	        if(isnull(params))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /travel [famed]");
				return 1;
			}
            if(strcmp(params,"famed",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1010.7523, -1121.7469, 24.1332);
					SetVehicleZAngle(tmpcar, 180.0373);
					fVehSpeed[playerid] = 0.0;
					SendClientMessageEx(playerid, COLOR_YELLOW, "Famed: You have traveled to the front of the famed lounge.");
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					PlayerInfo[playerid][pVW] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "You're not inside a vehicle!");
				}
			}
		}
		else
		    return SendClientMessageEx(playerid, COLOR_GRAD1, "You're not part of famed!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 13.0, -4429.944824, 905.032470, 987.078186))
	{
		if(PlayerInfo[playerid][pDonateRank] > 0)
		{
			if(isnull(params))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /travel [location]");
				SendClientMessageEx(playerid, COLOR_GRAD1, "Locations: LS, SF, RC, LSVIP, SFVIP, LVVIP, FC, BAYSIDE");
				return 1;
			}

			if(strcmp(params,"ls",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1529.6,-1691.2,13.3);
					fVehSpeed[playerid] = 0.0;
					SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: You have traveled to Los Santos with your vehicle.");
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					PlayerInfo[playerid][pVW] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban khong the lam dieu nay tren xe!");
				}
			}

			if(strcmp(params,"sf",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1605.0,720.0,12.0);
					fVehSpeed[playerid] = 0.0;
					SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: You have traveled to San Fierro with your vehicle.");
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					PlayerInfo[playerid][pVW] = 0;

				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban khong the lam dieu nay tren xe!");
				}
			}
			if(strcmp(params,"rc",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1253.70, 343.73, 19.41);
					fVehSpeed[playerid] = 0.0;
					SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: You have traveled to Red County with your vehicle.");
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					PlayerInfo[playerid][pVW] = 0;

				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban khong the lam dieu nay tren xe!");
				}
			}
			if(strcmp(params,"lsvip",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1826.76, -1538.57, 13.25);
					SetPlayerFacingAngle(playerid, 255.08);
					fVehSpeed[playerid] = 0.0;
					SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: You have traveled to the VIP Lounge with your vehicle.");
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					PlayerInfo[playerid][pVW] = 0;

				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban khong the lam dieu nay tren xe!");
				}
			}
			if(strcmp(params,"sfvip",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2441.009521, 522.708923, 29.785852);
					SetPlayerFacingAngle(playerid, 181.54);
					fVehSpeed[playerid] = 0.0;
					SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: You have traveled to the VIP Lounge with your vehicle.");
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					PlayerInfo[playerid][pVW] = 0;

				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban khong the lam dieu nay tren xe!");
				}
			}
			if(strcmp(params,"lvvip",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1875.7731, 1366.0796, 16.8998);
					SetPlayerFacingAngle(playerid, 255.08);
					fVehSpeed[playerid] = 0.0;
					SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: You have traveled to the VIP Lounge with your vehicle.");
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					PlayerInfo[playerid][pVW] = 0;

				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban khong the lam dieu nay tren xe!");
				}
			}
			if(strcmp(params,"fc",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 162.7059, 1180.0232, 14.6859);
					SetPlayerFacingAngle(playerid, 255.08);
					fVehSpeed[playerid] = 0.0;
					SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: You have traveled to the VIP Lounge with your vehicle.");
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					PlayerInfo[playerid][pVW] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban khong the lam dieu nay tren xe!");
				}
			}
			if(strcmp(params,"bayside",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2465.7285, 2238.6355, 4.6803);
					SetPlayerFacingAngle(playerid, 255.08);
					fVehSpeed[playerid] = 0.0;
					SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: You have traveled to the VIP Lounge with your vehicle.");
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					PlayerInfo[playerid][pVW] = 0;

				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "   Ban khong the lam dieu nay tren xe!");
				}
			}
		}
	}
	return 1;
}



CMD:giftcodeold(playerid, params[])
{
	if (isnull(params))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /giftcode <code>");
		return 1;
	}
	if(PlayerInfo[playerid][pLevel] < 3) {
		SendClientMessageEx(playerid, COLOR_GREY, "You must be at least level 3 to use this command.");
		return 1;
	}
	if (strcmp(GiftCode, "off") == 0)
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "No gift codes are currently active.");
		return 1;
	}
	else
	{
	    if (strcmp(params, GiftCode) == 0)
		{
		    if(GiftCodeBypass > 0)
		    {
		        if(PlayerInfo[playerid][pGiftCode] == 0)
		        {
		            SendClientMessageEx(playerid, COLOR_WHITE, "The code you entered was valid!");
		        	PlayerInfo[playerid][pGiftCode] = 1;
		        	GiftPlayer(MAX_PLAYERS, playerid);
				}
				else
				{
				    SendClientMessageEx(playerid, COLOR_GREY, "You have already entered the gift code.");
				}
			}
			else
			{
			    if(PlayerInfo[playerid][pGiftTime] == 0)
			    {
					if(PlayerInfo[playerid][pGiftCode] == 0)
					{
					    SendClientMessageEx(playerid, COLOR_WHITE, "The code you entered was valid!");
			  			PlayerInfo[playerid][pGiftCode] = 1;
			  			GiftPlayer(MAX_PLAYERS, playerid);
					}
					else
					{
					    SendClientMessageEx(playerid, COLOR_GREY, "You have already entered the gift code.");
					}
			    }
			    else
			    {
			        SendClientMessageEx(playerid, COLOR_GREY, "You have already received a gift in the last 5 hours.");
			    }
			}
		}
		else
		{
		    SendClientMessageEx(playerid, COLOR_GREY, "You have entered a invalid gift code.");
		}
	}
	return 1;
}


CMD:nextgift(playerid, params[])
{
	new string[128];
	if(PlayerInfo[playerid][pGiftTime] < 1)
	{
		SendClientMessageEx(playerid, COLOR_YELLOW, "Bay gio ban co the nhan duoc mot mon qua.");
	}
	else {
		format(string, sizeof(string), "Ban con %d phut nua de co tiep tuc nhan qua.", PlayerInfo[playerid][pGiftTime]);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
	}
	return 1;
}

CMD:nhanqua(playerid, params[]) {
	return cmd_getgift(playerid, params);
}

CMD:getgift(playerid, params[])
{
	new string[128], year, month, day;
	getdate(year, month, day);

	if(IsPlayerInRangeOfPoint(playerid, 3.0,2546.680908, 1403.430786, 7699.584472) || IsPlayerInRangeOfPoint(playerid, 3.0,1726.1000, 1370.1000, 1449.9000) || IsPlayerInRangeOfPoint(playerid, 3.0,1763.5000, 1432.5000, 2015.7000) || IsPlayerInRangeOfPoint(playerid, 3.0,772.4000, 1743.2000, 1938.8800))
	{
		if(PlayerInfo[playerid][pDonateRank] >= 1)
		{
			if(VIPGifts == 0 && PlayerInfo[playerid][pDonateRank] < 4)
			{
				SendClientMessageEx(playerid, COLOR_GRAD2, "Gift da dong!");
				return 1;
			}
			/*if(PlayerInfo[playerid][pGiftTime] > 0)
			{
			    //format(string, sizeof(string),"Item: Reset thoi gian nhan Gift\nCredits cua ban: %s\nGia: {FFD700}%s{A9C4E4}\nCredits con lai: %s", number_format(PlayerInfo[playerid][pCredits]), number_format(ShopItems[17][sItemPrice]), number_format(PlayerInfo[playerid][pCredits]-ShopItems[17][sItemPrice]));
	    		//ShowPlayerDialog( playerid, DIALOG_SHOPGIFTRESET, DIALOG_STYLE_MSGBOX, "Reset Gift Timer", string, "Mua", "Thoat" );
				SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da nhan qua trong vong 5 gio truoc!");
				return 1;
			}*/
			format(string, sizeof(string), "* %s da nhan duoc 1 mon qua dac biet.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GiftPlayer(MAX_PLAYERS, playerid);
		}
	}
	else if(dynamicgift != 0)
	{
		new Float:Position[3];
		GetDynamicObjectPos(dynamicgift, Position[0], Position[1], Position[2]);

		if(IsPlayerInRangeOfPoint(playerid, 5.0, Position[0], Position[1], Position[2]))
		{
			if(PlayerInfo[playerid][pLevel] >= 1)
			{
				if(PlayerInfo[playerid][pGiftTime] > 0)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da nhan qua trong vong 5 gio truoc!");
					return 1;
				}
				format(string, sizeof(string), "* %s da nhan duoc 1 mon qua dac biet.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

				if(IsDynamicGiftBoxEnabled == true)
				{
					GiftPlayer(MAX_PLAYERS, playerid, 1);
				}
				else if(IsDynamicGiftBoxEnabled == false)
				{
					GiftPlayer(MAX_PLAYERS, playerid);
				}
				if(month == 12 && day == 25) // Christmas event.
				{
					PlayerInfo[playerid][pHungerTimer] = 0;
					PlayerInfo[playerid][pHungerDeathTimer] = 0;
					PlayerInfo[playerid][pHunger] += 83;

					if(PlayerInfo[playerid][pHunger] > 100)
						PlayerInfo[playerid][pHunger] = 100;

					SendClientMessageEx(playerid, COLOR_GRAD2, "* Ban da duoc trang thai no bung!");
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "* Xin loi,ban phai dat cap do 1 moi co the nhan qua!");
			}
		}
	}
	return 1;
}

CMD:viplocker(playerid, params[]) {
    #if defined zombiemode
	if(zombieevent == 1 && GetPVarType(playerid, "pIsZombie")) return SendClientMessageEx(playerid, COLOR_GREY, "Zombies khong su dung duoc lenh nay.");
	#endif
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 2536.9666,2299.2122,908.8731) /*LS Main*/ || IsPlayerInRangeOfPoint(playerid, 7.0, 1832.0533, 1380.7281, 1464.3822) /*LV Main*/ || IsPlayerInRangeOfPoint(playerid, 7.0, 772.4844, 1715.7213, 1938.0391) /*LV Plat*/) switch(PlayerInfo[playerid][pDonateRank]) {
		case 0: SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong phai la VIP.");
		case 1: ShowPlayerDialog(playerid, 7483, DIALOG_STYLE_LIST, "VIP Locker", "Mau (Free)\nGiap ($500)\nVu khi\nTrang phuc\nTrung tam nghe nghiep\nVIP Color", "Lua chon", "Huy bo");
		case 2: ShowPlayerDialog(playerid, 7483, DIALOG_STYLE_LIST, "VIP Locker", "Mau (Free)\nGiap\nVu khi\nTrang phuc\nTrung tam nghe nghiep\nVIP Color", "Lua chon", "Huy bo");
		default: ShowPlayerDialog(playerid, 7483, DIALOG_STYLE_LIST, "VIP Locker", "Mau (Free)\nGiap (Free)\nVu khi\nTrang phuc\nTrung tam nghe nghiep\nVIP Color", "Lua chon", "Huy bo");
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o tu do VIP.");
	return 1;
}

CMD:rc(playerid, params[])
{
	#if defined zombiemode
	if(zombieevent == 1 && GetPVarType(playerid, "pIsZombie")) return SendClientMessageEx(playerid, COLOR_GREY, "Zombies khong su dung duoc lenh nay.");
	#endif
	new ccar = GetClosestCar(playerid);
	if(IsARC(ccar) && IsPlayerInRangeOfVehicle(playerid, ccar, 5.0))
	{
		if(IsPlayerInVehicle(playerid,ccar))
		{
			new Float:vehPos[3];
			GetVehiclePos(ccar,vehPos[0], vehPos[1], vehPos[2]);
			SetPlayerPos(playerid,vehPos[0], vehPos[1]+0.5, vehPos[2]+0.5);
		}
		else if(!IsPlayerInAnyVehicle(playerid))
		{
			foreach(new i: Player)
			{
				new v = GetPlayerVehicle(i, ccar);
				if(v != -1 && PlayerVehicleInfo[i][v][pvLocked] == 0)
				{
					new Float:playerPos[3];
					GetPlayerPos(playerid,playerPos[0],playerPos[1],playerPos[2]);
					SetPlayerPos(playerid,playerPos[0],playerPos[1],playerPos[2]-500);
					IsPlayerEntering{playerid} = true;
					PutPlayerInVehicle(playerid, ccar, 0);
				}
			}
		}
	}
	return 1;
}

CMD:claimpoint(playerid, params[])
{
	for(new p = 0; p < MAX_EVENTPOINTS; p++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, EventPoints[p][epPosX], EventPoints[p][epPosY], EventPoints[p][epPosZ]))
		{
			if(EventPoints[p][epObjectID] != 0)
			{
				new string[128];

				format(string, sizeof(string), " Xin chuc mung, ban da danh duoc mot giai thuong dac biet (%s)!", EventPoints[p][epPrize]);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
				SendClientMessageEx(playerid, COLOR_GRAD2, " Note: Giai thuong co the mat toi 48 gio de nhan thuong..");
				if(EventPoints[p][epFlagable] == 1)
				{
					format(string, 128, "Special Prize (%s)", EventPoints[p][epPrize]);
                    AddFlag(playerid, INVALID_PLAYER_ID, string);
				}
				format(string, sizeof(string), "[MAYCHU] %s vua tim thay PointID %d, bay gio ho dang cho doi giai thuong dac biet.", GetPlayerNameEx(playerid), p);
				ABroadCast(COLOR_YELLOW, string, 4);

				format(string, sizeof(string), "AdmCmd: %s vua tim thay PointID %d, giai thuong: %s", GetPlayerNameEx(playerid), p, EventPoints[p][epPrize]);
				Log("logs/gifts.log", string);

				DestroyDynamicPickup(EventPoints[p][epObjectID]);
				EventPoints[p][epObjectID] = 0;

				if(IsValidDynamic3DTextLabel(EventPoints[p][epText3dID]))
				{
					DestroyDynamic3DTextLabel(EventPoints[p][epText3dID]);
				}

				EventPoints[p][epPosX] = 0.0;
				EventPoints[p][epPosY] = 0.0;
				EventPoints[p][epPosZ] = 0.0;
				EventPoints[p][epVW] = 0;
				EventPoints[p][epInt] = 0;
				EventPoints[p][epFlagable] = 0;
				format(EventPoints[p][epPrize], 64, "");
			}
		}
	}
	return 1;
}

/*CMD:serverstats(playerid, params[])
{
	new
		string[128],
		iVehCount,
		x;

	while(x < MAX_VEHICLES) if(GetVehicleModel(++x)) ++iVehCount;

	format(string,sizeof(string),"Server Statistics - Version %s (recorded since the 20th of August, 2010).",SERVER_GM_TEXT);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "* Objects: %d | Pickups: %d | Map icons: %d | 3D text labels: %d | Text draws: %d | Loaded houses: %d",CountDynamicObjects(),CountDynamicPickups(),CountDynamicMapIcons(),CountDynamic3DTextLabels(),textdrawscount,MAX_HOUSES);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "* Logins: %d | Connections: %d | Registrations: %d | Hackers autobanned: %d | Uptime: %d hours",TotalLogin, TotalConnect, TotalRegister, TotalAutoBan, TotalUptime);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "* Players connected: %d | Peak person count: %d (%d/%d/%d) | person vehicles loaded: %d | Total vehicles: %i",Iter_Count(Player),MaxPlayersConnected,MPDay,MPMonth,MPYear,PlayerCars, iVehCount);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	return 1;
}*/

CMD:chiemdongzzzz(playerid, params[]) {
	return cmd_capture(playerid, params);
}

CMD:capture(playerid, params[])
{
    if(servernumber == 2)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "Lenh nay da bi vo hieu hoa!");
	    return 1;
	}
	new string[128];
	new myvw = GetPlayerVirtualWorld(playerid);

	new mypoint = -1;
	if(GetPVarInt(playerid,"Injured") == 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, " Ban khong the chiem dong khi dang bi thuong!");
		return 1;
	}
	if (PlayerInfo[playerid][pFMember] == INVALID_FAMILY_ID || PlayerInfo[playerid][pRank] < 5)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, " Ban khong du rank de chiem dong noi nay [Rank 5+6] !");
		return 1;
	}
	for (new i=0; i<MAX_POINTS; i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 1.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]))
		{
			if(myvw == Points[i][pointVW])
			{
				mypoint = i;
			}
		}
	}
	if (mypoint == -1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, " Ban khong o noi chiem dong!");
		return 1;
	}
	if (Points[mypoint][Vulnerable] > 0)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, " Thoi diem nay chua san sang cho viec chiem dong.");
		return 1;
	}
	if (Points[mypoint][TimeToClaim])
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, " Diem nay da duoc chiem dong!");
		return 1;
	}
	if(GetPlayerPing(playerid) > pointpinglimit)
	{
		format(string,sizeof(string), " Ban khong the chiem dong voi %d+ ping!", pointpinglimit);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		return 1;
	}
	format(string,sizeof(string), " %s da co gang de chiem dong diem (VW: %d).", GetPlayerNameEx(playerid), Points[mypoint][pointVW]);
	ProxDetector(70.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
	GetPlayerPos(playerid, Points[mypoint][Capturex], Points[mypoint][Capturey], Points[mypoint][Capturez]);

	Points[mypoint][ClaimerId] = playerid;
	Points[mypoint][TimeToClaim] = 1;
	Points[mypoint][TimeLeft] = 10;
	SetTimerEx("ProgressTimer", 1000, 0, "d", mypoint);
	return 1;
}

CMD:points(playerid, params[])
{
	new string[128];

	for(new i; i < MAX_POINTS; i++)
	{
		if (Points[i][Type] >= 0)
		{
			if(Points[i][pointID] != 0)
			{
				format(string, sizeof(string), "Point ID: %d | Ten: %s | Chu so huu: %s | Chiem dong boi: %s | Thoi gian: %d",
				Points[i][pointID], Points[i][Name],Points[i][Owner],Points[i][CapperName],Points[i][Vulnerable]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
		}
	}
	return 1;
}

CMD:pointtime(playerid, params[])
{
	new point, string[128];
	if(sscanf(params, "i", point)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /pointtime [pointid]");

	if(point < 1 || point > 9) return SendClientMessageEx(playerid, COLOR_GRAD2, "Invalid ID!");

	if(Points[point-1][TakeOverTimerStarted])
	{
		if(Points[point-1][TakeOverTimer] > 0)
		{
			format(string, sizeof(string), "Thoi gian con lai cho toi khi chiem dong hoan tat: %d phut.", Points[point-1][TakeOverTimer]);
			SendClientMessageEx(playerid, COLOR_YELLOW, string);
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD2, "Diem nay chua bi chiem dong.");
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD2, "Diem nay chua bi chiem dong.");
	return 1;
}

/*
CMD:infernus(playerid)
{
	ShowActionForPlayer(playerid, ActionInfernus, "Voce realmente deseja spawnar um infernus neste local?", .action_time = 10000);

	return 1;
}*/


CMD:v(playerid, params[]) {
	if(PlayerInfo[playerid][pDonateRank] >= 1 || PlayerInfo[playerid][pAdmin] >= 2) {
		if(isnull(params)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /v [noi dung]");
		}
		else if(gettime() < GetPVarInt(playerid, "timeVIP")) {

			new
				szMessage[64];

			format(szMessage, sizeof(szMessage), "Ban phai doi %d giay truoc khi tiep tuc su dung kenh nay.", GetPVarInt(playerid, "timeVIP") - gettime());
			SendClientMessageEx(playerid, COLOR_GREY, szMessage);
		}
		else if(PlayerInfo[playerid][pVMuted] > 0) {
			SendClientMessageEx(playerid, COLOR_GREY, "Ban bi cam tro chuyen tren kenh VIP.");
		}
		else {

			new
				szMessage[128];

			switch(PlayerInfo[playerid][pAdmin]) {
				case 2: format(szMessage, sizeof(szMessage), "** Junior Admin %s: %s", GetPlayerNameEx(playerid), params);
				case 3: format(szMessage, sizeof(szMessage), "** General Admin %s: %s", GetPlayerNameEx(playerid), params);
				case 4: format(szMessage, sizeof(szMessage), "** Senior Admin %s: %s", GetPlayerNameEx(playerid), params);
				case 5: format(szMessage, sizeof(szMessage), "** Head Admin %s: %s", GetPlayerNameEx(playerid), params);
				case 6: format(szMessage, sizeof(szMessage), "** Lead Head Admin %s: %s", GetPlayerNameEx(playerid), params);
				case 7: format(szMessage, sizeof(szMessage), "** Executive Admin %s: %s", GetPlayerNameEx(playerid), params);

				default: {

					SetPVarInt(playerid, "timeVIP", gettime() + 5);

					switch(PlayerInfo[playerid][pDonateRank]) {
						case 1: format(szMessage, sizeof(szMessage), "{65d03d}%s (Bronze): %s{FFFFFF}", GetPlayerNameEx(playerid), params);
						case 2: format(szMessage, sizeof(szMessage), "{65d03d}%s (Sliver): %s{FFFFFF}", GetPlayerNameEx(playerid), params);
						case 3: format(szMessage, sizeof(szMessage), "{65d03d}%s (Gold): %s{FFFFFF}", GetPlayerNameEx(playerid), params);
						case 4: format(szMessage, sizeof(szMessage), "{65d03d}%s (Platinum): %s{FFFFFF}", GetPlayerNameEx(playerid), params);
						case 5: format(szMessage, sizeof(szMessage), "{65d03d}%s (???): %s{FFFFFF}", GetPlayerNameEx(playerid), params);
						default: return SendClientMessageEx(playerid, COLOR_GREY, "Ban co cap do VIP khong hop le.");
					}
				}
			}
			SendVIPMessage(COLOR_WHITE, szMessage);
		}
	}
	return 1;
}

/*CMD:adjustoid(playerid, params[])
{
	if(PlayerInfo[playerid][pShopTech] > 0 || PlayerInfo[playerid][pAdmin] >= 6)
	{
	    new giveplayerid, orderid, string[128];
		if(sscanf(params, "ui", giveplayerid, orderid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /adjustoid [player] [new orderid]");
		SendClientMessageEx(playerid, COLOR_WHITE, "Processing..");
  		PlayerInfo[giveplayerid][pOrder] = orderid;
		format(string, sizeof(string), "%s/~nggami/idcheck.php?id=%d", WEB_SERVER, orderid);
		HTTP(giveplayerid, HTTP_GET, string, "", "HttpCallback_ShopIDCheck");
		format(string, sizeof(string), "%s has edited %s's Order ID to %d", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), orderid);
		Log("logs/shoporders.log", string);
	}
	return 1;
}*/

CMD:processorder(playerid, params[])
{
	/*if(PlayerInfo[playerid][pShopTech] > 0 || PlayerInfo[playerid][pAdmin] >= 6)
	{
		new giveplayerid;
		if(sscanf(params, "u", giveplayerid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /processorder [player]");
			return 1;
		}

		if(IsPlayerConnected(giveplayerid))
		{
			if(OrderAssignedTo[giveplayerid] != playerid)
		    {
		        SendClientMessageEx(playerid, COLOR_WHITE, "You must be assigned to that order ID to process it, use /givemeorder");
		        return 1;
		    }
			if(PlayerInfo[giveplayerid][pOrder] > 0)
			{
		    	new string[128];
		    	new orderid = PlayerInfo[giveplayerid][pOrder];
				format(string, sizeof(string), "AdmCmd: %s has processed shop order ID %d from %s (ID: %d).", GetPlayerNameEx(playerid), orderid, GetPlayerNameEx(giveplayerid), giveplayerid);
				ShopTechBroadCast(COLOR_ORANGE, string);

				format(string, sizeof(string), "%s has processed your shop order ID %d.", GetPlayerNameEx(playerid), orderid);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);

				new playerip[32], giveplayerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				GetPlayerIp(giveplayerid, giveplayerip, sizeof(giveplayerip));

				if(PlayerInfo[giveplayerid][pOrderConfirmed])
				{
				    format(string, sizeof(string), "SELECT `id` FROM `orders` WHERE `id` = '%d'", PlayerInfo[giveplayerid][pOrder]);
					mysql_function_query(MainPipeline, string, true, "OnProcessOrderCheck", "ii", playerid, giveplayerid);
					SetPVarInt(playerid, "processorder", orderid);
				}
				else
				{
					format(string, sizeof(string), "%s(IP: %s) has processed shop order ID %d from %s(IP: %s).", GetPlayerNameEx(playerid), playerip, orderid, GetPlayerNameEx(giveplayerid), giveplayerip);
					Log("logs/shoporders.log", string);
				}

				PlayerInfo[giveplayerid][pOrder] = 0;
				PlayerInfo[giveplayerid][pOrderConfirmed] = 0;
				OrderAssignedTo[giveplayerid] = INVALID_PLAYER_ID;
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "That person does not have any shop orders pending!");
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");

	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong duoc phep su dung lenh nay.");*/
	return 0;
}

CMD:denyorder(playerid, params[])
{
	/*if(PlayerInfo[playerid][pShopTech] > 0 || PlayerInfo[playerid][pAdmin] >= 6)
	{
		new giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /denyorder [Nguoi choi] [Ly do]");
			return 1;
		}

		if(IsPlayerConnected(giveplayerid))
		{
			if(OrderAssignedTo[giveplayerid] != playerid)
		    {
		        SendClientMessageEx(playerid, COLOR_WHITE, "You must be assigned to that order ID to deny it, use /givemeorder");
		        return 1;
		    }
			if(PlayerInfo[giveplayerid][pOrder] > 0)
			{
		    	new string[128];
		    	new orderid = PlayerInfo[giveplayerid][pOrder];
				format(string, sizeof(string), "AdmCmd: %s has denied shop order ID %d from %s (ID: %d), reason: %s", GetPlayerNameEx(playerid), orderid, GetPlayerNameEx(giveplayerid), giveplayerid, reason);
				ShopTechBroadCast(COLOR_ORANGE, string);

				format(string, sizeof(string), "%s has denied your shop order ID %d, reason: %s", GetPlayerNameEx(playerid), orderid, reason);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);

				new playerip[32], giveplayerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				GetPlayerIp(giveplayerid, giveplayerip, sizeof(giveplayerip));

				format(string, sizeof(string), "%s(IP: %s) has denied shop order ID %d from %s(IP: %s), reason: %s", GetPlayerNameEx(playerid), playerip, orderid, GetPlayerNameEx(giveplayerid), giveplayerip, reason);
				Log("logs/shoporders.log", string);

				PlayerInfo[giveplayerid][pOrder] = 0;
				OrderAssignedTo[giveplayerid] = INVALID_PLAYER_ID;
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "That person does not have any shop orders pending!");
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong duoc phep su dung lenh nay.");*/
	return 0;
}

CMD:shoporder(playerid, params[])
{
	/*if(PlayerInfo[playerid][pOrder] != 0)
	{
	    new string[128];
	    new orderid = PlayerInfo[playerid][pOrder];
		format(string, sizeof(string), "You already have shop order ID %d pending, if you wish to cancel that type /cancelorder", orderid);
 		SendClientMessageEx(playerid, COLOR_WHITE, string);
	    return 1;
	}
	if (GetPVarInt(playerid, "ShopOrderTimer") > 0)
	{
		new string[128];
		format(string, sizeof(string), "Ban phai doi  %d giay before submitting another shop order.", GetPVarInt(playerid, "ShopOrderTimer"));
		SendClientMessageEx(playerid,COLOR_GREY, string);
		return 1;
	}
	ShowPlayerDialog(playerid, DIALOG_SHOPORDER, DIALOG_STYLE_INPUT, "Shop Order", "This is for shop orders from http://shop.ng-gaming.net\n\nIf you do not have a shop order then please cancel this dialog box now.\n\nWarning: Abuse of this feature may result to an indefinite block from this command.\n\nPlease enter your shop order ID (if you do not know it put 1):", "Submit", "Cancel" );
	return 1;*/
	return 0;
}

CMD:cancelorder(playerid, params[])
{
	/*if(PlayerInfo[playerid][pOrder] != 0)
	{
	    new string[128];
	    new orderid = PlayerInfo[playerid][pOrder];
		new playerip[32];
		GetPlayerIp(playerid, playerip, sizeof(playerip));
		format(string, sizeof(string), "%s (IP: %s) canceled their shop order (ID %i).", GetPlayerNameEx(playerid), playerip, orderid);
		Log("logs/shoporders.log", string);

		format(string, sizeof(string), "You have canceled your shop order (ID %i). If you wish to submit another order, type /shoporder.", orderid);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		PlayerInfo[playerid][pOrder] = 0;
		OrderAssignedTo[playerid] = INVALID_PLAYER_ID;
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "You do not have any shop orders pending!");
	}*/
	return 0;
}


CMD:sellvip(playerid, params[]) {
	if(!(1 <= PlayerInfo[playerid][pDonateRank] <= 3)) {
		SendClientMessageEx(playerid, COLOR_GREY, "You can only sell Bronze, Silver, and Gold VIP.");
	}
	else if(PlayerInfo[playerid][pVIPM] == 0) {
		SendClientMessageEx(playerid, COLOR_GREY, "You currently don't have a VIP ID assigned. Contact a Shop Tech.");
	}
	else if(PlayerInfo[playerid][pVIPSellable] == 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Your VIP is not sellable.");
	}
  	else if(PlayerInfo[playerid][pVIPExpire] - 604800 < gettime()) {
		SendClientMessageEx(playerid, COLOR_GREY, "Your VIP expires in less than a week - you can't sell it.");
	}
	else if(PlayerInfo[playerid][pVIPSold] > gettime()) {
		SendClientMessageEx(playerid, COLOR_GREY, "You can only sell your VIP once every two hours.");
	}
	else {

		new
			player,
			price,
			string[128],
			viptype[7];

		if(sscanf(params, "ud", player, price)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /sellvip [player] [price]");
		}
		else if(price < 0) {
			SendClientMessageEx(playerid, COLOR_GREY, "The price can't be below zero.");
		}
		else if(player == playerid) {
			SendClientMessageEx(playerid, COLOR_WHITE, "You can't sell VIP to yourself.");
		}
		else if(!IsPlayerConnected(player)) {
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		}
		else if(PlayerInfo[player][pVIPSold] > gettime()) {
			SendClientMessageEx(playerid, COLOR_GREY, "That person can only buy VIP once every two hours.");
		}
		else if (ProxDetectorS(10.0, playerid, player))
		{
			switch(PlayerInfo[playerid][pDonateRank])
			{
				case 1: viptype = "Bronze";
				case 2: viptype = "Silver";
				case 3: viptype = "Gold";
				default: viptype = "Error";
			}
			SetPVarInt(player, "VIPSell", playerid);
			SetPVarInt(player, "VIPCost", price);
			SetPVarString(player, "VIPSeller", GetPlayerNameEx(playerid));
			format(string, sizeof(string), "Seller: %s\nVIP level: %s \nPrice: %d \nVIP ID: %d\nExpires: %s\n\nDo you wish to purchase %s VIP from %s for $%d?", GetPlayerNameEx(playerid), viptype, price, PlayerInfo[playerid][pVIPM], date(PlayerInfo[playerid][pVIPExpire], 2), viptype, GetPlayerNameEx(playerid), price);
			ShowPlayerDialog(player, SELLVIP, DIALOG_STYLE_MSGBOX, "Purchase VIP", string, "Purchase", "Decline");
			format(string, sizeof(string), "You offered %s $%d for your %s VIP.", GetPlayerNameEx(player), price, viptype);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi do khong gan ban.");
	}
    return 1;
}


CMD:shopobject(playerid, params[])
{
	if(PlayerInfo[playerid][pShopTech] >= 1)
	{
		ShowPlayerDialog(playerid, SHOPOBJECT_ORDERID, DIALOG_STYLE_INPUT, "Shop Objects - Order ID", "Please enter the Order ID", "Dong y", "CancelHuy bo");
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
		return 1;
	}
	return 1;
}

CMD:donggop(playerid, params[])
{
	new string[128], moneys;
	if(sscanf(params, "d", moneys)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /donggop [amount]");

	if(moneys < 0)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "That is not enough.");
		return 1;
	}
	if(GetPlayerCash(playerid) < moneys)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co du tien.");
		return 1;
	}
	GivePlayerCash(playerid, -moneys);
	format(string, sizeof(string), "Cam on %s da dong gop $%d vao quy chinh phu.",GetPlayerNameEx(playerid), moneys);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SendClientMessageEx(playerid, COLOR_GRAD1, string);
	//Log("logs/pay.log", string);
	return 1;
}

CMD:giongnoi(playerid, params[]) {
	return cmd_accent(playerid, params);
}

CMD:accent(playerid, params[])
{
	new accent;
	if(sscanf(params, "d", accent))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /accent [accent ID]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Available Accnets: Normal [1], Ha Noi [2], Sai Gon [3], Mien Trung [4], Mien Bac [5], Mien Nam [6]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Available Accents: Ke lap di [7], Crazy [8], Kid [9], Troll [10], Music [11], Haivl [12], Cute [13]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Available Accents: Les [14], Gay [18], Nha Giau [19], Dai Gia [17], Nha Ngheo [18], An May [19], An Xin [20], Gangster [21]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Available Accents: Mr. [22], Sinh Vien [23], Hoc Sinh [24], Tre Trau [25], GO-RP [26], Sieu Quay [27], Sieu Nhan [28]");
		return 1;
	}

	switch(accent)
	{
		case 1:
		{
			PlayerInfo[playerid][pAccent] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Normal accent, use /accent to change it." );
		}
		case 2:
		{
			PlayerInfo[playerid][pAccent] = 2;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Ha Noi accent, use /accent to change it." );
		}
		case 3:
		{
			PlayerInfo[playerid][pAccent] = 3;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Sai Gon accent, use /accent to change it." );
		}
		case 4:
		{
			PlayerInfo[playerid][pAccent] = 4;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Mien Trung accent, use /accent to change it." );
		}
		case 5:
		{
			PlayerInfo[playerid][pAccent] = 5;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Mien Bac accent, use /accent to change it." );
		}
		case 6:
		{
			PlayerInfo[playerid][pAccent] = 6;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Mien Nam accent, use /accent to change it." );
		}
		case 7:
		{
			PlayerInfo[playerid][pAccent] = 7;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Ke lap di accent, use /accent to change it." );
		}
		case 8:
		{
			PlayerInfo[playerid][pAccent] = 8;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Crazy accent, use /accent to change it." );
		}
		case 9:
		{
			PlayerInfo[playerid][pAccent] = 9;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Kid accent, use /accent to change it." );
		}
		case 10:
		{
			PlayerInfo[playerid][pAccent] = 10;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Troll accent, use /accent to change it." );
		}
		case 11:
		{
			PlayerInfo[playerid][pAccent] = 11;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Music accent, use /accent to change it." );
		}
		case 12:
		{
			PlayerInfo[playerid][pAccent] = 12;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Haivl accent, use /accent to change it." );
		}
		case 13:
		{
			PlayerInfo[playerid][pAccent] = 13;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Cute accent, use /accent to change it." );
		}
		case 14:
		{
			PlayerInfo[playerid][pAccent] = 14;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Les accent, use /accent to change it." );
		}
		case 15:
		{
			PlayerInfo[playerid][pAccent] = 15;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Gay accent, use /accent to change it." );
		}
		case 16:
		{
			PlayerInfo[playerid][pAccent] = 16;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Nha Giau accent, use /accent to change it." );
		}
		case 17:
		{
			PlayerInfo[playerid][pAccent] = 17;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Dai Gia accent, use /accent to change it." );
		}
		case 18:
		{
			PlayerInfo[playerid][pAccent] = 18;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Nha Ngheo accent, use /accent to change it." );
		}
		case 19:
		{
			PlayerInfo[playerid][pAccent] = 19;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the An May accent, use /accent to change it." );
		}
		case 20:
		{
			PlayerInfo[playerid][pAccent] = 20;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the An Xin accent, use /accent to change it." );
		}
		case 21:
	    {
	        PlayerInfo[playerid][pAccent] = 21;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Gangster accent, use /accent to change it." );
	    }
		case 22:
	    {
	        PlayerInfo[playerid][pAccent] = 22;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Mr. accent, use /accent to change it." );
	    }
   		case 23:
	    {
	        PlayerInfo[playerid][pAccent] = 23;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Sinh Vien accent, use /accent to change it." );
	    }
	    case 24:
	    {
	        PlayerInfo[playerid][pAccent] = 24;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Hoc Sinh accent, use /accent to change it." );
	    }
		case 25:
	    {
	        PlayerInfo[playerid][pAccent] = 25;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Tre Trau accent, use /accent to change it." );
	    }
		case 26:
	    {
	        PlayerInfo[playerid][pAccent] = 26;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the GO-RP accent, use /accent to change it." );
	    }
		case 27:
	    {
	        PlayerInfo[playerid][pAccent] = 27;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Sieu Quay accent, use /accent to change it." );
	    }
		case 28:
	    {
	        PlayerInfo[playerid][pAccent] = 28;
			SendClientMessageEx(playerid, COLOR_WHITE, "You will now speak in the Sieu Nhan accent, use /accent to change it." );
	    }
	}
	return 1;
}


/*CMD:ocheck(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay!");
		return 1;
	}

	SendClientMessageEx(playerid, COLOR_GRAD1, "This command has been disabled due to MySQL Database Performance Issues.");
	SendClientMessageEx(playerid, COLOR_GRAD1, "Contact an admin with database access to obtain specific account information.");

	return 1;
}*/

CMD:trunkput(playerid, params[])
{
	if(GetPVarInt(playerid, "IsInArena") >= 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay trong dau truong!");
		return 1;
	}
	if(GetPVarInt( playerid, "EventToken") != 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang trong su kien.");
		return 1;
	}
	if(PlayerInfo[playerid][pDonateRank] >= 1)
	{
		SendClientMessage(playerid, COLOR_GREY, "Ban da vip khong the thuc hien cat sung");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid)) { SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam the khi dang trong xe!"); return 1; }
	if(GetPVarInt(playerid, "EMSAttempt") != 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay!");

	new string[128], weaponchoice[32], slot;
	if(sscanf(params, "s[32]d", weaponchoice, slot)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /trunkput [tensung] [slot]");

	new pvid = -1, Float: x, Float: y, Float: z;

	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
		if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
		{
			pvid = d;
			break;
		}
	}
	if(pvid == -1) return SendClientMessageEx(playerid,COLOR_GREY,"You are not near any vehicle that you own.");
	new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(PlayerVehicleInfo[playerid][pvid][pvId],engine,lights,alarm,doors,bonnet,boot,objective);
	if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return SendClientMessageEx(playerid, COLOR_GRAD3, "You can't take/put stuff inside the trunk if it's closed!(/car trunk to open it)");
	if(GetVehicleModel(PlayerVehicleInfo[playerid][pvid][pvId]) == 481 || GetVehicleModel(PlayerVehicleInfo[playerid][pvid][pvId]) == 510)  return SendClientMessageEx(playerid,COLOR_GREY,"That vehicle doesn't have a trunk.");

	new Float: Health;
	GetPlayerHealth(playerid, Health);
	if(Health < 80.0) return SendClientMessageEx(playerid,COLOR_GREY,"You cannot store weapons in a car when your health lower than 80.");
	if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		format(string, sizeof(string), "   Ban phai doi  %d giay before depositing another weapon.", GetPVarInt(playerid, "GiveWeaponTimer"));
		SendClientMessageEx(playerid,COLOR_GREY,string);
		return 1;
	}

	new maxslots = PlayerVehicleInfo[playerid][pvid][pvWepUpgrade]+1;
	if(slot > maxslots)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Invalid slot.");
		return 1;
	}

	if( PlayerVehicleInfo[playerid][pvid][pvWeapons][slot-1] != 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "You have a weapon stored in that slot already.");
		return 1;
	}

	new weapon;
	if(strcmp(weaponchoice, "sdpistol", true, strlen(weaponchoice)) == 0)
	{
		if(pTazer{playerid} == 1) return SendClientMessageEx(playerid, COLOR_GRAD1, "You cannot store a tazer!");
		if( PlayerInfo[playerid][pGuns][2] == 23 && PlayerInfo[playerid][pAGuns][2] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a silenced pistol into your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][2];
			format(string,sizeof(string), "* %s deposited their silenced pistol in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "deagle", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][2] == 24 && PlayerInfo[playerid][pAGuns][2] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a Desert Eagle in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][2];
			format(string,sizeof(string), "* %s deposited their Desert Eagle in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "shotgun", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][3] == 25 && PlayerInfo[playerid][pAGuns][3] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a shotgun in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][3];
			format(string,sizeof(string), "* %s deposited their Shotgun in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "spas12", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][3] == 27 && PlayerInfo[playerid][pAGuns][3] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a combat shotgun in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][3];
			format(string,sizeof(string), "* %s deposited their Combat Shotgun in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "mp5", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][4] == 29 && PlayerInfo[playerid][pAGuns][4] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited an MP5 in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][4];
			format(string,sizeof(string), "* %s deposited their MP5 in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}

	else if(strcmp(weaponchoice, "ak47", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][5] == 30 && PlayerInfo[playerid][pAGuns][5] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited an AK-47 in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][5];
			format(string,sizeof(string), "* %s deposited their AK-47 in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "m4", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][5] == 31 && PlayerInfo[playerid][pAGuns][5] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited an M4 in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][5];
			format(string,sizeof(string), "* %s deposited their M4 in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "rifle", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][6] == 33 && PlayerInfo[playerid][pAGuns][6] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a rifle in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][6];
			format(string,sizeof(string), "* %s deposited their rifle in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "sniper", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][6] == 34 && PlayerInfo[playerid][pAGuns][6] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a sniper rifle in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][6];
			format(string,sizeof(string), "* %s deposited their sniper rifle in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "golfclub", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][1] == 2 && PlayerInfo[playerid][pAGuns][1] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a golf club in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][1];
			format(string,sizeof(string), "* %s deposited their golf club in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "baseballbat", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][1] == 5 && PlayerInfo[playerid][pAGuns][1] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a baseball bat in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][1];
			format(string,sizeof(string), "* %s deposited their baseball bat in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "shovel", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][1] == 6 && PlayerInfo[playerid][pAGuns][1] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a shovel in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][1];
			format(string,sizeof(string), "* %s deposited their shovel in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "poolcue", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][1] == 7 && PlayerInfo[playerid][pAGuns][1] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a pool cue in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][1];
			format(string,sizeof(string), "* %s deposited their pool cue in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "katana", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][1] == 8 && PlayerInfo[playerid][pAGuns][1] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a katana in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][1];
			format(string,sizeof(string), "* %s deposited their katana in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "cane", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][10] == 15 && PlayerInfo[playerid][pAGuns][1] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a cane in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][10];
			format(string,sizeof(string), "* %s deposited their cane in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "flowers", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][10] == 14 && PlayerInfo[playerid][pAGuns][1] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited flowers in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][10];
			format(string,sizeof(string), "* %s deposited their flowers in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "parachute", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][11] == 46 && PlayerInfo[playerid][pAGuns][1] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a parachute in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][11];
			format(string,sizeof(string), "* %s deposited their parachute in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "dildo", true, strlen(weaponchoice)) == 0)
	{
		if( PlayerInfo[playerid][pGuns][10] == 10 && PlayerInfo[playerid][pAGuns][1] == 0 )
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a dildo in your car gun locker.");
			weapon = PlayerInfo[playerid][pGuns][10];
			format(string,sizeof(string), "* %s deposited their dildo in their car safe.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	//if(weapon == 0) return SendClientMessageEx(playerid, COLOR_GREY, "You don't have that weapon.");
	if(PlayerVehicleInfo[playerid][pvid][pvWeapons][slot-1] == 0)
	{
		PlayerVehicleInfo[playerid][pvid][pvWeapons][slot-1] = weapon;
		RemovePlayerWeapon(playerid, weapon);
		g_mysql_SaveVehicle(playerid, pvid);
		return 1;
	}
	else { SendClientMessageEx(playerid,COLOR_GREY,"   Invalid weapon name!"); return 1; }
}

CMD:trunktake(playerid, params[]) {
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "You can't do this while you're inside a vehicle.");
	else if(GetPVarInt(playerid, "IsInArena") >= 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay trong dau truong!");
	else if(GetPVarInt( playerid, "EventToken") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang trong su kien.");
	else if(PlayerInfo[playerid][pConnectHours] < 2 || PlayerInfo[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "You cannot use this as you are currently restricted from possessing weapons!");
	else if(GetPVarInt(playerid, "GiveWeaponTimer") >= 1)
	{
		new szMessage[59];
		format(szMessage, sizeof(szMessage), "   Ban phai doi  %d giay before getting another weapon.", GetPVarInt(playerid, "GiveWeaponTimer"));
		return SendClientMessageEx(playerid, COLOR_GREY, szMessage);
	}

	new
		Float: fVehPos[3],
		iWeaponSlot = strval(params);

	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++) {
		if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) {
			GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], fVehPos[0], fVehPos[1], fVehPos[2]);
			if(IsPlayerInRangeOfPoint(playerid, 4.0, fVehPos[0], fVehPos[1], fVehPos[2])) {
				if(isnull(params)) {

					new
						szMessage[64];

					format(szMessage, sizeof(szMessage), "*** %s's %s Safe ***", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]));
					SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
					for(new s = 0; s < 3; s++) if(PlayerVehicleInfo[playerid][d][pvWeapons][s] != 0) {

						new
							szWeapon[16];

						GetWeaponName(PlayerVehicleInfo[playerid][d][pvWeapons][s], szWeapon, sizeof(szWeapon));
						format(szMessage, sizeof(szMessage), "Slot %d: %s", s+1, szWeapon);
						SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
					}
					return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /trunktake [slot]");
				}
				else if(GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 481 || GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 509) {
					return SendClientMessageEx(playerid,COLOR_GREY,"That vehicle doesn't have a trunk.");
				}

				new
					engine, lights, alarm, doors, bonnet, boot, objective;

				GetVehicleParamsEx(PlayerVehicleInfo[playerid][d][pvId], engine, lights, alarm, doors, bonnet, boot, objective);

				if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) {
					return SendClientMessageEx(playerid, COLOR_GRAD3, "You can't take weapons from the trunk if it's closed! /car trunk to open it.");
				}
				else if(!(1 <= iWeaponSlot <= PlayerVehicleInfo[playerid][d][pvWepUpgrade] + 1)) {
					return SendClientMessageEx(playerid, COLOR_GREY, "Invalid slot specified.");
				}
				else if(PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1] != 0) {
					new
						szWeapon[16],
						szMessage[128];

					GetWeaponName(PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1], szWeapon, sizeof(szWeapon));
					GivePlayerValidWeapon(playerid, PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1], 60000);
					PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1] = 0;
					g_mysql_SaveVehicle(playerid, d);

					format(szMessage, sizeof(szMessage), "You have withdrawn a %s from your car gun locker.", szWeapon);
					SendClientMessageEx(playerid, COLOR_WHITE, szMessage);

					format(szMessage, sizeof(szMessage), "* %s has withdrawn a %s from their car safe.", GetPlayerNameEx(playerid), szWeapon);
					return ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessageEx(playerid, COLOR_WHITE, "You don't have a weapon stored in that slot.");
			}
		}
	}
	return SendClientMessageEx(playerid,COLOR_GREY,"You are not near any vehicle that you own.");
}

CMD:storegun(playerid, params[])
{
	if(Homes[playerid] > 0)
	{
		if(GetPVarInt(playerid, "IsInArena") >= 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay trong dau truong!");
		if(GetPVarInt( playerid, "EventToken") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang trong su kien.");
		new string[128], weaponchoice[32], slot;
		if(sscanf(params, "s[32]d", weaponchoice, slot)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /storegun [weapon] [slot]");

		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])
			{
				if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
				{
					format(string, sizeof(string), "   Ban phai doi  %d giay before depositing another weapon.", GetPVarInt(playerid, "GiveWeaponTimer"));
					SendClientMessageEx(playerid,COLOR_GREY,string);
					return 1;
				}

				new maxslots = HouseInfo[i][hGLUpgrade];
				if(slot > maxslots)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Invalid slot.");
					return 1;
				}

				if( HouseInfo[i][hWeapons][slot-1] != 0)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "You have a weapon stored in that slot already.");
					return 1;
				}

				new weapon;
				if(strcmp(weaponchoice, "sdpistol", true, strlen(weaponchoice)) == 0)
				{
					if( PlayerInfo[playerid][pGuns][2] == 23 && PlayerInfo[playerid][pAGuns][2] == 0 )
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a silenced pistol into your gun locker.");
						weapon = PlayerInfo[playerid][pGuns][2];
						format(string,sizeof(string), "* %s deposited their silenced pistol in their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
				}
				else if(strcmp(weaponchoice, "deagle", true, strlen(weaponchoice)) == 0)
				{
					if( PlayerInfo[playerid][pGuns][2] == 24 && PlayerInfo[playerid][pAGuns][2] == 0 )
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a Desert Eagle in your gun locker.");
						weapon = PlayerInfo[playerid][pGuns][2];
						format(string,sizeof(string), "* %s deposited their Desert Eagle in their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
				}
				else if(strcmp(weaponchoice, "shotgun", true, strlen(weaponchoice)) == 0)
				{
					if( PlayerInfo[playerid][pGuns][3] == 25 && PlayerInfo[playerid][pAGuns][3] == 0 )
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a shotgun in your gun locker.");
						weapon = PlayerInfo[playerid][pGuns][3];
						format(string,sizeof(string), "* %s deposited their Shotgun in their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
				}
				else if(strcmp(weaponchoice, "spas12", true, strlen(weaponchoice)) == 0)
				{
					if( PlayerInfo[playerid][pGuns][3] == 27 && PlayerInfo[playerid][pAGuns][3] == 0 )
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a combat shotgun in your gun locker.");
						weapon = PlayerInfo[playerid][pGuns][3];
						format(string,sizeof(string), "* %s deposited their Combat Shotgun in their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
				}
				else if(strcmp(weaponchoice, "mp5", true, strlen(weaponchoice)) == 0)
				{
					if( PlayerInfo[playerid][pGuns][4] == 29 && PlayerInfo[playerid][pAGuns][4] == 0 )
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited an MP5 in your gun locker.");
						weapon = PlayerInfo[playerid][pGuns][4];
						format(string,sizeof(string), "* %s deposited their MP5 in their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
				}
				else if(strcmp(weaponchoice, "ak47", true, strlen(weaponchoice)) == 0)
				{
					if( PlayerInfo[playerid][pGuns][5] == 30 && PlayerInfo[playerid][pAGuns][5] == 0 )
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited an AK-47 in your gun locker.");
						weapon = PlayerInfo[playerid][pGuns][5];
						format(string,sizeof(string), "* %s deposited their AK-47 in their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
				}
				else if(strcmp(weaponchoice, "m4", true, strlen(weaponchoice)) == 0)
				{
					if( PlayerInfo[playerid][pGuns][5] == 31 && PlayerInfo[playerid][pAGuns][5] == 0 )
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited an M4 in your gun locker.");
						weapon = PlayerInfo[playerid][pGuns][5];
						format(string,sizeof(string), "* %s deposited their M4 in their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
				}
				else if(strcmp(weaponchoice, "rifle", true, strlen(weaponchoice)) == 0)
				{
					if( PlayerInfo[playerid][pGuns][6] == 33 && PlayerInfo[playerid][pAGuns][6] == 0 )
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a rifle in your gun locker.");
						weapon = PlayerInfo[playerid][pGuns][6];
						format(string,sizeof(string), "* %s deposited their rifle in their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
				}
				else if(strcmp(weaponchoice, "sniper", true, strlen(weaponchoice)) == 0)
				{
					if( PlayerInfo[playerid][pGuns][6] == 34 && PlayerInfo[playerid][pAGuns][6] == 0 )
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a sniper rifle in your gun locker.");
						weapon = PlayerInfo[playerid][pGuns][6];
						format(string,sizeof(string), "* %s deposited their sniper rifle in their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
				}
				else if(strcmp(weaponchoice, "uzi", true, strlen(weaponchoice)) == 0)
				{
					if( PlayerInfo[playerid][pGuns][4] == 28 && PlayerInfo[playerid][pAGuns][4] == 0 )
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited an uzi in your gun locker.");
						weapon = PlayerInfo[playerid][pGuns][4];
						format(string,sizeof(string), "* %s deposited their uzi in their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
				}
				else if(strcmp(weaponchoice, "tec9", true, strlen(weaponchoice)) == 0)
				{
					if( PlayerInfo[playerid][pGuns][4] == 32 && PlayerInfo[playerid][pAGuns][4] == 0 )
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a tec9 in your gun locker.");
						weapon = PlayerInfo[playerid][pGuns][4];
						format(string,sizeof(string), "* %s deposited their tec9 in their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
				}
				if(weapon == 0) return SendClientMessageEx(playerid, COLOR_GREY, "You don't have that weapon.");
				if(HouseInfo[i][hWeapons][slot-1] == 0)
				{
					HouseInfo[i][hWeapons][slot-1] = weapon;
					RemovePlayerWeapon(playerid, weapon);
					SaveHouse(i);
					return 1;
				}
				else { SendClientMessageEx(playerid,COLOR_GREY,"   Invalid weapon name!"); return 1; }
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "You're not in a house that you own.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:getgun(playerid, params[])
{
	if(Homes[playerid] > 0)
	{
		new string[128], slot;

		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])
			{
				if(PlayerInfo[playerid][pConnectHours] < 2 || PlayerInfo[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "You cannot use this as you are currently restricted from possessing weapons!");

				if(sscanf(params, "d", slot))
				{
					new weaponname[50];
					SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
					format(string, sizeof(string), "*** %s's Safe ***", GetPlayerNameEx(playerid));
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					for(new s = 0; s < 5; s++)
					{
						if( HouseInfo[i][hWeapons][s] != 0 )
						{
							GetWeaponName(HouseInfo[i][hWeapons][s], weaponname, sizeof(weaponname));
							format(string, sizeof(string), "Slot %d: %s", s+1, weaponname);
							SendClientMessageEx(playerid, COLOR_WHITE, string);
						}
					}
					SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /getgun [slot]");
					return 1;
				}

				if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
				{
					format(string, sizeof(string), "   Ban phai doi  %d giay before getting another weapon.", GetPVarInt(playerid, "GiveWeaponTimer"));
					SendClientMessageEx(playerid,COLOR_GREY,string);
					return 1;
				}
				new maxslots = HouseInfo[i][hGLUpgrade];
				if(slot > maxslots)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Invalid slot.");
					return 1;
				}

				if(HouseInfo[i][hWeapons][slot-1] != 0)
				{
					new weaponname[50];
					GetWeaponName(HouseInfo[i][hWeapons][slot-1], weaponname, sizeof(weaponname));
					GivePlayerValidWeapon(playerid, HouseInfo[i][hWeapons][slot-1], 60000);
					HouseInfo[i][hWeapons][slot-1] = 0;
					if(strcmp(weaponname, "silenced pistol", true, strlen(weaponname)) == 0)
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn a silenced pistol from your gun locker.");
						format(string,sizeof(string), "* %s has withdrawn a silenced pistol from their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
					if(strcmp(weaponname, "desert eagle", true, strlen(weaponname)) == 0)
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn a Desert Eagle from your gun locker.");
						format(string,sizeof(string), "* %s has withdrawn a Desert Eagle from their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
					if(strcmp(weaponname, "shotgun", true, strlen(weaponname)) == 0)
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn a shotgun from your gun locker.");
						format(string,sizeof(string), "* %s has withdrawn a shotgun from their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
					if(strcmp(weaponname, "combat shotgun", true, strlen(weaponname)) == 0)
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn a combat shotgun from your gun locker.");
						format(string,sizeof(string), "* %s has withdrawn a combat shotgun from their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
					if(strcmp(weaponname, "mp5", true, strlen(weaponname)) == 0)
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn an MP5 from your gun locker.");
						format(string,sizeof(string), "* %s has withdrawn an MP5 from their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
					if(strcmp(weaponname, "ak47", true, strlen(weaponname)) == 0)
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn an AK-47 from your gun locker.");
						format(string,sizeof(string), "* %s has withdrawn an AK-47 from their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
					if(strcmp(weaponname, "m4", true, strlen(weaponname)) == 0)
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn an M4 from your gun locker.");
						format(string,sizeof(string), "* %s has withdrawn an M4 from their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
					if(strcmp(weaponname, "rifle", true, strlen(weaponname)) == 0)
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn a rifle from your gun locker.");
						format(string,sizeof(string), "* %s has withdrawn a rifle from their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					}
					if(strcmp(weaponname, "sniper rifle", true, strlen(weaponname)) == 0)
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn a sniper rifle from your gun locker.");
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
						format(string,sizeof(string), "* %s has withdrawn a sniper rifle from their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					if(strcmp(weaponname, "micro smg", true, strlen(weaponname)) == 0)
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn an uzi from your gun locker.");
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
						format(string,sizeof(string), "* %s has withdrawn an uzi from their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					if(strcmp(weaponname, "tec9", true, strlen(weaponname)) == 0)
					{
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn an uzi from your gun locker.");
						SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
						format(string,sizeof(string), "* %s has withdrawn an uzi from their house safe.", GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					SaveHouse(i);
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "You don't have a weapon stored in that slot.");
					return 1;
				}
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "You're not in a house that you own.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}


CMD:hwithdraw(playerid, params[])
{
	if(Homes[playerid] > 0)
	{
		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])
			{
				new itemid, amount, string[128];

				if(sscanf(params, "dd", itemid, amount))
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /hwithdraw [itemid] [amount]");
					SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials - (5) Heroin");
					return 1;
				}
				if(itemid < 1 || itemid > 5) {
					SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /hwithdraw [itemid] [amount]");
					SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials - (5) Heroin");
					return 1;
				}

				if(amount < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "You can't withdraw less than 1.");

				switch(itemid)
				{
					case 1: // Cash
					{
						if(HouseInfo[i][hSafeMoney] >= amount)
						{
							HouseInfo[i][hSafeMoney] -= amount;
							GivePlayerCash(playerid, amount);
							OnPlayerStatsUpdate(playerid);
							SaveHouse(i);
							format(string, sizeof(string), "You have withdrawn $%d from your house safe.", amount);
							SendClientMessageEx(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "%s (SQL: %d) has withdrawn $%d from their house (ID: %d) safe.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), amount, i);
							Log("logs/hsafe.log", string);
							return 1;
						}
						else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to withdraw!");
					}
					case 2: // Pot
					{
						if(HouseInfo[i][hPot] >= amount)
						{
							HouseInfo[i][hPot] -= amount;
							PlayerInfo[playerid][pPot] += amount;
							OnPlayerStatsUpdate(playerid);
							SaveHouse(i);
							format(string, sizeof(string), "You have withdrawn %d pot from your house safe.", amount);
							SendClientMessageEx(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "%s (SQL: %d) has withdrawn %d pot from their house (ID: %d) safe.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), amount, i);
							Log("logs/hsafe.log", string);
							return 1;
						}
						else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to withdraw!");
					}
					case 3: // Crack
					{
						if(HouseInfo[i][hCrack] >= amount)
						{
							HouseInfo[i][hCrack] -= amount;
							PlayerInfo[playerid][pCrack] += amount;
							OnPlayerStatsUpdate(playerid);
							SaveHouse(i);
							format(string, sizeof(string), "You have withdrawn %d crack from your house safe.", amount);
							SendClientMessageEx(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "%s (SQL: %d) has withdrawn %d crack from their house (ID: %d) safe.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), amount, i);
							Log("logs/hsafe.log", string);
							return 1;
						}
						else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to withdraw!");
					}
					case 4: // Materials
					{
						if(HouseInfo[i][hMaterials] >= amount)
						{
							HouseInfo[i][hMaterials] -= amount;
							PlayerInfo[playerid][pMats] += amount;
							OnPlayerStatsUpdate(playerid);
							SaveHouse(i);
							format(string, sizeof(string), "You have withdrawn %d materials from your house safe.", amount);
							SendClientMessageEx(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "%s (SQL: %d) has withdrawn %d materials from their house (ID: %d) safe.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), amount, i);
							Log("logs/hsafe.log", string);
							return 1;
						}
						else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to withdraw!");
					}
					case 5: // Heroin
					{
						if(HouseInfo[i][hHeroin] >= amount)
						{
							HouseInfo[i][hHeroin] -= amount;
							PlayerInfo[playerid][pHeroin] += amount;
							OnPlayerStatsUpdate(playerid);
							SaveHouse(i);
							format(string, sizeof(string), "You have withdrawn %d heroin from your house safe.", amount);
							SendClientMessageEx(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "%s (SQL: %d) has withdrawn %d heroin from their house (ID: %d) safe.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), amount, i);
							Log("logs/hsafe.log", string);
							return 1;
						}
						else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to withdraw!");
					}
				}
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "You're not in a house that you own.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:hdeposit(playerid, params[])
{
	if(Homes[playerid] > 0)
	{
		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])
			{
				new string[128], itemid, amount;

				if(sscanf(params, "dd", itemid, amount))
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /hdeposit [itemid] [amount]");
					SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials - (5) Heroin");
					return 1;
				}
				if(itemid < 1 || itemid > 5) {
					SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /hdeposit [itemid] [amount]");
					SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials - (5) Heroin");
					return 1;
				}

				if(amount < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "You can't deposit less than 1.");
				switch(itemid)
				{
					case 1: // Cash
					{
						if(PlayerInfo[playerid][pCash] >= amount) PlayerInfo[playerid][pCash] -= amount;
						else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");

						HouseInfo[i][hSafeMoney] += amount;
						format(string, sizeof(string), "You have deposited $%d to your house's safe.", amount);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						OnPlayerStatsUpdate(playerid);
						SaveHouse(i);
						format(string, sizeof(string), "%s (SQL: %d) has deposited $%d into their house (ID: %d) safe.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), amount, i);
						Log("logs/hsafe.log", string);
						return 1;
					}
					case 2: // Pot
					{
						if(PlayerInfo[playerid][pPot] >= amount) PlayerInfo[playerid][pPot] -= amount;
						else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");

						HouseInfo[i][hPot] += amount;
						format(string, sizeof(string), "You have deposited %d Pot to your house's safe.", amount);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						OnPlayerStatsUpdate(playerid);
						SaveHouse(i);
						format(string, sizeof(string), "%s (SQL: %d) has deposited %d pot into their house (ID: %d) safe.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), amount, i);
						Log("logs/hsafe.log", string);
						return 1;
					}
					case 3: // Crack
					{
						if(PlayerInfo[playerid][pCrack] >= amount) PlayerInfo[playerid][pCrack] -= amount;
						else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");

						HouseInfo[i][hCrack] += amount;
						format(string, sizeof(string), "You have deposited %d Crack to your house's safe.", amount);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						OnPlayerStatsUpdate(playerid);
						SaveHouse(i);
						format(string, sizeof(string), "%s (SQL: %d) has deposited %d crack into their house (ID: %d) safe.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), amount, i);
						Log("logs/hsafe.log", string);
						return 1;
					}
					case 4: // Materials
					{
						if(PlayerInfo[playerid][pMats] >= amount) PlayerInfo[playerid][pMats] -= amount;
						else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");

						HouseInfo[i][hMaterials] += amount;
						format(string, sizeof(string), "You have deposited %d Materials to your house's safe.", amount);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						OnPlayerStatsUpdate(playerid);
						SaveHouse(i);
						format(string, sizeof(string), "%s (SQL: %d) has deposited %d materials into their house (ID: %d) safe.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), amount, i);
						Log("logs/hsafe.log", string);
						return 1;
					}
					case 5: // Heroin
					{
						if(PlayerInfo[playerid][pHeroin] >= amount) PlayerInfo[playerid][pHeroin] -= amount;
						else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");

						HouseInfo[i][hHeroin] += amount;
						format(string, sizeof(string), "You have deposited %d Heroin to your house's safe.", amount);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
						OnPlayerStatsUpdate(playerid);
						SaveHouse(i);
						format(string, sizeof(string), "%s (SQL: %d) has deposited %d heroin into their house (ID: %d) safe.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), amount, i);
						Log("logs/hsafe.log", string);
						return 1;
					}
				}
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "You're not in a house that you own.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:hbalance(playerid, params[])
{
	if(Homes[playerid] > 0)
	{
		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])
			{
				new string[128];
				SendClientMessageEx(playerid, COLOR_GREEN, "|___________________________________ House Safe ___________________________________|");
				format(string, sizeof(string), "Cash: $%s | Pot: %s | Crack: %s | Materials: %s | Heroin: %s", number_format(HouseInfo[i][hSafeMoney]), number_format(HouseInfo[i][hPot]), number_format(HouseInfo[i][hCrack]), number_format(HouseInfo[i][hMaterials]), number_format(HouseInfo[i][hHeroin]));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				SendClientMessageEx(playerid, COLOR_GREEN, "|__________________________________________________________________________________|");
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "You're not in a house that you own.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:closet(playerid, params[])
{
	if(Homes[playerid] > 0)
	{
		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])
			{
				if(HouseInfo[i][hClosetX] != 0)
				{
					if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[i][hClosetX], HouseInfo[i][hClosetY], HouseInfo[i][hClosetZ]))
					{
						return DisplaySkins(playerid);
					}
					else return SendClientMessageEx(playerid, COLOR_GREY, "You aren't near your closet!");
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "You don't own a closet in this house!");
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "You're not in a house that you own.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:closetadd(playerid, params[])
{
	if(Homes[playerid] > 0)
	{
		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])
			{
				if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetX] != 0)
				{
					if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetZ]))
					{
						CountSkins(playerid);
						if((PlayerInfo[playerid][pDonateRank] <= 0 && PlayerInfo[playerid][pSkins] <= 10) || (PlayerInfo[playerid][pDonateRank] > 0 && PlayerInfo[playerid][pSkins] <= 25))
						{
							new string[128];
							new skinid = GetPlayerSkin(playerid);
							AddSkin(playerid, skinid);
							format(string, sizeof(string), "You have added skin ID %d to your closet.", skinid);
							SendClientMessageEx(playerid, COLOR_WHITE, string);
							return 1;
						}
						else return SendClientMessageEx(playerid, COLOR_GREY, "Your closet doesn't have anymore space for clothes!");
					}
					else return SendClientMessageEx(playerid, COLOR_GREY, "You aren't near your closet!");
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "You don't own a closet in this house!");
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "You're not in a house that you own.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:closetremove(playerid, params[])
{
	if(Homes[playerid] > 0)
	{
		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])
			{
				if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetX] != 0)
				{
					if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetZ]))
					{
						new query[128];
						format(query, sizeof(query), "SELECT `skinid` FROM `house_closet` WHERE playerid = %d ORDER BY `skinid` ASC", GetPlayerSQLId(playerid));
						mysql_function_query(MainPipeline, query, true, "SkinQueryFinish", "ii", playerid, Skin_Query_Delete);
						return 1;
					}
					else return SendClientMessageEx(playerid, COLOR_GREY, "You aren't near your closet!");
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "You don't own a closet in this house!");
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "You're not in a house that you own.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:ad(playerid, params[])
{
	SendClientMessageEx(playerid, COLOR_WHITE, "The /ad command has been removed - use /ads or /advertisements.");
	return 1;
}

/*CMD:ads(playerid, params[]) {
	return cmd_advertisements(playerid, params);
}*/

CMD:advertisements(playerid, params[]) {
	if(gPlayerLogged{playerid} == 0) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong dang nhap.");
	}
	else if(GetPVarType(playerid, "Injured")) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the dang quang cao khi dang bi thuong");
	}
	else if(PlayerCuffed[playerid] != 0) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the dang quang cao bay gio.");
	}
	else if(PlayerInfo[playerid][pJailTime] > 0) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung quang cao khi dang trong tu.");
	}
	else ShowPlayerDialog(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Kenh Quang Cao", "Danh sach quang cao\nTim kiem quang cao\nDat quang cao\nDat quang cao uu tien", "Lua chon", "Huy bo");
	return 1;
}

CMD:gov(playerid, params[])
{
	new
		iGroupID = PlayerInfo[playerid][pLeader],
	 	iRank = PlayerInfo[playerid][pRank];

	if ((0 <= iGroupID < MAX_GROUPS) && iRank >= arrGroupData[iGroupID][g_iGovAccess]) {
		if(!isnull(params)) {
			new string[128];
			format(string, sizeof(string), "** %s %s %s: %s **", arrGroupData[iGroupID][g_szGroupName], arrGroupRanks[iGroupID][iRank], GetPlayerNameEx(playerid), params);
   			SendClientMessageToAllEx(COLOR_WHITE, "|___________ Government News Announcement ___________|");
			SendClientMessageToAllEx(arrGroupData[iGroupID][g_hDutyColour] * 256 + 255, string);
			Log("logs/gov.log", string);
		} else SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/gov)ernment [text]");
	} else SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
	return 1;
}

CMD:gmotd(playerid, params[])
{
	new iGroupID = PlayerInfo[playerid][pLeader];
	if (0 <= iGroupID < MAX_GROUPS) {
		if (!isnull(params)) {
		    strcpy(arrGroupData[iGroupID][g_szGroupMOTD], params, 128);
			SendClientMessageEx(playerid, COLOR_WHITE, "You've adjusted the group MOTD.");
			SaveGroup(iGroupID);
			new string[256];
			format(string,sizeof(string),"%s has changed MOTD for %s to: %s", GetPlayerNameEx(playerid), arrGroupData[iGroupID][g_szGroupName], params);
			Log("logs/group.log", string);
		} else SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /gmotd [message]");
	} else SendClientMessageEx(playerid, COLOR_GREY, "Only group leaders may use this command.");
	return 1;
}

CMD:setautoreply(playerid, params[])
{
	if(strlen(PlayerInfo[playerid][pAutoTextReply]) > 0)
	{
		strdel(PlayerInfo[playerid][pAutoTextReply], 0, 64);
		SendClientMessageEx(playerid, COLOR_WHITE, "You have disabled auto reply.");
		return 1;
	}

	if(PlayerInfo[playerid][pDonateRank] < 2)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "You aren't a VIP.");
		return 1;
	}

	if(isnull(params))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /setautoreply [text]");
		return 1;
	}

	new string[128];
	if(strlen(params) >= 1 && strlen(params) < 63)
	{
		format(PlayerInfo[playerid][pAutoTextReply], 64, "%s", params);
		format(string, sizeof(string), "You have changed your autotext response to: %s", params);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "ERROR: Your autotext response must consist of at least 1 character and can't exceed 64 characters.");
	}
	return 1;
}

CMD:hshowbadge(playerid, params[])
{
	if(IsAHitman(playerid))
	{
		new giveplayerid, rank, faction, division;
		if(sscanf(params, "uiii", giveplayerid, faction, rank, division))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /hshowbadge [player] [faction] [rank] [division]");
			return 1;
		}
		new oldfaction = PlayerInfo[playerid][pMember];
		new oldrank = PlayerInfo[playerid][pRank];
		new olddivision = PlayerInfo[playerid][pDivision];
		PlayerInfo[playerid][pMember] = faction;
		PlayerInfo[playerid][pRank] = rank;
		PlayerInfo[playerid][pDivision] = division;
		cmd_showbadge(playerid, params);
		PlayerInfo[playerid][pMember] = oldfaction;
		PlayerInfo[playerid][pRank] = oldrank;
		PlayerInfo[playerid][pDivision] = olddivision;
	}
	return 1;
}

CMD:showbadge(playerid, params[])
{
	if(0 <= PlayerInfo[playerid][pMember] < MAX_GROUPS)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /showbadge [player]");

		if(giveplayerid != INVALID_PLAYER_ID) {
			if(ProxDetectorS(5.0, playerid, giveplayerid)) {

				new	infoArrays[3][GROUP_MAX_NAME_LEN];

				GetPlayerGroupInfo(playerid, infoArrays[0], infoArrays[1], infoArrays[2]);

				SendClientMessageEx(giveplayerid, COLOR_GRAD2, "----------------------------------------------------------------------------------------------------");
				format(string, sizeof(string), "%s %s is a duly sworn member of the %s.", infoArrays[0], GetPlayerNameEx(playerid), infoArrays[2]);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Current Assignment: %s.", infoArrays[1]);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
				switch(arrGroupData[PlayerInfo[playerid][pMember]][g_iAllegiance]) {
					case 1: SendClientMessageEx(giveplayerid, COLOR_WHITE, "Under the Authority of the San Andreas Government.");
					case 2: SendClientMessageEx(giveplayerid, COLOR_WHITE, "Under the Authority of the Nation of Tierra Robada.");
				}
				if(IsACop(playerid)) SendClientMessageEx(giveplayerid, COLOR_WHITE, "Official has the authority to arrest.");
				else if(arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] != 2) SendClientMessageEx(giveplayerid, COLOR_WHITE, "Official has the authority to assist in arrests.");
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, "----------------------------------------------------------------------------------------------------");
				format(string, sizeof(string), "* %s shows their badge to %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

			} else SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
		} else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	} else SendClientMessageEx(playerid, COLOR_WHITE, "You are not in a civil service group.");
	return 1;
}

CMD:groupkick(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4 || PlayerInfo[playerid][pFactionModerator] >= 1)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /groupkick [player]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pMember] >= 0 || PlayerInfo[giveplayerid][pLeader] >= 0)
			{
				format(string, sizeof(string), "Administrator %s has group-kicked %s from %s (%d)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), arrGroupData[PlayerInfo[giveplayerid][pMember]][g_szGroupName], PlayerInfo[giveplayerid][pMember]+1);
				Log("logs/group.log", string);
				format(string, sizeof(string), "You have been faction-kicked, by %s.", GetPlayerNameEx( playerid ));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[giveplayerid][pDuty] = 0;
				PlayerInfo[giveplayerid][pMember] = INVALID_GROUP_ID;
				PlayerInfo[giveplayerid][pRank] = INVALID_RANK;
				PlayerInfo[giveplayerid][pLeader] = INVALID_GROUP_ID;
				PlayerInfo[giveplayerid][pDivision] = INVALID_DIVISION;
				if(!IsValidSkin(GetPlayerSkin(giveplayerid)))
				{
					new rand = random(sizeof(CIV));
					SetPlayerSkin(giveplayerid,CIV[rand]);
					PlayerInfo[giveplayerid][pModel] = CIV[rand];
				}
				player_remove_vip_toys(giveplayerid);
				pTazer{giveplayerid} = 0;
				SetPlayerToTeamColor(giveplayerid);
				format(string, sizeof(string), "You have group-kicked %s.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "You can't kick someone from a group if they're not a member.");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		}
	}
	return 1;
}

CMD:m(playerid, params[]) {
	if(!isnull(params))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1 || IsACop(playerid) || IsAMedic(playerid) || IsAHitman(playerid) || IsAGovernment(playerid))
		{
			new
				szMessage[128];

			format(szMessage, sizeof(szMessage), "(MEGAPHONE) %s: %s", GetPlayerNameEx(playerid), params);
			ProxDetector(60.0, playerid, szMessage, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW,1);
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "Ban Khong Trong Faction De Su DUng MegaPhone.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/m)egaphone [megaphone chat]");
	return 1;
}

CMD:togradio(playerid, params[])
{
    if(GetPVarInt(playerid, "togRadio") == 0)
    {
        SendClientMessageEx(playerid, COLOR_GRAD2, "Radio cua ban hien dang tat.");
        SetPVarInt(playerid, "togRadio", 1);
    }
    else {
        SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da bat radio.");
        SetPVarInt(playerid, "togRadio", 0);
	} return 1;
}

CMD:radio(playerid, params[]) {
	return cmd_r(playerid, params);
}
CMD:r(playerid, const params[]) {

	new
		iGroupID = PlayerInfo[playerid][pMember],
		iRank = PlayerInfo[playerid][pRank];

	if (0 <= iGroupID < MAX_GROUPS) {
 		if (iRank >= arrGroupData[iGroupID][g_iRadioAccess]) {
			if(GetPVarInt(playerid, "togRadio") == 0) {
				if(!isnull(params))
				{
					new string[128], employer[GROUP_MAX_NAME_LEN], rank[GROUP_MAX_RANK_LEN], division[GROUP_MAX_DIV_LEN];
					format(string, sizeof(string), "(radio) %s", params);
					SetPlayerChatBubble(playerid, string, COLOR_WHITE, 15.0, 5000);
					GetPlayerGroupInfo(playerid, rank, division, employer);
					if(IsACop(playerid))
					{
						format(string, sizeof(string), "{FFFFCC}[CH: DISPATCH, S:1] %s: %s", GetPlayerNameEx(playerid), params);
					}
					else
					{
						format(string, sizeof(string), "** %s (%s) %s: %s  **",rank, division, GetPlayerNameEx(playerid), params);
					}
					foreach(new i: Player)
					{
						if(GetPVarInt(i, "togRadio") == 0)
						{
							if(PlayerInfo[i][pMember] == iGroupID && iRank >= arrGroupData[iGroupID][g_iRadioAccess]) {
								SendClientMessage(i, arrGroupData[iGroupID][g_hRadioColour] * 256 + 255, string);
							}
							if(GetPVarInt(i, "BigEar") == 4 && GetPVarInt(i, "BigEarGroup") == iGroupID) {
								new szBigEar[128];
								format(szBigEar, sizeof(szBigEar), "(BE) %s", string);
								SendClientMessage(i, arrGroupData[iGroupID][g_hRadioColour] * 256 + 255, szBigEar);
							}
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "SU DUNG: (/r)adio [radio chat]");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Kenh radio cua ban hien dang tatt, su dung /togradio de lien lac tro lai.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ban khong co quyen truy cap tan so radio nay.");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Ban khong o trong nhom.");
	return 1;
}
CMD:r1(playerid, const params[]) {

	new
		iGroupID = PlayerInfo[playerid][pMember],
		iRank = PlayerInfo[playerid][pRank];

	if (0 <= iGroupID < MAX_GROUPS) {
 		if (iRank >= arrGroupData[iGroupID][g_iRadioAccess]) {
			if(GetPVarInt(playerid, "togRadio") == 0) {
				if(!isnull(params))
				{
					new string[128], employer[GROUP_MAX_NAME_LEN], rank[GROUP_MAX_RANK_LEN], division[GROUP_MAX_DIV_LEN];
					format(string, sizeof(string), "(radio) %s", params);
					SetPlayerChatBubble(playerid, string, COLOR_WHITE, 15.0, 5000);
					GetPlayerGroupInfo(playerid, rank, division, employer);
					if(IsACop(playerid))
					{
						format(string, sizeof(string), "{9E6424}[CH: TAC1, S:1] %s: %s", GetPlayerNameEx(playerid), params);
					}
					else
					{
						format(string, sizeof(string), "** %s (%s) %s: %s  **",rank, division, GetPlayerNameEx(playerid), params);
					}
					foreach(new i: Player)
					{
						if(GetPVarInt(i, "togRadio") == 0)
						{
							if(PlayerInfo[i][pMember] == iGroupID && iRank >= arrGroupData[iGroupID][g_iRadioAccess]) {
								SendClientMessage(i, arrGroupData[iGroupID][g_hRadioColour] * 256 + 255, string);
							}
							if(GetPVarInt(i, "BigEar") == 4 && GetPVarInt(i, "BigEarGroup") == iGroupID) {
								new szBigEar[128];
								format(szBigEar, sizeof(szBigEar), "(BE) %s", string);
								SendClientMessage(i, arrGroupData[iGroupID][g_hRadioColour] * 256 + 255, szBigEar);
							}
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "SU DUNG: (/r)adio [radio chat]");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Kenh radio cua ban hien dang tatt, su dung /togradio de lien lac tro lai.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ban khong co quyen truy cap tan so radio nay.");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Ban khong o trong nhom.");
	return 1;
}
CMD:r2(playerid, const params[]) {

	new
		iGroupID = PlayerInfo[playerid][pMember],
		iRank = PlayerInfo[playerid][pRank];

	if (0 <= iGroupID < MAX_GROUPS) {
 		if (iRank >= arrGroupData[iGroupID][g_iRadioAccess]) {
			if(GetPVarInt(playerid, "togRadio") == 0) {
				if(!isnull(params))
				{
					new string[128], employer[GROUP_MAX_NAME_LEN], rank[GROUP_MAX_RANK_LEN], division[GROUP_MAX_DIV_LEN];
					format(string, sizeof(string), "(radio) %s", params);
					SetPlayerChatBubble(playerid, string, COLOR_WHITE, 15.0, 5000);
					GetPlayerGroupInfo(playerid, rank, division, employer);
					if(IsACop(playerid))
					{
						format(string, sizeof(string), "{9E6424}[CH: TAC2, S:2] %s: %s", GetPlayerNameEx(playerid), params);
					}
					else
					{
						format(string, sizeof(string), "** %s (%s) %s: %s  **",rank, division, GetPlayerNameEx(playerid), params);
					}
					foreach(new i: Player)
					{
						if(GetPVarInt(i, "togRadio") == 0)
						{
							if(PlayerInfo[i][pMember] == iGroupID && iRank >= arrGroupData[iGroupID][g_iRadioAccess]) {
								SendClientMessage(i, arrGroupData[iGroupID][g_hRadioColour] * 256 + 255, string);
							}
							if(GetPVarInt(i, "BigEar") == 4 && GetPVarInt(i, "BigEarGroup") == iGroupID) {
								new szBigEar[128];
								format(szBigEar, sizeof(szBigEar), "(BE) %s", string);
								SendClientMessage(i, arrGroupData[iGroupID][g_hRadioColour] * 256 + 255, szBigEar);
							}
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "SU DUNG: (/r)adio [radio chat]");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Kenh radio cua ban hien dang tatt, su dung /togradio de lien lac tro lai.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ban khong co quyen truy cap tan so radio nay.");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Ban khong o trong nhom.");
	return 1;
}
CMD:r3(playerid, const params[]) {

	new
		iGroupID = PlayerInfo[playerid][pMember],
		iRank = PlayerInfo[playerid][pRank];

	if (0 <= iGroupID < MAX_GROUPS) {
 		if (iRank >= arrGroupData[iGroupID][g_iRadioAccess]) {
			if(GetPVarInt(playerid, "togRadio") == 0) {
				if(!isnull(params))
				{
					new string[128], employer[GROUP_MAX_NAME_LEN], rank[GROUP_MAX_RANK_LEN], division[GROUP_MAX_DIV_LEN];
					format(string, sizeof(string), "(radio) %s", params);
					SetPlayerChatBubble(playerid, string, COLOR_WHITE, 15.0, 5000);
					GetPlayerGroupInfo(playerid, rank, division, employer);
					if(IsACop(playerid))
					{
						format(string, sizeof(string), "{9E6424}[CH: TAC3, S:3] %s: %s", GetPlayerNameEx(playerid), params);
					}
					else
					{
						format(string, sizeof(string), "** %s (%s) %s: %s  **",rank, division, GetPlayerNameEx(playerid), params);
					}
					foreach(new i: Player)
					{
						if(GetPVarInt(i, "togRadio") == 0)
						{
							if(PlayerInfo[i][pMember] == iGroupID && iRank >= arrGroupData[iGroupID][g_iRadioAccess]) {
								SendClientMessage(i, arrGroupData[iGroupID][g_hRadioColour] * 256 + 255, string);
							}
							if(GetPVarInt(i, "BigEar") == 4 && GetPVarInt(i, "BigEarGroup") == iGroupID) {
								new szBigEar[128];
								format(szBigEar, sizeof(szBigEar), "(BE) %s", string);
								SendClientMessage(i, arrGroupData[iGroupID][g_hRadioColour] * 256 + 255, szBigEar);
							}
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "SU DUNG: (/r)adio [radio chat]");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Kenh radio cua ban hien dang tatt, su dung /togradio de lien lac tro lai.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ban khong co quyen truy cap tan so radio nay.");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Ban khong o trong nhom.");
	return 1;
}
CMD:g(playerid, const params[]) {

	new
		iGroupID = PlayerInfo[playerid][pMember],
		iRank = PlayerInfo[playerid][pRank];

	if (0 <= iGroupID < MAX_GROUPS) {
 		if (iRank >= arrGroupData[iGroupID][g_iRadioAccess]) {
			if(GetPVarInt(playerid, "togRadio") == 0) {
				if(!isnull(params))
				{
					new string[128], employer[GROUP_MAX_NAME_LEN], rank[GROUP_MAX_RANK_LEN], division[GROUP_MAX_DIV_LEN];
					format(string, sizeof(string), "(radio) %s", params);
					SetPlayerChatBubble(playerid, string, COLOR_WHITE, 15.0, 5000);
					GetPlayerGroupInfo(playerid, rank, division, employer);
					if(IsACop(playerid))
					{
						format(string, sizeof(string), "(( %s (%s) (#%d) %s: %s))",arrGroupRanks[iGroupID][PlayerInfo[playerid][pRank]], division, PlayerInfo[playerid][pMph], GetPlayerNameEx(playerid), params);
					}
					else
					{
						format(string, sizeof(string), "(( %s (%s) %s: %s))",rank, division, GetPlayerNameEx(playerid), params);
					}
					foreach(new i: Player)
					{
						if(GetPVarInt(i, "togRadio") == 0)
						{
							if(PlayerInfo[i][pMember] == iGroupID && iRank >= arrGroupData[iGroupID][g_iRadioAccess]) {
								SendClientMessage(i, arrGroupData[iGroupID][g_hRadioColour] * 256 + 255, string);
							}
							if(GetPVarInt(i, "BigEar") == 4 && GetPVarInt(i, "BigEarGroup") == iGroupID) {
								new szBigEar[128];
								format(szBigEar, sizeof(szBigEar), "(BE) %s", string);
								SendClientMessage(i, arrGroupData[iGroupID][g_hRadioColour] * 256 + 255, szBigEar);
							}
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "SU DUNG: /g [noidung]");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Kenh radio cua ban hien dang tatt, su dung /togradio de lien lac tro lai.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Ban khong co quyen truy cap tan so radio nay.");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Ban khong o trong nhom.");
	return 1;
}
CMD:int(playerid, params[])
{
	return cmd_international(playerid, params);
}

CMD:international(playerid, params[])
{
	new iGroupID = PlayerInfo[playerid][pMember],
	    iRank = PlayerInfo[playerid][pRank];

	if(0 <= iGroupID < MAX_GROUPS)
	{
	    if(iRank >= arrGroupData[iGroupID][g_iIntRadioAccess])
	    {
	        if(!isnull(params))
	        {
	            new szRadio[128], szEmployer[GROUP_MAX_NAME_LEN], szRank[GROUP_MAX_RANK_LEN], szDivision[GROUP_MAX_DIV_LEN];
	            GetPlayerGroupInfo(playerid, szRank, szDivision, szEmployer);
	            format(szRadio, sizeof(szRadio), "** %s %s (%s) %s: %s **", szEmployer, szRank, szDivision, GetPlayerNameEx(playerid), params);
	            foreach(new i: Player)
	            {
	                if((0 <= PlayerInfo[i][pMember] < MAX_GROUPS) && PlayerInfo[i][pRank] >= arrGroupData[PlayerInfo[i][pMember]][g_iIntRadioAccess])
	                {
	                    SendClientMessageEx(i, 0x869688FF, szRadio);
	                }
	            }
	            format(szRadio, sizeof(szRadio), "(radio) %s", params);
             	SetPlayerChatBubble(playerid, szRadio, COLOR_WHITE, 15.0, 5000);
             }
             else return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/int(ernational) [text]");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "You do not have access to this radio frequency!");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "You're not in a group!");
	return 1;
}

CMD:togdept(playerid, params[])
{
    if(GetPVarInt(playerid, "togDept") == 0)
    {
        SendClientMessageEx(playerid, COLOR_GRAD2, "You have toggled off your department radio, you may re-enable it by typing this command again.");
        SetPVarInt(playerid, "togDept", 1);
    }
    else {
        SendClientMessageEx(playerid, COLOR_GRAD2, "You have toggled on your department radio.");
        SetPVarInt(playerid, "togDept", 0);
	} return 1;
}

CMD:dept(playerid, params[])
{
	new
		iGroupID = PlayerInfo[playerid][pMember],
		iRank = PlayerInfo[playerid][pRank];

	if(0 <= iGroupID < MAX_GROUPS)
	{
		if(iRank >= arrGroupData[iGroupID][g_iDeptRadioAccess])
		{
			if(GetPVarInt(playerid, "togDept") == 0)
			{
				if(!isnull(params))
				{
					new szRadio[128], RadioBubble[128], szEmployer[GROUP_MAX_NAME_LEN], szRank[GROUP_MAX_RANK_LEN], szDivision[GROUP_MAX_DIV_LEN];
					GetPlayerGroupInfo(playerid, szRank, szDivision, szEmployer);
					
					if(IsACop(playerid))
					{
						format(szRadio, sizeof(szRadio), "**%s %s (%s) %s: %s **",szEmployer,PlayerInfo[playerid][pRank], szDivision, GetPlayerNameEx(playerid), params);
					}
					else
					{
						format(szRadio, sizeof(szRadio), "** %s %s (%s) %s: %s **", szEmployer, szRank, szDivision, GetPlayerNameEx(playerid), params);
					}
					format(RadioBubble, sizeof(RadioBubble), "(radio) %s",params);
					SetPlayerChatBubble(playerid, RadioBubble, COLOR_WHITE, 15.0, 5000);
					foreach(new i: Player)
					{
						if(GetPVarInt(i, "togDept") == 0)
						{
							if((0 <= PlayerInfo[i][pMember] < MAX_GROUPS) && PlayerInfo[i][pRank] >= arrGroupData[PlayerInfo[i][pMember]][g_iDeptRadioAccess] && arrGroupData[iGroupID][g_iAllegiance] == arrGroupData[PlayerInfo[i][pMember]][g_iAllegiance])
							{
								SendClientMessageEx(i, DEPTRADIO, szRadio);
							}
							else if(GetPVarInt(i, "BigEar") == 4 && GetPVarInt(i, "BigEarGroup") == iGroupID)
							{
								new szBigEar[128];
								format(szBigEar, sizeof(szBigEar), "(BE) %s", szRadio);
								SendClientMessageEx(i, iGroupID, szBigEar);
							}
							else if((PlayerInfo[i][pMember] == INVALID_GROUP_ID || (0 <= PlayerInfo[i][pMember] < MAX_GROUPS) && PlayerInfo[i][pRank] < arrGroupData[PlayerInfo[i][pMember]][g_iDeptRadioAccess]) && PlayerInfo[i][pReceiver] > 0)
							{
								if(GetPVarType(i, "pReceiverOn"))
								{
									if(GetPVarInt(i, "pReceiverMLeft") > 0)
									{
										format(szRadio, sizeof(szRadio), "** (receiver) %s: %s", GetPlayerNameEx(playerid), params);
										SendClientMessageEx(i, DEPTRADIO, szRadio);
										SetPVarInt(i, "pReceiverMLeft", GetPVarInt(i, "pReceiverMLeft") - 1);
									}
									else
									{
										PlayerInfo[i][pReceiver]--;
										SetPVarInt(i, "pReceiverMLeft", 4);
										return SendClientMessageEx(i, DEPTRADIO, "May thu cua ban da het pin!");
									}
								}
							}
						}
					}
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/dept) [department chat]");
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "Your department radio is currently turned off, turn it on by typing /togdept.");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "You do not have access to this radio frequency.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "You are not in a group.");
	return 1;
}

CMD:order(playerid, params[])
{
	if (IsAHitman(playerid))
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
		if(IsPlayerInRangeOfPoint(playerid, 4.0, -71.419654846191,1360.4097900391,1080.2185058594) || IsPlayerInRangeOfPoint(playerid, 6.0, 1415.727905, -1299.371093, 15.054657))
		{
			if(PlayerInfo[playerid][pConnectHours] < 2 || PlayerInfo[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "You cannot use this as you are currently restricted from possessing weapons!");
			new Hitman[32], skin = -1;
			if(sscanf(params, "s[32]D", Hitman, skin))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /order [name]");
				SendClientMessageEx(playerid, COLOR_GRAD2, " Rank 1: Knife ($800), SDPistol ($1000), Shotgun ($1500), Skin ($2500), Desert Eagle ($5000), MP5 ($2500), Kevlar Vest ($6000), firstaid ($500)");
				SendClientMessageEx(playerid, COLOR_GRAD2, " Rank 2: Rifle ($3000), AK47 ($10,000), M4 ($12,000)");
				SendClientMessageEx(playerid, COLOR_GRAD2, " Rank 3: SPAS-12 ($35,000), Sniper ($35,000)");
				SendClientMessageEx(playerid, COLOR_GRAD2, " Rank 4: C4 ($50,000)");
				return 1;
			}
			else if(strcmp(Hitman,"skin",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1) {
					SendClientMessageEx(playerid, COLOR_GREY, "You are not the required rank for that!");
				}
				else if(IsInvalidSkin(skin)) {
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /order skin [skin ID]");
				}
				else if(GetPlayerCash(playerid) >= 2500) {
					SetPlayerSkin(playerid, skin);
					PlayerInfo[playerid][pModel] = skin;
					GivePlayerCash(playerid, -2500);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"You have purchased a skin!");
				}
				else SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that!");
			}
			else if(strcmp(Hitman,"Knife",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "You are not the required rank for that weapon!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 800)
				{
					GivePlayerValidWeapon(playerid, 4, 3);
					GivePlayerCash(playerid, -800);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased a knife!");
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"firstaid",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "You are not the required rank for that!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 500)
				{
					SetPlayerHealth(playerid, 100);
					GivePlayerCash(playerid, -500);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased a firstaid!");
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"SDPistol",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "You are not the required rank for that weapon!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 1000)
				{
					GivePlayerValidWeapon(playerid, 23, 2);
					GivePlayerCash(playerid, -1000);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased a silenced pistol!");
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Shotgun",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "You are not the required rank for that weapon!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 1500)
				{
					GivePlayerValidWeapon(playerid, 25, 2);
					GivePlayerCash(playerid, -1500);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased a shotgun!");
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Deagle",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "You are not the required rank for that weapon!");
					return 1;
				}
				if(GetPlayerCash(playerid) > 5000)
				{
					GivePlayerValidWeapon(playerid, 24, 2);
					GivePlayerCash(playerid, -5000);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased a Desert Eagle!");
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"MP5",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, " You are not the required rank for that weapon!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 2500)
				{
					GivePlayerValidWeapon(playerid, 29, 2);
					GivePlayerCash(playerid, -2500);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased an MP5!");
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Rifle",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 2)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "You are not the required rank for that weapon!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 3000)
				{
					GivePlayerValidWeapon(playerid, 33, 2);
					GivePlayerCash(playerid, -3000);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased a rifle!");
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"AK47",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 2)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "   you are not the required rank for that weapon!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 10000)
				{
					GivePlayerValidWeapon(playerid, 30, 2);
					GivePlayerCash(playerid, -10000);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased an AK-47!");
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"M4",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 2)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "You are not the required rank for that weapon!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 12000)
				{
					GivePlayerValidWeapon(playerid, 31, 2);
					GivePlayerCash(playerid, -12000);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased an M4!");
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Vest",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "You are not the required rank for that weapon!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 6000)
				{
					SetPlayerArmor(playerid, 99);
					GivePlayerCash(playerid, -6000);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased a kevlar vest!");
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Spas12",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 3)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "You are not the required rank for that weapon!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 35000)
				{
					GivePlayerValidWeapon(playerid, 27, 2);
					GivePlayerCash(playerid, -35000);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased a SPAS-12!");
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Sniper",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 3)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "You are not the required rank for that weapon!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 35000)
				{
					GivePlayerValidWeapon(playerid, 34, 2);
					GivePlayerCash(playerid, -35000);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased a sniper rifle!");
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"C4",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 4)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Yyou are not the required rank for that weapon!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 50000)
				{
					PlayerInfo[playerid][pC4Get] = 1;
					PlayerInfo[playerid][pBombs]++;
					GivePlayerCash(playerid, -50000);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"   You have purchased one block of C4!");
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY,"   You can't afford that package!");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, " You are not at the gun shack!");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "You are not a member of the hitman agency!");
		return 1;
	}
	return 1;
}

// Going to add these to 24-7 later

/*
CMD:blindfold(playerid, params[]) {
	return cmd_bf(playerid, params);
}

CMD:bf(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /(b)lind(f)old [player]");

	if(IsPlayerConnected(giveplayerid))
	{
        if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
		{
	        if(ProxDetectorS(6.0, playerid, giveplayerid))
			{
                new vehicle = GetPlayerVehicleID(playerid);
                if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, vehicle))
				{
                    if(GetPVarInt(giveplayerid, "BlindFolded") == 0) {
		    	        if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "You may not blindfold yourself."); return 1; }
	  			        format(string, sizeof(string), "%s has placed a blindfold over your eyes, your vision has been blocked.", GetPlayerNameEx(playerid));
				        SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "You have placed a blindfold over %s's eyes.", GetPlayerNameEx(giveplayerid));
				        SendClientMessageEx(playerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "* %s has placed a blindfold over %s's eyes.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				        TextDrawShowForPlayer(giveplayerid, BFText);
				        SetPVarInt(giveplayerid, "BlindFolded", 1);
				    }
     			    else {
		    	        if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, " You may not un-blindfold yourself !"); return 1; }
	  			        format(string, sizeof(string), "%s has removed the blindfold from over your eyes !", GetPlayerNameEx(playerid));
				        SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
				        format(string, sizeof(string), " ** You have removed the blindfold from over %s's eyes.", GetPlayerNameEx(giveplayerid));
				        SendClientMessageEx(playerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "* %s has removed a blindfold from over %s's eyes.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				        TextDrawHideForPlayer(giveplayerid, BFText);
				        DeletePVar(giveplayerid, "BlindFolded");
    			    }
    		    }
    		    else
    		    {
        		    SendClientMessageEx(playerid, COLOR_GREY, "You must be the driver in order to use this command.");
    			    return 1;
			    }
		    }
		    else
		    {
			    SendClientMessageEx(playerid, COLOR_GREY, " That person is not in-range of you.");
			    return 1;
		    }
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, " You are not allowed to use this command.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		return 1;
	}
    return 1;
}
*/

CMD:hgate(playerid, params[])
{
	return cmd_movegate(playerid, params);
}

CMD:movegate(playerid, params[])
{
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /movegate [pass]");
	new Float:X, Float:Y, Float:Z;
	for(new i = 0; i < sizeof(GateInfo); i++)
	{
		GetDynamicObjectPos(GateInfo[i][gGATE], X, Y, Z);
		if(GateInfo[i][gGroupID] == -1 && GateInfo[i][gFamilyID] == -1 && IsPlayerInRangeOfPoint(playerid,GateInfo[i][gRange], X, Y, Z))
		{
			if(GateInfo[i][gLocked] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Cong nay da bi khoa.");
			if(GateInfo[i][gAutomate] == 1) return 1;
			if(strcmp(params, GateInfo[i][gPass], true) == 0)
			{
				if(GateInfo[i][gStatus] == 0)
				{
					MoveDynamicObject(GateInfo[i][gGATE], GateInfo[i][gPosXM], GateInfo[i][gPosYM], GateInfo[i][gPosZM], GateInfo[i][gSpeed], GateInfo[i][gRotXM], GateInfo[i][gRotYM], GateInfo[i][gRotZM]);
					GateInfo[i][gStatus] = 1;
					if(GateInfo[i][gTimer] != 0)
					{
						switch(GateInfo[i][gTimer])
						{
							case 1: SetTimerEx("MoveTimerGate", 3000, false, "i", i);
							case 2: SetTimerEx("MoveTimerGate", 5000, false, "i", i);
							case 3: SetTimerEx("MoveTimerGate", 7000, false, "i", i);
							case 4: SetTimerEx("MoveTimerGate", 10000, false, "i", i);
						}
					}
				}
				else if(GateInfo[i][gStatus] == 1 && GateInfo[i][gTimer] == 0)
				{
					MoveDynamicObject(GateInfo[i][gGATE], GateInfo[i][gPosX], GateInfo[i][gPosY], GateInfo[i][gPosZ], GateInfo[i][gSpeed], GateInfo[i][gRotX], GateInfo[i][gRotY], GateInfo[i][gRotZ]);
					GateInfo[i][gStatus] = 0;
				}
			}
		}
	}
	return 1;
}

CMD:housegatepw(playerid, params[])
{
	SendClientMessageEx(playerid, COLOR_GREY, "/housegatepw da duoc thay doi thanh /setgatepass!");
	return 1;
}

CMD:setgatepass(playerid, params[])
{
	new Float:X, Float:Y, Float:Z, string[128];
	if(Homes[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "You don't own a home!");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /setgatepass [pass]");
	if(strlen(params) > 24) return SendClientMessageEx(playerid, COLOR_GRAD2, " Must be 24 characters or less! ");

	for(new i = 0; i < sizeof(GateInfo); i++)
	{
		GetDynamicObjectPos(GateInfo[i][gGATE], X, Y, Z);
		if(IsPlayerInRangeOfPoint(playerid, GateInfo[i][gRange], X, Y, Z))
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[GateInfo[i][gHID]][hOwnerID] && GateInfo[i][gGroupID] == -1 && GateInfo[i][gFamilyID] == -1)
			{
				format(GateInfo[i][gPass], 24, "%s", params);
				SaveGate(i);
				format(string, sizeof(string), "House Gate Password for gate %d changed to: %s", i, params);
				return SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
		}
	}
	SendClientMessageEx(playerid, COLOR_WHITE, "* You're not near a gate that you own!");
	return 1;
}

CMD:lockgate(playerid, params[])
{
	new Float:X, Float:Y, Float:Z, string[56];
    for(new i = 0; i < sizeof(GateInfo); i++)
	{
		GetDynamicObjectPos(GateInfo[i][gGATE], X, Y, Z);
		if(IsPlayerInRangeOfPoint(playerid, GateInfo[i][gRange], X, Y, Z))
		{
			if(GateInfo[i][gGroupID] == -1 && GateInfo[i][gFamilyID] == -1)
			{
				if(GetPlayerSQLId(playerid) == HouseInfo[GateInfo[i][gHID]][hOwnerID])
				{
					if(GateInfo[i][gLocked] == 0)
					{
						GateInfo[i][gLocked] = 1;
						format(string, sizeof(string), "* %s has locked their gate.", GetPlayerNameEx(playerid));
						ProxDetector(GateInfo[i][gRange], playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					}
					else
					{
						GateInfo[i][gLocked] = 0;
						format(string, sizeof(string), "* %s has unlocked their gate.", GetPlayerNameEx(playerid));
						ProxDetector(GateInfo[i][gRange], playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						if(GateInfo[i][gAutomate] == 1)
						{
							foreach(new p : Player) SetTimerEx("AutomaticGateTimer", 1000, false, "ii", p, i);
						}
					}
				}
			}
			else if(GateInfo[i][gGroupID] != -1 && GateInfo[i][gFamilyID] == -1)
			{
				if(PlayerInfo[playerid][pLeader] == GateInfo[i][gGroupID])
				{
					if(GateInfo[i][gLocked] == 0)
					{
						GateInfo[i][gLocked] = 1;
						format(string, sizeof(string), "* %s has locked the gate.", GetPlayerNameEx(playerid));
						ProxDetector(GateInfo[i][gRange], playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					}
					else
					{
						GateInfo[i][gLocked] = 0;
						format(string, sizeof(string), "* %s has unlocked the gate.", GetPlayerNameEx(playerid));
						ProxDetector(GateInfo[i][gRange], playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						if(GateInfo[i][gAutomate] == 1)
						{
							foreach(new p : Player) SetTimerEx("AutomaticGateTimer", 1000, false, "ii", p, i);
						}
					}
				}
			}
			else if(GateInfo[i][gGroupID] == -1 && GateInfo[i][gFamilyID] != -1)
			{
				if(PlayerInfo[playerid][pFMember] == GateInfo[i][gFamilyID] && PlayerInfo[playerid][pRank] == 6)
				{
					if(GateInfo[i][gLocked] == 0)
					{
						GateInfo[i][gLocked] = 1;
						format(string, sizeof(string), "* %s has locked the gate.", GetPlayerNameEx(playerid));
						ProxDetector(GateInfo[i][gRange], playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					}
					else
					{
						GateInfo[i][gLocked] = 0;
						format(string, sizeof(string), "* %s has unlocked the gate.", GetPlayerNameEx(playerid));
						ProxDetector(GateInfo[i][gRange], playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						if(GateInfo[i][gAutomate] == 1)
						{
							foreach(new p : Player) SetTimerEx("AutomaticGateTimer", 1000, false, "ii", p, i);
						}
					}
				}
			}
			else if(GateInfo[i][gGroupType] != 0)
			{
				if(PlayerInfo[playerid][pFactionModerator] >= 1)
				{
					if(GateInfo[i][gLocked] == 0)
					{
						GateInfo[i][gLocked] = 1;
						format(string, sizeof(string), "* %s has locked the gate.", GetPlayerNameEx(playerid));
						ProxDetector(GateInfo[i][gRange], playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						format(string, sizeof(string), "%s has locked gate ID %d.", GetPlayerNameEx(playerid), i);
						Log("logs/gedit.log", string);
					}
					else
					{
						GateInfo[i][gLocked] = 0;
						format(string, sizeof(string), "* %s has unlocked the gate.", GetPlayerNameEx(playerid));
						ProxDetector(GateInfo[i][gRange], playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						if(GateInfo[i][gAutomate] == 1)
						{
							foreach(new p : Player) SetTimerEx("AutomaticGateTimer", 1000, false, "ii", p, i);
						}
						format(string, sizeof(string), "%s has locked gate ID %d.", GetPlayerNameEx(playerid), i);
						Log("logs/gedit.log", string);
					}
				}
			}
		}
	}
	return 1;
}

CMD:su(playerid, params[]) {
	if(IsACop(playerid)) {
		if(PlayerInfo[playerid][pJailTime] > 0) {
			return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the su dung dieu nay trong tu.");
		}

		new
			iTargetID;

		if(sscanf(params, "u", iTargetID)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/su)spect [player]");
		}
		else if(!IsPlayerConnected(iTargetID)) {
			SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
		}
		else if(IsACop(iTargetID)) {
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung lenh nay voi nhan vien thuc thi phap lat.");
		}
		else if(PlayerInfo[iTargetID][pWantedLevel] >= 6) {
			SendClientMessageEx(playerid, COLOR_GRAD2, "Muc tieu da duoc truye na.");
		}
		else {
		    SetPVarInt(playerid, "suspect_TargetID", iTargetID);
		    ShowPlayerCrimeDialog(playerid);
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong phai la nhan vien thuc thi phap luat.");
	return 1;
}

CMD:traloi(playerid, params[]) {
	return cmd_reply(playerid, params);
}

CMD:reply(playerid, params[])
{
	new string[128];
	new reportid = INVALID_REPORT_ID;
	for(new i = 0; i < MAX_REPORTS; i++)
	{
		if(Reports[i][ReportFrom] == playerid && Reports[i][CheckingReport] != INVALID_PLAYER_ID)
		{
			reportid = i;
		}
	}
	if(reportid == INVALID_REPORT_ID)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co bao cao de tra loi vao luc nay.");
		return 1;
	}
	if (IsPlayerConnected(Reports[reportid][CheckingReport]))
	{
		format(string, sizeof(string), "%s(ID: %d) tra loi: %s", GetPlayerNameEx(playerid), playerid, params);
		SendClientMessageEx(Reports[reportid][CheckingReport], COLOR_YELLOW, string);

		format(string, sizeof(string), "Tra loi bao cao %s: %s", GetPlayerNameEx(Reports[reportid][CheckingReport]), params);
		SendClientMessageEx(playerid,  COLOR_YELLOW, string);
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong ket noi.");
	return 1;
}

CMD:aruttien(playerid, params[])
{
	if(!IsAtATM(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban phai o ATM!");
		return 1;
	}
    if(PlayerInfo[playerid][pFreezeBank] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ngan hang hien dang bi dong bang");
	new string[128], amount;
	if(sscanf(params, "d", amount))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /aguitien [amount]");
		format(string, sizeof(string), "  You have $%d in your account.", PlayerInfo[playerid][pAccount]);
		SendClientMessageEx(playerid, COLOR_GRAD3, string);
		return 1;
	}

	if (amount > PlayerInfo[playerid][pAccount] || amount < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   You don't have that much!");
		return 1;
	}
	if(gettime()-GetPVarInt(playerid, "LastTransaction") < 10) return SendClientMessageEx(playerid, COLOR_GRAD2, "You can only make a transaction once every 10 seconds, please wait!");
    SetPVarInt(playerid, "LastTransaction", gettime());
	if(PlayerInfo[playerid][pDonateRank] == 0)
	{
		new fee;
		fee = 3*amount/100;
		PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-fee;
		format(string, sizeof(string), "-$%d money as a 3 percent fee.", fee);
		SendClientMessageEx(playerid, COLOR_GRAD2, string);
	}
	PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-amount;
	GivePlayerCash(playerid,amount);
	format(string, sizeof(string), "  You have withdrawn $%s from your account. Current balance: $%s ", number_format(amount), number_format(PlayerInfo[playerid][pAccount]));
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	OnPlayerStatsUpdate(playerid);
	return 1;
}

CMD:aguitien(playerid, params[])
{
	if(!IsAtATM(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban phai o ATM!");
		return 1;
	}
    if(PlayerInfo[playerid][pFreezeBank] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ngan hang hien dang bi dong bang");
	new string[128], amount;
	if(sscanf(params, "d", amount))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /aguitien [amount]");
		format(string, sizeof(string), "  You have $%d in your account.", PlayerInfo[playerid][pAccount]);
		SendClientMessageEx(playerid, COLOR_GRAD3, string);
		return 1;
	}

	if (amount > GetPlayerCash(playerid) || amount < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   You don't have that much.");
		return 1;
	}
	if(gettime()-GetPVarInt(playerid, "LastTransaction") < 10) return SendClientMessageEx(playerid, COLOR_GRAD2, "You can only make a transaction once every 10 seconds, please wait!");
    SetPVarInt(playerid, "LastTransaction", gettime());
	if(PlayerInfo[playerid][pDonateRank] == 0)
	{
		new fee;
		fee = 3*amount/100;
		PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-fee;
		format(string, sizeof(string), "-$%d money (3 percent fee).", fee);
		SendClientMessageEx(playerid, COLOR_GRAD2, string);
	}
	GivePlayerCash(playerid,-amount);
	new curfunds = PlayerInfo[playerid][pAccount];
	PlayerInfo[playerid][pAccount]=amount+PlayerInfo[playerid][pAccount];
	SendClientMessageEx(playerid, COLOR_WHITE, "|___ ATM STATEMENT ___|");
	format(string, sizeof(string), "  Old Balance: $%s", number_format(curfunds));
	SendClientMessageEx(playerid, COLOR_GRAD2, string);
	format(string, sizeof(string), "  Deposit: $%s", number_format(amount));
	SendClientMessageEx(playerid, COLOR_GRAD4, string);
	SendClientMessageEx(playerid, COLOR_GRAD6, "|-----------------------------------------|");
	format(string, sizeof(string), "  New Balance: $%s", number_format(PlayerInfo[playerid][pAccount]));
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	OnPlayerStatsUpdate(playerid);
	return 1;
}

CMD:ataikhoan(playerid, params[])
{
	if(!IsAtATM(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban phai o ATM!");
		return 1;
	}
    if(PlayerInfo[playerid][pFreezeBank] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ngan hang hien dang bi dong bang");
	new string[128];
	format(string, sizeof(string), "  You have $%s in your account.", number_format(PlayerInfo[playerid][pAccount]));
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:achuyenkhoan(playerid, params[])
{
	if(PlayerInfo[playerid][pLevel] < 3)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You must be at least level 3!");
		return 1;
	}

	if(!IsAtATM(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban phai o ATM!");
		return 1;
	}
	if(PlayerInfo[playerid][pCash] < 0 || PlayerInfo[playerid][pAccount] < 0)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Your cash on-hand or in the bank is currently at a negative value!");
		return 1;
	}
    if(PlayerInfo[playerid][pFreezeBank] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ngan hang hien dang bi dong bang");
    if(gettime()-GetPVarInt(playerid, "LastTransaction") < 10) return SendClientMessageEx(playerid, COLOR_GRAD2, "You can only make a transaction once every 10 seconds, please wait!");
	new string[128], giveplayerid, amount;
	if(sscanf(params, "ud", giveplayerid, amount)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /achuyenkhoan [player] [amount]");

	if (IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			new playermoney = PlayerInfo[playerid][pAccount];
			if (amount > 0 && playermoney >= amount)
			{
				if(PlayerInfo[playerid][pDonateRank] == 0)
				{
					new fee;
					fee = 3*amount/100;
					PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-fee;
					format(string, sizeof(string), "-$%d money (3 percent fee).", fee);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
				}
				GivePlayerCashEx(playerid, TYPE_BANK, -amount);
				GivePlayerCashEx(giveplayerid, TYPE_BANK, amount);
				/*PlayerInfo[playerid][pAccount] -= amount;
				PlayerInfo[giveplayerid][pAccount] += amount;*/
				format(string, sizeof(string), "   You have transferred $%s to %s's account.", number_format(amount), GetPlayerNameEx(giveplayerid),giveplayerid);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "   $%s has been transferred to your bank account from %s.", number_format(amount), GetPlayerNameEx(playerid), playerid);
				SendClientMessageEx(giveplayerid, COLOR_GRAD1, string);
				new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
				format(string, sizeof(string), "[ATM] %s (IP:%s) has transferred $%s to %s (IP:%s).", GetPlayerNameEx(playerid), ip, number_format(amount), GetPlayerNameEx(giveplayerid), ipex);
				if(amount >= 420000)
				{
					ABroadCast(COLOR_YELLOW,string,2);
				}
				Log("logs/pay.log", string);
				PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
				SetPVarInt(playerid, "LastTransaction", gettime());

				/*OnPlayerStatsUpdate(playerid);
				OnPlayerStatsUpdate(giveplayerid);*/
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "   So tien giao dich khong hop le.");
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	return 1;
}

CMD:ruttien(playerid, params[]) return cmd_withdraw(playerid, params);
CMD:withdraw(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong ngan hang!");
		return 1;
	}
    if(PlayerInfo[playerid][pFreezeBank] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ngan hang hien dang bi dong bang");
	new string[128], amount;

	if(sscanf(params, "d", amount))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /ruttien [amount]");
		format(string, sizeof(string), "  You have $%d in your account.", PlayerInfo[playerid][pAccount]);
		SendClientMessageEx(playerid, COLOR_GRAD3, string);
		return 1;
	}

	if (amount > PlayerInfo[playerid][pAccount] || amount < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   You don't have that much!");
		return 1;
	}
	if(gettime()-GetPVarInt(playerid, "LastTransaction") < 10) return SendClientMessageEx(playerid, COLOR_GRAD2, "You can only make a transaction once every 10 seconds, please wait!");
    SetPVarInt(playerid, "LastTransaction", gettime());
	GivePlayerCash(playerid,amount);
	PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-amount;
	format(string, sizeof(string), "  You have withdrawn $%s from your account. Current balance: $%s ", number_format(amount), number_format(PlayerInfo[playerid][pAccount]));
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	OnPlayerStatsUpdate(playerid);
	return 1;
}

CMD:guitien(playerid, params[]) return cmd_deposit(playerid, params);
CMD:deposit(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong ngan hang!");
		return 1;
	}
    if(PlayerInfo[playerid][pFreezeBank] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ngan hang hien dang bi dong bang");
	new string[128], amount;

	if(sscanf(params, "d", amount))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /guitien [amount]");
		format(string, sizeof(string), "  You have $%d in your account.", PlayerInfo[playerid][pAccount]);
		SendClientMessageEx(playerid, COLOR_GRAD3, string);
		return 1;
	}

	if (amount > GetPlayerCash(playerid) || amount < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   You don't have that much.");
		return 1;
	}
	if(gettime()-GetPVarInt(playerid, "LastTransaction") < 10) return SendClientMessageEx(playerid, COLOR_GRAD2, "You can only make a transaction once every 10 seconds, please wait!");
    SetPVarInt(playerid, "LastTransaction", gettime());
	GivePlayerCash(playerid,-amount);
	new curfunds = PlayerInfo[playerid][pAccount];
	PlayerInfo[playerid][pAccount]=amount+PlayerInfo[playerid][pAccount];
	SendClientMessageEx(playerid, COLOR_WHITE, "|___ BANK STATEMENT ___|");
	format(string, sizeof(string), "  Old Balance: $%s", number_format(curfunds));
	SendClientMessageEx(playerid, COLOR_GRAD2, string);
	format(string, sizeof(string), "  Deposit: $%s", number_format(amount));
	SendClientMessageEx(playerid, COLOR_GRAD4, string);
	SendClientMessageEx(playerid, COLOR_GRAD6, "|-----------------------------------------|");
	format(string, sizeof(string), "  New Balance: $%s", number_format(PlayerInfo[playerid][pAccount]));
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	OnPlayerStatsUpdate(playerid);
	return 1;
}

CMD:taikhoan(playerid, params[]) return cmd_balance(playerid, params);
CMD:balance(playerid, params[])
{
	new string[128];
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong ngan hang!");
		return 1;
	}
	if(PlayerInfo[playerid][pFreezeBank] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ngan hang hien dang bi dong bang");
	format(string, sizeof(string), "You have $%s in your account.", number_format(PlayerInfo[playerid][pAccount]));
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:chuyentien(playerid, params[]) return cmd_wiretransfer(playerid, params);
CMD:wiretransfer(playerid, params[])
{
	if(PlayerInfo[playerid][pLevel] < 3)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You must be at least level 3!");
		return 1;
	}
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong ngan hang!");
		return 1;
	}
	if(PlayerInfo[playerid][pCash] < 0 || PlayerInfo[playerid][pAccount] < 0)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Your cash on-hand or in the bank is currently at a negative value!");
		return 1;
	}
	if(gettime()-GetPVarInt(playerid, "LastTransaction") < 10) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban chi co the su dung giao dich 10 giay 1 lan, xin vui long doi!");
    if(PlayerInfo[playerid][pFreezeBank] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ngan hang hien dang bi dong bang");
	new string[128], giveplayerid, amount;
	if(sscanf(params, "ud", giveplayerid, amount)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /chuyentien [player] [amount]");


	if (IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if(gPlayerLogged{giveplayerid} == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Nguoi choi ma ban co gang chuyen tien khong dang nhap!");
			new playermoney = PlayerInfo[playerid][pAccount] ;
			if (amount > 0 && playermoney >= amount)
			{
				GivePlayerCashEx(playerid, TYPE_BANK, -amount);
				GivePlayerCashEx(giveplayerid, TYPE_BANK, amount);
				/*PlayerInfo[playerid][pAccount] -= amount;
				PlayerInfo[giveplayerid][pAccount] += amount;*/
				format(string, sizeof(string), "   Ban da chuyen $%s cho tai vao tai khoan %s's.", number_format(amount), GetPlayerNameEx(giveplayerid),giveplayerid);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "   Bam da nhan duoc $%s vao tai khoan %s.", number_format(amount), GetPlayerNameEx(playerid), playerid);
				SendClientMessageEx(giveplayerid, COLOR_GRAD1, string);
				new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
				format(string, sizeof(string), "[BANK] %s (IP:%s) da chuyen $%s den %s (IP:%s).", GetPlayerNameEx(playerid), ip, number_format(amount), GetPlayerNameEx(giveplayerid), ipex);

				if(amount >= 500000)
				{
					ABroadCast(COLOR_YELLOW,string,2);
				}
				Log("logs/pay.log", string);
				PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
				SetPVarInt(playerid, "LastTransaction", gettime());

				/*OnPlayerStatsUpdate(playerid);
				OnPlayerStatsUpdate(giveplayerid);*/
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "   So tien giao dich khong hop le.");
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	return 1;
}



CMD:phone(playerid, params[])
{
	return ShowPlayerDialog(playerid,DIALOG_DIENTHOAI,DIALOG_STYLE_LIST,"DIEN THOAI","Goi\nDich vu\nTai khoan chinh\nQuang Cao","{ae0202}Chon","{FFFFFF}Huy");
}
CMD:goi(playerid, params[]) {
	return cmd_call(playerid, params);
}

CMD:call(playerid, params[])
{
	new string[128], phonenumb;

	if(sscanf(params, "d", phonenumb)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /goi [so dien thoai]");

	if (PlayerInfo[playerid][pJailTime] > 0)
	{
		SendClientMessageEx(playerid,COLOR_GREY,"Ban khong the su dung dien thoai khi dang o trong tu.");
		return 1;
	}
	if(PlayerTied[playerid] != 0 || PlayerCuffed[playerid] != 0)
	{
		SendClientMessageEx(playerid,COLOR_GREY,"Ban khong the su dung dien thoai.");
		return 1;
	}
	if(PlayerInfo[playerid][pPnumber] == 0)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co dien thoai.");
		return 1;
	}
	if(PhoneOnline[playerid] > 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Dien thoai cua ban dang tat.");
		return 1;
	}
	if(GetPVarType(playerid, "PlayerCuffed") || GetPVarType(playerid, "Injured") || GetPVarType(playerid, "IsFrozen")) {
   		return SendClientMessage(playerid, COLOR_GRAD2, "Ban khong the lam dieu do vao luc nay!");
	}
	format(string, sizeof(string), "* %s lay dien thoai di dong tu tui quan ra.", GetPlayerNameEx(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	if(phonenumb == 911)
	{
		if(PlayerInfo[playerid][pJailTime] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the su dung trong tu!");
		if(GetPVarType(playerid, "Has911Call")) SendClientMessageEx(playerid, COLOR_GREY, "Ban chi co the thuc hien mot cuoc goi cung luc.");
		else if(PlayerInfo[playerid][p911Muted] != 0) ShowPlayerDialog(playerid, 7955, DIALOG_STYLE_MSGBOX, "Chan cuoc goi", "Ban bi chan cuoc goi tu dich vu 911 do trong qua khu ban da lam dung.\n\n((Su dung /baocao de go bo lenh cam))", "Dong", "");
		else ShowPlayerDialog(playerid, DIALOG_911MENU, DIALOG_STYLE_LIST, "Dich vu khan cap 911", "Khan cap\nBac si\nHo tro canh sat (Khong khan cap)\nKeo xe", "Lua chon", "Ket thuc cuoc goi");
		return 1;
	}
	if(phonenumb == PlayerInfo[playerid][pPnumber])
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong the lien lac voi nguoi do.");
		return 1;
	}
	/*if(PlayerInfo[playerid][pMoneyPhone] < 1)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Ban khong du tien dien thoai de thuc hien cuoc goi nay....");
		return 1;
	}*/
	if(Mobile[playerid] != INVALID_PLAYER_ID)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban hien dang co 1 cuoc goi");
		return 1;
	}
	foreach(new i: Player)
	{
		if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
		{
			new giveplayerid = i;
			Mobile[playerid] = giveplayerid; //caller connecting
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PhoneOnline[giveplayerid] > 0)
					{
						SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lien lac voi nguoi do.");
						Mobile[playerid] = INVALID_PLAYER_ID;
						return 1;
					}
					if(Mobile[giveplayerid] != INVALID_PLAYER_ID)
					{
						SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lien lac voi nguoi do.");
						Mobile[playerid] = INVALID_PLAYER_ID;
						return 1;
					}
					if(Spectating[giveplayerid]!=0)
					{
						SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lien lac voi nguoi do.");
						Mobile[playerid] = INVALID_PLAYER_ID;
						return 1;
					}
					if (Mobile[giveplayerid] == INVALID_PLAYER_ID)
					{
						format(string, sizeof(string), "%d dang goi ban,su dung ((/p)) de tra loi.", phonenumb);
						SendClientMessageEx(giveplayerid, COLOR_YELLOW, string);
						RingTone[giveplayerid] = 10;
						format(string, sizeof(string), "* %s dien thoai dang do chuong.", GetPlayerNameEx(i));
						ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						new Float:rX, Float:rY, Float:rZ;
						GetPlayerPos(giveplayerid, rX, rY, rZ);
						//SendRingtoneToArea(playerid, 100, rX, rY, rZ);
						//SendAudioToPlayer(playerid, 60, 100);
						CellTime[playerid] = 1;
						SetPlayerAttachedObject(playerid, 9, 18872, 6);
						return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					}
				}
			}
		}
	}
	SendClientMessageEx(playerid, COLOR_GRAD2, "Cuoc goi cua ban khong duoc thuc hien, vui long kiem tra lai so va thu lai.");
	return 1;
}

CMD:t(playerid, params[])
{
	return cmd_sms(playerid, params);
}

CMD:txt(playerid, params[])
{
	return cmd_sms(playerid, params);
}

CMD:sms(playerid, params[])
{
	if(gPlayerLogged{playerid} == 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban chua dang nhap!");
	if(PlayerInfo[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong co dien thoai di dong.");
	if(PhoneOnline[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Your phone is off.");
	if(GetPVarInt(playerid, "Injured") != 0 || PlayerInfo[playerid][pHospital] != 0) return SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong the lam dieu nay vao luc nay.");
	if(PlayerTied[playerid] != 0 || PlayerCuffed[playerid] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung dien thoai di dong.");
	if(PlayerInfo[playerid][pJailTime] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the su dung dien thoai trong tu!");

	new string[128], phonenumb, text[100];
	if(sscanf(params, "ds[100]", phonenumb, text)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/t)ext [sdt] [noi dung]");

	if(Spectating[playerid] == 0)
	{
		format(string, sizeof(string), "* %s lay dien thoai ra va gui tin nhan cho ai do.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}

	if(phonenumb == 9400)
	{
		if ((strcmp("yes", text, true, strlen(text)) == 0) && (strlen(text) == strlen("yes")))
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Tin nhan van ban.");
			SendClientMessageEx(playerid, COLOR_YELLOW, "SMS: Xin chao chuc mot ngay tot lanh, Nguoi gui: Tong dai");
			//SendAudioToPlayer(playerid, 47, 100);
			RingTone[playerid] = 20;
			return 1;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_YELLOW, "SMS: Xin chao chuc mot ngay tot lanh, Nguoi gui: Tong dai");
			//SendAudioToPlayer(playerid, 47, 100);
			RingTone[playerid] = 20;
			return 1;
		}
	}
	foreach(new i: Player)
	{
		if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
		{
			new giveplayerid = i;
			if(Mobile[giveplayerid] != INVALID_PLAYER_ID)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Dien thoai cua nguoi do dang ban.");
				return 1;
			}
			Mobile[playerid] = giveplayerid; //caller connecting
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{

					if(PhoneOnline[giveplayerid] > 0)
					{
						SendClientMessageEx(playerid, COLOR_GREY, "Dien thoai cua nguoi do dang tat.");
						Mobile[playerid] = INVALID_PLAYER_ID;
						return 1;
					}
					foreach(new u: Player)
		    		{
		        		if(GetPVarInt(u, "BigEar") == 6 && (GetPVarInt(u, "BigEarPlayer") == playerid || GetPVarInt(u, "BigEarPlayer") == giveplayerid))
		        		{
       						format(string, sizeof(string), "(BE) %s SMS cho %s: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), text);
							SendClientMessageEx(u,COLOR_YELLOW, string);
						}
					}
					if(PlayerInfo[playerid][pPhonePrivacy] == 1)
					{
						format(string, sizeof(string), "SMS: %s, Nguoi gui: Khong biet.", text, GetPlayerNameEx(playerid));
					}
					else
					{
						format(string, sizeof(string), "SMS: %s, Nguoi gui: %s (%d)", text, GetPlayerNameEx(playerid), PlayerInfo[playerid][pPnumber]);
					}

					if(i != playerid)
					{
						if(PlayerInfo[i][pSmslog] > 0)
						{
							new query[384], ftext[128];
							mysql_escape_string(text, ftext);
							if(PlayerInfo[playerid][pPhonePrivacy] == 1) format(query, sizeof(query), "INSERT INTO `sms` (`id`, `sender`, `senderid`, `sendernumber`, `receiver`, `receiverid`, `receivernumber`, `message`, `date`) VALUES (NULL, '%s', %d, 0, '%s', %d, %d, '%s', NOW())", GetPlayerNameExt(playerid), GetPlayerSQLId(playerid), GetPlayerNameExt(i), GetPlayerSQLId(i), phonenumb, ftext);
							else format(query, sizeof(query), "INSERT INTO `sms` (`id`, `sender`, `senderid`, `sendernumber`, `receiver`, `receiverid`, `receivernumber`, `message`, `date`) VALUES (NULL, '%s', %d, %d, '%s', %d, %d, '%s', NOW())", GetPlayerNameExt(playerid), GetPlayerSQLId(playerid), PlayerInfo[playerid][pPnumber], GetPlayerNameExt(i), GetPlayerSQLId(i), phonenumb, ftext);
							mysql_function_query(MainPipeline, query, false, "OnQueryFinish", "i", SENDDATA_THREAD);
						}
					}

					//format(string, sizeof(string), "* %s's phone beeps.", sendername);
					RingTone[giveplayerid] =20;
					SendClientMessageEx(giveplayerid, COLOR_YELLOW, string);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					SendClientMessageEx(playerid, COLOR_WHITE, "Gui tin nhan van ban");
					format(string, sizeof(string), "~r~$-%d", 2);
					GameTextForPlayer(playerid, string, 5000, 1);
					PlayerInfo[playerid][pMoneyPhone] -= 2;
					//PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					//SendAudioToPlayer(playerid, 47, 100);
					//SendAudioToPlayer(giveplayerid, 47, 100);
					Mobile[playerid] = INVALID_PLAYER_ID;

					if(strcmp(PlayerInfo[giveplayerid][pAutoTextReply], "Nothing", true) != 0)
					{
						format(string, sizeof(string), "SMS: %s, Nguoi gui: %s [automated response] (%d)", PlayerInfo[giveplayerid][pAutoTextReply], GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pPnumber]);
						SendClientMessageEx(playerid, COLOR_YELLOW, string);
					}

					return 1;
				}
			}
		}
	}
	SendClientMessageEx(playerid, COLOR_GRAD2, "  Gui tin nhan that bai...");
	return 1;
}

CMD:p(playerid, params[]) {
	return cmd_pickup(playerid, params);
}

CMD:pickup(playerid, params[])
{
	new string[128];
	if(Mobile[playerid] != INVALID_PLAYER_ID)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban dang co mot cuoc goi...");
		return 1;
	}
	if(GetPVarType(playerid, "PlayerCuffed") || GetPVarType(playerid, "Injured") || GetPVarType(playerid, "IsFrozen") || PlayerInfo[playerid][pHospital]) {
   		return SendClientMessage(playerid, COLOR_GRAD2, "Ban khong the lam dieu do vao thoi diem nay!");
	}
	foreach(new i: Player)
	{
		if(Mobile[i] == playerid)
		{
			Mobile[playerid] = i; //caller connecting
			SendClientMessageEx(i,  COLOR_GRAD2, "   Ho da bo dien thoai vao tui quan.");
			format(string, sizeof(string), "* %s tra loi dien thoai di dong cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RingTone[playerid] = 0;
			SetPlayerAttachedObject(playerid, 9, 330, 6);
			return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
		}
	}
	return 1;
}


CMD:h(playerid, params[]) {
	return cmd_hangup(playerid, params);
}

CMD:hangup(playerid,params[])
{
	new string[128];

	if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||PlayerInfo[playerid][pHospital]!=0)
	{
		SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong the lam dieu nay vao luc nay.");
		return 1;
	}
	new caller = Mobile[playerid];
	if((IsPlayerConnected(caller) && caller != INVALID_PLAYER_ID))
	{
		if(caller < MAX_PLAYERS)
		{
			SendClientMessageEx(caller,  COLOR_GRAD2, "   Nguoi do da nghe dien thoai.");
			format(string, sizeof(string), "* %s puts away their cellphone.", GetPlayerNameEx(caller));
			ProxDetector(30.0, caller, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			CellTime[caller] = 0;
			Mobile[caller] = INVALID_PLAYER_ID;
		}
		CellTime[playerid] = 0;
		SendClientMessageEx(playerid,  COLOR_GRAD2, "   Ban nghe dien thoai.");
		format(string, sizeof(string), "* %s da tat dien thoai.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		Mobile[playerid] = INVALID_PLAYER_ID;
		CellTime[playerid] = 0;
		RingTone[playerid] = 0;
		RemovePlayerAttachedObject(playerid, 9);
		RemovePlayerAttachedObject(caller, 9);
		SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		return 1;
	}
	SendClientMessageEx(playerid,  COLOR_GRAD2, "   Dien thoai dang trong tui cua ban.");
	return 1;
}

CMD:calls(playerid, params[])
{
	if(0 <= PlayerInfo[playerid][pMember] < MAX_GROUPS)
	{
		new string[128];
		SendClientMessageEx(playerid, COLOR_DBLUE, "____________________ 911 CALLS ____________________");
		for(new i = 999; i >= 0; i--)
		{
			if(Calls[i][BeingUsed] == 1)
			{
				for(new j; j < arrGroupData[PlayerInfo[playerid][pMember]][g_iJCount]; j++)
				{
					if(strcmp(arrGroupJurisdictions[PlayerInfo[playerid][pMember]][j][g_iAreaName], Calls[i][Area], true) == 0 || strcmp(arrGroupJurisdictions[PlayerInfo[playerid][pMember]][j][g_iAreaName], Calls[i][MainZone], true) == 0)
					{
						if(Calls[i][Type] == 0 && IsACop(playerid))
						{
							format(string, sizeof(string), "[KHAN CAP] %s | Goi #%i | Mieu ta: %s | 10-20: %s | Dang doi: %d phut", GetPlayerNameEx(Calls[i][CallFrom]), i, Calls[i][Description], Calls[i][Area], Calls[i][TimeToExpire]);
							SendClientMessageEx(playerid, COLOR_RED, string);
						}
					}
				}
			}
		}
		for(new i = 999; i >= 0; i--)
		{
			if(Calls[i][BeingUsed] == 1)
			{
				for(new j; j < arrGroupData[PlayerInfo[playerid][pMember]][g_iJCount]; j++)
				{
					if(strcmp(arrGroupJurisdictions[PlayerInfo[playerid][pMember]][j][g_iAreaName], Calls[i][Area], true) == 0 || strcmp(arrGroupJurisdictions[PlayerInfo[playerid][pMember]][j][g_iAreaName], Calls[i][MainZone], true) == 0)
					{
						if(Calls[i][Type] == 1 && IsAMedic(playerid))
						{
							format(string, sizeof(string), "%s | Goi #%i | Mieu ta: %s | 10-20: %s | Dang doi: %d phut", GetPlayerNameEx(Calls[i][CallFrom]), i, Calls[i][Description], Calls[i][Area], Calls[i][TimeToExpire]);
							SendClientMessageEx(playerid, COLOR_WHITE, string);
						}
					}
				}
			}
		}
		for(new i = 999; i >= 0; i--)
		{
			if(Calls[i][BeingUsed] == 1)
			{
				for(new j; j < arrGroupData[PlayerInfo[playerid][pMember]][g_iJCount]; j++)
				{
					if(strcmp(arrGroupJurisdictions[PlayerInfo[playerid][pMember]][j][g_iAreaName], Calls[i][Area], true) == 0 || strcmp(arrGroupJurisdictions[PlayerInfo[playerid][pMember]][j][g_iAreaName], Calls[i][MainZone], true) == 0)
					{
						if(Calls[i][Type] == 2 && IsACop(playerid))
						{
							format(string, sizeof(string), "%s | Goi #%i | Mieu ta: %s | 10-20: %s | Dang doi: %d phut", GetPlayerNameEx(Calls[i][CallFrom]), i, Calls[i][Description], Calls[i][Area], Calls[i][TimeToExpire]);
							SendClientMessageEx(playerid, COLOR_WHITE, string);
						}
					}
				}
			}
		}
		for(new i = 999; i >= 0; i--)
		{
			if(Calls[i][BeingUsed] == 1)
			{
				for(new j; j < arrGroupData[PlayerInfo[playerid][pMember]][g_iJCount]; j++)
				{
					if(strcmp(arrGroupJurisdictions[PlayerInfo[playerid][pMember]][j][g_iAreaName], Calls[i][Area], true) == 0 || strcmp(arrGroupJurisdictions[PlayerInfo[playerid][pMember]][j][g_iAreaName], Calls[i][MainZone], true) == 0)
					{
						if(Calls[i][Type] == 3 && (IsACop(playerid) || IsATowman(playerid)))
						{
							format(string, sizeof(string), "[KEO XE] %s | Goi #%i | Mieu ta: %s | 10-20: %s | Dang doi: %d phut", GetPlayerNameEx(Calls[i][CallFrom]), i, Calls[i][Description], Calls[i][Area], Calls[i][TimeToExpire]);
							SendClientMessageEx(playerid, COLOR_WHITE, string);
						}
					}
				}
			}
		}
		SendClientMessageEx(playerid, COLOR_DBLUE, "___________________________________________________");
	}
	return 1;
}

CMD:ac(playerid, params[])
{
	return cmd_acceptcall(playerid, params);
}

CMD:acceptcall(playerid, params[])
{
	if(0 <= PlayerInfo[playerid][pMember] < MAX_GROUPS)
	{
		new string[128], callid;
		if(sscanf(params, "d", callid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /ac [call #]");

		if(callid < 0 || callid > 999) return SendClientMessageEx(playerid, COLOR_GREY, "   So luong cuoc goi khong duoc duoi 0 va tren 999!");
		if(Calls[callid][BeingUsed] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "   So dien thoai khong co trong danh sach!");
		if(playerid == Calls[callid][CallFrom]) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the chap nhan cuoc goi cua ban!");
		if((Calls[callid][Type] == 0 && !IsACop(playerid)) || (Calls[callid][Type] == 1 && !IsAMedic(playerid)) || (Calls[callid][Type] == 2 && !IsACop(playerid)) || (Calls[callid][Type] == 3 && !IsACop(playerid) && !IsATowman(playerid))) return SendClientMessageEx(playerid, COLOR_GREY, "   You cannot answer this call!");
		if(!IsPlayerConnected(Calls[callid][CallFrom]))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi goi da mat ket noi!");
			Calls[callid][CallFrom] = INVALID_PLAYER_ID;
			Calls[callid][BeingUsed] = 0;
			return 1;
		}
		for(new j; j < arrGroupData[PlayerInfo[playerid][pMember]][g_iJCount]; j++)
		{
			if(strcmp(arrGroupJurisdictions[PlayerInfo[playerid][pMember]][j][g_iAreaName], Calls[callid][Area], true) == 0 || strcmp(arrGroupJurisdictions[PlayerInfo[playerid][pMember]][j][g_iAreaName], Calls[callid][MainZone], true) == 0)
			{
				foreach(new i: Player)
				{
					if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iRadioAccess]) {
						format(string, sizeof(string), "%s da chap nhan cuoc goi %s's tu %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(Calls[callid][CallFrom]), Calls[callid][Area]);
						SendClientMessageEx(i, COLOR_DBLUE, string);
					}
					if(GetPVarInt(i, "BigEar") == 4 && GetPVarInt(i, "BigEarGroup") == PlayerInfo[playerid][pMember]) {
						format(string, sizeof(string), "(BE) %s da chap nhan cuoc goi %s's tu %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(Calls[callid][CallFrom]), Calls[callid][Area]);
						SendClientMessageEx(i, COLOR_DBLUE, string);
					}
				}
				AddCallToken(playerid);
				format(string, sizeof(string), "%s da chap nhan cuoc goi cua ban. Bay gio ban dang trong mot cuoc goi truc tiep voi ho. (/h de tat)", GetPlayerNameEx(playerid));
				SendClientMessageEx(Calls[callid][CallFrom], COLOR_WHITE, string);
				format(string, sizeof(string), "Ban da chap nhan cuoc goi %s's. Ban dang trong cuoc goi truc tiep voi ho. (/h de tat)", GetPlayerNameEx(Calls[callid][CallFrom]));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				Mobile[playerid] = Calls[callid][CallFrom];
				SetPlayerAttachedObject(playerid, 9, 330, 6);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
				Mobile[Calls[callid][CallFrom]] = playerid;
				SetPlayerAttachedObject(Calls[callid][CallFrom], 9, 330, 6);
				SetPlayerSpecialAction(Calls[callid][CallFrom], SPECIAL_ACTION_USECELLPHONE);
				PlayerInfo[playerid][pCallsAccepted]++;
				Calls[callid][RespondingID] = playerid;
				Calls[callid][BeingUsed] = 0;
				Calls[callid][TimeToExpire] = 0;
				strmid(Calls[callid][Area], "None", 0, 4, 4);
				strmid(Calls[callid][MainZone], "None", 0, 4, 4);
				strmid(Calls[callid][Description], "None", 0, 4, 4);
				DeletePVar(Calls[callid][CallFrom], "Has911Call");
				return 1;
			}
		}
		return SendClientMessageEx(playerid, COLOR_GREY, "   Cuoc goi nay khong nam trong quyen han cua minh!");
	}
	return 1;
}

CMD:ic(playerid, params[])
{
	return cmd_ignorecall(playerid, params);
}

CMD:ignorecall(playerid, params[])
{
	if(0 <= PlayerInfo[playerid][pMember] < MAX_GROUPS)
	{
		new string[128], callid;
		if(sscanf(params, "d", callid)) return SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /ic [call #]");

		if(callid < 0 || callid > 999) return SendClientMessageEx(playerid, COLOR_GREY, "   So luong cuoc goi khong duoc duoi 0 va tren 999!");
		if(Calls[callid][BeingUsed] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "   So dien thoai khong co trong danh sach!");
		if(playerid == Calls[callid][CallFrom]) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the huy bo cuoc goi cua minh!");
		if((Calls[callid][Type] == 0 && !IsACop(playerid)) || (Calls[callid][Type] == 1 && !IsAMedic(playerid)) || (Calls[callid][Type] == 2 && !IsACop(playerid)) || (Calls[callid][Type] == 3 && !IsACop(playerid) && !IsATowman(playerid))) return SendClientMessageEx(playerid, COLOR_GREY, "   You cannot answer this call!");
		if(!IsPlayerConnected(Calls[callid][CallFrom]))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi goi da mat ket noi!");
			Calls[callid][CallFrom] = INVALID_PLAYER_ID;
			Calls[callid][BeingUsed] = 0;
			return 1;
		}
		for(new j; j < arrGroupData[PlayerInfo[playerid][pMember]][g_iJCount]; j++)
		{
			foreach(new i: Player)
			{
				if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iRadioAccess]) {
					format(string, sizeof(string), "%s da huy cuoc goi %s's.", GetPlayerNameEx(playerid), GetPlayerNameEx(Calls[callid][CallFrom]));
					SendClientMessageEx(i, COLOR_DBLUE, string);
				}
				if(GetPVarInt(i, "BigEar") == 4 && GetPVarInt(i, "BigEarGroup") == PlayerInfo[playerid][pMember]) {
					format(string, sizeof(string), "(BE) %s da huy cuoc goi %s's.", GetPlayerNameEx(playerid), GetPlayerNameEx(Calls[callid][CallFrom]));
					SendClientMessageEx(i, COLOR_DBLUE, string);
				}
			}
			DeletePVar(Calls[callid][CallFrom], "Has911Call");
			Calls[callid][CallFrom] = INVALID_PLAYER_ID;
			Calls[callid][BeingUsed] = 0;
			Calls[callid][TimeToExpire] = 0;
			strmid(Calls[callid][Area], "None", 0, 4, 4);
			strmid(Calls[callid][MainZone], "None", 0, 4, 4);
			strmid(Calls[callid][Description], "None", 0, 4, 4);
			return 1;
		}
		return SendClientMessageEx(playerid, COLOR_GREY, "   Cuoc goi nay khong nam trong pham vi tham quyen cua ban!");
	}
	return 1;
}

CMD:huycuocgoi(playerid, params[]) {
	return cmd_cancelcall(playerid, params);
}

CMD:cancelcall(playerid, params[])
{
    for(new i = 0; i < MAX_CALLS; i++)
	{
	    if(Calls[i][CallFrom] == playerid)
	    {
	        Calls[i][CallFrom] = INVALID_PLAYER_ID;
			Calls[i][BeingUsed] = 0;
			Calls[i][TimeToExpire] = 0;
			strmid(Calls[i][Area], "None", 0, 4, 4);
			strmid(Calls[i][MainZone], "None", 0, 4, 4);
			strmid(Calls[i][Description], "None", 0, 4, 4);
			DeletePVar(playerid, "Has911Call");
			return SendClientMessageEx(playerid, COLOR_WHITE, "Ban da huy bo cuoc goi 911 cua minh." );
		}
	}
	SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co cuoc goi 911 nao.");
	return 1;
}
/*
CMD:adjustdiv(playerid, params[])
{
    if(PlayerInfo[playerid][pFMember] >= 1)
	{
		if(PlayerInfo[playerid][pRank] >= 6)
		{
		    new iFamily, iDiv, divisionname[GROUP_MAX_DIV_LEN], szMessage[128];
		    if(sscanf(params, "is[16]", iDiv, divisionname))
		    {
		        SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /adjustdiv [division id] [division name]");
		        return 1;
		    }
		    if(0 <= iDiv <= 4)
			{
				new file[32], month, day, year;
				getdate(year,month,day);
			    iFamily = PlayerInfo[playerid][pFMember];
				format(FamilyDivisionInfo[iFamily][iDiv], 16, "%s", divisionname);
				SaveFamily(iFamily);
				format(szMessage, sizeof(szMessage), "* You have changed the name of division %d to %s.", iDiv, divisionname);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
				format(szMessage, sizeof(szMessage), "%s adjusted %s's division %d to %s", GetPlayerNameEx(playerid), FamilyInfo[iFamily][FamilyName], iDiv, divisionname);
				format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", iFamily, year, month, day);
				Log(file, szMessage);
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "Invalid division ID!");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung lenh nay!");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong family!");
	return 1;
}
*/
CMD:brenewal(playerid, params[])
{
	if(PlayerInfo[playerid][pShopTech] >= 1)
	{
	    new
	        iType,
	        iOrderID,
	        iBusiness,
			szMessage[128],
			months;

		if(sscanf(params, "dddd", iBusiness, iType, months, iOrderID)) {
		    SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /brenewal [Business ID] [Type (1-3)] [Months] [OrderID]");
		}
		else if(!IsValidBusinessID(iBusiness)) {
		    SendClientMessageEx(playerid, COLOR_GREY, "Invalid business ID");
		}
		else {
		    Businesses[iBusiness][bMonths] = 259200+gettime()+(2592000*months);
			format(szMessage, sizeof(szMessage), "You have renewed business %i for %i months.", iBusiness, months);
			SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
			format(szMessage, sizeof(szMessage), "[BUSINESS RENEWAL] %s has renewed BusinessID %i, Type %i, Months %i, OrderID %i", GetPlayerNameEx(playerid), iBusiness, iType, months, iOrderID);
			Log("logs/shoplog.log", szMessage);
			SaveBusiness(iBusiness);
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GREY, "Ban khong duoc phep su dung lenh nay.");
	}
	return 1;
}

CMD:shopbusiness(playerid, params[])
{
	if(PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		return 1;
	}

	new string[128], choice[32], businessid, amount, invoice[64];
	if(sscanf(params, "s[32]dDs[64]", choice, businessid, amount, invoice))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shopbusiness [name] [business ID] [Amount] [invoice #]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Exterior, Interior, SupplyPoint, Price, Type, Inventory, InventoryCapacity, Delete");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : CustomInterior, CustomExterior, Months, VW, grade");
		return 1;
	}

	if (!IsValidBusinessID(businessid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Invalid business ID entered.");
		return 1;
	}
    if(!strcmp(choice, "grade", true))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "You have changed the grade on this business!");
		format(string, sizeof(string), "[SHOPBUSINESS] %s has changed BusinessID %d's Grade to %i", GetPlayerNameEx(playerid), businessid, amount);
		Businesses[businessid][bGrade] = amount;
		Log("logs/shoplog.log", string);
	}
    if(!strcmp(choice, "months", true))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "You have changed the months left on this business!");
		format(string, sizeof(string), "[SHOPBUSINESS] %s has changed BusinessID %d's Months to %i", GetPlayerNameEx(playerid), businessid, amount);
		Businesses[businessid][bMonths] = (2592000*amount)+gettime()+259200;
		Log("logs/shoplog.log", string);
	}
	else if(!strcmp(choice, "vw", true))
	{
		Businesses[businessid][bVW] = amount;
		SendClientMessageEx(playerid, COLOR_WHITE, "You have changed the VW!");
		format(string, sizeof(string), "[SHOPBUSINESS] %s has changed BusinessID %d's vw to %d", GetPlayerNameEx(playerid), businessid, amount);
		Log("logs/shoplog.log", string);
	}
	if(!strcmp(choice, "exterior", true))
	{
		GetPlayerPos(playerid, Businesses[businessid][bExtPos][0], Businesses[businessid][bExtPos][1], Businesses[businessid][bExtPos][2]);
		GetPlayerFacingAngle(playerid, Businesses[businessid][bExtPos][3]);
		SendClientMessageEx(playerid, COLOR_WHITE, "You have changed the exterior!");
		format(string, sizeof(string), "[SHOPBUSINESS] %s has changed BusinessID %d's Exterior to X:%f Y:%f Z:%f", GetPlayerNameEx(playerid), businessid, Businesses[businessid][bExtPos][0], Businesses[businessid][bExtPos][1],Businesses[businessid][bExtPos][2]);
		Log("logs/shoplog.log", string);
	}
	else if(!strcmp(choice, "interior", true))
	{
		GetPlayerPos(playerid, Businesses[businessid][bIntPos][0], Businesses[businessid][bIntPos][1], Businesses[businessid][bIntPos][2]);
		GetPlayerFacingAngle(playerid, Businesses[businessid][bIntPos][3]);
		Businesses[businessid][bInt] = GetPlayerInterior(playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "You have changed the interior!");
		format(string, sizeof(string), "[SHOPBUSINESS] %s has changed BusinessID %d's Interior to X:%f Y:%f Z:%f", GetPlayerNameEx(playerid), businessid, Businesses[businessid][bIntPos][0], Businesses[businessid][bIntPos][1],Businesses[businessid][bIntPos][2]);
		Log("logs/shoplog.log", string);
	}
	else if(strcmp(choice, "custominterior", true) == 0)
	{
		if(Businesses[businessid][bCustomInterior] == 0)
		{
			Businesses[businessid][bCustomInterior] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Business set to custom interior!");
		}
		else
		{
			Businesses[businessid][bCustomInterior] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "Business set to normal (not custom) interior!");
		}
		format(string, sizeof(string), "[SHOPBUSINESS] %s has edited BusinessID %d's CustomInterior.", GetPlayerNameEx(playerid), businessid);
		Log("logs/shoplog.log", string);
		return 1;
	}
	else if(strcmp(choice, "customexterior", true) == 0)
	{
		if(Businesses[businessid][bCustomExterior] == 0)
		{
			Businesses[businessid][bCustomExterior] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Business set to custom exterior!");
		}
		else
		{
			Businesses[businessid][bCustomExterior] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "Business set to normal (not custom) exterior!");
		}
		format(string, sizeof(string), "[SHOPBUSINESS] %s has edited BusinessID %d's CustomExterior.", GetPlayerNameEx(playerid), businessid);
		Log("logs/shoplog.log", string);
		return 1;
	}
	else if(!strcmp(choice, "supplypoint", true))
	{
		if(Businesses[businessid][bOrderState] == 2)
		{
			return SendClientMessageEx(playerid, COLOR_GREY, "You can't change the supply point when a delivery is on its way.");
		}
		GetPlayerPos(playerid, Businesses[businessid][bSupplyPos][0], Businesses[businessid][bSupplyPos][1], Businesses[businessid][bSupplyPos][2]);
		SendClientMessageEx(playerid, COLOR_WHITE, "You have edited the supply point!");
		format(string, sizeof(string), "[SHOPBUSINESS] %s has changed BusinessID %d's Supply Point to X:%f Y:%f Z:%f", GetPlayerNameEx(playerid), businessid, Businesses[businessid][bSupplyPos][0], Businesses[businessid][bSupplyPos][1],Businesses[businessid][bSupplyPos][2]);
		Log("logs/shoplog.log", string);
	}

	else if(!strcmp(choice, "price", true))
	{
		Businesses[businessid][bValue] = amount;
		format(string, sizeof(string), "You have set the business price to $%d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "[SHOPBUSINESS] %s has changed BusinessID %d's Price to $%d.", GetPlayerNameEx(playerid), businessid, amount);
		Log("logs/shoplog.log", string);
	}

	else if(!strcmp(choice, "type", true))
	{
		if(Businesses[businessid][bOrderState] == 2)
		{
			return SendClientMessageEx(playerid, COLOR_GREY, "You can't change the business type when a delivery is on its way.");
		}
		Businesses[businessid][bType] = amount;
		format(string, sizeof(string), "You have set the business type to %s.", GetBusinessTypeName(amount));
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "[SHOPBUSINESS] %s has changed BusinessID %d's Type to %s (%d).", GetPlayerNameEx(playerid), businessid, GetBusinessTypeName(amount), amount);
		Log("logs/shoplog.log", string);
	}

	else if(!strcmp(choice, "inventory", true))
	{
		Businesses[businessid][bInventory] = amount;
		format(string, sizeof(string), "You have set the business inventory to %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "[SHOPBUSINESS] %s has changed BusinessID %d's Inventory to %d.", GetPlayerNameEx(playerid), businessid, amount);
		Log("logs/shoplog.log", string);
	}
	else if(!strcmp(choice, "InventoryCapacity", true))
	{
		Businesses[businessid][bInventoryCapacity] = amount;
		format(string, sizeof(string), "You have set the business inventory capacity to %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "[SHOPBUSINESS] %s has changed BusinessID %d's Inventory Capacity to %d.", GetPlayerNameEx(playerid), businessid, amount);
		Log("logs/shoplog.log", string);
	}

	else if(!strcmp(choice, "delete", true))
	{
		Businesses[businessid][bExtPos][0] = 0;
		Businesses[businessid][bExtPos][1] = 0;
		Businesses[businessid][bExtPos][2] = 0;
		Businesses[businessid][bName][0] = 0;
		Businesses[businessid][bType] = 0;
		format(string, sizeof(string), "You have deleted the business.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "[SHOPBUSINESS] %s has deleted BusinessID %d.", GetPlayerNameEx(playerid), businessid);
		Log("logs/bedit.log", string);
		//TODO IMPROVE
		for (new i; i < MAX_BUSINESS_GAS_PUMPS; i++) {
			DestroyDynamicGasPump(businessid, i);
		}
		for (new i; i < MAX_BUSINESS_DEALERSHIP_VEHICLES; i++) {
			DestroyVehicle(Businesses[businessid][bVehID][i]);
		}
	}

	RefreshBusinessPickup(businessid);
	SaveBusiness(businessid);
	Streamer_UpdateEx(playerid, Businesses[businessid][bExtPos][0], Businesses[businessid][bExtPos][1], Businesses[businessid][bExtPos][2]);
	return 1;
}

CMD:shophouse(playerid, params[])
{
	if(PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		return 1;
	}

	new string[128], choice[32], houseid, amount, invoice[64];
	if(sscanf(params, "s[32]dDs[64]", choice, houseid, amount, invoice))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shophouse [name] [houseid] [amount] [invoice #]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Exterior, Interior, CustomInterior, Class (1-3), Level, Price");
		return 1;
	}

	if(strcmp(choice, "interior", true) == 0)
	{
		GetPlayerPos( playerid, HouseInfo[houseid][hInteriorX], HouseInfo[houseid][hInteriorY], HouseInfo[houseid][hInteriorZ] );
		HouseInfo[houseid][hIntIW] = GetPlayerInterior( playerid );
		HouseInfo[houseid][hIntVW] = houseid+6000;
		SendClientMessageEx( playerid, COLOR_WHITE, "You have changed the interior!" );
		SaveHouse(houseid);
		return 1;
	}
	else if(strcmp(choice, "custominterior", true) == 0)
	{
		if(HouseInfo[houseid][hCustomInterior] == 0)
		{
			HouseInfo[houseid][hCustomInterior] = 1;
			SendClientMessageEx( playerid, COLOR_WHITE, "House set to custom interior!" );
		}
		else
		{
			HouseInfo[houseid][hCustomInterior] = 0;
			SendClientMessageEx( playerid, COLOR_WHITE, "House set to normal (not custom) interior!" );
		}
		SaveHouse(houseid);
		return 1;
	}
	else if(strcmp(choice, "customexterior", true) == 0)
	{
		if(HouseInfo[houseid][hCustomExterior] == 0)
		{
			HouseInfo[houseid][hCustomExterior] = 1;
			SendClientMessageEx( playerid, COLOR_WHITE, "House set to custom exterior!" );
		}
		else
		{
			HouseInfo[houseid][hCustomExterior] = 0;
			SendClientMessageEx( playerid, COLOR_WHITE, "House set to normal (not custom) exterior!" );
		}
		SaveHouse(houseid);
		return 1;
	}
	else if(strcmp(choice, "exterior", true) == 0)
	{
		GetPlayerPos( playerid, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ] );
		HouseInfo[houseid][hExtIW] = GetPlayerInterior(playerid);
		HouseInfo[houseid][hExtVW] = GetPlayerVirtualWorld(playerid);
		SendClientMessageEx( playerid, COLOR_WHITE, "You have changed the exterior!" );
		SaveHouse(houseid);
		ReloadHousePickup(houseid);
	}
	else if(strcmp(choice, "level", true) == 0)
	{
		HouseInfo[houseid][hLevel] = amount;
		format(string, sizeof(string), "You have set the house level to %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		ReloadHouseText(houseid);
	}
	else if(strcmp(choice, "price", true) == 0)
	{
		HouseInfo[houseid][hValue] = amount;
		format(string, sizeof(string), "You have set the houses price to $%d.", amount );
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		ReloadHouseText(houseid);
	}
	else if(strcmp(choice, "class", true) == 0)
	{
		switch(amount)
		{
		case 1:
			{
				format(HouseInfo[houseid][hDescription], 128, "Low" );
				SendClientMessageEx(playerid, COLOR_WHITE, "You have set the house's class to 1 (Low)" );
			}
		case 2:
			{
				format(HouseInfo[houseid][hDescription], 128, "Medium" );
				SendClientMessageEx(playerid, COLOR_WHITE, "You have set the house's class to 2 (Medium)" );
			}
		case 3:
			{
				format(HouseInfo[houseid][hDescription], 128, "High" );
				SendClientMessageEx(playerid, COLOR_WHITE, "You have set the house's class to 3 (High)" );
			}
		}
		if(HouseInfo[houseid][hOwned] ==0)
		{
			format(string, sizeof(string), "This home is\n for sale!\n Description: %s\nCost: $%d\n Level: %d\nID: %d\nTo buy this house type /buyhouse",HouseInfo[houseid][hDescription],HouseInfo[houseid][hValue],HouseInfo[houseid][hLevel],houseid);
			UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_GREEN, string);
		}
	}
	SaveHouse(houseid);
	format(string, sizeof(string), "[SHOPHOUSE] %s modified %s on house %d to %d - Invoice %s", GetPlayerNameEx(playerid), choice, houseid, amount, invoice);
	Log("logs/shoplog.log", string);
	return 1;
}

CMD:shopbusinessname(playerid, params[])
{
	if(PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		return 1;
	}

	new string[128], houseid, ownername, invoice[64];
	if(sscanf(params, "dus[64]", houseid, ownername, invoice)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shopbusinessname [Business ID] [Player] [invoice]");

	if(!IsPlayerConnected(ownername)) {
    	return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	}

	if(PlayerInfo[ownername][pBusiness] != INVALID_BUSINESS_ID) {
	    return SendClientMessageEx(playerid, COLOR_GREY, "That player already owns another business.");
	}

	Businesses[houseid][bOwner] = GetPlayerSQLId(ownername);
	strcpy(Businesses[houseid][bOwnerName], GetPlayerNameEx(ownername), MAX_PLAYER_NAME);
	PlayerInfo[ownername][pBusiness] = houseid;
	PlayerInfo[ownername][pBusinessRank] = 5;
	SaveBusiness(houseid);
	OnPlayerStatsUpdate(ownername);
	RefreshBusinessPickup(houseid);

	format(string, sizeof(string), "[SHOPBUSINESS] %s modified Owner on Business %d to %s - Invoice %s", GetPlayerNameEx(playerid), houseid, GetPlayerNameEx(ownername), invoice);
	Log("logs/shoplog.log", string);
	return 1;
}

CMD:shophousename(playerid, params[])
{
	if(PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		return 1;
	}

	new string[128], houseid, ownername[MAX_PLAYER_NAME], invoice[64];
	if(sscanf(params, "ds[24]s[64]", houseid, ownername, invoice)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shophousename [houseid] [name] [invoice]");
	format(HouseInfo[houseid][hOwnerName], sizeof(ownername), "%s", ownername);
	format(string, sizeof(string), "You have set the house owner to %s", ownername);
	HouseInfo[houseid][hOwned] = 1;
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	DestroyDynamicPickup(HouseInfo[houseid][hPickupID]);
	HouseInfo[houseid][hPickupID] = CreateDynamicPickup(1273, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ], .worldid = HouseInfo[houseid][hExtVW], .interiorid = HouseInfo[houseid][hExtIW]);
	ReloadHouseText(houseid);

	SaveHouse(houseid);
	format(string, sizeof(string), "[SHOPHOUSE] %s modified Owner on house %d to %s - Invoice %s", GetPlayerNameEx(playerid), houseid, ownername, invoice);
	Log("logs/shoplog.log", string);
	return 1;
}

/*CMD:edit(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep su dung lenh nay.");
		return 1;
	}

	new string[128], choice[32], amount;
	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "|__________________ Edit __________________|");
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /edit [name] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Level, Price");
		SendClientMessageEx(playerid, COLOR_WHITE, "|____________________________________________|");
		return 1;
	}

	for(new i = 0; i < sizeof(HouseInfo); i++)
	{
		if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]) && GetPlayerInterior(playerid) == HouseInfo[i][hExtIW] && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hExtVW])
		{
			format(string, sizeof(string), "House: %d", i);
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
			if(amount > 0)
			{
				if(strcmp(choice,"level",true) == 0)
				{
					HouseInfo[i][hLevel] = amount;
				}
				else if(strcmp(choice,"price",true) == 0)
				{
					HouseInfo[i][hValue] = amount;
				}
			}
			ReloadHouseText(i);
		}
	}
	return 1;
}*/

CMD:houseinvite(playerid, params[])
{
	if(Homes[playerid] > 0)
	{
		new giveplayerid, hstring[1024], title[64], zone[MAX_ZONE_NAME];
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /houseinvite [player]");
		if(gettime()-GetPVarInt(playerid, "LastHouseInvite") < 15) return SendClientMessageEx(playerid, COLOR_GRAD2, "You can only use /houseinvite once every 15 seconds, please wait!");
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			hInviteOfferTo[playerid] = giveplayerid;
			format(title, sizeof(title), "House Invite for %s", GetPlayerNameEx(giveplayerid));
			for(new i; i < MAX_HOUSES; i++)
			{
				if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID])
				{
					Get3DZone(HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ], zone, MAX_ZONE_NAME);
					format(hstring, sizeof(hstring), "%s\nHouse ID %d - Location: %s", hstring, i, zone);
				}
			}
			ShowPlayerDialog(playerid, DIALOG_HOUSEINVITE, DIALOG_STYLE_LIST, title, hstring, "Lua chon", "Huy bo");
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi choi khong hop le.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:hinvite(playerid, params[]) {
	return cmd_houseinvite(playerid, params);
}

CMD:getrewardgift(playerid, params[]) {
	if(iRewardBox) {
		if(IsPlayerInRangeOfDynamicObject(playerid, iRewardObj, 5.0)) {
			if(PlayerInfo[playerid][pGoldBoxTokens] >= 1) {

				--PlayerInfo[playerid][pGoldBoxTokens];

				new
					szMessage[128];

				switch(random(10)) {
					case 0..7: switch(random(7)) { // 70%
						case 0:
						{
							GivePlayerCash(playerid, 30000);
							SendClientMessageEx(playerid, COLOR_GRAD2, " Congratulations - you have won $30,000!");
							format(szMessage, sizeof(szMessage), "* %s was just gifted $30,000, enjoy!", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						}
						case 1:
						{
							PlayerInfo[playerid][pMats] += 20000;
							SendClientMessageEx(playerid, COLOR_GRAD2, " Congratulations - you have won 20,000 materials!");
							format(szMessage, sizeof(szMessage), "* %s was just gifted 20,000 materials, enjoy!", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						}
						case 2:
						{
							PlayerInfo[playerid][pExp] += 10;
							SendClientMessageEx(playerid, COLOR_GRAD2, " Congratulations - you have won 10 respect points!");
							format(szMessage, sizeof(szMessage), "* %s was just gifted 10 respect points, enjoy!", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						}
						case 3:
						{
							PlayerInfo[playerid][pTokens] += 50;
							SendClientMessageEx(playerid, COLOR_GRAD2, " Congratulations - you have won 50 VIP tokens!");
							format(szMessage, sizeof(szMessage), "* %s was just gifted 50 VIP tokens, enjoy!", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						}
						case 4:
						{
							PlayerInfo[playerid][pCansap] += 500;
							SendClientMessageEx(playerid, COLOR_GRAD2, " Ban Nhan Duoc 500 La Can Sa!");
							format(szMessage, sizeof(szMessage), "* %s Da Nhan Duoc 500 La Can Sa", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						}
						case 5:
						{
							PlayerInfo[playerid][pTokens] += 50;
							SendClientMessageEx(playerid, COLOR_GRAD2, " Congratulations - you have won 50 VIP tokens!");
							format(szMessage, sizeof(szMessage), "* %s was just gifted 50 VIP tokens, enjoy!", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						}
						case 6:
						{
							PlayerInfo[playerid][pCansap] += 1000;
							SendClientMessageEx(playerid, COLOR_GRAD2, " Ban Nhan Duoc 1,000 La Can Sa!");
							format(szMessage, sizeof(szMessage), "* %s Da Nhan Duoc 1,000 La Can Sa", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						}
						case 7:
						{
							PlayerInfo[playerid][pTienBan] += 5000;
							SendClientMessageEx(playerid, COLOR_GRAD2, " Ban Nhan Duoc 5,000 Tien Ban!");
							format(szMessage, sizeof(szMessage), "* %s Da Nhan Duoc 5,000 Tien Ban", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						}
						default:
						{
							SendClientMessageEx(playerid, COLOR_GRAD2, " Congratulations - you have won a Free Laser Pointer!");
							format(szMessage, sizeof(szMessage), "* %s was just gifted a Free Laser Pointer, enjoy!", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
							new icount = GetPlayerToySlots(playerid);
							for(new v = 0; v < icount; v++)
							{
								if(PlayerToyInfo[playerid][v][ptModelID] == 0)
								{
									PlayerToyInfo[playerid][v][ptModelID] = 18643;
									PlayerToyInfo[playerid][v][ptBone] = 6;
									PlayerToyInfo[playerid][v][ptPosX] = 0.0;
									PlayerToyInfo[playerid][v][ptPosY] = 0.0;
									PlayerToyInfo[playerid][v][ptPosZ] = 0.0;
									PlayerToyInfo[playerid][v][ptRotX] = 0.0;
									PlayerToyInfo[playerid][v][ptRotY] = 0.0;
									PlayerToyInfo[playerid][v][ptRotZ] = 0.0;
									PlayerToyInfo[playerid][v][ptScaleX] = 1.0;
									PlayerToyInfo[playerid][v][ptScaleY] = 1.0;
									PlayerToyInfo[playerid][v][ptScaleZ] = 1.0;
									PlayerToyInfo[playerid][v][ptTradable] = 1;

									g_mysql_NewToy(playerid, v);
									return 1;
								}
							}

							for(new i = 0; i < MAX_PLAYERTOYS; i++)
							{
								if(PlayerToyInfo[playerid][i][ptModelID] == 0)
								{
									PlayerToyInfo[playerid][i][ptModelID] = 18643;
									PlayerToyInfo[playerid][i][ptBone] = 6;
									PlayerToyInfo[playerid][i][ptPosX] = 0.0;
									PlayerToyInfo[playerid][i][ptPosY] = 0.0;
									PlayerToyInfo[playerid][i][ptPosZ] = 0.0;
									PlayerToyInfo[playerid][i][ptRotX] = 0.0;
									PlayerToyInfo[playerid][i][ptRotY] = 0.0;
									PlayerToyInfo[playerid][i][ptRotZ] = 0.0;
									PlayerToyInfo[playerid][i][ptScaleX] = 1.0;
									PlayerToyInfo[playerid][i][ptScaleY] = 1.0;
									PlayerToyInfo[playerid][i][ptScaleZ] = 1.0;
									PlayerToyInfo[playerid][i][ptTradable] = 1;
									PlayerToyInfo[playerid][i][ptSpecial] = 1;

									SendClientMessageEx(playerid, COLOR_GRAD1, "Due to you not having any available slots, we've temporarily gave you an additional slot to use/sell/trade your laser.");
									SendClientMessageEx(playerid, COLOR_RED, "Note: Please take note that after selling the laser, the temporarily additional toy slot will be removed.");
									break;
								}
							}
						}
					}
					case 9, 10: switch(random(3)) {// 20%
						case 0:
						{

							format(szMessage, sizeof(szMessage), "AdmCmd: %s was just gifted by the system and he won a free house", GetPlayerNameEx(playerid));
							Log("logs/gifts.log", szMessage);
							format(szMessage, sizeof(szMessage), "[MAYCHU] %s was just gifted by the system and he won a free house.", GetPlayerNameEx(playerid));
							ABroadCast(COLOR_YELLOW, szMessage, 2);
							SendClientMessageEx(playerid, COLOR_GRAD2, " Congratulations - you have won a free house!");
							SendClientMessageEx(playerid, COLOR_GRAD2, " Note: This rare reward may take up to 48 hours to be rewarded.");
							AddFlag(playerid, INVALID_PLAYER_ID, "Free House (Gift)");
							format(szMessage, sizeof(szMessage), "* %s was just gifted a free house, enjoy!", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						}
						case 1:
						{
							PlayerInfo[playerid][pTokens] += 150;
							SendClientMessageEx(playerid, COLOR_GRAD2, " Congratulations - you have won 150 VIP tokens!");
							format(szMessage, sizeof(szMessage), "* %s was just gifted 150 VIP tokens, enjoy!", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						}
						default:
						{

							format(szMessage, sizeof(szMessage), "AdmCmd: %s was just gifted by the system and he won a set of neons", GetPlayerNameEx(playerid));
							Log("logs/gifts.log", szMessage);
							format(szMessage, sizeof(szMessage), "[MAYCHU] %s was just gifted by the system and he won a free set of neons.", GetPlayerNameEx(playerid));
							ABroadCast(COLOR_YELLOW, szMessage, 2);
							SendClientMessageEx(playerid, COLOR_GRAD2, " Congratulations - you have won a free set of neons!");
							SendClientMessageEx(playerid, COLOR_GRAD2, " Note: This rare reward may take up to 48 hours to be rewarded.");
							AddFlag(playerid, INVALID_PLAYER_ID, "Free set of neons (Gift)");
							format(szMessage, sizeof(szMessage), "* %s was just gifted a free set of neons, enjoy!", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						}

					}
					default:
					{ // 10%
						new gift = Random(1, 6);
						if(gift >= 1 && gift <= 3)
						{
							if(RimMod > 0) // Rim Kit
							{
								PlayerInfo[playerid][pRimMod]++;
								RimMod--;
								g_mysql_SaveMOTD();

								format(szMessage, sizeof(szMessage), "[MAYCHU] %s was just gifted by the system and he won a rim modification kit. (%d left)", GetPlayerNameEx(playerid), RimMod);

								Log("logs/gifts.log", szMessage);
								format(szMessage, sizeof(szMessage), "* %s was just gifted a rim modification kit, enjoy! Only %d kits left.", GetPlayerNameEx(playerid), RimMod);
								ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
							}
							else
							{
								gift = 5;
							}
						}
						else if(gift == 4) //
						{
							if(CarVoucher > 0)
							{
								PlayerInfo[playerid][pCarVoucher]++;
								CarVoucher--;
								g_mysql_SaveMOTD();

								format(szMessage, sizeof(szMessage), "[MAYCHU] %s was just gifted by the system and he won a restricted car voucher. (%d left)", GetPlayerNameEx(playerid), CarVoucher);

								Log("logs/gifts.log", szMessage);
								format(szMessage, sizeof(szMessage), "* %s was just gifted a restricted car voucher, enjoy! Only %d car vouchers left.", GetPlayerNameEx(playerid), CarVoucher);
								ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
								SendClientMessageEx(playerid, COLOR_CYAN, " 1 Restricted Car Voucher has been added to your account.");
								SendClientMessageEx(playerid, COLOR_GRAD2, " Note you may access your voucher(s) with /myvouchers");
							}
							else gift = 5;
						}
						if(gift == 5)
						{
							PlayerInfo[playerid][pGVIPVoucher]++;
							SendClientMessageEx(playerid, COLOR_GRAD2, " Congratulations - you have won one month of Gold VIP!");
							SendClientMessageEx(playerid, COLOR_CYAN, " 1 Gold VIP Voucher has been added to your account.");
							SendClientMessageEx(playerid, COLOR_GRAD2, " Note you may access your voucher(s) with /myvouchers");
							format(szMessage, sizeof(szMessage), "[MAYCHU] %s has won one month of Gold VIP.", GetPlayerNameEx(playerid));
							ABroadCast(COLOR_YELLOW, szMessage, 2);
							format(szMessage, sizeof(szMessage), "* %s was just gifted one month of Gold VIP, enjoy!", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						}
					}
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "You have no Gold Box Gift tokens.");
		}
		else SendClientMessage(playerid, COLOR_GREY, "You're not near the Gold Box.");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Reward Playing is currently not in effect.");
	return 1;
}

CMD:heal(playerid, params[])
{
	new giveplayerid, price;
	if(sscanf(params, "ud", giveplayerid, price)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /heal [player] [price]");

	if(!(200 <= price <= 1000))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Healing price can't below $200 or above $1,000.");
		return 1;
	}
	if (giveplayerid == playerid)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "You can't heal yourself.");
		return 1;
	}
	if (IsPlayerConnected(giveplayerid))
	{
		new iVehicle = GetPlayerVehicleID(playerid);
		if(IsAMedic(playerid))
		{
			if(GetPlayerVehicleID(giveplayerid) == iVehicle && (IsAnAmbulance(iVehicle)))
			{
			    new Float:X, Float:Y, Float:Z;
	   			GetPlayerPos(giveplayerid, X, Y, Z);

				if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessageEx(playerid, TEAM_GREEN_COLOR,"You are not near them!");
				new Float:tempheal;
				GetPlayerHealth(giveplayerid,tempheal);
				if(tempheal >= 100.0)
				{
					SendClientMessageEx(playerid, TEAM_GREEN_COLOR,"That person is fully healed.");
					return 1;
				}
				new string[64];
				format(string, sizeof(string), "You healed %s for $%d.", GetPlayerNameEx(giveplayerid),price);
				SendClientMessageEx(playerid, COLOR_PINK, string);
				GivePlayerCash(playerid, price / 2);
				Tax += price / 2;
				GivePlayerCash(giveplayerid, -price);
				SetPlayerHealth(giveplayerid, 100);
				PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
				PlayerPlaySound(giveplayerid, 1150, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "You have been healed to 100 health for $%d by %s.",price, GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, TEAM_GREEN_COLOR,string);
				if(GetPVarType(giveplayerid, "STD"))
				{
					DeletePVar(giveplayerid, "STD");
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "* You are no longer infected with a STD because of the medic's help.");
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "Both you and the patient must be in an ambulance.");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	return 1;
}

CMD:pr(playerid, params[])
{
	if(PlayerInfo[playerid][pRadio] == 1)
	{
		if(isnull(params))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /pr [chat]");
			SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN: Su dung /tanso de thiet lap lai tan so radio cua ban.");
			return 1;
		}
		if(PlayerInfo[playerid][pRadioFreq] >= 1 || PlayerInfo[playerid][pRadioFreq] <= -1)
		{
			if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||PlayerInfo[playerid][pHospital]!=0 || PlayerInfo[playerid][pJailTime] > 0)
			{
				SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong the lam dieu nay vao luc nay.");
				return 1;
			}
			RadioBroadCast(playerid, params);
			return 1;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the de tan so la 0, vui long dat lai tan so tren 1.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co radio cam tay!");
	}
	return 1;
}

CMD:tanso(playerid, params[]) {
	return cmd_setfreq(playerid, params);
}

CMD:setfreq(playerid, params[])
{
	new string[128], frequency;
	if(sscanf(params, "d", frequency))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /tanso [tan so]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "HUONG DAN: Thiet lap tan so cua ban la 0 , radio se ve che do mac dinh.");
		return 1;
	}

	if(frequency > 9999999 || frequency < -9999999) { SendClientMessageEx(playerid, COLOR_GREY, "Tan so co the cao hon -9999999 va thap hon 9999999!"); return 1; }
	if (PlayerInfo[playerid][pRadio] == 1)
	{
		PlayerInfo[playerid][pRadioFreq] = frequency;
		format(string, sizeof(string), "Ban da thay doi tan so thanh %d khz.",frequency);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co radio nao ca!");
	}
	return 1;
}

CMD:calc(playerid, params[]) {
	return cmd_calculate(playerid, params);
}

CMD:calculate(playerid, params[])
{
	new string[128], method[20], value1, value2;
	if(sscanf(params, "ds[20]d", value1, method, value2))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /calculate [value] [operation] [value].");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Operations: Add, Subtract, Multiply, Divide.");
		return 1;
	}

	if(strcmp(method,"multiply",true) == 0 || strcmp(method,"*",true) == 0)
	{
		new sum = value1*value2;
		format(string,sizeof(string),"%s * %s = %s.", number_format(value1), number_format(value2), number_format(sum));
		SendClientMessageEx(playerid,COLOR_WHITE,string);
	}
	if(strcmp(method,"divide",true) == 0 || strcmp(method,"/",true) == 0)
	{
		if(value2 == 0)
		{
			SendClientMessageEx(playerid,COLOR_WHITE,"The world will implode in 10 seconds - you divided by zero, idiot!");
			return 1;
		}
		new sum = value1/value2;
		format(string,sizeof(string),"%s / %s = %s.", number_format(value1), number_format(value2), number_format(sum));
		SendClientMessageEx(playerid,COLOR_WHITE,string);
	}
	if(strcmp(method,"add",true) == 0 || strcmp(method,"+",true) == 0)
	{
		new sum = value1+value2;
		format(string,sizeof(string),"%s + %s = %s.", number_format(value1), number_format(value2), number_format(sum));
		SendClientMessageEx(playerid,COLOR_WHITE,string);
	}
	if(strcmp(method,"subtract",true) == 0 || strcmp(method,"-",true) == 0)
	{
		new sum = value1-value2;
		format(string,sizeof(string),"%s - %s = %s.", number_format(value1), number_format(value2), number_format(sum));
		SendClientMessageEx(playerid,COLOR_WHITE,string);
	}
	return 1;
}

CMD:evpos(playerid, params[]) {
	return cmd_seteventpos(playerid, params);
}

CMD:seteventpos(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelper] >= 3 || PlayerInfo[playerid][pDonateRank] >= 4)
	{
		if(EventKernel[EventCreator] == playerid || PlayerInfo[playerid][pAdmin] >= 4)
		{
			new string[128];

			GetPlayerPos(playerid, EventKernel[EventPositionX], EventKernel[EventPositionY], EventKernel[EventPositionZ]);
			EventKernel[EventInterior] = GetPlayerInterior(playerid);
			EventKernel[EventWorld] = GetPlayerVirtualWorld(playerid);
			SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event position, type /seteventinfo to change the event properties.");
			EventKernel[EventJoinStaff] = 1;
			format(string, sizeof( string ), "[MAYCHU] %s has started an event, type /eventstaff if you want to be in the event staff.", GetPlayerNameEx(playerid) );
			ABroadCast(COLOR_YELLOW, string, 1);
			CBroadCast(COLOR_YELLOW, string, 2);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "You are not making an event, or you're not the correct admin level.");
		}
	}
	return 1;
}

CMD:evtype(playerid, params[]) {
	return cmd_seteventtype(playerid, params);
}

CMD:seteventtype(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelper] >= 3 || PlayerInfo[playerid][pDonateRank] >= 4)
	{
		if(EventKernel[EventCreator] == playerid || PlayerInfo[playerid][pAdmin] >= 4)
		{
			if(isnull(params))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /seteventtype [type]");
				SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : DM, TDM, Infection");
				return 1;
			}

			if(strcmp(params,"dm",true) == 0)
			{
				EventKernel[ EventType ] = 1;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event type to DM.");
			}
			else if(strcmp(params,"tdm",true) == 0)
			{
				EventKernel[ EventType ] = 2;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event type to TDM.");
			}
			else if(strcmp(params,"race",true) == 0)
			{
				EventKernel[ EventType ] = 3;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event type to Race.");
			}
			else if(strcmp(params,"infection",true) == 0)
			{
				EventKernel[ EventType ] = 4;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event type to infection.");
			}
			else if(strcmp(params,"none",true) == 0)
			{
				EventKernel[ EventType ] = 0;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event type to None.");
			}
		}
	}
	return 1;
}

CMD:editev(playerid, params[]) {
	return cmd_editevent(playerid, params);
}

CMD:editevent(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelper] >= 3 || PlayerInfo[playerid][pDonateRank] >= 4)
	{
		if(EventKernel[EventCreator] == playerid || PlayerInfo[playerid][pAdmin] >= 4)
		{
			new choice[32], opstring[64];
			if(EventKernel[EventType] == 1)
			{
			    if(sscanf(params, "s[32]S[64]", choice, opstring))
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent [name]");
					SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Jointext, Limit, Health, Armor, Gun1, Gun2, Gun3, Gun4, Gun5");
					return 1;
				}
			}
			else if(EventKernel[EventType] == 2)
			{
			    if(sscanf(params, "s[32]S[64]", choice, opstring))
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent [name]");
					SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Jointext, Limit, CustomInterior, Team1Skin, Team2Skin, Team1Color, Team2Color");
					SendClientMessageEx(playerid, COLOR_GREY, "Team1Spawn, Team2Spawn, Health, Armor, Gun1, Gun2, Gun3, Gun4, Gun5");
					return 1;
				}
			}
			else if(EventKernel[EventType] == 3)
			{
			    if(sscanf(params, "s[32]S("")[64]", choice, opstring))
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent [name]");
					SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Jointext, Limit, Health, Hours, CheckPoints, RaceType(Future Development), OnFoot(0/1)");
					SendClientMessageEx(playerid, COLOR_GREY, "Relay For Life Note: Set hours to something between 1-5 and don't touch the limit!");
					SendClientMessageEx(playerid, COLOR_GREY, "Relay For Life Note: Enable OnFoot!");
					return 1;
				}
			}
			else if(EventKernel[EventType] == 4)
			{
			    if(sscanf(params, "s[32]S[64]", choice, opstring))
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent [name]");
					SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Jointext, Limit, Health, Armor, Gun1, Gun2, Gun3, Gun4, Gun5");
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "You need to set the event type first!");
				return 1;
			}

			if(strcmp(choice, "jointext",true) == 0)
			{
				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent jointext [text]");
					return 1;
				}
				strmid(EventKernel[EventInfo], opstring, 0, strlen(opstring), 64);
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event join text.");
			}
			else if(strcmp(choice, "health", true) == 0)
			{
				if(EventKernel[EventType] != 1 && EventKernel[EventType] != 2 && EventKernel[EventType] != 3 && EventKernel[EventType] != 4)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This name is not available for this event type.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent health [health]");
					return 1;
				}
				new Float: health;
				health = floatstr(opstring);
				EventKernel[EventHealth] = health;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event health.");
			}
			else if(strcmp(choice, "armor", true) == 0)
			{
				if(EventKernel[EventType] != 1 && EventKernel[EventType] != 2 && EventKernel[EventType] != 4)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "This name is not available for this event type.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent armor [armor]");
					return 1;
				}
				new Float: armor;
				armor = floatstr(opstring);
				if(armor == 100) armor = 99;
				EventKernel[EventArmor] = armor;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event armor.");
			}
			else if(strcmp(choice, "team1skin", true) == 0)
			{
				if(EventKernel[EventType] != 2)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "This name is not available for this event type.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent team1skin [skinid]");
					return 1;
				}

				new skin;
				skin = strval(opstring);
				EventKernel[EventTeamSkin][0] = skin;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event team 1 skin.");
			}
			else if(strcmp(choice, "team2skin", true) == 0)
			{
				if(EventKernel[EventType] != 2)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This name is not available for this event type.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent team2skin [skinid]");
					return 1;
				}

				new skin;
				skin = strval(opstring);
				EventKernel[EventTeamSkin][1] = skin;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event team 2 skin.");
			}
			else if(strcmp(choice, "team1color", true) == 0)
			{
				if(EventKernel[EventType] != 2)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This name is not available for this event type.");
					return 1;
				}

				if(!strlen(opstring))
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent team1color [color]");
					SendClientMessageEx(playerid, COLOR_GREY, "black | white | blue | red | green | purple | yellow | lightblue |");
					SendClientMessageEx(playerid, COLOR_GREY, "darkgreen | darkblue | darkgrey | brown | darkbrown | darkred | pink ");
					return 1;
				}
				EventKernel[EventTeamColor][0] = GetColorCode(opstring);
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event team 1 color.");
			}
			else if(strcmp(choice, "team2color", true) == 0)
			{
				if(EventKernel[EventType] != 2)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This name is not available for this event type.");
					return 1;
				}

				if(!strlen(opstring))
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent team2color [color]");
					SendClientMessageEx(playerid, COLOR_GREY, "black | white | blue | red | green | purple | yellow | lightblue |");
					SendClientMessageEx(playerid, COLOR_GREY, "darkgreen | darkblue | darkgrey | brown | darkbrown | darkred | pink ");
					return 1;
				}
				EventKernel[EventTeamColor][1] = GetColorCode(opstring);
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event team 2 color.");
			}
			else if(strcmp(choice, "team1spawn", true) == 0)
			{
				if(EventKernel[EventType] != 2)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This name is not available for this event type.");
					return 1;
				}
				GetPlayerPos(playerid, EventKernel[ EventTeamPosX1 ], EventKernel[ EventTeamPosY1 ], EventKernel[ EventTeamPosZ1 ] );
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted team 1's spawn position.");
			}
			else if(strcmp(choice, "team2spawn", true) == 0)
			{
				if(EventKernel[EventType] != 2)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This feature is not available for this event type.");
					return 1;
				}
				GetPlayerPos(playerid, EventKernel[ EventTeamPosX2 ], EventKernel[ EventTeamPosY2 ], EventKernel[ EventTeamPosZ2 ]);
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted team 2's spawn position.");
			}
			else if(strcmp(choice, "limit", true) == 0)
			{
			    if(EventKernel[EventTime] != 0)
			        return SendClientMessageEx(playerid, COLOR_GRAD2, "This feature is not available for this event, everyone is free to join. If you want to enable this please set the hours to 0.");
				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent limit [limit 0-60]");
					return 1;
				}

				new limit;
				limit = strval(opstring);
				if(limit < 0 || limit > 120) return SendClientMessageEx(playerid, COLOR_RED, "You cannot adjust the event limit higher than 120 or below 0");
				EventKernel[EventLimit] = limit;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the players in event limit.");
			}
			else if(strcmp(choice, "hours", true) == 0)
			{
			    if(EventKernel[EventType] != 3)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This feature is not available for this event type.");
					return 1;
				}
				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent hours [hours 0-5]");
					return 1;
				}

				new hours, seconds;
				hours = strval(opstring);
				if(hours < 0 || hours > 5) return SendClientMessageEx(playerid, COLOR_RED, "You cannot adjust the event hours higher than 5 or below 0");
				seconds = hours*3600;
				EventKernel[EventTime] = seconds;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event hours that the event will be active for, timer will start once you fully start the event.");
                SendClientMessageEx(playerid, COLOR_GREY, "NOTE: If you set the event hours to 0 the event will finish once the last racer goes into the last checkpoint.");
				if(hours != 0)
					SendClientMessageEx(playerid, COLOR_YELLOW, "The feature players in event limit(/editevent limit) is now disabled since you changed the hours more than 0.");
			}
   			else if(strcmp(choice, "checkpoints", true) == 0)
			{
				if(EventKernel[EventType] != 3)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This feature is not available for this event type.");
					return 1;
				}
				ConfigEventCPs[playerid][0] = 1;
				ConfigEventCPs[playerid][1] = 0;
				ConfigEventCPs[playerid][2] = 0;
				ConfigEventCPId[playerid] = 0;
				new string[279];
				format(string,sizeof(string),"Welcome to the race checkpoint configuration system!\nThis is a quick guide on the steps you need to follow to successfully get the race checkpoints done.\nFirst and most important you need to remember to make the checkpoints in order, from the start line to the end line.");
				ShowPlayerDialog(playerid,RCPINTRO,DIALOG_STYLE_MSGBOX,"Race Checkpoints Introduction",string,"Next","Skip");
			}
			else if(strcmp(choice, "onfoot", true) == 0)
			{
				if(EventKernel[EventFootRace])
				{
				    EventKernel[EventFootRace] = 0;
					SendClientMessageEx(playerid, COLOR_GRAD2, "You have toggled off the onfoot feature, people can use vehicles(Future development, please don't use not working proprely)");
				}
				else {
				    EventKernel[EventFootRace] = 1;
					SendClientMessageEx(playerid, COLOR_GRAD2, "You have toggled on the onfoot feature, people cannot use vehicles.");
				}
			}
			else if(strcmp(choice, "gun1", true) == 0)
			{
				if(EventKernel[EventType] != 1 && EventKernel[EventType] != 2 && EventKernel[EventType] != 4)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This name is not available for this event type.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent gun1 [weaponid]");
					return 1;
				}

				new weapon;
				weapon = strval(opstring);
				if(weapon == 16 || weapon == 18 || weapon == 35 || weapon == 37 || weapon == 38 || weapon == 39) return SendClientMessageEx(playerid, COLOR_WHITE, "This weapon cannot be set as an event weapon!");
				EventKernel[EventWeapons][0] = weapon;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event gun 1.");
			}
			else if(strcmp(choice, "gun2", true) == 0)
			{
				if(EventKernel[EventType] != 1 && EventKernel[EventType] != 2 && EventKernel[EventType] != 4)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This name is not available for this event type.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent gun1 [weaponid]");
					return 1;
				}

				new weapon;
				weapon = strval(opstring);
				if(weapon == 16 || weapon == 18 || weapon == 35 || weapon == 37 || weapon == 38 || weapon == 39) return SendClientMessageEx(playerid, COLOR_WHITE, "This weapon cannot be set as an event weapon!");
				EventKernel[EventWeapons][1] = weapon;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event gun 2.");
			}
			else if(strcmp(choice, "gun3", true) == 0)
			{
				if(EventKernel[EventType] != 1 && EventKernel[EventType] != 2 && EventKernel[EventType] != 4)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This name is not available for this event type.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent gun1 [weaponid]");
					return 1;
				}

				new weapon;
				weapon = strval(opstring);
				if(weapon == 16 || weapon == 18 || weapon == 35 || weapon == 37 || weapon == 38 || weapon == 39) return SendClientMessageEx(playerid, COLOR_WHITE, "This weapon cannot be set as an event weapon!");
				EventKernel[EventWeapons][2] = weapon;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event gun 3.");
			}
			else if(strcmp(choice, "gun4", true) == 0)
			{
				if(EventKernel[EventType] != 1 && EventKernel[EventType] != 2 && EventKernel[EventType] != 4)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This name is not available for this event type.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent gun1 [weaponid]");
					return 1;
				}

				new weapon;
				weapon = strval(opstring);
				if(weapon == 35 || weapon == 37 || weapon == 38) return SendClientMessageEx(playerid, COLOR_WHITE, "This weapon cannot be set as an event weapon!");
				EventKernel[EventWeapons][3] = weapon;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event gun 4.");
			}
			else if(strcmp(choice, "gun5", true) == 0)
			{
				if(EventKernel[EventType] != 1 && EventKernel[EventType] != 2 && EventKernel[EventType] != 4)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "This name is not available for this event type.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent gun1 [weaponid]");
					return 1;
				}

				new weapon;
				weapon = strval(opstring);
				if(weapon == 35 || weapon == 37 || weapon == 38) return SendClientMessageEx(playerid, COLOR_WHITE, "This weapon cannot be set as an event weapon!");
				EventKernel[EventWeapons][4] = weapon;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event gun 5.");
			}
			else if(strcmp(choice, "custominterior", true) == 0)
			{
				if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /editevent custominterior [0/1]");

				EventKernel[EventCustomInterior] = strval(opstring);

				new szstring[128];
				format(szstring, sizeof(szstring), "You have set the Custom Interior Value to %d.", strval(opstring));
				SendClientMessageEx(playerid, COLOR_WHITE, szstring);
			}
		}
	}
	return 1;
}

CMD:seteventviponly(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelper] >= 3 || PlayerInfo[playerid][pDonateRank] >= 4)
	{
		if(EventKernel[EventCreator] == playerid || PlayerInfo[playerid][pAdmin] >= 4)
		{
			if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /seteventviponly [0/1]");

			if(PlayerInfo[playerid][pDonateRank] == 5 && PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Error: You're not allowed to change this value!");
				return 1;
			}

			if(strcmp(params,"0",true) == 0)
			{
				EventKernel[ VipOnly ] = 0;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event type to not VIP Only.");
			}
			else if(strcmp(params,"1",true) == 0)
			{
				EventKernel[ VipOnly ] = 1;
				SendClientMessageEx(playerid, COLOR_WHITE, "You have sucessfully adjusted the event type to VIP Only.");
			}

		}
	}
	return 1;
}

CMD:seteventinfo(playerid, params[])
{
	if( PlayerInfo[ playerid ][ pAdmin ] >= 2 || PlayerInfo[playerid][pHelper] >= 3 || PlayerInfo[playerid][pDonateRank] >= 4)
	{
		if( EventKernel[EventCreator] == playerid || PlayerInfo[playerid][pAdmin] >= 4 )
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /seteventtype /editevent /seteventviponly (once ready, type /startevent)");
			return 1;
		}
	}
	return 1;
}

CMD:endevent(playerid, params[])
{
	new Float: health, Float:armor;
	if(PlayerInfo[playerid][pAdmin] >= 4 || EventKernel[EventCreator] == playerid)
	{
		if(EventKernel[EventStatus] != 0)
		{
			foreach(new i: Player)
			{
				if( GetPVarInt( i, "eventStaff" ) == 1)
				{
					ResetPlayerWeapons( i );
					DeletePVar(i, "EventToken");
					SetPlayerWeapons(i);
					SetPlayerToTeamColor(i);
					SetPlayerSkin(i, PlayerInfo[i][pModel]);
					SetPlayerPos(i,EventFloats[i][1],EventFloats[i][2],EventFloats[i][3]);
					SetPlayerVirtualWorld(i, EventLastVW[i]);
					SetPlayerFacingAngle(i, EventFloats[i][0]);
					SetPlayerInterior(i,EventLastInt[i]);
					Player_StreamPrep(i, EventFloats[i][1],EventFloats[i][2],EventFloats[i][3], FREEZE_TIME);
					if(EventKernel[EventType] == 4)
					{
						if(GetPVarType(i, "pEventZombie")) DeletePVar(i, "pEventZombie");
						SetPlayerToTeamColor(i);
					}
					for(new d = 0; d < 6; d++)
					{
						EventFloats[i][d] = 0.0;
					}
					EventLastVW[i] = 0;
					EventLastInt[i] = 0;
					RemovePlayerWeapon(i, 38);
					health = GetPVarFloat(i, "pPreGodHealth");
					SetPlayerHealth(i,health);
					armor = GetPVarFloat(i, "pPreGodArmor");
					SetPlayerArmor(i, armor);
					DeletePVar(i, "pPreGodHealth");
					DeletePVar(i, "pPreGodArmor");
					SetPVarInt(i, "eventStaff", 0);
					SendClientMessageEx( i, COLOR_YELLOW, "You have been removed from the event as it has been terminated by an administrator." );
				}
				else if( GetPVarInt( i, "EventToken" ) == 1 )
				{
				    if(EventKernel[EventType] == 3)  {
						if(IsValidDynamic3DTextLabel(RFLTeamN3D[playerid])) {
							DestroyDynamic3DTextLabel(RFLTeamN3D[playerid]);
						}
						DisablePlayerCheckpoint(i);
					}
					else if(EventKernel[EventType] == 4) {
						if(GetPVarType(i, "pEventZombie")) DeletePVar(i, "pEventZombie");
					}
					ResetPlayerWeapons( i );
					SetPlayerWeapons(i);
					SetPlayerToTeamColor(i);
					SetPlayerSkin(i, PlayerInfo[i][pModel]);
					SetPlayerPos(i,EventFloats[i][1],EventFloats[i][2],EventFloats[i][3]);
					Player_StreamPrep(i, EventFloats[i][1],EventFloats[i][2],EventFloats[i][3], FREEZE_TIME);
					SetPlayerVirtualWorld(i, EventLastVW[i]);
					SetPlayerFacingAngle(i, EventFloats[i][0]);
					SetPlayerInterior(i,EventLastInt[i]);
					SetPlayerHealth(i, EventFloats[i][4]);
					if(EventFloats[i][5] > 0) {
						SetPlayerArmor(i, EventFloats[i][5]);
					}
					for(new d = 0; d < 6; d++)
					{
						EventFloats[i][d] = 0.0;
					}
					EventLastVW[i] = 0;
					EventLastInt[i] = 0;
					DeletePVar(i, "EventToken");
					SendClientMessageEx( i, COLOR_YELLOW, "You have been removed from the event as it has been terminated by an administrator." );
				}
			}
			EventKernel[ EventPositionX ] = 0;
			EventKernel[ EventPositionY ] = 0;
			EventKernel[ EventPositionZ ] = 0;
			EventKernel[ EventTeamPosX1 ] = 0;
			EventKernel[ EventTeamPosY1 ] = 0;
			EventKernel[ EventTeamPosZ1 ] = 0;
			EventKernel[ EventTeamPosX2 ] = 0;
			EventKernel[ EventTeamPosY2 ] = 0;
			EventKernel[ EventTeamPosZ2 ] = 0;
			EventKernel[ EventStatus ] = 0;
			EventKernel[ EventType ] = 0;
			EventKernel[ EventHealth ] = 0;
			EventKernel[ EventLimit ] = 0;
			EventKernel[ EventPlayers ] = 0;
			EventKernel[ EventTime ] = 0;
			EventKernel[ EventWeapons ][0] = 0;
			EventKernel[ EventWeapons ][1] = 0;
			EventKernel[ EventWeapons ][2] = 0;
			EventKernel[ EventWeapons ][3] = 0;
			EventKernel[ EventWeapons ][4] = 0;
			for(new i = 0; i < 20; i++)
			{
				EventRCPU[i] = 0;
				EventRCPX[i] = 0.0;
				EventRCPY[i] = 0.0;
				EventRCPZ[i] = 0.0;
				EventRCPS[i] = 0.0;
				EventRCPT[i] = 0;
			}
			EventKernel[EventCreator] = INVALID_PLAYER_ID;
			EventKernel[VipOnly] = 0;
			EventKernel[EventJoinStaff] = 0;
			for(new i; i < sizeof(EventKernel[EventStaff]); i++) {
				EventKernel[EventStaff][i] = INVALID_PLAYER_ID;
			}
			EventKernel[EventCustomInterior] = 0;
			SendClientMessageToAllEx( COLOR_LIGHTBLUE, "* The event has been finished by an Administrator." );
		}
		else
		{
			SendClientMessageEx( playerid, COLOR_WHITE, "There isn't an active event at the moment." );
		}
	}
	return 1;
}

CMD:startevent(playerid, params[])
{
	if( PlayerInfo[ playerid ][ pAdmin ] >= 2 || PlayerInfo[playerid][pHelper] >= 3 || PlayerInfo[playerid][pDonateRank] >= 4)
	{
		new string[128];

		if( EventKernel[ EventStatus ] == 0)
		{
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				if(EventKernel[ EventHealth ] == 0)
				{
					SendClientMessageEx( playerid, COLOR_GRAD2, "You did not set the event health!" );
					return 1;
				}
				if((EventKernel[ EventPositionX ] == 0 || EventKernel[ EventPositionY ] == 0 || EventKernel[ EventPositionZ ] == 0) && EventKernel[EventType] != 3)
				{
					SendClientMessageEx( playerid, COLOR_GRAD2, "You did not set the event position!" );
					return 1;
				}
				if( (EventKernel[ EventTeamPosX1 ] == 0 || EventKernel[ EventTeamPosY1 ] == 0 || EventKernel[ EventTeamPosZ1 ] == 0) && EventKernel[ EventType ] == 2)
				{
					SendClientMessageEx( playerid, COLOR_GRAD2, "You did not set team 1's spawn position!" );
					return 1;
				}
				if( (EventKernel[ EventTeamPosX2 ] == 0 || EventKernel[ EventTeamPosY2 ] == 0 || EventKernel[ EventTeamPosZ2 ] == 0) && EventKernel[ EventType ] == 2)
				{
					SendClientMessageEx( playerid, COLOR_GRAD2, "You did not set team 2's spawn position!" );
					return 1;
				}
				if(EventKernel[ EventLimit ] == 0)
				{
					EventKernel[ EventLimit ] = 60;
				}
				EventKernel[ EventStatus ] = 1;
				SendClientMessageEx( playerid, COLOR_GRAD2, "You have started an event, use /announceevent to announce the event to the whole server." );
				foreach(new i: Player)
				{
					if(PlayerInfo[i][pDonateRank] >= 3)
					{
						SendClientMessageEx(i, COLOR_YELLOW, "* Gold+ VIP feature: An event has been started! /joinevent to join early");
					}
				}

				return 1;
			}
			else if( EventKernel[EventCreator] == playerid)
			{
				if(EventKernel[ EventHealth ] == 0)
				{
					SendClientMessageEx( playerid, COLOR_GRAD2, "You did not set the event health!" );
					return 1;
				}
				if((EventKernel[ EventPositionX ] == 0 || EventKernel[ EventPositionY ] == 0 || EventKernel[ EventPositionZ ] == 0) && EventKernel[EventType] != 3)
				{
					SendClientMessageEx( playerid, COLOR_GRAD2, "You did not set the event position!" );
					return 1;
				}
				if(EventKernel[ EventLimit ] == 0)
				{
					EventKernel[ EventLimit ] = 60;
				}
				EventKernel[ EventStartRequest ] = 1;
				SendClientMessageEx( playerid, COLOR_GRAD2, "You have requested the event to start, please wait until a Senior Admin approves it." );
				if(EventKernel[EventType] != 3)
				{
					format( string, sizeof( string ), "Event Position: x:%f y:%f z:%f.", EventKernel[EventPositionX], EventKernel[EventPositionY], EventKernel[EventPositionZ] );
					ABroadCast( COLOR_GRAD2, string, 4 );
					format( string, sizeof( string ), "Event Jointext: %s EventLimit: %d.", EventKernel[EventInfo], EventKernel[EventLimit] );
					ABroadCast( COLOR_GRAD2, string, 4 );
					format( string, sizeof( string ), "Event Health: %f Event Armor: %f.", EventKernel[EventHealth], EventKernel[EventArmor] );
					ABroadCast( COLOR_GRAD2, string, 4 );
					if(EventKernel[EventWeapons][0] != 0)
					{
						format( string, sizeof( string ), "Event Gun1: %d.", EventKernel[EventWeapons][0] );
						ABroadCast( COLOR_GRAD2, string, 4 );
					}
					if(EventKernel[EventWeapons][1] != 0)
					{
						format( string, sizeof( string ), "Event Gun2: %d.", EventKernel[EventWeapons][1] );
						ABroadCast( COLOR_GRAD2, string, 4 );
					}
					if(EventKernel[EventWeapons][2] != 0)
					{
						format( string, sizeof( string ), "Event Gun3: %d.", EventKernel[EventWeapons][2] );
						ABroadCast( COLOR_GRAD2, string, 4 );
					}
					if(EventKernel[EventWeapons][3] != 0)
					{
						format( string, sizeof( string ), "Event Gun4: %d.", EventKernel[EventWeapons][3] );
						ABroadCast( COLOR_GRAD2, string, 4 );
					}
					if(EventKernel[EventWeapons][4] != 0)
					{
      					format( string, sizeof( string ), "Event Gun5: %d.", EventKernel[EventWeapons][4] );
						ABroadCast( COLOR_GRAD2, string, 4 );
					}
					if(EventKernel[EventType] == 2)
					{
						format( string, sizeof( string ), "Event Team 1 Color: %d Event Team 1 Skin: %d.", EventKernel[EventTeamColor][0], EventKernel[EventTeamSkin][0] );
						ABroadCast( COLOR_GRAD2, string, 4 );
						format( string, sizeof( string ), "Event Team 2 Color: %d Event Team 2 Skin: %d.", EventKernel[EventTeamColor][1], EventKernel[EventTeamSkin][1] );
						ABroadCast( COLOR_GRAD2, string, 4 );
					}
				}
				else {
				    if(EventKernel[EventTime] != 0) {
				    	format( string, sizeof( string ), "Event Jointext: %s EventTimeLimit: %d.", EventKernel[EventInfo], EventKernel[EventTime] );
						ABroadCast( COLOR_GRAD2, string, 4 );
					}
					else {
						format( string, sizeof( string ), "Event Jointext: %s EventLimit: %d.", EventKernel[EventInfo], EventKernel[EventLimit] );
						ABroadCast( COLOR_GRAD2, string, 4 );
					}
					ABroadCast( COLOR_GRAD2, "This is a race type event, to view the race checkpoints use /edit checkpoints", 4 );
				}
				format( string, sizeof( string ), "[MAYCHU] %s would like to start the event, do you approve? /approveevent or /denyevent.", GetPlayerNameEx(playerid) );
				ABroadCast( COLOR_YELLOW, string, 4 );
			}
		}
		else
		{
			SendClientMessageEx( playerid, COLOR_WHITE, "There is already an active event (use /endevent)." );
		}
	}

	return 1;
}

CMD:beginev(playerid, params[]) {
	return cmd_beginevent(playerid, params);
}

CMD:beginevent(playerid, params[])
{
	if( PlayerInfo[ playerid ][ pAdmin ] >= 4 || EventKernel[EventCreator] == playerid)
	{
		if( EventKernel[ EventStatus ] == 3 )
		{
		    if(EventKernel[EventType] == 3 && EventKernel[EventTime] != 0) return SendClientMessageEx(playerid, COLOR_RED, "ERROR: Cai dat khong co san de bat dau su kien nay.");
			EventKernel[ EventStatus ] = 4;
   			new zombiemade;
			foreach(new i: Player)
			{
				if( GetPVarType( i, "EventToken" ) == 1 )
				{
					if( EventKernel[ EventType ] == 1 )
					{
						//GivePlayerEventWeapons( i );
						SendClientMessageEx( i, COLOR_LIGHTBLUE, "GO!GO! Su kien sap bat dau!." );
						if(GetPVarInt(i, "eventStaff") < 1) {
							SetPlayerHealth( i, EventKernel[ EventHealth ] );
						}
						if(EventKernel[EventArmor] > 0 && GetPVarInt(i, "eventStaff") < 1) {
							SetPlayerArmor( i, EventKernel[ EventArmor ]);
						}
						GivePlayerEventWeapons( i );
					}
					else if( EventKernel[ EventType ] == 2 )
					{
						//GivePlayerEventWeapons( i );
						SendClientMessageEx( i, COLOR_LIGHTBLUE, "GO!GO! Su kien sap bat dau!." );
						if(GetPVarInt(i, "eventStaff") < 1) {
							SetPlayerHealth( i, EventKernel[ EventHealth ] );
						}
						if(EventKernel[EventArmor] > 0 && GetPVarInt(i, "eventStaff") < 1) {
							SetPlayerArmor( i, EventKernel[ EventArmor ]);
						}
						GivePlayerEventWeapons( i );
					}
					else if( EventKernel[ EventType ] == 4 )
					{
					    if(zombiemade == 0)
					    {
							SendClientMessageEx(playerid, COLOR_WHITE, "Ban la zombie, su dung /bite de lay nhiem nguoi khac.");
							SetPlayerHealth(playerid, 30);
							RemoveArmor(playerid);
							SetPlayerSkin(playerid, 134);
							SetPlayerColor(playerid, 0x0BC43600);
							SetPVarInt(playerid, "pEventZombie", 1);
							zombiemade=1;
							continue;
					    }
					    else
					    {
							//GivePlayerEventWeapons( i );
							SendClientMessageEx( i, COLOR_LIGHTBLUE, "Su kien da bat dau, hay tieu diet nhung con zomnie (mau xanh la)." );
							if(GetPVarInt(i, "eventStaff") < 1) {
								SetPlayerHealth( i, EventKernel[ EventHealth ] );
							}
							if(EventKernel[EventArmor] > 0 && GetPVarInt(i, "eventStaff") < 1) {
								SetPlayerArmor( i, EventKernel[ EventArmor ]);
							}
							GivePlayerEventWeapons( i );
						}
					}
				}
				else
				{
					SendClientMessageEx( i, COLOR_WHITE, "Su kien hien da duoc bat dau, neu ban muon tham gia vao su kien lan sau hay su dung /thamgiasukien." );
				}
			}

		}
		else
		{
			SendClientMessageEx( playerid, COLOR_WHITE, "Da co mot su kien dang hoat dong(su dung /endevent)." );
		}
	}
	return 1;
}

CMD:announceevent(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4 || EventKernel[EventCreator] == playerid)
	{
		if( EventKernel[ EventStatus ] == 1)
		{
			EventKernel[ EventStatus ] = 2;
			SendClientMessageEx(playerid, COLOR_GRAD2, "De khoa su kien /lockevent");
			if(EventKernel[VipOnly] == 1) SendClientMessageToAllEx( COLOR_LIGHTBLUE, "* Mot su kien danh cho VIP da duoc bat dau, su dung /thamgiasukien de tham gia." );
			else SendClientMessageToAllEx( COLOR_LIGHTBLUE, "* Mot su kien da duoc bat dau, su dung /thamgiasukien de tham gia." );
		}
		else
		{
			SendClientMessageEx( playerid, COLOR_WHITE, "Da co mot su kien dang hoat dong (su dung /endevent)." );
		}
	}
	return 1;
}

CMD:lockev(playerid, params[]) {
	return cmd_lockevent(playerid, params);
}

CMD:lockevent(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4 || EventKernel[EventCreator] == playerid)
	{
		if( EventKernel[ EventStatus ] == 2 )
		{
		    if(EventKernel[EventType] == 3 && EventKernel[EventTime] != 0) return SendClientMessageEx(playerid, COLOR_RED, "ERROR: Tinh nang nay khong co san cho su kien.");
			EventKernel[ EventStatus ] = 3;
			SendClientMessageEx( playerid, COLOR_GRAD2, "Ban da khoa su kien, su dung /beginevent de bat dau su kien." );
			SendClientMessageToAllEx( COLOR_LIGHTBLUE, "* Su kien da khoa thanh vien tham gia." );
		}
		else
		{
			SendClientMessageEx( playerid, COLOR_WHITE, "Da co mot su kien dang hoat dong (su dung /endevent)." );
		}
	}
	return 1;
}

CMD:lastcar(playerid, params[]) return cmd_oldcar(playerid, params);

CMD:oldcar(playerid, params[])
{
	new string[128];
	if(!gLastCar[playerid]) return SendClientMessageEx(playerid, COLOR_GREY, "You have not driven a vehicle yet.");
	format(string, sizeof(string), "Your last driven vehicle was a %s (Model: %d -- ID: %d)", GetVehicleName(gLastCar[playerid]), GetVehicleModel(gLastCar[playerid]), gLastCar[playerid]);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	return 1;
}

CMD:givetokens(playerid, params[])
{
	if(PlayerInfo[playerid][pDonateRank] > 0)
	{
		new string[128], giveplayerid, amount;
		if(sscanf(params, "ud", giveplayerid, amount)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /givetokens [player] [amount]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pDonateRank] > 0)
			{
				if(PlayerInfo[playerid][pTokens] >= amount)
				{
					if(amount < 1)
					{
						SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the dua ra so tien do!");
						return 1;
					}
					if(giveplayerid == playerid)
					{
						SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the dua tokens cho chinh minh!");
						return 1;
					}
					if (!ProxDetectorS(5.0, playerid, giveplayerid))
					{
						SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
						return 1;
					}
					PlayerInfo[playerid][pTokens] -= amount;
					PlayerInfo[giveplayerid][pTokens] += amount;

					format(string, sizeof(string), "Ban da nhan %d Tokens tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Ban da cho %s %d Tokens.", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s da dua cho %s mot so Tokens.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co du tokens!");
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi do khong phai la VIP!");
			}

		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong phai VIP!");
	}
	return 1;
}

CMD:getpt(playerid, params[])
{
	if(IsAMedic(playerid))
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /getpt(patient) [player]");

		if(IsPlayerConnected(giveplayerid))
		{
		    if (giveplayerid == playerid)
		    {
		        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban khong the chap nhan cuoc goi khan cap cua rieng ban!");
				return 1;
		    }
			if(GetPVarInt(giveplayerid,"MedicCall") == 1)
			{
				if(PlayerInfo[giveplayerid][pJailTime] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay voi nguoi choi dang o tu");
				format(string, sizeof(string), "EMS Driver %s da chap nhan cuoc goi khan cap cua (%d) %s.",GetPlayerNameEx(playerid),giveplayerid,GetPlayerNameEx(giveplayerid));
				SendGroupMessage(3, TEAM_MED_COLOR, string);
				format(string, sizeof(string), "* Ban da chap nhan cuoc goi EMS tu %s.",GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* EMS Driver %s da chap nhan cuoc goi EMS cua ban, xin vui long cho doi trong giay lat.",GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				GameTextForPlayer(playerid, "~w~Cuoc goi EMS~n~~r~Toi diem rada mau do.", 5000, 1);
				EMSCallTime[playerid] = 1;
				EMSAccepted[playerid] = giveplayerid;
				SetPVarInt(giveplayerid, "EMSAttempt", 1);
				PlayerInfo[playerid][pCallsAccepted]++;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Nguoi do khong yeu cau dich vu ems!");
			}
		}
	}
	return 1;
}

CMD:movept(playerid, params[])
{
	if(IsAMedic(playerid))
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /movepatient [player]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(GetPVarInt(giveplayerid,"Injured") == 1)
			{
				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay khi dang tren mot chiec xe.");
				if(PlayerInfo[giveplayerid][pJailTime] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay voi nguoi choi dang o tu");
				if(GetPVarInt(giveplayerid, "OnStretcher") == 1)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi do da nam tren xe nang, ban khong the dieu do vao luc nay!");
					return 1;
				}

				new Float:mX, Float:mY, Float:mZ;
				GetPlayerPos(giveplayerid, mX, mY, mZ);
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, mX, mY, mZ))
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "Ban phai gan benh nhan de co the di chuyen !");
					return 1;
				}
				SendClientMessageEx(playerid, COLOR_GRAD2, "Ban co 30 giay de di chuyen den vi tri khac hoac co the nhan phim '{AA3333}FIRE{BFC0C2}'.");
				format(string, sizeof(string), "* Ban da duoc dua len can cuu thuong boi %s.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Ban da dua %s len cang, ban co the van chuyen ho bay gio", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* %s dat %s len tren cang va that chat day an toan.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

				SetPVarInt(giveplayerid, "OnStretcher", 1);
				SetPVarInt(playerid, "TickEMSMove", SetTimerEx("MoveEMS", 30000, false, "d", playerid));
				SetPVarInt(playerid, "MovingStretcher", giveplayerid);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi do phai bi thuong moi co the di chuyen!");
			}
		}
	}
	return 1;
}

CMD:useexp(playerid, params[])
{
	new string[128];
    if (PlayerInfo[playerid][pEXPToken] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " You do not have any Double EXP tokens!");
		return 1;
	}
    PlayerInfo[playerid][pDoubleEXP] += 8;
    PlayerInfo[playerid][pEXPToken]--;
    format(string, sizeof(string), "You have used a Double EXP Token! You now have a total of %d of Double EXP hours!", PlayerInfo[playerid][pDoubleEXP]);
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
    return 1;
}

CMD:shopexp(playerid, params[])
{
	if (PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " You are not allowed to use this command.");
		return 1;
	}

	new string[128], giveplayerid, amount, invoice[32];
	if(sscanf(params, "uds[32]", giveplayerid, amount, invoice)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shopexp [player] [tokens] [invoice #]");

	PlayerInfo[giveplayerid][pEXPToken] += amount;

	format(string, sizeof(string), "You have received %d Double EXP Token(s) from Shop Tech %s.", amount, GetPlayerNameEx(playerid));
	SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "[SHOPEXP] %s given %s, %d Double EXP Token(s) - Invoice %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), amount, invoice);
	SendClientMessageEx(playerid, COLOR_GRAD1, string);
	Log("logs/shoplog.log", string);
	return 1;
}

CMD:shoptokens(playerid, params[])
{
	if (PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " You are not allowed to use this command.");
		return 1;
	}

	new string[128], giveplayerid, amount, invoice[32];
	if(sscanf(params, "uds[32]", giveplayerid, amount, invoice)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shoptokens [player] [amount] [invoice #]");

	PlayerInfo[giveplayerid][pPaintTokens] += amount;

	format(string, sizeof(string), "You have received %d Paintball Tokens from Shop Tech %s.", amount, GetPlayerNameEx(playerid));
	SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "[SHOPTOKENS] %s given %s, %d Paintball Tokens - Invoice %s for %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), amount, invoice, GetPlayerNameEx(giveplayerid));
	SendClientMessageEx(playerid, COLOR_GRAD1, string);
	Log("logs/shoplog.log", string);
	return 1;
}

CMD:shopviptokens(playerid, params[])
{
	if (PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " You are not allowed to use this command.");
		return 1;
	}

	new string[128], giveplayerid, amount, invoice[32];
	if(sscanf(params, "uds[32]", giveplayerid, amount, invoice)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shopviptokens [player] [amount] [invoice #]");

	PlayerInfo[giveplayerid][pTokens] += amount;

	format(string, sizeof(string), "You have received %d VIP Tokens from Shop Tech %s.", amount, GetPlayerNameEx(playerid));
	SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "[SHOPTOKENS] %s given %s, %d VIP Tokens - Invoice %s for %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), amount, invoice, GetPlayerNameEx(giveplayerid));
	SendClientMessageEx(playerid, COLOR_GRAD1, string);
	Log("logs/shoplog.log", string);
	return 1;
}

CMD:shopboombox(playerid, params[])
{
	if (PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " You are not allowed to use this command.");
		return 1;
	}

	new giveplayerid, invoice;
	if(sscanf(params, "ui", giveplayerid, invoice)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shopboombox [player] [invoice #]");
	new string[128];

	if(PlayerInfo[giveplayerid][pBoombox] == 1)
	{
	    PlayerInfo[giveplayerid][pBoombox] = 0;
    	format(string, sizeof(string), "Your boombox has been taken by Shop Tech %s. ", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "[SHOPBOOMBOX] %s has taken %s boombox - Invoice %d", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice);
		SendClientMessageEx(playerid, COLOR_GRAD1, string);
		Log("logs/shoplog.log", string);
	}
	else
	{
		PlayerInfo[giveplayerid][pBoombox] = 1;
    	format(string, sizeof(string), "You have been given a boombox from Shop Tech %s. ", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "[SHOPBOOMBOX] %s has given %s a boombox - Invoice %d", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice);
		SendClientMessageEx(playerid, COLOR_GRAD1, string);
		Log("logs/shoplog.log", string);
	}
	return 1;
}

CMD:shoptable(playerid, params[])
{
	if (PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " You are not allowed to use this command.");
		return 1;
	}

	new giveplayerid, invoice;
	if(sscanf(params, "ui", giveplayerid, invoice)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shoptable [player] [invoice #]");
	new string[128];

	if(PlayerInfo[giveplayerid][pTable] == 1)
	{
	    PlayerInfo[giveplayerid][pTable] = 0;
    	format(string, sizeof(string), "Your poker table has been taken by Shop Tech %s. ", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "[SHOPPOKERTABLE] %s has taken %s poker table - Invoice %d", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice);
		SendClientMessageEx(playerid, COLOR_GRAD1, string);
		Log("logs/shoplog.log", string);
	}
	else
	{
		PlayerInfo[giveplayerid][pTable] = 1;
    	format(string, sizeof(string), "You have been given a poker table from Shop Tech %s. ", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "[SHOPPOKERTABLE] %s has given %s a poker table - Invoice %d", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice);
		SendClientMessageEx(playerid, COLOR_GRAD1, string);
		Log("logs/shoplog.log", string);
	}
	return 1;
}

/*CMD:shopbag(playerid, params[])
{
	if (PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " You are not allowed to use this command.");
		return 1;
	}

	new string[128], giveplayerid, invoice[32];
	if(sscanf(params, "us[32]", giveplayerid, invoice)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shopbag [player] [invoice #]");

	StorageInfo[playerid][0][sStorage] = 1;

	format(string, sizeof(string), "You have received a Bag from Shop Tech %s. ", GetPlayerNameEx(playerid));
	SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "[SHOPFIREWORK] %s given %s a Bag - Invoice %s for %s. ", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice, GetPlayerNameEx(giveplayerid));
	SendClientMessageEx(playerid, COLOR_GRAD1, string);
	Log("logs/shoplog.log", string);
	return 1;
}

CMD:shopbackpack(playerid, params[])
{
	if (PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " You are not allowed to use this command.");
		return 1;
	}

	new string[128], giveplayerid, invoice[32];
	if(sscanf(params, "us[32]", giveplayerid, invoice)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shopbackpack [player] [invoice #]");

	StorageInfo[playerid][1][sStorage] = 1;

	format(string, sizeof(string), "You have received a Backpack from Shop Tech %s. ", GetPlayerNameEx(playerid));
	SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "[SHOPFIREWORK] %s given %s a Backpack - Invoice %s for %s. ", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice, GetPlayerNameEx(giveplayerid));
	SendClientMessageEx(playerid, COLOR_GRAD1, string);
	Log("logs/shoplog.log", string);
	return 1;
}

CMD:shopbriefcase(playerid, params[])
{
	if (PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " You are not allowed to use this command.");
		return 1;
	}

	new string[128], giveplayerid, invoice[32];
	if(sscanf(params, "us[32]", giveplayerid, invoice)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shopbriefcase [player] [invoice #]");

	StorageInfo[playerid][2][sStorage] = 1;

	format(string, sizeof(string), "You have received a Briefcase from Shop Tech %s. ", GetPlayerNameEx(playerid));
	SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "[SHOPFIREWORK] %s given %s a Briefcase - Invoice %s for %s. ", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice, GetPlayerNameEx(giveplayerid));
	SendClientMessageEx(playerid, COLOR_GRAD1, string);
	Log("logs/shoplog.log", string);
	return 1;
}*/

CMD:shopfirework(playerid, params[])
{
	if (PlayerInfo[playerid][pShopTech] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " You are not allowed to use this command.");
		return 1;
	}

	new string[128], giveplayerid, amount, invoice[32];
	if(sscanf(params, "uds[32]", giveplayerid, amount, invoice)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /shopfirework [player] [amount] [invoice #]");

	PlayerInfo[giveplayerid][pFirework] += amount;

	format(string, sizeof(string), "You have received %d Fireworks from Shop Tech %s. ", amount, GetPlayerNameEx(playerid));
	SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "[SHOPFIREWORK] %s given %s %d Firework(s) - Invoice %s for %s. ", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), amount, invoice, GetPlayerNameEx(giveplayerid));
	SendClientMessageEx(playerid, COLOR_GRAD1, string);
	Log("logs/shoplog.log", string);
	return 1;
}
CMD:datboombox(playerid, params[])
{
	return cmd_placeboombox(playerid, params);
}
CMD:placeboombox(playerid, params[])
{
	if(PlayerInfo[playerid][pBoombox] == 1 || PlayerInfo[playerid][pAdmin] >= 2)
	{
	    if(GetPVarInt(playerid, "IsInArena") >= 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay khi dang o dau truong!");
		if(WatchingTV[playerid] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang xem TV!");
		if(GetPVarInt(playerid, "Injured") == 1 || PlayerInfo[playerid][pHospital] == 1 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam the bay gio.");
		if(GetPVarType(playerid, "pBoomBox")) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban dang co mot boombox duoc dat ra, hay pha huy no /destroyboombox.");

		foreach(new i: Player)
	    {
	        if(GetPVarType(i, "pBoomBox"))
	        {
    			if(IsPlayerInRangeOfPoint(playerid, 50.0, GetPVarFloat(i, "pBoomBoxX"), GetPVarFloat(i, "pBoomBoxY"), GetPVarFloat(i, "pBoomBoxZ")))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Ban dang trong pham vi cua mot Boombox khac, vui long dat o dia diem khac!");
				    return 1;
				}
			}
		}

		new string[128];
		format(string, sizeof(string), "%s da dat mot cai boombox xuong!", GetPlayerNameEx(playerid));
	    ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);

	    new Float:x, Float:y, Float:z, Float:a;
	    GetPlayerPos(playerid, x, y, z);
	    GetPlayerFacingAngle(playerid, a);
	    ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_In", 4.0, 0, 0, 0, 0, 0, 1);
	    x += (2 * floatsin(-a, degrees));
    	y += (2 * floatcos(-a, degrees));
    	z -= 1.0;
		if(PlayerInfo[playerid][pAdmin] == 7)
		{
           SetPVarInt(playerid, "pBoomBox", CreateDynamicObject(2232, x, y, z, 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
		}
		else if(PlayerInfo[playerid][pDonateRank] == 3)
	    {
		   SetPVarInt(playerid, "pBoomBox", CreateDynamicObject(2226, x, y, z, 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
        }
		else if(PlayerInfo[playerid][pDonateRank] == 2)
	    {
		   SetPVarInt(playerid, "pBoomBox", CreateDynamicObject(2102, x, y, z, 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
        }
        else if(PlayerInfo[playerid][pDonateRank] < 2)
        {
		   SetPVarInt(playerid, "pBoomBox", CreateDynamicObject(2103, x, y, z, 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
        }
		SetPVarFloat(playerid, "pBoomBoxX", x); SetPVarFloat(playerid, "pBoomBoxY", y); SetPVarFloat(playerid, "pBoomBoxZ", z);
		format(string, sizeof(string), "Boombox cua %s \n{FF0000}/setboombox {FFFF00}hoac\n{FF0000}/destroyboombox", GetPlayerNameEx(playerid));
	    SetPVarInt(playerid, "pBoomBoxLabel", _:CreateDynamic3DTextLabel(string, COLOR_YELLOW, x, y, z+0.6, 5.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
		SetPVarInt(playerid, "pBoomBoxArea", CreateDynamicSphere(x, y, z, 30.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
		SetPVarInt(playerid, "pBoomBoxInt", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "pBoomBoxVW", GetPlayerVirtualWorld(playerid));
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co boombox! /shopcre de mua");
	}
	return 1;
}

CMD:destroyboombox(playerid, params[])
{
	if(GetPVarType(playerid, "pBoomBox"))
	{
	    DestroyDynamicObject(GetPVarInt(playerid, "pBoomBox"));
	    DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "pBoomBoxLabel"));
	    DeletePVar(playerid, "pBoomBox"); DeletePVar(playerid, "pBoomBoxStation"); DeletePVar(playerid, "pBoomBoxLabel");
	    DeletePVar(playerid, "pBoomBoxX"); DeletePVar(playerid, "pBoomBoxY"); DeletePVar(playerid, "pBoomBoxZ");
    	if(IsValidDynamicArea(audiourlid))
    	{
    	DestroyDynamicArea(audiourlid);
    	}
	    if(GetPVarType(playerid, "pBoomBoxArea"))
	    {
	        new string[128];
			format(string, sizeof(string), "* %s has destroyed the boombox.", GetPlayerNameEx(playerid));
	        foreach(new i: Player)
	        {
	            if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pBoomBoxArea")))
	            {
	                StopAudioStreamForPlayerEx(i);
	                SendClientMessage(i, COLOR_PURPLE, string);
				}
			}
	        DeletePVar(playerid, "pBoomBoxArea");
		}
		SendClientMessage(playerid, COLOR_WHITE, "You've destroyed your boombox!");
	}
	else
	{
	    foreach(new i: Player)
	    {
	        if(GetPVarType(i, "pBoomBox"))
	        {
				if(GetPVarInt(i, "pBoomBoxVW") == GetPlayerVirtualWorld(playerid) && GetPVarInt(i, "pBoomBoxInt") == GetPlayerInterior(playerid) && IsPlayerInRangeOfPoint(playerid, 5.0, GetPVarFloat(i, "pBoomBoxX"), GetPVarFloat(i, "pBoomBoxY"), GetPVarFloat(i, "pBoomBoxZ")))
				{
				    DestroyDynamicObject(GetPVarInt(i, "pBoomBox"));
				    DestroyDynamic3DTextLabel(Text3D:GetPVarInt(i, "pBoomBoxLabel"));

				    DeletePVar(i, "pBoomBox");
					DeletePVar(i, "pBoomBoxStation");
					DeletePVar(i, "pBoomBoxLabel");
				    DeletePVar(i, "pBoomBoxX");
					DeletePVar(i, "pBoomBoxY");
					DeletePVar(i, "pBoomBoxZ");
					DeletePVar(i, "pBoomBoxInt");
					DeletePVar(i, "pBoomBoxVW");
    	            if(IsValidDynamicArea(audiourlid))
    	            {
    	              DestroyDynamicArea(audiourlid);
    	            }
				    new string[128];
				    if(GetPVarType(i, "pBoomBoxArea"))
				    {
				        format(string, sizeof(string), "* %s has destroyed the boombox.", GetPlayerNameEx(playerid));
				        foreach(new pi: Player)
				        {
				            if(IsPlayerInDynamicArea(pi, GetPVarInt(i, "pBoomBoxArea")))
				            {
				                StopAudioStreamForPlayerEx(pi);
				                SendClientMessage(pi, COLOR_PURPLE, string);
							}
						}
				        DeletePVar(i, "pBoomBoxArea");
					}
				    format(string, sizeof(string), "%s has destroyed your boombox!", GetPlayerNameEx(playerid));
				    SendClientMessage(i, COLOR_WHITE, string);
					return 1;
				}
			}
	    }
	    SendClientMessage(playerid, COLOR_WHITE, "Ban khong co boombox or you are not near one to destroy.");
	}
	return 1;
}

CMD:placefirework(playerid, params[])
{
	if(fireworktog == 0) return SendClientMessageEx(playerid, COLOR_GREY, "You cannot currently launch fireworks.");
	if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessageEx(playerid, COLOR_GREY, "You must be Level 3+ to place a firework!");
	if(GetPVarInt(playerid, "IsInArena") >= 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay khi dang trong arena!");
	if(WatchingTV[playerid] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang xem TV!");
	if(GetPVarInt(playerid, "Injured") == 1 || PlayerInfo[playerid][pHospital] > 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu do vao luc nay");
	if(RocketExplosions[playerid] != -1) return SendClientMessageEx(playerid, COLOR_WHITE, "You are already using another firework!");
	if (PlayerInfo[playerid][pVW] != 0 || PlayerInfo[playerid][pInt] != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "You can't launch fireworks indoors!");
	if(PlayerInfo[playerid][pFirework] > 0 || PlayerInfo[playerid][pAdmin] >= 4)
	{
		new Float:x, Float:y, Float:z, Float:a;
	    GetPlayerPos(playerid, x, y, z);
	    GetPlayerFacingAngle(playerid, a);

		if(dynamicgift != 0) // Currently a dynamic gift is placed down
		{
			new Float: Pos[3];
			GetDynamicObjectPos(dynamicgift, Pos[0], Pos[1], Pos[2]);

			if(IsPlayerInRangeOfPoint(playerid, 50.0, Pos[0], Pos[1], Pos[2]))
				return SendClientMessageEx(playerid, COLOR_GRAD1, "You cannot place a firework down near the giftbox.");
		}
	    if (PlayerInfo[playerid][pAdmin] < 4)
	    {
	    	PlayerInfo[playerid][pFirework]--;
	    }
		new string[128];
		format(string, sizeof(string), "%s has placed a firework which will go off in 30 seconds!", GetPlayerNameEx(playerid));
	    ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
	    ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_In", 4.0, 0, 0, 0, 0, 0, 1);
	    x += (2 * floatsin(-a, degrees));
    	y += (2 * floatcos(-a, degrees));
	    Rocket[playerid] = CreateDynamicObject(3786, x, y, z, 0, 90, 0);
	    RocketLight[playerid] = CreateDynamicObject(354, x, y, z + 1, 0, 0, 0);
		RocketSmoke[playerid] = CreateDynamicObject(18716, x, y, z - 4, 0, 0, 0);
	    SetPVarFloat(playerid,"fxpos",x);
  		SetPVarFloat(playerid,"fypos",y);
  		SetPVarFloat(playerid,"fzpos",z);
  		RocketExplosions[playerid] = 0;
  		SetTimerEx("Firework", 25000, 0, "ii", playerid, TYPE_COUNTDOWN);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "You don't have any fireworks!");
	}
	return 1;
}

CMD:togchatbox(playerid, params[])
{
	switch(ActiveChatbox[playerid])
	{
		case 1:
		{
			ClearChatbox(playerid);
			ActiveChatbox[playerid] = 0;
		}
		case 0:
		{
			ActiveChatbox[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "You have turned the chatbox back on!");
		}
	}
	return 1;
}

CMD:next(playerid, params[])
{
	TutorialStep(playerid);
	return 1;
}

CMD:hlban(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelper] >= 1)
		{
			new string[128], giveplayerid;
			if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /hlban [player]");

			if(IsPlayerConnected(giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pHelper] >= 1 || PlayerInfo[giveplayerid][pAdmin] >= 1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "You can not ban admins/advisors/helpers from the helper channel!");
					return 1;
				}
				if(PlayerInfo[giveplayerid][pHelpMute] == 0)
				{
					PlayerInfo[giveplayerid][pHelpMute] = 1;

					foreach(new n: Player)
					{
						if(gHelp[n]== 0)
						{
							format(string, sizeof(string), "* %s has been banned from the helper channel by %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
							SendClientMessageEx(n, COLOR_JOINHELPERCHAT, string);
						}
					}
					if(gHelp[playerid] != 0)
					{
						format(string, sizeof(string), "* %s has been banned from the helper channel by %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
						SendClientMessageEx(playerid, COLOR_JOINHELPERCHAT, string);
					}
                    gHelp[giveplayerid] = 1;

					format(string, sizeof(string), "You have been banned from helper channel by %s.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "AdmCmd: %s was banned from /hl by %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
					Log("logs/mute.log", string);
				}
				else
				{
					PlayerInfo[giveplayerid][pHelpMute] = 0;

					foreach(new n: Player)
					{
						if (gHelp[n]==0)
						{
							format(string, sizeof(string), "* %s has been unbanned from the helper channel by %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
							SendClientMessageEx(n, COLOR_JOINHELPERCHAT, string);
						}
					}
					if(gHelp[playerid] != 0)
					{
						format(string, sizeof(string), "* %s has been unbanned from the helper channel by %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
						SendClientMessageEx(playerid, COLOR_JOINHELPERCHAT, string);
					}

					format(string, sizeof(string), "You have been unbanned from helper channel by %s.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "AdmCmd: %s was unbanned from /hl by %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
					Log("logs/mute.log", string);
				}

			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
		}
	}
	return 1;
}

/*
CMD:dmstrikereset(playerid, params[])
{
    if (PlayerInfo[playerid][pAdmin] >= 4)
	{
	    new giveplayerid, string[128];
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /dmstrikereset [player]");
		if(IsPlayerConnected(giveplayerid))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Resetting strikes..");
			format(string, sizeof(string), "DELETE FROM dm_watchdog WHERE `id` = %d", GetPlayerSQLId(giveplayerid));
			mysql_function_query(MainPipeline, string, false, "OnDMStrikeReset", "ii", playerid, giveplayerid);
		}
	}
	return 1;
}

CMD:dmrlookup(playerid, params[])
{
    if (PlayerInfo[playerid][pAdmin] >= 3)
	{
	    new giveplayerid, string[128];
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /dmrlookup [player]");
		if(IsPlayerConnected(giveplayerid))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Fetching data..");
			format(string, sizeof(string), "SELECT d.timestamp, a.Username FROM dm_watchdog d LEFT JOIN \
			accounts a ON a.id = d.id WHERE `reporter` = %d LIMIT 10", GetPlayerSQLId(giveplayerid));
			mysql_function_query(MainPipeline, string, true, "OnDMRLookup", "ii", playerid, giveplayerid);
		}
	}
	return 1;
}

CMD:dmtokens(playerid, params[])
{
    if (PlayerInfo[playerid][pAdmin] >= 3)
	{
	    new giveplayerid, string[256];
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /dmtokens [player]");
		if(IsPlayerConnected(giveplayerid))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Fetching data...");
			format(string, sizeof(string), "SELECT d.timestamp, a.Username FROM dm_watchdog d LEFT JOIN \
			accounts a ON a.id = d.reporter WHERE d.id = %d && (d.timestamp > %d || (d.superwatch = 1 && d.timestamp > %d))", GetPlayerSQLId(giveplayerid), (gettime()-259200), (gettime()-5184000));
			mysql_function_query(MainPipeline, string, true, "OnDMTokenLookup", "ii", playerid, giveplayerid);
		}
	}
	return 1;
}

CMD:dmwatchlist(playerid, params[])
{
    if (PlayerInfo[playerid][pAdmin] >= 3)
	{
	    new string[256];
	    SendClientMessage(playerid, COLOR_WHITE, "Fetching watchlist..");
		format(string, sizeof(string), "SELECT DISTINCT a.Username, count(a.username) FROM dm_watchdog d LEFT JOIN \
		accounts a ON a.id = d.id WHERE a.Online = %d && (d.timestamp > %d || (d.superwatch = 1 && d.timestamp > %d))\
		GROUP BY a.Username HAVING Count(a.Username) >= 4", servernumber, (gettime()-259200), (gettime()-5184000));
		mysql_function_query(MainPipeline, string, true, "OnDMWatchListLookup", "i", playerid);
	}
	return 1;
}

CMD:dmwatch(playerid, params[])
{
    if (PlayerInfo[playerid][pWatchdog] == 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 2)
	{
	    if(GetPVarType(playerid, "pWatchdogWatching"))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "You have stopped DM Watching.");
	        GettingSpectated[Spectate[playerid]] = INVALID_PLAYER_ID;
			Spectating[playerid] = 0;
			Spectate[playerid] = INVALID_PLAYER_ID;
			SetPVarInt(playerid, "SpecOff", 1 );
			TogglePlayerSpectating(playerid, false);
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid, "pWatchdogWatching");
	    }
	    else
	    {
		    new string[300];
		    SendClientMessage(playerid, COLOR_WHITE, "Fetching watchlist..");
			format(string, sizeof(string), "SELECT DISTINCT a.Username, count(a.username) FROM dm_watchdog d LEFT JOIN \
			accounts a ON a.id = d.id WHERE a.Online = %d && (d.timestamp > %d || (d.superwatch = 1 && d.timestamp > %d))\
			GROUP BY a.Username HAVING Count(a.Username) >= 4 ORDER BY rand() LIMIT 1", servernumber, (gettime()-259200), (gettime()-5184000));
			mysql_function_query(MainPipeline, string, true, "OnDMWatch", "i", playerid);
		}
	}
	return 1;
}

CMD:dmrmute(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 3)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /dmrmute [player]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pDMRMuted] == 0)
			{
			    PlayerInfo[giveplayerid][pDMRMuted] = 1;
				format(string, sizeof(string), "AdmCmd: %s has indefinitely blocked %s from submitting DM reports.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_LIGHTRED,string,2);
				format(string, sizeof(string), "You have been blocked from submitting /dmreports by %s.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
				format(string, sizeof(string), "AdmCmd: %s was blocked from /dmreport by %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				Log("logs/mute.log", string);
			}
			else
			{
			    if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessageEx(playerid, COLOR_GREY, "You must be a senior admin to unmute others from submitting DM reports");
				PlayerInfo[giveplayerid][pDMRMuted] = 0;
				format(string, sizeof(string), "AdmCmd: %s has been re-allowed to submit DM reports by %s",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid));
				ABroadCast(COLOR_LIGHTRED,string,2);
				format(string, sizeof(string), "You have been re-allowed to submitting /dmreports again by %s.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
				format(string, sizeof(string), "AdmCmd: %s was unblocked from /dmreport by %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				Log("logs/mute.log", string);
			}
  }
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
	}
	return 1;
}
*/


CMD:n(playerid, params[]) return cmd_newb(playerid,params);
CMD:newb(playerid, params[])
{
	if(gPlayerLogged{playerid} == 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban chua dang nhap.");
	//if(PlayerInfo[playerid][pTut] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
	//if(PlayerInfo[playerid][pConnectHours] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
	if((nonewbie) && PlayerInfo[playerid][pAdmin] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Kenh hoi dap newbie dang tat!");
	if(PlayerInfo[playerid][pNMute] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ban da bi cam noi chuyen tren kenh hoi dap.");
	if(gNewbie[playerid] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ban da tat kenh hoi dap, /tognewbie de mo!");

	new string[144],name[24];
	if(gettime() < NewbieTimer[playerid])
	{
		format(string, sizeof(string), "Ban phai cho %d giay de tiep tuc hoi dap tren kenh nay.", NewbieTimer[playerid]-gettime());
		SendClientMessageEx(playerid, COLOR_GREY, string);
		return 1;
	}

	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/newb)ie [noi dung]");
	GetPlayerName(playerid,name,20);
	new dodai = (144-strlen(params)-strlen(name)-52);
	new dong2[144];
	if(dodai < 0)
	{
		//new dong2[strlen(params)-(144-strlen(name)-52)];
		format(dong2,sizeof(dong2),"%s",params);
		strdel(dong2,0,strlen(params)+dodai-1);
	}

	if(PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pAdmin] < 1)
	{
		NewbieTimer[playerid] = gettime()+60;
		format(string, sizeof(string), "{81F7F3}(({81F7F3}Cau Hoi{81F7F3})) (Player) %s (%d): %s", name,playerid, params);
	}
	if(PlayerInfo[playerid][pHelper] >= 1 && PlayerInfo[playerid][pAdmin] < 2)
	{
		NewbieTimer[playerid] = gettime()+30;
		format(string, sizeof(string), "{81F7F3}(({81F7F3}Tra loi{81F7F3})) (Ho Tro) %s (%d): %s", name,playerid, params);
		ReportCount[playerid]++;
		ReportHourCount[playerid]++;
		AddCAReportToken(playerid); // Advisor Tokens
	}
	if(PlayerInfo[playerid][pAdmin] == 1)
	{
		NewbieTimer[playerid] = gettime()+30;
		if(PlayerInfo[playerid][pSMod] == 1) format(string, sizeof(string), "** Senior Moderator %s: %s", GetPlayerNameEx(playerid), params);
		else format(string, sizeof(string), "** Moderator %s: %s", GetPlayerNameEx(playerid), params);
	}
	if(PlayerInfo[playerid][pAdmin] >= 2) format(string, sizeof(string), "{81F7F3}(({81F7F3}Tra loi{81F7F3})) ((Admin)) %s: %s", GetPlayerNameEx(playerid), params);
	foreach(new n: Player)
	{
		if (gNewbie[n]==0)
		{
			SendClientMessageEx(n, 0xADFF2FFF, string);
			if(dodai < 0) SendClientMessageEx(n, 0xADFF2FFF, dong2);
		}
	}
	return 1;
}
CMD:joinhelp(playerid, params[])
{
	if(gHelp[playerid] == 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban dang trong kenh tro chuyen Helper!");
		return 1;
	}
	if(gettime() < HlKickTimer[playerid])
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban vua bi kick khoi kenh , vui long doi..");
		return 1;
	}
	if(PlayerInfo[playerid][pHelpMute] == 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban bi cam tham gia tro chuyen tai kenh Helper.");
		return 1;
	}
	SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da tham gia vao kenh tro chuyen Helper, su dung /hl de dat cau hoi hoac /leavehelp de thoat khoi kenh!");

	new string[128];
	foreach(new n: Player)
	{
		if (gHelp[n]==0)
		{
			format(string, sizeof(string), "* %s da tham gia vao kenh tro giup.", GetPlayerNameEx(playerid));
			SendClientMessageEx(n, COLOR_JOINHELPERCHAT, string);
		}
	}
	gHelp[playerid] = 0;
	return 1;
}


CMD:leavehelp(playerid, params[])
{
	if(gHelp[playerid] == 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da thoat khoi kenh tro giup!");
		return 1;
	}

	new string[128];
	foreach(new n: Player)
	{
		if (gHelp[n]==0)
		{
			format(string, sizeof(string), "* %s da thoat khoi kenh tro giup.", GetPlayerNameEx(playerid));
			SendClientMessageEx(n, COLOR_JOINHELPERCHAT, string);
		}
	}
	gHelp[playerid] = 1;
	return 1;
}

CMD:hlkick(playerid, params[])
{
	if (PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] >= 1){
		new giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /hlkick [Player]");
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		if(gHelp[giveplayerid] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Nguoi choi khong tham gia kenh tro giup!");
		if(PlayerInfo[giveplayerid][pHelper] >= 1 || PlayerInfo[giveplayerid][pAdmin] >= 2) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the kick nguoi choi chuc vu cao hon minh!");
		new string[128];
		HlKickTimer[giveplayerid] = gettime()+120;
		format(string, sizeof(string), "* %s da bi kick ra khoi kenh ho tro boi %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
		foreach(new n: Player) {
			if (gHelp[n]==0) {
				SendClientMessageEx(n, COLOR_JOINHELPERCHAT, string);
			}
		}
		gHelp[giveplayerid] = 1;
	}
	else {
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
	}
	return 1;
}

CMD:nmute(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelper] >= 2 || PlayerInfo[playerid][pSMod] == 1)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /nmute [Player]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pAdmin] >= 1)
			{
				return SendClientMessageEx(playerid, COLOR_LIGHTRED, "Ban khong the /nmute Admins");
			}
			if(PlayerInfo[giveplayerid][pNMute] == 0)
			{
			    SetPVarInt(giveplayerid, "UnmuteTime", gettime());
				PlayerInfo[giveplayerid][pNMute] = 1;
				PlayerInfo[giveplayerid][pNMuteTotal] += 1;
				format(string, sizeof(string), "AdmCmd: %s da bi cam tham gia Hoi/Dap tren kenh /newb boi %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				ABroadCast(COLOR_LIGHTRED,string,2);
				Log("logs/admin.log", string);
				if(PlayerInfo[giveplayerid][pNMuteTotal] > 6)
				{
					new playerip[32];
					GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
					format(string, sizeof(string), "AdmCmd: %s(IP:%s) da bi cam boi %s, Ly do: Lam dung kenh hoi dap", GetPlayerNameEx(giveplayerid),playerip,GetPlayerNameEx(playerid));
					Log("logs/ban.log", string);
					format(string, sizeof(string), "AdmCmd: %s da bi cam, Ly do: Lam dung kenh hoi dap.", GetPlayerNameEx(giveplayerid));
					SendClientMessageToAllEx(COLOR_LIGHTRED, string);
					PlayerInfo[giveplayerid][pBanned] = 1;
					AddBan(playerid, giveplayerid, "Excessive newbie chat mutes");
					MySQLBan(GetPlayerSQLId(giveplayerid),GetPlayerIpEx(giveplayerid),"Excessive newbie chat mutes", 1,GetPlayerNameEx(playerid));
					SetTimerEx("KickEx", 1000, 0, "i", giveplayerid);
				}

				if(PlayerInfo[playerid][pAdmin] == 1)
				{
					format(string, sizeof(string), "AdmCmd: %s da bi cam tham gia Hoi/Dap tren kenh /newb boi mot Admin.", GetPlayerNameEx(giveplayerid));
					SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
					SendClientMessageEx(giveplayerid, COLOR_LIGHTRED, "ban bi cam tham gia Hoi/Dap tren kenh [/newb] boi Admin.");
				}
				else
				{
					format(string, sizeof(string), "AdmCmd: %s da bi cam tham gia Hoi/Dap tren kenh /newb boi %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
					SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
					format(string, sizeof(string), "ban bi cam tham gia Hoi/Dap tren kenh [/newb] boi %s.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTRED, string);
				}

				SendClientMessageEx(giveplayerid, COLOR_LIGHTRED, "Chu y: kenh hoi dap chi de cho nguoi moi tham gia server hoi ve cac van de lien quan den game va khong va khong su dung vao muc dich nao khac.");
				SendClientMessageEx(giveplayerid, COLOR_LIGHTRED, "Neu muon bo cam Hoi/Dap tren kenh /newb ban se bi ngoi tu hoac mot hinh phat cao hon boi Admin quyet dinh. Neu thay dieu nay la do loi hay lien he voi Admin de thong bao loi nay.");

				format(string, sizeof(string), "AdmCmd: %s bi cam su dung kenh [/newb] do su dung sai muc dich.", GetPlayerNameEx(giveplayerid));
				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
			}
			else
			{
				if(PlayerInfo[playerid][pAdmin] >= 2)
				{
					ShowNMuteFine(giveplayerid);
					format(string, sizeof(string), "Ban bo cam /newb cho %s .", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTRED, string);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi do hien dang bi cam /newb. Ban khong the bo lenh cam khi dang lam Junior Helper.");
				}
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
	}
	return 1;
}

CMD:admute(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelper] >= 2 || PlayerInfo[playerid][pSMod] == 1)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /admute [Player]");

		if(IsPlayerConnected(giveplayerid))
		{
				if(PlayerInfo[giveplayerid][pAdmin] >= 1)
				{
					return SendClientMessageEx(playerid, COLOR_LIGHTRED, "Ban khong the cam quang cao voi mot Admin");
				}
				if(PlayerInfo[giveplayerid][pADMute] == 0)
				{
				    SetPVarInt(giveplayerid, "UnmuteTime", gettime());
					PlayerInfo[giveplayerid][pADMute] = 1;
					PlayerInfo[giveplayerid][pADMuteTotal] += 1;
					format(string, sizeof(string), "AdmCmd: %s da bi cam quang cao /ads boi %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
					Log("logs/admin.log", string);
					ABroadCast(COLOR_LIGHTRED,string,2);

					if(PlayerInfo[giveplayerid][pADMuteTotal] > 6)
					{
						new playerip[32];
						GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
						format(string, sizeof(string), "AdmCmd: %s(IP:%s) da bi cam boi %s, ly do: Lam dung quang cao /ads", GetPlayerNameEx(giveplayerid),playerip,GetPlayerNameEx(playerid));
						Log("logs/ban.log", string);
						format(string, sizeof(string), "AdmCmd: %s da ban cam, lu do: Lam dung quang cao /ads.", GetPlayerNameEx(giveplayerid));
						SendClientMessageToAllEx(COLOR_LIGHTRED, string);
						PlayerInfo[giveplayerid][pBanned] = 1;
						new ip[32];
						GetPlayerIp(giveplayerid,ip,sizeof(ip));
						AddBan(playerid, giveplayerid, "Excessive advertisement mutes");
						MySQLBan(GetPlayerSQLId(giveplayerid),ip,"Excessive advertisement mutes", 1,GetPlayerNameEx(playerid));
						SetTimerEx("KickEx", 1000, 0, "i", giveplayerid);
					}

					if(PlayerInfo[playerid][pAdmin] == 1)
					{
						format(string, sizeof(string), "AdmCmd: %s da bi cam quang cao /ads boi Admin.", GetPlayerNameEx(giveplayerid));
						SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
						SendClientMessageEx(giveplayerid, COLOR_LIGHTRED, "Ban da bi cam quang cao [/ads] boi Admin.");
					}
					else
					{
						format(string, sizeof(string), "AdmCmd: %s da bi cam quang cao /ads boi %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
						SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
						format(string, sizeof(string), "Ban da bi cam quang cao [/ads] boi %s.", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_LIGHTRED, string);
					}

					SendClientMessageEx(giveplayerid, COLOR_LIGHTRED, "Hay nho, kenh quang cao chi duoc su dung cho muc dich quang cao , khong lam dung vao muc dich khac.");
					SendClientMessageEx(giveplayerid, COLOR_LIGHTRED, "Neu muon bo cam quang cao [/ads] ban se bi ngoi tu hoac mot hinh phat cao hon boi Admin quyet dinh. Neu thay dieu nay la do loi hay lien he voi Admin de thong bao loi nay.");

					format(string, sizeof(string), "AdmCmd: %s bi cam quang cao [/ads] do su dung sai.", GetPlayerNameEx(giveplayerid));
					SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				}
				else
				{
					if(PlayerInfo[playerid][pAdmin] >= 2)
					{
						ShowAdMuteFine(giveplayerid);
						format(string, sizeof(string), "Ban bo cam %s tren kenh quang cao /ads.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_LIGHTRED, string);
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi do hien dang bi cam /newb. Ban khong the bo lenh cam khi dang lam Junior Helper.");
					}
				}

		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
	}
	return 1;
}

/*
CMD:makemoderator(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 6 || PlayerInfo[playerid][pAP] >= 2 || PlayerInfo[playerid][pHR] >= 3)
	{
		new string[128], giveplayerid, level;
		if(sscanf(params, "ui", giveplayerid, level)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /makemoderator [player] [level 1-2]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pAdmin] >= 2)
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the lam dieu nay voi admin!");
				return 1;
			}
			PlayerInfo[giveplayerid][pAdmin] = 1;
			if(level == 1) {
				PlayerInfo[giveplayerid][pSMod] = 0;
				format(string, sizeof(string), "Ban da duoc tuyen dung lam Moderator boi %s", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Ban da tuyen dung %s thanh moderator.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s has been made a moderator by %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				Log("logs/moderator.log", string);
			}
			else if(level == 2) {
				PlayerInfo[giveplayerid][pSMod] = 1;
				format(string, sizeof(string), "You have been made a senior moderator by %s", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Ban da tuyen dung %s thanh senior moderator.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s has been made a senior moderator by %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				Log("logs/moderator.log", string);
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
	}
	return 1;
}*/
/*
CMD:makehelper(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 5 || PlayerInfo[playerid][pHelper] >= 3 || PlayerInfo[playerid][pPR] > 0)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /makehelper [player]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pAdmin] >= 1)
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "You cannot make admins Junior Helpers!");
				return 1;
			}
			PlayerInfo[giveplayerid][pHelper] = 1;
			format(string, sizeof(string), "You have been made a helper by %s", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Ban da tuyen dung %s thanh helper.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
	}
	return 1;
}
*/

CMD:chelp(playerid, params[]) {
	return cmd_ch(playerid, params);
}

CMD:ch(playerid, params[])
{
	if (PlayerInfo[playerid][pHelper] >= 1)
	{
		SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
		SendClientMessageEx(playerid, COLOR_GRAD1, "*1* HELPER *** (/newb)ie /hlkick /hlban");
	}
	if (PlayerInfo[playerid][pHelper] >= 2) SendClientMessageEx(playerid, COLOR_GRAD1, "*2* Junior Helper *** (/c)advisor /nmute /admute /cduty /chapnhantrogiup /rhmute(reset) /advisors /dmwatch /dmalert /findnewb /showrequests");
	if (PlayerInfo[playerid][pHelper] >= 3) SendClientMessageEx(playerid, COLOR_GRAD1, "*3* Senior Helper *** /requestevent /spec /makehelper /takeadvisor");
	if (PlayerInfo[playerid][pHelper] >= 4) SendClientMessageEx(playerid, COLOR_GRAD1, "*4* Chief Helper *** /nonewbie /cmotd");
	if (PlayerInfo[playerid][pHelper] >= 1) SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
	return 1;
}
/*
CMD:muagiayphep(playerid, params[]) {
	return cmd_getlicense(playerid, params);
}

CMD:getlicense(playerid, params[])
{
	if (!IsPlayerInRangeOfPoint(playerid,2.0,366.54, 159.09, 1008.38)) { return 1; }
	if (PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessageEx(playerid, COLOR_LIGHTRED, "Ban da co mot lenh bat giu - mua lai giay phep deu bi cam.");
	ShowPlayerDialog(playerid, DIALOG_LICENSE_BUY, DIALOG_STYLE_LIST, "Chon loai giay phep ban muon mua.", "Giay phep lai xe ($1000)\r\nGiay phep lai thuyen ($2000)\r\nGiay phep lai may bay ($5000)\r\nGiay phep lai taxi ($2000)", "Mua", "Huy bo");
	return 1;
}
*/
CMD:tichthubanglai(playerid, params[]) {
	return cmd_revokelicense(playerid, params);
}

CMD:revokelicense(playerid, params[])
{
	if(IsACop(playerid) || (IsAMedic(playerid) && arrGroupData[PlayerInfo[playerid][pMember]][g_iAllegiance] == 2))
	{
		new string[128], giveplayerid, type, reason[64], sz_FacInfo[3][64];
		if(sscanf(params, "uds[64]", giveplayerid, type, reason))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /tichthubanglai [Player] [Loai] [Ly do]");
			SendClientMessageEx(playerid, COLOR_GRAD2, "Loai: 1 = Lai xe, 2 = Lai thuyen");
			return 1;
		}

		if (playerid == giveplayerid) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the thu hoi giay phep cua ban!");

		if((IsPlayerConnected(giveplayerid)) && giveplayerid != INVALID_PLAYER_ID)
		{
			if(GetPVarInt(playerid, "Injured") != 0) return SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong the lam dieu nay vao luc nay.");
			if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong o gan nguoi do!");
			switch(type)
			{
				case 1:
				{
					if(PlayerInfo[giveplayerid][pCarLic] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi nay khong co giay phep lai xe de thu hoi.");

					GetPlayerGroupInfo(playerid, sz_FacInfo[0], sz_FacInfo[1], sz_FacInfo[2]);
					format(string,sizeof(string),"Nhan vien %s da thu hoi giay phep lai xe cua ban, ly do: %s.", sz_FacInfo[2], reason);
					SendClientMessageEx(giveplayerid,COLOR_LIGHTBLUE,string);
					format(string,sizeof(string),"HQ: %s %s %s da thu hoi %s' giay phep lai xe, ly do: %s.", sz_FacInfo[2], sz_FacInfo[0], GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					SendGroupMessage(1,TEAM_BLUE_COLOR,string);
					format(string,sizeof(string),"Ban da thu hoi %s' giay phep lai xe.",GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), "%s mat %s' giay phep lai xe. ly do: %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					Log("logs/licenses.log", string);
					PlayerInfo[giveplayerid][pCarLic] = 0;
					return 1;
				}
				case 2:
				{
					if(PlayerInfo[giveplayerid][pBoatLic] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi nay khong co giay phep lai xe de thu hoi.");

					GetPlayerGroupInfo(playerid, sz_FacInfo[0], sz_FacInfo[1], sz_FacInfo[2]);
					format(string,sizeof(string),"Nhan vien %s da thu hoi giay phep lai thuyen cua ban, ly do: %s.", sz_FacInfo[2], reason);
					SendClientMessageEx(giveplayerid,COLOR_LIGHTBLUE,string);
					format(string,sizeof(string),"HQ: %s %s %s da thu hoi %s' giay phep lai thuyen, ly do: %s.", sz_FacInfo[2], sz_FacInfo[0], GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					SendGroupMessage(1,TEAM_BLUE_COLOR,string);
					format(string,sizeof(string),"Ban da thu hoi %s' giay phep lai thuyen.",GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), "%s mat %s' giay phep lai thuyen. ly do: %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					Log("logs/licenses.log", string);
					PlayerInfo[giveplayerid][pBoatLic] = 0;
					return 1;
				}
			}
		}
		SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi choi khong hop le.");
		return 1;
	}
	SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong duoc phep lam dieu nay.");
	return 1;
}

/*CMD:issuepilot(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pDivision] == 5)
	{
		new giveplayerid, string[128];
  		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /issuepilot [playerid]" );
  		if(IsPlayerConnected(giveplayerid))
    	{
     		if(PlayerInfo[giveplayerid][pFlyLic] == 0)
       		{
       		    format(string, sizeof(string), "You have given a pilot license to %s.",GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Aviation Administration %s da dua cho ban a pilot license.",GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Player %s has given a pilot license to %s.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
				Log("logs/licenses.log", string);
				PlayerInfo[giveplayerid][pFlyLic] = 1;
				return 1;
			}
			else
			{
			    return SendClientMessage(playerid, COLOR_GREY, "That person already has a pilot license.");
			}
		}
		else
		{
		    return SendClientMessage(playerid, COLOR_GREY, "That person isn't connected.");
		}
	}
	else return SendClientMessage(playerid, COLOR_GREY, "You cannot use this command.");
}

CMD:revokepilot(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pDivision] == 5)
	{
		new giveplayerid, string[128];
  		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /revokepilot [playerid]" );
  		if(IsPlayerConnected(giveplayerid))
    	{
     		if(PlayerInfo[giveplayerid][pFlyLic] == 1)
       		{
       		    format(string, sizeof(string), "You have revoked %s pilot license.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Aviation Administration %s has revoked your pilot license.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Player %s has revoked %s pilot license.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				Log("logs/licenses.log", string);
				PlayerInfo[giveplayerid][pFlyLic] = 0;
				return 1;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "That person doesn't have a pilot license.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "That person isn't connected.");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "You cannot use this command.");
}
*/

CMD:droplicense(playerid, params[])
{
	new string[128], type;
	if(sscanf(params, "d", type))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /droplicense [type]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Types: 1 = Lai xe, 2 = Lai thuyen.");
		return 1;
	}

	switch(type)
	{
		case 1:
		{
			if(PlayerInfo[playerid][pCarLic] == 0)
			{
				SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co giay phep lai xe.");
				return 1;
			}
			format(string, sizeof(string), "Ban da vut bo giay phep lai xe.");
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			PlayerInfo[playerid][pCarLic] = 0;
			return 1;
		}
		case 2:
		{
			if(PlayerInfo[playerid][pBoatLic] == 0)
			{
				SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co giay phep lai thuyen.");
				return 1;
			}
			format(string, sizeof(string), "Ban da vut bo giay phep lai thuyen.");
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			PlayerInfo[playerid][pBoatLic] = 0;
			return 1;
		}
		default:
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Loai giay phep khong hop le! /droplicense [type]");
			SendClientMessageEx(playerid, COLOR_GRAD2, "Types: 1 = Lai xe, 2 = Lai thuyen.");
		}
	}
	return 1;
}

CMD:families(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pFMember] != INVALID_FAMILY_ID)
	{

		new
			string[128],
			familyid;

		if(sscanf(params, "d", familyid))
		{
			new number = 1;
			for(new i = 1; i < sizeof(FamilyInfo); i++)
			{
 	  			if(FamilyInfo[i][FamilyTurfTokens] < 12)
				{
					format(string, sizeof(string), "%s (%d) | Quan ly: %s | Thanh vien: %d | Claim Tokens: 0", FamilyInfo[i][FamilyName], number, FamilyInfo[i][FamilyLeader], FamilyInfo[i][FamilyMembers]);
				}
				else
				{
					format(string, sizeof(string), "%s (%d) | Quan ly: %s | Thanh vien: %d | Claim Tokens: %d", FamilyInfo[i][FamilyName], number, FamilyInfo[i][FamilyLeader], FamilyInfo[i][FamilyMembers], FamilyInfo[i][FamilyTurfTokens]/12);
				}
				number++;
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
			return 1;
		}

		if(familyid < 1 || familyid > MAX_FAMILY)
		{
			format(string, sizeof(string), "Slot family phai o giua 1 va %i.", MAX_FAMILY);
			SendClientMessageEx(playerid, COLOR_GREY, string);
		 	return 1;
 	 	}
		if(FamilyInfo[familyid][FamilyTaken] != 1)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Slot family dang trong.");
			return 1;
		}

		foreach(new i: Player)
		{
		    new division[GROUP_MAX_DIV_LEN];
			if(PlayerInfo[i][pFMember] == familyid && (PlayerInfo[i][pTogReports] == 1 || PlayerInfo[i][pAdmin] < 2))
			{
			    if(0 <= PlayerInfo[i][pDivision] < 5)
				{
			        format(division, sizeof(division), "%s", FamilyDivisionInfo[PlayerInfo[i][pFMember]][PlayerInfo[i][pDivision]]);
			    } else {
       				division = "None";
			    }
   			 	if(PlayerInfo[i][pRank] == 0)
				{
					format(string, sizeof(string), "* %s: %s | Rank: %s (0) | Division: %s.",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyRankInfo[familyid][0], division);
				}
				else if(PlayerInfo[i][pRank] == 1)
				{
					format(string, sizeof(string), "* %s: %s | Rank: %s (1) | Division: %s.",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyRankInfo[familyid][1], division);
				}
				else if(PlayerInfo[i][pRank] == 2)
				{
					format(string, sizeof(string), "* %s: %s | Rank: %s (2) | Division: %s.",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyRankInfo[familyid][2], division);
				}
				else if(PlayerInfo[i][pRank] == 3)
				{
					format(string, sizeof(string), "* %s: %s | Rank: %s (3) | Division: %s.",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyRankInfo[familyid][3], division);
				}
				else if(PlayerInfo[i][pRank] == 4)
				{
					format(string, sizeof(string), "* %s: %s | Rank: %s (4) | Division: %s.",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyRankInfo[familyid][4], division);
				}
				else if(PlayerInfo[i][pRank] == 5)
				{
					format(string, sizeof(string), "* %s: %s | Rank: %s (5) | Division: %s.",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyRankInfo[familyid][5], division);
				}
				else if(PlayerInfo[i][pRank] == 6)
				{
					format(string, sizeof(string), "* %s: %s | Rank: %s (6) | Division: %s.",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyRankInfo[familyid][6], division);
				}
				else
				{
					format(string, sizeof(string), "* %s: %s | Rank: %s | Division: %s.",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyRankInfo[familyid][0], division);
				}
				if(PlayerInfo[playerid][pFMember] == familyid && PlayerInfo[playerid][pRank] >= 5 && playerAFK[i] != 0 && playerAFK[i] > 60)
				{
					format(string, sizeof(string), "%s (AFK: %d phut)", string, playerAFK[i] / 60);
				}
				SendClientMessageEx(playerid, COLOR_GREY, string);
			}
		}
	}
	else
	{
	    new string[128];
    	format(string, sizeof(string), "Chi cho phep thanh vien trong family va admin su dung lenh nay.");
    	SendClientMessageEx(playerid, COLOR_GREY, string);
	}
	return 1;
}

CMD:fbalance(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o ngan hang!");
		return 1;
	}

	new family, string[128];
	if(PlayerInfo[playerid][pFMember] < INVALID_FAMILY_ID)
	{
		family = PlayerInfo[playerid][pFMember];
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong family.");
		return 1;
	}

	format(string, sizeof(string), "Family ban  co $%d trong tai khoan.", FamilyInfo[family][FamilyBank]);
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:fdeposit(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong ngan hang!");
		return 1;
	}

	new family;
	if(PlayerInfo[playerid][pFMember] < INVALID_FAMILY_ID)
	{
		family = PlayerInfo[playerid][pFMember];
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong family.");
		return 1;
	}

	new string[128], file[32], month, day, year, amount;
	if(sscanf(params, "d", amount))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /fdeposit [amount]");
		format(string, sizeof(string), "Your family has $%s in their account.", number_format(FamilyInfo[family][FamilyBank]));
		SendClientMessageEx(playerid, COLOR_GRAD3, string);
		return 1;
	}

	if (amount > GetPlayerCash(playerid) || amount < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "You don't have that much.");
		return 1;
	}
	GivePlayerCash(playerid,-amount);
	new curfunds = FamilyInfo[family][FamilyBank];
	FamilyInfo[family][FamilyBank] = amount + FamilyInfo[family][FamilyBank];
	SendClientMessageEx(playerid, COLOR_WHITE, "|___ FAMILY BANK STATEMENT ___|");
	format(string, sizeof(string), "  Old Balance: $%s", number_format(curfunds));
	SendClientMessageEx(playerid, COLOR_GRAD2, string);
	format(string, sizeof(string), "  Deposit: $%s", number_format(amount));
	SendClientMessageEx(playerid, COLOR_GRAD4, string);
	SendClientMessageEx(playerid, COLOR_GRAD6, "|-----------------------------------------|");
	format(string, sizeof(string), "  New Balance: $%s", number_format(FamilyInfo[family][FamilyBank]));
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	format(string,sizeof(string),"%s has deposited $%s into %s's bank account.", GetPlayerNameEx(playerid), number_format(amount), FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyName]);
	getdate(year, month, day);
	format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
	Log(file, string);
	return 1;
}

CMD:fwithdraw(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong ngan hang!");
		return 1;
	}
	new family;
	if(PlayerInfo[playerid][pFMember] < INVALID_FAMILY_ID)
	{
		family = PlayerInfo[playerid][pFMember];
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong family.");
		return 1;
	}
	if(PlayerInfo[playerid][pRank] < 5)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Only ranks five and six may use the family bank.");
		return 1;
	}

	new string[128], file[32], month, day, year, amount;
	if(sscanf(params, "d", amount))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /fwithdraw [amount]");
		format(string, sizeof(string), "Your family has $%s in their account.", number_format(FamilyInfo[family][FamilyBank]));
		SendClientMessageEx(playerid, COLOR_GRAD3, string);
		return 1;
	}

	if (amount > FamilyInfo[family][FamilyBank] || amount < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Your family doesn't have that much.");
		return 1;
	}

	GivePlayerCash(playerid, amount);
	FamilyInfo[family][FamilyBank] = FamilyInfo[family][FamilyBank] - amount;
	format(string, sizeof(string), "  You have withdrawn $%s from your family account. Total: $%s", number_format(amount), number_format(FamilyInfo[family][FamilyBank]));
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	format(string,sizeof(string),"%s has withdrawn $%s from %s's bank account.", GetPlayerNameEx(playerid), number_format(amount), FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyName]);
	getdate(year, month, day);
	format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
	Log(file, string);
	return 1;
}

CMD:fstoregun(playerid, params[])
{
	if(GetPVarInt(playerid, "IsInArena") >= 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay trong dau truong!");
	if(GetPVarInt( playerid, "EventToken") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang trong su kien.");
	if(PlayerInfo[playerid][pDonateRank] > 2) return SendClientMessageEx(playerid, COLOR_GRAD1, "You can not give away weapons if you're Gold+ VIP!");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx (playerid, COLOR_GRAD2, "You can not store weapons from a vehicle!");
	new Float:health;
	GetPlayerHealth(playerid, health);
	if (health < 80) return SendClientMessageEx(playerid, COLOR_GRAD1, "You can not store weapons if your health is below 80!");
	if(GetPVarInt(playerid, "Injured") != 0 || PlayerCuffed[playerid] != 0 || PlayerInfo[playerid][pHospital] != 0 || GetPlayerState(playerid) == 7)
		return SendClientMessageEx (playerid, COLOR_GRAD2, "Ban khong the lam dieu nay vao luc nay.");
	if(PlayerInfo[playerid][pMember] != INVALID_GROUP_ID) return SendClientMessageEx(playerid, COLOR_GRAD1, "You can not store weapons in a family safe when in a faction!");

	new family;
	if(PlayerInfo[playerid][pFMember] < INVALID_FAMILY_ID) family = PlayerInfo[playerid][pFMember];
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong family.");

	new string[128], weaponchoice[32], slot;
	if(sscanf(params, "s[32]d", weaponchoice, slot)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /fstoregun [weapon] [slot]");
	if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		format(string, sizeof(string), "Ban phai doi  %d giay before depositing another weapon.", GetPVarInt(playerid, "GiveWeaponTimer"));
		return SendClientMessageEx(playerid,COLOR_GREY,string);
	}
	if(slot < 1 || slot > 10) return SendClientMessageEx(playerid, COLOR_GREY, "Invalid slot.");
	if( FamilyInfo[family][FamilyGuns][slot-1] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Your family has a weapon stored in that slot already.");
	if(IsPlayerInRangeOfPoint(playerid, 3.0, FamilyInfo[family][FamilySafe][0], FamilyInfo[family][FamilySafe][1], FamilyInfo[family][FamilySafe][2]) && GetPlayerVirtualWorld(playerid) == FamilyInfo[family][FamilySafeVW] && GetPlayerInterior(playerid) == FamilyInfo[family][FamilySafeInt])
	{
		new weapon;
		if(strcmp(weaponchoice, "sdpistol", true, strlen(weaponchoice)) == 0)
		{
			if( PlayerInfo[playerid][pGuns][2] == 23 && PlayerInfo[playerid][pAGuns][2] == 0 )
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a silenced pistol into your gun locker.");
				weapon = PlayerInfo[playerid][pGuns][2];
				format(string,sizeof(string), "* %s deposited their silenced pistol in a safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
		}
		else if(strcmp(weaponchoice, "deagle", true, strlen(weaponchoice)) == 0)
		{
			if( PlayerInfo[playerid][pGuns][2] == 24 && PlayerInfo[playerid][pAGuns][2] == 0 )
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a Desert Eagle in your gun locker.");
				weapon = PlayerInfo[playerid][pGuns][2];
				format(string,sizeof(string), "* %s deposited their Desert Eagle in a safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
		}
		else if(strcmp(weaponchoice, "shotgun", true, strlen(weaponchoice)) == 0)
		{
			if( PlayerInfo[playerid][pGuns][3] == 25 && PlayerInfo[playerid][pAGuns][3] == 0 )
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a shotgun in your gun locker.");
				weapon = PlayerInfo[playerid][pGuns][3];
				format(string,sizeof(string), "* %s deposited their Shotgun in a safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
		}
		else if(strcmp(weaponchoice, "spas12", true, strlen(weaponchoice)) == 0)
		{
			if( PlayerInfo[playerid][pGuns][3] == 27 && PlayerInfo[playerid][pAGuns][3] == 0 )
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a combat shotgun in your gun locker.");
				weapon = PlayerInfo[playerid][pGuns][3];
				format(string,sizeof(string), "* %s deposited their Combat Shotgun in a safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
		}
		else if(strcmp(weaponchoice, "mp5", true, strlen(weaponchoice)) == 0)
		{
			if( PlayerInfo[playerid][pGuns][4] == 29 && PlayerInfo[playerid][pAGuns][4] == 0 )
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited an MP5 in your gun locker.");
				weapon = PlayerInfo[playerid][pGuns][4];
				format(string,sizeof(string), "* %s deposited their MP5 in a safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
		}
		else if(strcmp(weaponchoice, "ak47", true, strlen(weaponchoice)) == 0)
		{
			if( PlayerInfo[playerid][pGuns][5] == 30 && PlayerInfo[playerid][pAGuns][5] == 0 )
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited an AK-47 in your gun locker.");
				weapon = PlayerInfo[playerid][pGuns][5];
				format(string,sizeof(string), "* %s deposited their AK-47 in a safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
		}
		else if(strcmp(weaponchoice, "m4", true, strlen(weaponchoice)) == 0)
		{
			if( PlayerInfo[playerid][pGuns][5] == 31 && PlayerInfo[playerid][pAGuns][5] == 0 )
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited an M4 in your gun locker.");
				weapon = PlayerInfo[playerid][pGuns][5];
				format(string,sizeof(string), "* %s deposited their M4 in a safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
		}
		else if(strcmp(weaponchoice, "rifle", true, strlen(weaponchoice)) == 0)
		{
			if( PlayerInfo[playerid][pGuns][6] == 33 && PlayerInfo[playerid][pAGuns][6] == 0 )
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a rifle in your gun locker.");
				weapon = PlayerInfo[playerid][pGuns][6];
				format(string,sizeof(string), "* %s deposited their rifle in a safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
		}
		else if(strcmp(weaponchoice, "sniper", true, strlen(weaponchoice)) == 0)
		{
			if( PlayerInfo[playerid][pGuns][6] == 34 && PlayerInfo[playerid][pAGuns][6] == 0 )
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have deposited a sniper rifle in your gun locker.");
				weapon = PlayerInfo[playerid][pGuns][6];
				format(string,sizeof(string), "* %s deposited their sniper rifle in a safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
		}
		else return SendClientMessageEx(playerid,COLOR_GREY,"   Invalid weapon name!");
		//if(weapon == 0) return SendClientMessageEx(playerid, COLOR_GREY, "You don't have that weapon.");
		if(FamilyInfo[family][FamilyGuns][slot-1] == 0)
		{
			FamilyInfo[family][FamilyGuns][slot-1] = weapon;
			RemovePlayerWeapon(playerid, weapon);
			SaveFamily(family);
			return 1;
		}
	}
	else
	{
		return SendClientMessageEx(playerid, COLOR_GRAD1, "You're not at your family safe.");
	}
	return 1;
}

CMD:fgetgun(playerid, params[])
{
	new string[128], slot;
	if(PlayerInfo[playerid][pConnectHours] < 2 || PlayerInfo[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "You cannot use this as you are currently restricted from possessing weapons!");

	new family;
	if(PlayerInfo[playerid][pFMember] < INVALID_FAMILY_ID) family = PlayerInfo[playerid][pFMember];
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong family.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "You can not get weapons from a vehicle!");

	if(sscanf(params, "d", slot))
	{
		new weaponname[50];
		SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
		format(string, sizeof(string), "*** %s Safe ***", FamilyInfo[family][FamilyName]);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		for(new s = 0; s < 10; s++)
		{
			if( FamilyInfo[family][FamilyGuns][s] != 0 )
			{
				GetWeaponName(FamilyInfo[family][FamilyGuns][s], weaponname, sizeof(weaponname));
				format(string, sizeof(string), "Slot %d: %s", s+1, weaponname);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
		}
		SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /fgetgun [slot]");
		return 1;
	}

	if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		format(string, sizeof(string), "   Ban phai doi  %d giay before getting another weapon.", GetPVarInt(playerid, "GiveWeaponTimer"));
		return SendClientMessageEx(playerid,COLOR_GREY,string);
	}

	if(slot < 1 || slot > 10) return SendClientMessageEx(playerid, COLOR_GREY, "Invalid slot.");
	if(PlayerInfo[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_GRAD1, "Only rank 4+ can withdraw guns from the family safe.");
	if(IsPlayerInRangeOfPoint(playerid, 3.0, FamilyInfo[family][FamilySafe][0], FamilyInfo[family][FamilySafe][1], FamilyInfo[family][FamilySafe][2]) && GetPlayerVirtualWorld(playerid) == FamilyInfo[family][FamilySafeVW] && GetPlayerInterior(playerid) == FamilyInfo[family][FamilySafeInt])
	{
		if(FamilyInfo[family][FamilyGuns][slot-1] != 0)
		{
			new weaponname[50];
			GetWeaponName(FamilyInfo[family][FamilyGuns][slot-1], weaponname, sizeof(weaponname));
			GivePlayerValidWeapon(playerid, FamilyInfo[family][FamilyGuns][slot-1], 60000);
			FamilyInfo[family][FamilyGuns][slot-1] = 0;
			if(strcmp(weaponname, "silenced pistol", true, strlen(weaponname)) == 0)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn a silenced pistol from your family's gun locker.");
				format(string,sizeof(string), "* %s has withdrawn a silenced pistol from a family safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			if(strcmp(weaponname, "desert eagle", true, strlen(weaponname)) == 0)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn a Desert Eagle from your family's gun locker.");
				format(string,sizeof(string), "* %s has withdrawn a Desert Eagle from a family safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			if(strcmp(weaponname, "shotgun", true, strlen(weaponname)) == 0)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn a shotgun from your family's gun locker.");
				format(string,sizeof(string), "* %s has withdrawn a shotgun from a family safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			if(strcmp(weaponname, "combat shotgun", true, strlen(weaponname)) == 0)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn a combat shotgun from your family's gun locker.");
				format(string,sizeof(string), "* %s has withdrawn a combat shotgun from a family safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			if(strcmp(weaponname, "mp5", true, strlen(weaponname)) == 0)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn an MP5 from your family's gun locker.");
				format(string,sizeof(string), "* %s has withdrawn an MP5 from a family safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			if(strcmp(weaponname, "ak47", true, strlen(weaponname)) == 0)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn an AK-47 from your family's gun locker.");
				format(string,sizeof(string), "* %s has withdrawn an AK-47 from a family safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			if(strcmp(weaponname, "m4", true, strlen(weaponname)) == 0)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn an M4 from your family's gun locker.");
				format(string,sizeof(string), "* %s has withdrawn an M4 from a family safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			if(strcmp(weaponname, "rifle", true, strlen(weaponname)) == 0)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn a rifle from your family's gun locker.");
				format(string,sizeof(string), "* %s has withdrawn a rifle from a family safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			if(strcmp(weaponname, "sniper rifle", true, strlen(weaponname)) == 0)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You have withdrawn a sniper rifle from your family's gun locker.");
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				format(string,sizeof(string), "* %s has withdrawn a sniper rifle from a safe.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			SaveFamily(family);
			return 1;
		}
		else
		{
			return SendClientMessageEx(playerid, COLOR_WHITE, "You don't have a weapon stored in that slot.");
		}
	}
	else
	{
		return SendClientMessageEx(playerid, COLOR_GRAD1, "You're not at your family safe.");
	}
}

CMD:safedeposit(playerid, params[]) // TransferStorage(playerid, storageid, fromplayerid, fromstorageid, itemid, amount, price, special)
{
	new family;

	if(PlayerInfo[playerid][pFMember] < INVALID_FAMILY_ID) family = PlayerInfo[playerid][pFMember];
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong family.");

	if(FamilyInfo[family][FamilyUSafe] < 1) return SendClientMessageEx(playerid, COLOR_GRAD1, "Your family has not upgraded their safe.");

	new string[128], itemid, storageid, amount;

	if(sscanf(params, "dd", itemid, amount) || itemid < 1 || itemid > 5)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /safedeposit [itemid] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials - (5) Heroin");
		return 1;
	}
	/*if(sscanf(params, "ddd", itemid, storageid, amount))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /safedeposit [itemid] [storageid] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
		return 1;
	}
	if(itemid < 1 || itemid > 4) {
		SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /safedeposit [itemid] [storageid] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
		return 1;
	}

	if(storageid < 0 || storageid > 1) {
		SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /safedeposit [itemid] [storageid] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
		return 1;
	}*/

	if(amount < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "You can't deposit less than 1.");

	// Find the storageid of the storagedevice.
	/*if(storageid == 1) {
		new bool:itemEquipped = false;
		for(new i = 0; i < 3; i++)
		{
			if(StorageInfo[playerid][i][sAttached] == 1) {
				storageid = i+1;
				itemEquipped = true;
			}
		}
		if(itemEquipped == false) return SendClientMessageEx(playerid, COLOR_WHITE, "You don't have a storage device equipped!");
	}

	if(amount < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "You can't deposit less than 1.");*/
	if(IsPlayerInRangeOfPoint(playerid, 3.0, FamilyInfo[family][FamilySafe][0], FamilyInfo[family][FamilySafe][1], FamilyInfo[family][FamilySafe][2]) && GetPlayerVirtualWorld(playerid) == FamilyInfo[family][FamilySafeVW] && GetPlayerInterior(playerid) == FamilyInfo[family][FamilySafeInt])
	{
		new file[32], month, day, year;
		getdate(year,month,day);
		switch(itemid)
		{
			case 1: // Cash
			{
				if(storageid == 0) {
					if(PlayerInfo[playerid][pCash] >= amount) PlayerInfo[playerid][pCash] -= amount;
					else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");
				}
				else {
					if(StorageInfo[playerid][storageid-1][sCash] >= amount) StorageInfo[playerid][storageid-1][sCash] -= amount;
					else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");
				}

				FamilyInfo[family][FamilyCash] += amount;
				format(string, sizeof(string), "You have deposited $%s to your family's safe.", number_format(amount));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				OnPlayerStatsUpdate(playerid);
				format(string, sizeof(string), "%s has deposited $%s into %s's safe", GetPlayerNameEx(playerid), number_format(amount), FamilyInfo[family][FamilyName]);
				format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
				Log(file, string);
			}
			case 2: // Pot
			{
				if(storageid == 0) {
					if(PlayerInfo[playerid][pPot] >= amount) PlayerInfo[playerid][pPot] -= amount;
					else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");
				}
				else {
					if(StorageInfo[playerid][storageid-1][sPot] >= amount) StorageInfo[playerid][storageid-1][sPot] -= amount;
					else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");
				}

				FamilyInfo[family][FamilyPot] += amount;
				format(string, sizeof(string), "You have deposited %s grams of pot to your family's safe.", number_format(amount));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				OnPlayerStatsUpdate(playerid);
				format(string, sizeof(string), "%s has deposited %s pot into %s's safe", GetPlayerNameEx(playerid), number_format(amount), FamilyInfo[family][FamilyName]);
				format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
				Log(file, string);
			}
			case 3: // Crack
			{
				if(storageid == 0) {
					if(PlayerInfo[playerid][pCrack] >= amount) PlayerInfo[playerid][pCrack] -= amount;
					else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");
				}
				else {
					if(StorageInfo[playerid][storageid-1][sCrack] >= amount) StorageInfo[playerid][storageid-1][sCrack] -= amount;
					else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");
				}

				FamilyInfo[family][FamilyCrack] += amount;
				format(string, sizeof(string), "You have deposited %s grams of crack to your family's safe.", number_format(amount));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				OnPlayerStatsUpdate(playerid);
				format(string, sizeof(string), "%s has deposited %s crack into %s's safe", GetPlayerNameEx(playerid), number_format(amount), FamilyInfo[family][FamilyName]);
				format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
				Log(file, string);
			}
			case 4: // Materials
			{
				if(storageid == 0) {
					if(PlayerInfo[playerid][pMats] >= amount) PlayerInfo[playerid][pMats] -= amount;
					else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");
				}
				else {
					if(StorageInfo[playerid][storageid-1][sMats] >= amount) StorageInfo[playerid][storageid-1][sMats] -= amount;
					else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");
				}

				FamilyInfo[family][FamilyMats] += amount;
				format(string, sizeof(string), "You have deposited %s materials to your family's safe.", number_format(amount));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				OnPlayerStatsUpdate(playerid);
				format(string, sizeof(string), "%s has deposited %s materials into %s's safe", GetPlayerNameEx(playerid), number_format(amount), FamilyInfo[family][FamilyName]);
				format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
				Log(file, string);
			}
			case 5: // Heroin
			{
				if(PlayerInfo[playerid][pHeroin] >= amount) PlayerInfo[playerid][pHeroin] -= amount;
				else return SendClientMessageEx(playerid, COLOR_WHITE, "You do not have enough to deposit!");

				FamilyInfo[family][FamilyHeroin] += amount;
				format(string, sizeof(string), "You have deposited %s heroin to your family's safe.", number_format(amount));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				OnPlayerStatsUpdate(playerid);
				format(string, sizeof(string), "%s has deposited %s heroin into %s's safe", GetPlayerNameEx(playerid), number_format(amount), FamilyInfo[family][FamilyName]);
				format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
				Log(file, string);
			}
		}
	}
	else
	{
		return SendClientMessageEx(playerid, COLOR_GRAD1, "You're not at your family safe.");
	}
	return 1;
}

CMD:safewithdraw(playerid, params[]) // TransferStorage(playerid, storageid, fromplayerid, fromstorageid, itemid, amount, price, special)
{
	new family;

	if(PlayerInfo[playerid][pFMember] < INVALID_FAMILY_ID) family = PlayerInfo[playerid][pFMember];
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong family.");

	if(FamilyInfo[family][FamilyUSafe] < 1) return SendClientMessageEx(playerid, COLOR_GRAD1, "Your family has not upgraded their safe.");
	if(PlayerInfo[playerid][pRank] < 5) return SendClientMessageEx(playerid, COLOR_GRAD1, "Only ranks 5 and 6 can withdraw items from the family safe.");

	new itemid, amount, string[128];
	if(sscanf(params, "dd", itemid, amount) || (itemid < 1 || itemid > 5))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /safewithdraw [itemid] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "ItemIDs: (1) Cash - (2) Pot - (3) Crack - (4) Materials - (5) Heroin");
		return 1;
	}

	if(amount < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "You can't withdraw less than 1.");
	if(IsPlayerInRangeOfPoint(playerid, 3.0, FamilyInfo[family][FamilySafe][0], FamilyInfo[family][FamilySafe][1], FamilyInfo[family][FamilySafe][2]) && GetPlayerVirtualWorld(playerid) == FamilyInfo[family][FamilySafeVW] && GetPlayerInterior(playerid) == FamilyInfo[family][FamilySafeInt])
	{
		switch(itemid)
		{
			case 1: // Cash
			{
				if(FamilyInfo[family][FamilyCash] >= amount)
				{
					SetPVarInt(playerid, "Special_FamilyID", family);
					TransferStorage(playerid, -1, -1, -1, itemid, amount, -1, 5);
				}
				else return SendClientMessageEx(playerid, COLOR_WHITE, "Your family safe does not have enough for you to withdraw!");
			}
			case 2: // Pot
			{
				if(FamilyInfo[family][FamilyPot] >= amount)
				{
					SetPVarInt(playerid, "Special_FamilyID", family);
					TransferStorage(playerid, -1, -1, -1, itemid, amount, -1, 5);
				}
				else return SendClientMessageEx(playerid, COLOR_WHITE, "Your family safe does not have enough for you to withdraw!");
			}
			case 3: // Crack
			{
				if(FamilyInfo[family][FamilyCrack] >= amount)
				{
					SetPVarInt(playerid, "Special_FamilyID", family);
					TransferStorage(playerid, -1, -1, -1, itemid, amount, -1, 5);
				}
				else return SendClientMessageEx(playerid, COLOR_WHITE, "Your family safe does not have enough for you to withdraw!");
			}
			case 4: // Materials
			{
				if(FamilyInfo[family][FamilyMats] >= amount)
				{
					SetPVarInt(playerid, "Special_FamilyID", family);
					TransferStorage(playerid, -1, -1, -1, itemid, amount, -1, 5);
				}
				else return SendClientMessageEx(playerid, COLOR_WHITE, "Your family safe does not have enough for you to withdraw!");
			}
			case 5: // Heroin
			{
				if(FamilyInfo[family][FamilyHeroin] >= amount)
				{
					new file[32], month, day, year;
					getdate(year,month,day);
					FamilyInfo[family][FamilyHeroin] -= amount;
					PlayerInfo[playerid][pHeroin] += amount;
					OnPlayerStatsUpdate(playerid);
					format(string, sizeof(string), "You have withdrawn %s heroin from your family safe.", number_format(amount));
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "%s has withdrawn %s heroin from %s's safe", GetPlayerNameEx(playerid), number_format(amount), FamilyInfo[family][FamilyName]);
					format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
					Log(file, string);
				}
				else return SendClientMessageEx(playerid, COLOR_WHITE, "Your family safe does not have enough for you to withdraw!");
			}
		}
	}
	else
	{
		return SendClientMessageEx(playerid, COLOR_GRAD1, "You're not at your family safe.");
	}
	return 1;
}

CMD:adjust(playerid, params[])
{
	if(PlayerInfo[playerid][pFMember] == INVALID_FAMILY_ID)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "You aren't in a family.");
		return 1;
	}
	new family = PlayerInfo[playerid][pFMember];
	new string[128], file[32], month, day, year;
	getdate(year,month,day);
	if(PlayerInfo[playerid][pRank] >= 5)
	{
		new choice[32], opstring[100];
		if(sscanf(params, "s[32]S[100]", choice, opstring))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /adjust [name]");
			SendClientMessageEx(playerid, COLOR_WHITE, "Ten co san : Name, Safe");
			return 1;
		}

		if(strcmp(choice,"name",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] == 6)
			{
				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /adjust name [family name]");
					return 1;
				}
				if(strfind(opstring, "|", true) != -1)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2,  "You can't use '|' in a family name.");
					return 1;
				}
				if(strlen(opstring) >= 40 )
				{
					SendClientMessageEx( playerid, COLOR_GRAD1, "That family name is too long, please refrain from using more than 40 characters." );
					return 1;
				}
				strmid(FamilyInfo[family][FamilyName], opstring, 0, strlen(opstring), 100);
				SaveFamilies();
				SendClientMessageEx(playerid, COLOR_WHITE, "You've adjusted your family's name.");
				format(string, sizeof(string), "%s adjusted %s's name to %s", GetPlayerNameEx(playerid), FamilyInfo[family][FamilyName], opstring);
				format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
				Log(file, string);
			}
		}
		else if(strcmp(choice,"safe",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] == 6)
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "Adjusting your Family Safe will reset all your safe stats.");
				SendClientMessageEx(playerid, COLOR_GRAD1, "If you want to adjust your safe, type /adjust confirm.");
				SendClientMessageEx(playerid, COLOR_GRAD1, "Upgrading your family safe will cost $50,000.");
				return 1;
			}
		}
		else if(strcmp(choice,"confirm",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] == 6)
			{
				if(GetPlayerCash(playerid) < 50000)
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "You don't have $50,000 to upgrade your family safe.");
					return 1;
				}
				GivePlayerCash(playerid, -50000);
				GetPlayerPos(playerid, FamilyInfo[family][FamilySafe][0], FamilyInfo[family][FamilySafe][1], FamilyInfo[family][FamilySafe][2]);
				FamilyInfo[family][FamilySafeVW] = GetPlayerVirtualWorld(playerid);
				FamilyInfo[family][FamilySafeInt] = GetPlayerInterior(playerid);
				FamilyInfo[family][FamilyCash] = 0;
				FamilyInfo[family][FamilyMats] = 0;
				FamilyInfo[family][FamilyPot] = 0;
				FamilyInfo[family][FamilyCrack] = 0;
				if(FamilyInfo[family][FamilyUSafe]) DestroyDynamicPickup(FamilyInfo[family][FamilyPickup]);
				FamilyInfo[family][FamilyUSafe] = 1;
				FamilyInfo[family][FamilyPickup] = CreateDynamicPickup(1239, 23, FamilyInfo[family][FamilySafe][0], FamilyInfo[family][FamilySafe][1], FamilyInfo[family][FamilySafe][2], .worldid = FamilyInfo[family][FamilySafeVW], .interiorid = FamilyInfo[family][FamilySafeInt]);
				SaveFamilies();
				SendClientMessageEx(playerid, COLOR_WHITE, "You've adjusted your family's Safe.");
				format(string, sizeof(string), "%s adjusted %s's safe", GetPlayerNameEx(playerid), FamilyInfo[family][FamilyName]);
				format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
				Log(file, string);
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   You do not have a high enough rank to use this command!");
		return 1;
	}
	return 1;
}

CMD:fmotd(playerid, params[])
{
	if(PlayerInfo[playerid][pFMember] == INVALID_FAMILY_ID) return SendClientMessageEx(playerid, COLOR_GREY, "You aren't in a family.");
	if(PlayerInfo[playerid][pRank] < 5) return SendClientMessageEx(playerid, COLOR_GREY, "   You do not have a high enough rank to use this command!");
	new string[128], slot, family = PlayerInfo[playerid][pFMember];
	if(sscanf(params, "ds[128]", slot, string)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /fmotd [slot] [family MOTD text]");
	if(strlen(string) > 128) return SendClientMessageEx( playerid, COLOR_GRAD1, "That MOTD is too long, please refrain from using more than 128 characters." );
	if(1 <= slot <= 3)
	{
		new file[32], month, day, year ;
		getdate(year,month,day);
		strmid(FamilyMOTD[family][slot-1], string, 0, strlen(string), 128);
		SaveFamilies();
		format(string, sizeof(string), "%s adjusted %s's MOTD (slot %d) to %s", GetPlayerNameEx(playerid), FamilyInfo[family][FamilyName], slot, string);
		format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
		Log(file, string);
		format(string, sizeof(string),"You've adjusted your family's MOTD in slot %d.", slot);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD2, "Slot ID Must be between 1 and 3!");
	return 1;
}

CMD:viewmotd(playerid, params[])
{
	new string[128], option[16];
	if(sscanf(params, "s[16]", option))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /viewmotd [option]");
		strcat(string, "Available Options: global");
		if(PlayerInfo[playerid][pDonateRank] >= 1) strcat(string, ", vip");
		if(PlayerInfo[playerid][pFMember] != INVALID_FAMILY_ID) strcat(string, ", family");
		if(PlayerInfo[playerid][pMember] != INVALID_GROUP_ID) strcat(string, ", group");
		if(PlayerInfo[playerid][pHelper] >= 1) strcat(string, ", advisor");
		if(PlayerInfo[playerid][pAdmin] > 1) strcat(string, ", admin");
		return SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
	if(strcmp(option, "global", true) == 0) return SendClientMessageEx(playerid, COLOR_YELLOW, GlobalMOTD);
	if(strcmp(option, "vip", true) == 0 && PlayerInfo[playerid][pDonateRank] >= 1) return SendClientMessageEx(playerid, COLOR_VIP, VIPMOTD);
	if(strcmp(option, "family", true) == 0 && PlayerInfo[playerid][pFMember] != INVALID_FAMILY_ID)
	{
		new fam = PlayerInfo[playerid][pFMember];
		SendClientMessageEx(playerid, COLOR_WHITE, "Family MOTD's:");
		for(new i = 1; i <= 3; i++)
		{
			format(string, sizeof(string), "%d: %s", i, FamilyMOTD[fam][i-1]);
			SendClientMessageEx(playerid, COLOR_YELLOW, string);
		}
	}
	if(strcmp(option, "group", true) == 0 && PlayerInfo[playerid][pMember] != INVALID_GROUP_ID)
		return SendClientMessageEx(playerid, arrGroupData[PlayerInfo[playerid][pMember]][g_hDutyColour] * 256 + 255, arrGroupData[PlayerInfo[playerid][pMember]][g_szGroupMOTD]);
	if(strcmp(option, "advisor", true) == 0 && PlayerInfo[playerid][pHelper] >= 1) return SendClientMessageEx(playerid, TEAM_AZTECAS_COLOR, CAMOTD);
	if(strcmp(option, "admin", true) == 0 && PlayerInfo[playerid][pAdmin] > 1) return SendClientMessageEx(playerid, COLOR_YELLOW, AdminMOTD);
	return 1;
}

CMD:adjustrankname(playerid, params[])
{
	if(PlayerInfo[playerid][pFMember] == INVALID_FAMILY_ID)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "You aren't in a family.");
		return 1;
	}
	new family = PlayerInfo[playerid][pFMember];
	new string[128], rank, rankname[30];
	if(sscanf(params, "ds[30]", rank, rankname)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /adjustrankname [rank number 0-6] [rank name]");

	if(PlayerInfo[playerid][pRank] == 6)
	{
		if(rank < 0 || rank > 6)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Rank number must be from 0 to 6.");
			return 1;
		}
		if(strfind(rankname, "|", true) != -1)
		{
			SendClientMessageEx(playerid, COLOR_GRAD2,  "You can't use '|' in a rank name.");
			return 1;
		}
		if(strlen(rankname) >= 19 )
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "That rank name is too long, please refrain from using more than 19 characters.");
			return 1;
		}

		new file[32], month, day, year ;
		getdate(year,month,day);
		format(FamilyRankInfo[family][rank], 30, "%s", rankname);
		SaveFamily(family);
		format(string, sizeof(string), "* You have changed rank %d to %s.", rank, rankname);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "%s adjusted %s's rank %d to %s", GetPlayerNameEx(playerid), FamilyInfo[family][FamilyName], rank, rankname);
		format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
		Log(file, string);
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "   You are not high rank enough to use this command!");
	return 1;
}

CMD:ram(playerid, params[])
{
	if(IsACop(playerid) || IsAMedic(playerid))
	{
		if(GetPVarInt(playerid, "IsInArena") >= 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay tai dau truong!");
			return 1;
		}
		if( PlayerCuffed[playerid] >= 1 )
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu do vao luc nay");
			return 1;
		}

		new string[128];
		for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]))
			{
				format(string, sizeof(string), "* %s da pha cua va di vao trong.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerInterior(playerid,HouseInfo[i][hIntIW]);
				SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
				GameTextForPlayer(playerid, "~r~Pha canh cua", 5000, 1);
				PlayerInfo[playerid][pInt] = HouseInfo[i][hIntIW];
				PlayerInfo[playerid][pVW] = HouseInfo[i][hIntVW];
				SetPlayerVirtualWorld(playerid,HouseInfo[i][hIntVW]);
				if(HouseInfo[i][hCustomInterior] == 1) Player_StreamPrep(playerid, HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ], FREEZE_TIME);
				return 1;
			}
		}
		if(PlayerInfo[playerid][pRank] > 3)
		{
			for(new i = 0; i < sizeof(DDoorsInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddExteriorVW] && DDoorsInfo[i][ddVIP] > 0)
				{
					SetPlayerInterior(playerid,DDoorsInfo[i][ddInteriorInt]);
					PlayerInfo[playerid][pInt] = DDoorsInfo[i][ddInteriorInt];
					PlayerInfo[playerid][pVW] = DDoorsInfo[i][ddInteriorVW];
					SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddInteriorVW]);
					SetPlayerColor(playerid, COLOR_RED);
					if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
						SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
						SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorA]);
						SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorVW]);
						LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorInt]);
					}
					else {
						SetPlayerPos(playerid,DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
						SetPlayerFacingAngle(playerid,DDoorsInfo[i][ddInteriorA]);
						SetCameraBehindPlayer(playerid);
					}
					if(DDoorsInfo[i][ddCustomInterior]) Player_StreamPrep(playerid, DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ], FREEZE_TIME);
					return 1;
				}
			}
		}
	    for(new i = 0; i < sizeof(Businesses); i++) {
	        if (IsPlayerInRangeOfPoint(playerid,3,Businesses[i][bExtPos][0], Businesses[i][bExtPos][1], Businesses[i][bExtPos][2])) {
		        if (Businesses[i][bExtPos][1] == 0.0) return 1;
				format(string, sizeof(string), "* %s da pha canh cua va di vao.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerInterior(playerid,Businesses[i][bInt]);
		        if(Businesses[i][bVW] == 0) SetPlayerVirtualWorld(playerid, BUSINESS_BASE_VW + i), PlayerInfo[playerid][pVW] = BUSINESS_BASE_VW + i;
		        else SetPlayerVirtualWorld(playerid, Businesses[i][bVW]), PlayerInfo[playerid][pVW] = Businesses[i][bVW];
		        SetPlayerPos(playerid,Businesses[i][bIntPos][0],Businesses[i][bIntPos][1],Businesses[i][bIntPos][2]);
			    SetPlayerFacingAngle(playerid, Businesses[i][bIntPos][3]);
		        SetCameraBehindPlayer(playerid);
				GameTextForPlayer(playerid, "~r~Pha canh cua", 5000, 1);
				return 1;
	        }
	    }
		if (IsPlayerInRangeOfPoint(playerid,4.0,648.7888,-1360.7708,13.5875))
		{
			format(string, sizeof(string), "* %s da pha canh cua va di vao.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerInterior(playerid,1);
			PlayerInfo[playerid][pInt] = 1;
			SetPlayerVirtualWorld(playerid, 4225);
			PlayerInfo[playerid][pVW] = 4225;
			SetPlayerPos(playerid,626.4980,21.4223,1107.9686);
			SetPlayerFacingAngle(playerid, 178.6711);
			Player_StreamPrep(playerid, 626.4980,21.4223,1107.9686, FREEZE_TIME);
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la nhan vien thuc thi phap luat.");
	}
	return 1;
}

CMD:lyhon(playerid, params[]) {
	return cmd_divorce(playerid, params);
}

CMD:divorce(playerid, params[])
{
	if(PlayerInfo[playerid][pMarriedID] == -1) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong ket hon!");

	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /lyhon [player]");

	if(IsPlayerConnected(giveplayerid))
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			new dstring[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			new giveplayer[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			format(string, sizeof(string), "%s", giveplayer);
			strmid(wstring, string, 0, strlen(string), 24);
			format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedName]);
			strmid(dstring, string, 0, strlen(string), 24);
			if(strcmp(dstring ,wstring, true ) == 0 )
			{
				format(string, sizeof(string), "* Ban da gui don ly hon toi %s.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* %s da gui cho ban gon ly hon (Su dung /chapnhan lyhon) de dong y.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				DivorceOffer[giveplayerid] = playerid;
				return 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi do khong ket hon voi ban!");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
			return 1;
		}

	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		return 1;
	}
}

CMD:propose(playerid, params[])
{
	if(GetPlayerCash(playerid) < 100000) return SendClientMessageEx(playerid, COLOR_GREY, "   The marriage and reception costs $100,000!");
	if(PlayerInfo[playerid][pMarriedID] != -1) return SendClientMessageEx(playerid, COLOR_GREY, "   You're already married!");

	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /propose [player]");

	if(IsPlayerConnected(giveplayerid))
	{
		if(PlayerInfo[giveplayerid][pMarriedID] != -1) return SendClientMessageEx(playerid, COLOR_GREY, "   That person is already married!");
		else if(MarryWitness[playerid] == giveplayerid || MarryWitnessOffer[giveplayerid] == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "   You can't marry the witness!");

		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "You cannot Propose to yourself!"); return 1; }
			format(string, sizeof(string), "* You proposed to %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* %s just proposed to you (Su dung /chapnhan kethon) to accept.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			ProposeOffer[giveplayerid] = playerid;
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");

	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	return 1;
}

CMD:witness(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /witness [player]");

	if(IsPlayerConnected(giveplayerid))
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "You cannot Propose to yourself!"); return 1; }
			if(ProposeOffer[giveplayerid] == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Your spouse can't be the marriage witness!"); return 1; }
			format(string, sizeof(string), "* You requested %s to be your Marriage Witness.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* %s just requested you to be their Marriage Witness (Su dung /chapnhan witness) to accept.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			MarryWitnessOffer[giveplayerid] = playerid;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
			return 1;
		}

	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		return 1;
	}
	return 1;
}

CMD:settax(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] != INVALID_GROUP_ID && arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] != 5) {
		SendClientMessageEx(playerid, COLOR_GREY, "You're not a Government Leader.");
		return 1;
	}

	new string[128], tax;
	if(sscanf(params, "d", tax)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /settax [percentage]");

	if (tax < 1 || tax > 29)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Percentage must be greater than 0 and below 30.");
		return 1;
	}
	if(arrGroupData[PlayerInfo[playerid][pLeader]][g_iAllegiance] == 1)
	{
		TaxValue = tax;
		Misc_Save();
		format(string, sizeof(string), "The SA income tax has been set to %d percent (of each paycheck).", TaxValue);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	}
	if(arrGroupData[PlayerInfo[playerid][pLeader]][g_iAllegiance] == 2)
	{
		TRTaxValue = tax;
		Misc_Save();
		format(string, sizeof(string), "The TR income tax has been set to %d percent (of each paycheck).", TRTaxValue);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	}
	return 1;
}

CMD:taxwithdraw(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] != INVALID_GROUP_ID && arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] != 5)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "You're not a Government Leader.");
		return 1;
	}

	new string[128], amount, reason[64];
	if(arrGroupData[PlayerInfo[playerid][pLeader]][g_iAllegiance] == 1)
	{
		if(sscanf(params, "ds[64]", amount, reason))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /taxwithdraw [amount] [reason]");
			format(string, sizeof(string), "* VAULT BALANCE: $%s.", number_format(Tax));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			return 1;
		}

		if(amount < 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Invalid amount specified.");
			return 1;
		}
		if( Tax > amount )
		{
			Tax -= amount;
			Misc_Save();
			GivePlayerCash( playerid, amount );
			format( string, sizeof( string ), "You have withdrawn $%s from the vault.", number_format(amount) );
			SendClientMessageEx( playerid, COLOR_WHITE, string );
			format(string,sizeof(string),"[MAYCHU] %s has withdrawn $%s of the SA tax money from the vault, reason: %s.",GetPlayerNameEx(playerid),number_format(amount),reason);
			ABroadCast( COLOR_YELLOW, string, 2);
			Log("logs/rpspecial.log", string);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Insufficient funds are available.");
		}
	}
	if(arrGroupData[PlayerInfo[playerid][pLeader]][g_iAllegiance] == 2)
	{
		if(sscanf(params, "ds[64]", amount, reason))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /taxwithdraw [amount] [reason]");
			format(string, sizeof(string), "* VAULT BALANCE: $%s.", number_format(TRTax));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			return 1;
		}

		if(amount < 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Invalid amount specified.");
			return 1;
		}
		if( TRTax > amount )
		{
			TRTax -= amount;
			Misc_Save();
			GivePlayerCash( playerid, amount );
			format( string, sizeof( string ), "You have withdrawn $%s from the vault.", number_format(amount) );
			SendClientMessageEx( playerid, COLOR_WHITE, string );
			format(string,sizeof(string),"[MAYCHU] %s has withdrawn $%s of the TR tax money from the vault, reason: %s.",GetPlayerNameEx(playerid),number_format(amount),reason);
			ABroadCast( COLOR_YELLOW, string, 2);
			Log("logs/rpspecial.log", string);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Insufficient funds are available.");
		}
	}

	return 1;
}

CMD:taxdeposit(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] != INVALID_GROUP_ID && arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] != 5)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "You're not a Government Leader.");
		return 1;
	}

	new string[128], amount;
	if(arrGroupData[PlayerInfo[playerid][pLeader]][g_iAllegiance] == 1)
	{
		if(sscanf(params, "d", amount))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /taxdeposit [amount]");
			format(string, sizeof(string), "* VAULT BALANCE: $%s.", number_format(Tax));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			return 1;
		}

		if(amount < 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Invalid amount specified.");
			return 1;
		}

		if (GetPlayerCash(playerid) < amount)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "You do not have that much cash on you.");
			return 1;
		}
		Tax += amount;
		Misc_Save();
		GivePlayerCash(playerid, -amount);
		format( string, sizeof( string ), "You have deposited $%s into the vault.", number_format(amount) );
		SendClientMessageEx( playerid, COLOR_WHITE, string );
	}
	if(arrGroupData[PlayerInfo[playerid][pLeader]][g_iAllegiance] == 2)
	{
		if(sscanf(params, "d", amount))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /taxdeposit [amount]");
			format(string, sizeof(string), "* VAULT BALANCE: $%s.", number_format(TRTax));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			return 1;
		}

		if(amount < 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Invalid amount specified.");
			return 1;
		}

		if (GetPlayerCash(playerid) < amount)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "You do not have that much cash on you.");
			return 1;
		}
		TRTax += amount;
		Misc_Save();
		GivePlayerCash(playerid, -amount);
		format( string, sizeof( string ), "You have deposited $%s into the TR vault.", number_format(amount) );
		SendClientMessageEx( playerid, COLOR_WHITE, string );
	}
	return 1;
}


CMD:apply(playerid, params[])
{
	new choice[3];
	if(sscanf(params, "s[3]", choice))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /apply [SA|TR]");
		return 1;
	}

	if(strcmp(choice, "sa", true) == 0)
	{
		if(PlayerInfo[playerid][pNation] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "You're currently part of Los Santos.");
		CheckNationQueue(playerid, 0);
	}
	else if(strcmp(choice, "tr", true) == 0)
	{
		if(PlayerInfo[playerid][pNation] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "You're currently part of San Fierro.");
		CheckNationQueue(playerid, 1);
	}
	return 1;
}

CMD:checkapps(playerid, params[])
{
	if((0 <= PlayerInfo[playerid][pLeader] < MAX_GROUPS) && arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] == 5)
	{
		switch(arrGroupData[PlayerInfo[playerid][pMember]][g_iAllegiance])
		{
			case 1: mysql_function_query(MainPipeline, "SELECT `playerid`, `name`, `date` FROM `nation_queue` WHERE `nation` = 0 AND `status` = 1 ORDER BY `id` ASC", true, "NationQueueQueryFinish", "iii", playerid, 0, AppQueue);
			case 2: mysql_function_query(MainPipeline, "SELECT `playerid`, `name`, `date` FROM `nation_queue` WHERE `nation` = 1 AND `status` = 1 ORDER BY `id` ASC", true, "NationQueueQueryFinish", "iii", playerid, 1, AppQueue);
		}
	}
	else SendClientMessage(playerid, COLOR_GREY, "You are not the leader of a Government agency.");
	return 1;
}

CMD:dmreport(playerid, params[])
{
	if(PlayerInfo[playerid][pDMRMuted] != 0) return SendClientMessage(playerid, COLOR_GRAD2, "You are blocked from submitting DM reports.");
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE,"SU DUNG: /dmreport [playerid]");
	if(IsPlayerConnected(giveplayerid))
	{
		if(playerid == giveplayerid) return SendClientMessage(playerid, COLOR_WHITE, "Ban khong the su dung lenh nay voi chinh minh!");
		if(PlayerInfo[giveplayerid][pAdmin] >= 2 && PlayerInfo[giveplayerid][pTogReports] != 1) return SendClientMessage(playerid, COLOR_WHITE, "You can't use this command on admins!");
		if(gettime() - ShotPlayer[giveplayerid][playerid] < 300)
	    {
			SetPVarInt(playerid, "pDMReport", giveplayerid);
			ShowPlayerDialog(playerid, DMRCONFIRM, DIALOG_STYLE_MSGBOX, "DM Report", "You personally witnessed the reported player death matching within the last 60 seconds. Abuse of this command could result in a temporary ban.", "Confirm", "Cancel");
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "You have not been shot by that person or have already reported them in the last 5 minutes.");
			SendClientMessage(playerid, COLOR_WHITE, "As a reminder, abuse of this system could lead to punishment up to a temporary ban.");
		}
	}
	return 1;
}

CMD:dmalert(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2 && PlayerInfo[playerid][pAdmin] < 6)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "You can't submit reports as an administrator.");
		return 1;
	}
	if(!GetPVarType(playerid, "pWatchdogWatching")) return SendClientMessageEx(playerid, COLOR_GRAD2, "You can only use this command when you are spectating someone!");
	if(PlayerInfo[playerid][pRMuted] != 0)
	{
  		ShowPlayerDialog(playerid,7955,DIALOG_STYLE_MSGBOX,"Report blocked","You are blocked from submitting any reports!\n\nTips when reporting:\n- Report what you need, not who you need.\n- Be specific, report exactly what you need.\n- Do not make false reports.\n- Do not flame admins.\n- Report only for in-game items.\n- For shop orders use the /shoporder command","Dong", "");
		return 1;
	}
 	if(GetPVarType(playerid, "HasReport")) {
		SendClientMessageEx(playerid, COLOR_GREY, "You can only have 1 active report at a time.");
	}
	JustReported[playerid]=25;
	new giveplayerid = GetPVarInt(playerid, "pWatchdogWatching");
	new string[128];
	format(string, sizeof(string), "{FF0000}(dmalert) %s (ID %d) is deathmatching.", GetPlayerNameEx(giveplayerid), giveplayerid);
	SendReportToQue(playerid, string, 2, 1);
	SendClientMessageEx(playerid, COLOR_YELLOW, "Your DM report message was sent to the Admins.");
	return 1;
}

CMD:baocao(playerid, params[])
{
    if(GetPVarType(playerid, "HasReport")) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban chi co the co 1 bao cao. (/huybaocao)");
	}
 	else if(PlayerInfo[playerid][pAdmin] >= 2 && PlayerInfo[playerid][pAdmin] < 6) {
		SendClientMessageEx(playerid, COLOR_GRAD2, "You can't submit reports as an administrator.");
	}
	else if(PlayerInfo[playerid][pRMuted] != 0) {
	    ShowPlayerDialog(playerid, 7955, DIALOG_STYLE_MSGBOX,"Report blocked","You are blocked from submitting any reports!\n\nTips when reporting:\n- Report what you need, not who you need.\n- Be specific, report exactly what you need.\n- Do not make false reports.\n- Do not flame admins.\n- Report only for in-game items.\n- For shop orders use the /shoporder command","Dong", "");
	}
	else {
	    ShowPlayerDialog(playerid, DIALOG_REPORTMENU, DIALOG_STYLE_LIST, "Bao cao", "Vi pham luat\nBug\nNonRP Name\nVan de ve Shop\nYeu cau unmute\nLien he rieng voi Admin","Chon", "Thoat");
	}
	return 1;
}

/*CMD:report(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2 && PlayerInfo[playerid][pAdmin] < 6)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "You can't submit reports as an administrator.");
		return 1;
	}
	if(PlayerInfo[playerid][pRMuted] != 0)
	{
  		ShowPlayerDialog(playerid,7955,DIALOG_STYLE_MSGBOX,"Report blocked","You are blocked from submitting any reports!\n\nTips when reporting:\n- Report what you need, not who you need.\n- Be specific, report exactly what you need.\n- Do not make false reports.\n- Do not flame admins.\n- Report only for in-game items.\n- For shop orders use the /shoporder command","Dong", "");
		return 1;
	}
 	if(JustReported[playerid] > 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Wait 25 seconds before sending another report!");
		return 1;
	}

	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /report [text]");

	JustReported[playerid]=25;
	SendReportToQue(playerid, params);
	SendClientMessageEx(playerid, COLOR_YELLOW, "Your report message was sent to the Admins.");
	return 1;
}*/

/*CMD:cancelreport(playerid, params[]) {
	return cmd_huybaocao(playerid, params);
}*/

CMD:huybaocao(playerid, params[])
{
    for(new i = 0; i < MAX_REPORTS; i++)
	{
	    if(Reports[i][ReportFrom] == playerid)
	    {
	        Reports[i][ReportFrom] = INVALID_PLAYER_ID;
			Reports[i][BeingUsed] = 0;
			Reports[i][TimeToExpire] = 0;
        	Reports[i][ReportPriority] = 0;
        	Reports[i][ReportLevel] = 0;
			DeletePVar(playerid, "HasReport");

			if(GetPVarInt(Reports[i][ReportFrom], "RequestingAdP") == 1)
			{
				DeletePVar(Reports[i][ReportFrom], "PriorityAdText");
				DeletePVar(Reports[i][ReportFrom], "RequestingAdP");
			}
			return SendClientMessageEx(playerid, COLOR_WHITE, "Ban da tu choi bao cao thanh cong." );
		}
	}
	SendClientMessageEx(playerid, COLOR_GRAD2, "Khong co bao cao nao duoc gui.");
	return 1;
}

CMD:reportsold(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelper] >= 1)
	{
		new string[128];
		SendClientMessageEx(playerid, COLOR_GREEN, "____________________ BAO CAO _____________________");
		for(new i = 999; i >= 0; i--)
		{
			if(Reports[i][BeingUsed] == 1)
			{
				format(string, sizeof(string), "BAO CAO [Report ID: %d] | %s (Player ID: %d) Noi Dung: %s", i,GetPlayerNameEx(Reports[i][ReportFrom]), Reports[i][ReportFrom], (Reports[i][Report]));
				SendClientMessageEx(playerid, COLOR_REPORT, string);
			}
		}
	//	SendClientMessageEx(playerid, COLOR_GREEN, "___________________________________________________");
	}
	return 1;
}

CMD:reports(playerid, params[]) return cmd_xembaocao(playerid, params);
CMD:xembaocao(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		new string[128];
		SendClientMessage(playerid, COLOR_GREEN, "____________________ BAO CAO _____________________");
		for(new i = 999; i >= 0; i--)
		{
			if(Reports[i][BeingUsed] == 1 && Reports[i][ReportPriority] == 5)
			{
			    if(Reports[i][ReportLevel] == 2 || PlayerInfo[playerid][pAdmin] >= 2)
			    {
					format(string, sizeof(string), "%s (ID: %i) | RID: %i | Bao cao: %s | Thoi gian: %d phut truoc | Uu tien: %i", GetPlayerNameEx(Reports[i][ReportFrom]), Reports[i][ReportFrom], i, (Reports[i][Report]), Reports[i][TimeToExpire], Reports[i][ReportPriority]);
					SendClientMessage(playerid, COLOR_REPORT, string);
				}
			}
		}
		for(new i = 999; i >= 0; i--)
		{
			if(Reports[i][BeingUsed] == 1 && Reports[i][ReportPriority] == 4)
			{
			    if(Reports[i][ReportLevel] == 2 || PlayerInfo[playerid][pAdmin] >= 2)
			    {
					format(string, sizeof(string), "%s (ID: %i) | RID: %i | Bao cao: %s | Thoi gian: %d phut truoc | Uu tien: %i", GetPlayerNameEx(Reports[i][ReportFrom]), Reports[i][ReportFrom], i, (Reports[i][Report]), Reports[i][TimeToExpire], Reports[i][ReportPriority]);
					SendClientMessage(playerid, COLOR_REPORT, string);
				}
			}
		}
		for(new i = 999; i >= 0; i--)
		{
			if(Reports[i][BeingUsed] == 1 && Reports[i][ReportPriority] == 3)
			{
			    if(Reports[i][ReportLevel] == 2 || PlayerInfo[playerid][pAdmin] >= 2)
			    {
					format(string, sizeof(string), "%s (ID: %i) | RID: %i | Bao cao: %s | Thoi gian: %d phut truoc | Uu tien: %i", GetPlayerNameEx(Reports[i][ReportFrom]), Reports[i][ReportFrom], i, (Reports[i][Report]), Reports[i][TimeToExpire], Reports[i][ReportPriority]);
					SendClientMessage(playerid, COLOR_REPORT, string);
				}
			}
		}
		for(new i = 999; i >= 0; i--)
		{
			if(Reports[i][BeingUsed] == 1 && Reports[i][ReportPriority] == 2)
			{
			    if(Reports[i][ReportLevel] == 2 || PlayerInfo[playerid][pAdmin] >= 2)
			    {
					format(string, sizeof(string), "%s (ID: %i) | RID: %i | Bao cao: %s | Thoi gian: %d phut truoc | Uu tien: %i", GetPlayerNameEx(Reports[i][ReportFrom]), Reports[i][ReportFrom], i, (Reports[i][Report]), Reports[i][TimeToExpire], Reports[i][ReportPriority]);
					SendClientMessage(playerid, COLOR_REPORT, string);
				}
			}
		}
		for(new i = 999; i >= 0; i--)
		{
			if(Reports[i][BeingUsed] == 1 && Reports[i][ReportPriority] == 1)
			{
			    if(Reports[i][ReportLevel] == 2 || PlayerInfo[playerid][pAdmin] >= 2)
			    {
					format(string, sizeof(string), "%s (ID: %i) | RID: %i | Bao cao: %s | Thoi gian: %d phut truoc | Uu tien: %i", GetPlayerNameEx(Reports[i][ReportFrom]), Reports[i][ReportFrom], i, (Reports[i][Report]), Reports[i][TimeToExpire], Reports[i][ReportPriority]);
					SendClientMessage(playerid, COLOR_REPORT, string);
				}
			}
		}
		SendClientMessage(playerid, COLOR_GREEN, "___________________________________________________");
	}
	return 1;
}

CMD:trangphuc(playerid, params[]) {
	return cmd_clothes(playerid, params);
}

CMD:clothes(playerid, params[])
{
	new biz = InBusiness(playerid);
	if(PlayerInfo[playerid][pFMember] == INVALID_FAMILY_ID) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong Family/Gang!");
	if (biz != INVALID_BUSINESS_ID && Businesses[biz][bType] == BUSINESS_TYPE_CLOTHING)
	{
		new fSkin[8];
		fSkin[0] = FamilyInfo[PlayerInfo[playerid][pFMember]][FamilySkins][0];
		fSkin[1] = FamilyInfo[PlayerInfo[playerid][pFMember]][FamilySkins][1];
		fSkin[2] = FamilyInfo[PlayerInfo[playerid][pFMember]][FamilySkins][2];
		fSkin[3] = FamilyInfo[PlayerInfo[playerid][pFMember]][FamilySkins][3];
		fSkin[4] = FamilyInfo[PlayerInfo[playerid][pFMember]][FamilySkins][4];
		fSkin[5] = FamilyInfo[PlayerInfo[playerid][pFMember]][FamilySkins][5];
		fSkin[6] = FamilyInfo[PlayerInfo[playerid][pFMember]][FamilySkins][6];
		fSkin[7] = FamilyInfo[PlayerInfo[playerid][pFMember]][FamilySkins][7];
		ShowModelSelectionMenuEx(playerid, fSkin, 8, "Thay trang phuc family cua ban.", DYNAMIC_FAMILY_CLOTHES, 0.0, 0.0, -55.0);
	}
	else {
		return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o mot cua hang quan ao.");
	}
	return 1;
}

CMD:muatrangphuc(playerid, params[]) {
	return cmd_buyclothes(playerid, params);
}

CMD:buyclothes(playerid, params[])
{
	new biz = InBusiness(playerid);

   	if (biz == INVALID_BUSINESS_ID || Businesses[biz][bType] != BUSINESS_TYPE_CLOTHING) {
        SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o mot tiem quan ao!");
        return 1;
    }
	if (Businesses[biz][bInventory] < 1) {
	    SendClientMessageEx(playerid, COLOR_GRAD2, "Cua hang khong con quan ao de ban!");
	    return 1;
	}
	if (!Businesses[biz][bStatus]) {
	    SendClientMessageEx(playerid, COLOR_GRAD2, "Cua hang quan ao nay da duoc dong cua!");
	    return 1;
	}
    #if defined zombiemode
	if(zombieevent == 1 && GetPVarType(playerid, "pIsZombie")) return SendClientMessageEx(playerid, COLOR_GREY, "Zombies khong the su dung.");
	#endif
    new string[64];
    format(string, sizeof(string), "Luu y: Chi phi quan ao thay doi %s", number_format(Businesses[biz][bItemPrices][0]));
    SetPVarInt(playerid, "SkinChangeCost", Businesses[biz][bItemPrices][0]);
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	ShowModelSelectionMenu(playerid, SkinList, "Change your clothes.");
	return 1;
}

CMD:miscshop(playerid, params[])
{
    if(ShopClosed == 1)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang dang dong cua.");

	if (IsAt247(playerid) || IsPlayerInRangeOfPoint(playerid, 4.0, 2939.8442, -1411.2906, 11.0000))
	{
 		if(GetPVarInt(playerid, "PinConfirmed"))
   		{
  			new szDialog[512];
    		format(szDialog, sizeof(szDialog), "Bang Poker (Credits: {FFD700}%s{A9C4E4})\nBoombox (Credits: {FFD700}%s{A9C4E4})\n100 Paintball Tokens (Credits: {FFD700}%s{A9C4E4})\nEXP Token (Credits: {FFD700}%s{A9C4E4})\nFireworks x5 (Credits: {FFD700}%s{A9C4E4})\nCustom License Plate (Credits: {FFD700}%s{A9C4E4})" \
			"\nHunger Games Voucher (Credits: {FFD700}%s{A9C4E4})",
			number_format(ShopItems[6][sItemPrice]), number_format(ShopItems[7][sItemPrice]), number_format(ShopItems[8][sItemPrice]), number_format(ShopItems[9][sItemPrice]),
		 	number_format(ShopItems[10][sItemPrice]), number_format(ShopItems[22][sItemPrice]), number_format(ShopItems[29][sItemPrice]));
			ShowPlayerDialog(playerid, DIALOG_MISCSHOP, DIALOG_STYLE_LIST, "Misc Shop", szDialog, "Lua chon", "Huy bo");
		}
		else
		{
		    SetPVarInt(playerid, "OpenShop", 1);
  			PinLogin(playerid);
		}
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o 24/7.");
	}
	return 1;
}

CMD:credits(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2)
	{
		new szString[128];
		format(szString, sizeof(szString), "Credits: {FFD700}%s", number_format(PlayerInfo[playerid][pCredits]));
		SendClientMessageEx(playerid, COLOR_CYAN, szString);
		if(PlayerInfo[playerid][pTotalCredits] < ShopItems[21][sItemPrice])
		{
			format(szString, sizeof(szString), "Credits can de mua Platinum VIP: {FFD700}%s", number_format(ShopItems[21][sItemPrice]-PlayerInfo[playerid][pTotalCredits]));
			SendClientMessageEx(playerid, COLOR_CYAN, szString);
		}
		else if(PlayerInfo[playerid][pTotalCredits] >= ShopItems[21][sItemPrice] && PlayerInfo[playerid][pDonateRank] != 4)
		{
			if(PlayerInfo[playerid][pDonateRank] >= 4) return SendClientMessageEx(playerid, COLOR_CYAN, "Ban da co Platinum VIP+");
		    PlayerInfo[playerid][pDonateRank] = 4;
			PlayerInfo[playerid][pTempVIP] = 0;
			PlayerInfo[playerid][pBuddyInvited] = 0;

			if(PlayerInfo[playerid][pVIPM] == 0)
			{
				PlayerInfo[playerid][pVIPM] = VIPM;
				VIPM++;
			}
			new string[128];
			format(string, sizeof(string), "AdmCmd: %s's VIP level to Platinum (4) by the server.", GetPlayerNameEx(playerid));
			ABroadCast(COLOR_LIGHTRED, string, 2), Log("logs/setvip.log", string);

			format(string, sizeof(string), "Ban da tieu qua %d credits va da duoc tang Platinum VIP!", ShopItems[21][sItemPrice]);
			SendClientMessageEx(playerid, COLOR_CYAN, string);
			PlayerInfo[playerid][pArmsSkill] = 401;
		}
		else
		{
		    SendClientMessageEx(playerid, COLOR_CYAN, "Ban da co Platinum VIP+.");
		}
	}
	else
	{
	    new Player;
	    if(sscanf(params, "u", Player))
			return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /credits [Player]");


        new szString[128];
		format(szString, sizeof(szString), "%s - Credits: {FFD700}%s",GetPlayerNameEx(Player), number_format(PlayerInfo[Player][pCredits]));
		SendClientMessageEx(playerid, COLOR_CYAN, szString);
		if(PlayerInfo[Player][pTotalCredits] < ShopItems[21][sItemPrice])
		{
			format(szString, sizeof(szString), "Credits can de len Platinum VIP: {FFD700}%s", number_format(ShopItems[21][sItemPrice]-PlayerInfo[Player][pTotalCredits]));
			SendClientMessageEx(playerid, COLOR_CYAN, szString);
		}
		else return SendClientMessageEx(playerid, COLOR_CYAN, "Nguoi choi do da co Platinum VIP.");
	}
	return 1;
}

CMD:shophelp(playerid, params[]) {
    return ShowPlayerDialog(playerid, DIALOG_SHOPHELPMENU, DIALOG_STYLE_LIST, "Nhung cua hang ma ban muon tim hieu them?","VIP Shop\nHouse Shop\nBusiness Shop\nToy Shop\nMiscellaneous Shop\nCar Shop\nPlane Shop\nBoat Shop", "Chon", "Thoat");
}

CMD:Betashop(playerid, params[]) {
	if(GetPVarType(playerid, "PlayerCuffed") || GetPVarType(playerid, "Injured") || GetPVarType(playerid, "IsFrozen") || PlayerInfo[playerid][pHospital] || PlayerInfo[playerid][pJailTime] > 0 || GetPVarInt(playerid, "EventToken") == 1 || GetPVarInt(playerid, "IsInArena") >= 0)
		return SendClientMessage(playerid, COLOR_GRAD2, "You can't do this at this time!");
	if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban dan muon, ban khong the su dung lenh nay.");
	if(gettime() - LastShot[playerid] < 60) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da bi ban' trong vong 60s cuoi cung, ban khong the su dung lenh nay.");
	if(IsPlayerInDynamicArea(playerid, NGGShop)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da o GO-RP Shop");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lam dieu nay ben trong mot chiec xe.");
	if(GetPVarInt(playerid, "ShopTP") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da yeu cau mot Teleport den GO-RP Shop.");

	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Ban da yeu cau Teleport den Beta Shop, xin vui long cho 30 giay..");
	SetTimerEx("TeleportToShop", 30000, false, "i", playerid);
	TogglePlayerControllable(playerid, 0);
	SetPVarInt(playerid, "ShopTP", 1);

	new Float:tmp[3];
	GetPlayerPos(playerid, tmp[0], tmp[1], tmp[2]);
	SetPVarFloat(playerid, "tmpX", tmp[0]);
	SetPVarFloat(playerid, "tmpY", tmp[1]);
	SetPVarFloat(playerid, "tmpZ", tmp[2]);
	SetPVarInt(playerid, "tmpInt", GetPlayerInterior(playerid));
	SetPVarInt(playerid, "tmpVW", GetPlayerVirtualWorld(playerid));
	return 1;
}

CMD:leaveshop(playerid, params[]) {
	if(GetPVarInt(playerid, "ShopTP") == 1)
	{
		if(GetPVarType(playerid, "PlayerCuffed") || GetPVarType(playerid, "Injured") || GetPVarType(playerid, "IsFrozen") || PlayerInfo[playerid][pHospital] || PlayerInfo[playerid][pJailTime] > 0)
			return SendClientMessage(playerid, COLOR_GRAD2, "You can't do this at this time!.");
		if(gettime() - LastShot[playerid] < 60) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da bi thuong trong vong 60 giay cuoi cung, ban se khong duoc dua den vi tri truoc day cua ban.");
		Player_StreamPrep(playerid, GetPVarFloat(playerid, "tmpX"), GetPVarFloat(playerid, "tmpY"), GetPVarFloat(playerid, "tmpZ"), FREEZE_TIME);
		SetPlayerInterior(playerid, GetPVarInt(playerid, "tmpInt"));
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "tmpVW"));
		TogglePlayerControllable(playerid, 1);
		DeletePVar(playerid, "ShopTP");
	}
	return 1;
}

CMD:togshopnotice(playerid, params[]) {
	if(PlayerInfo[playerid][pConnectHours] >= 50)
	{
		if(PlayerInfo[playerid][pShopNotice] == 0)
		{
			PlayerInfo[playerid][pShopNotice] = 24;
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Cua hang thong bao da bi vo hieu hoa trong vong 24h choi.");
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Neu ban muon kich hoat lai, ban chi can go lenh mot lan nua.");
		}
		else
		{
			PlayerInfo[playerid][pShopNotice] = 0;
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Cua hang thong bao da duoc tai kich hoat.");
		}
	}
	return 1;
}
/*
CMD:buygiftreset(playerid, params[]) {
	if(IsPlayerInRangeOfPoint(playerid, 4.0, 2937.2878, -1357.2294, 10.8503))
	{
		new string[128];
		format(string, sizeof(string),"Item: Reset thoi gian nha gift\nCredits cua ban: %s\nCost: {FFD700}%s{A9C4E4}\nCredits con lai: %s", number_format(PlayerInfo[playerid][pCredits]), number_format(ShopItems[17][sItemPrice]), number_format(PlayerInfo[playerid][pCredits]-ShopItems[17][sItemPrice]));
		return ShowPlayerDialog( playerid, DIALOG_SHOPGIFTRESET, DIALOG_STYLE_MSGBOX, "Reset Gift Timer", string, "Mua", "Thoat" );
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o vi tri mua hang.");
}

CMD:buyhealthcare(playerid, params[]) {
	if(IsPlayerInRangeOfPoint(playerid, 4.0, 2946.8672, -1484.9561, 11.0000))
	{
		return ShowPlayerDialog(playerid, DIALOG_HEALTHCARE, DIALOG_STYLE_LIST, "Goi cham soc suc khoe", "Cham soc suc khoe binh thuong\nCham soc suc khoe nang cao", "Chon", "Thoat");
	}
	return 1;
} */

/*
CMD:stoprentacar(playerid, params[])
{
    if(GetPVarType(playerid, "RentedVehicle"))
	{
	    new string[128];
        SendClientMessageEx(playerid, COLOR_CYAN, "Ban da ngung cho thue xe cua ban.");
		DestroyVehicle(GetPVarInt(playerid, "RentedVehicle"));

		format(string, sizeof(string), "DELETE FROM `rentedcars` WHERE `sqlid`= '%d'", GetPlayerSQLId(playerid));
		mysql_function_query(MainPipeline, string, false, "OnQueryFinish", "i", SENDDATA_THREAD);

		DeletePVar(playerid, "RentedHours");
		DeletePVar(playerid, "RentedVehicle");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai dang thue mot chiec xe.");
	return 1;
}


CMD:thuexe(playerid, params[]) {
	return cmd_rentacar(playerid, params);
}


CMD:rentacar(playerid, params[])
{
    if(ShopClosed == 1)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang hien tai dang duoc dong' cua.");

    if(IsPlayerInRangeOfPoint(playerid, 4, 1102.8999, -1440.1669, 15.7969) || IsPlayerInRangeOfPoint(playerid, 4, 1796.0620, -1588.5571, 13.4951))
	{
		if(GetPVarInt(playerid, "PinConfirmed"))
		{
		    if(!GetPVarType(playerid, "RentedVehicle"))
			{
		    	SetPVarInt(playerid, "RentaCar", 1);
				ShowModelSelectionMenu(playerid, CarList2, "Thue mot chiec xe!");
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "Ban da thue mot chiec xe.");
		}
		else
		{
		    SetPVarInt(playerid, "OpenShop", 2);
  			PinLogin(playerid);
		}
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o vi tri thue xe.");
	}
	return 1;
}
*/

CMD:boatshopzzzzz(playerid, params[])
{
    if(ShopClosed == 1)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Cac cua hang hien dang dong cua");

	if(IsPlayerInRangeOfPoint(playerid, 4, -2214.1636, 2422.4763, 2.4961) || IsPlayerInRangeOfPoint(playerid, 4,-2975.8950, 505.1325, 2.4297) || IsPlayerInRangeOfPoint(playerid, 4, 723.1553, -1494.4547, 1.9343) || IsPlayerInRangeOfPoint(playerid, 4, 2974.7520, -1462.9265, 2.8184))
	{
		if(GetPVarInt(playerid, "PinConfirmed"))
		{
			ShowModelSelectionMenu(playerid, BoatList, "Boat Shop");
		}
		else
		{
		    SetPVarInt(playerid, "OpenShop", 8);
  			PinLogin(playerid);
		}
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o vi tri cua hang thuyen.");
	}
	return 1;
}

CMD:planeshopzzzzzz(playerid, params[])
{
    if(ShopClosed == 1)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang hien dang dong cua.");

	if(IsPlayerInRangeOfPoint(playerid, 5, 1891.9105, -2279.6174, 13.5469) || IsPlayerInRangeOfPoint(playerid, 5, 1632.0836, 1551.7365, 10.8061) || IsPlayerInRangeOfPoint(playerid, 5, 2950.4014,-1283.0776,4.6875))
	{
		if(GetPVarInt(playerid, "PinConfirmed"))
		{
			ShowModelSelectionMenu(playerid, PlaneList, "Plane Shop");
		}
		else
		{
		    SetPVarInt(playerid, "OpenShop", 7);
  			PinLogin(playerid);
		}
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai o vi tri cua hang may' bay.");
	}
	return 1;
}

CMD:carshopzzzzzz(playerid, params[])
{
    if(ShopClosed == 1)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Hien tai cua hang dang duoc dong cua.");

	if(IsPlayerInRangeOfPoint(playerid, 4, 2280.5720, -2325.2490, 13.5469) || IsPlayerInRangeOfPoint(playerid, 4,-1731.1923, 127.4794, 3.2976) || IsPlayerInRangeOfPoint(playerid, 4, 1663.9569, 1628.5106, 10.8203) ||
	IsPlayerInRangeOfPoint(playerid, 4, 2958.2200, -1339.2900, 5.2100))
	{
		if(GetPVarInt(playerid, "PinConfirmed"))
		{
			ShowModelSelectionMenu(playerid, CarList2, "Car Shop");
		}
		else
		{
		    SetPVarInt(playerid, "OpenShop", 3);
  			PinLogin(playerid);
		}
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o vi tri cua hang xe.");
	}
	return 1;
}

CMD:changepin(playerid, params[])
{
    if(GetPVarInt(playerid, "PinConfirmed"))
	{
	    SetPVarInt(playerid, "ChangePin", 1);
	    ShowPlayerDialog(playerid, DIALOG_CREATEPIN, DIALOG_STYLE_INPUT, "Thay doi so Pin", "Nhap so pin moi de thay doi hien tai cua ban.", "Thay doi", "Cancel");
	}
	else
	{
	    PinLogin(playerid);
	}
	return 1;
}

CMD:houseshop(playerid, params[])
{
	if(ShopClosed == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang hien dang dong cua.");
	if(IsPlayerInRangeOfPoint(playerid, 4.0, 2938.2734, -1391.0596, 11.0000))
	{
		if(GetPVarInt(playerid, "PinConfirmed"))
		{
			ShowPlayerDialog( playerid, DIALOG_HOUSESHOP, DIALOG_STYLE_LIST, "House Shop", "Purchase House\nHouse Interior Change\nHouse Move\nGarage - Small\nGarage - Medium\nGarage - Large\nGarage - Extra Large","Chon", "Thoat" );
		}
		else
		{
			SetPVarInt(playerid, "OpenShop", 4);
			PinLogin(playerid);
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o vi tri cua hang nha.");
	return 1;
}

CMD:userimkit(playerid, params[])
{
	if(PlayerInfo[playerid][pRimMod] == 0)
	    return SendClientMessageEx(playerid, COLOR_GREY, "You don't have any rim modification kits.");

    if(!IsPlayerInAnyVehicle(playerid))
 		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong mot chiec xe.");


    if(InvalidModCheck(GetVehicleModel(GetPlayerVehicleID(playerid)), 1025))
	{
 		for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
		{
			if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
			{
				ShowPlayerDialog(playerid, DIALOG_RIMMOD, DIALOG_STYLE_LIST, "Rim Modification Kit", "Offroad\nShadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nAhab\nVirtual\nAccess", "Chon", "Thoat");
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "Ban can phai ben trong mot chiec xe ma ban so huu.");
		return 1;
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "Chiec xe nay khong duoc modded.");
	}

	return 1;
}

CMD:sellcredits(playerid, params[])
{
	new
	    Player,
	    Credits,
	    Amount;
	if (PlayerInfo[playerid][pLevel] < 5) {
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban can ich nhat lv 5 moi co the sell credits.");
	}
    if(SellClosed == 1)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban credits hien tai dang bi vo hieu hoa.");

	if(sscanf(params, "udd", Player, Credits, Amount))
	    return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /sellcredits [Player] [Credits] [Amount]");

	else if(!IsPlayerConnected(Player))
		return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");

	else if(Credits < 0 || Amount < 0)
	    return SendClientMessageEx(playerid, COLOR_GREY, "So tien/Gia khong the duoi so khong");

	else if(Player == playerid)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the ban credits cho chinh minh.");

	else if(Credits > PlayerInfo[playerid][pCredits])
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co nhieu credits.");

	else if(Credits < 51)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban can phai giao dich it nhat 51 credits.");

	else if (!ProxDetectorS(10.0, playerid, Player))
		return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi do khong o gan ban.");

	else if(GetPVarType(Player, "CreditsAmount"))
	    return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi da duoc cung cap.");

	else if(!GetPVarInt(playerid, "PinConfirmed"))
		PinLogin(playerid);

	else
	{
	    new szMessage[200], CreditsTaxed;
		new year, month, day;
		new TransactionFee;

		getdate(year, month, day);
		SetPVarInt(Player, "CreditsFirstAmount", Credits);
		// FALL INTO FUN WEEK NO TAX
		if(!(year == 2013 && month == 10 && day >= 13 && day <= 19))
		{
			CreditsTaxed = 2*Credits/100;
			Credits = Credits-10; // .50 Flat Fee
			Credits = Credits-CreditsTaxed;
			TransactionFee = (10+CreditsTaxed);
		}
		else {
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "#FallIntoFun - No transaction fee until the 19th of October!");
		}

	    SetPVarInt(Player, "CreditsOffer", Amount);
	    SetPVarInt(Player, "CreditsAmount", Credits);
	    SetPVarInt(Player, "CreditsSeller", playerid);
	    SetPVarInt(playerid, "CreditsSeller", Player);

	    format(szMessage, 200, "Ban da cung cap %s {FFD700}%s{FFFFFF} credits cho $%s. (Phi giao dich: %s)", GetPlayerNameEx(Player), number_format(Credits-TransactionFee), number_format(Amount), number_format(TransactionFee));
	    SendClientMessageEx(playerid, COLOR_WHITE, szMessage);

	    format(szMessage, 200, "Nguoi ban: %s(%d)\nGia: $%s\nCredits: {FFD700}%s{A9C4E4}\nPhi giao dich: {FFD700}%s{A9C4E4}\nCredits ban se nhan duoc: {FFD700}%s{A9C4E4}", GetPlayerNameEx(playerid), playerid, number_format(Amount), number_format(Credits-TransactionFee), number_format(TransactionFee), number_format(Credits));
	    ShowPlayerDialog(Player, DIALOG_SELLCREDITS, DIALOG_STYLE_MSGBOX, "Purchase Credits", szMessage, "Mua", "Tu choi");
	}
	return 1;
}

CMD:chamsocsuckhoe(playerid, params[]) {
	return cmd_togglehealthcare(playerid, params);
}

CMD:togglehealthcare(playerid, params[])
{
	if(PlayerInfo[playerid][pHealthCare] == 0)
	{
		ShowPlayerDialog(playerid, DIALOG_HEALTHCARE, DIALOG_STYLE_LIST, "Cham soc suc khoe", "Cham soc suc khoe binh thuong\nCham soc suc khoe nang cao", "Chon", "Thoat");
	}
	else
	{
	    PlayerInfo[playerid][pHealthCare] = 0;
	    SendClientMessageEx(playerid, COLOR_CYAN, "Ban co cham soc suc khoe nguoi khuyet tat.");
	}
	return 1;
}

CMD:vipshop(playerid, params[])
{
	if(ShopClosed == 1)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang  hien dang duoc dong cua.");

	if(IsPlayerInRangeOfPoint(playerid, 4, -2443.6013, 499.7480, 30.0906) || IsPlayerInRangeOfPoint(playerid, 4, 1934.1083, 1364.5004, 9.2578) || IsPlayerInRangeOfPoint(playerid, 4, 1811.3344, -1569.4244, 13.4811)
		|| IsPlayerInRangeOfPoint(playerid, 4, 2939.0134, -1401.2946, 11.0000))
	{
 		if(GetPVarInt(playerid, "PinConfirmed"))
   		{
			ShowPlayerDialog( playerid, DIALOG_VIPSHOP, DIALOG_STYLE_LIST, "VIP Shop", "Mua VIP\nDoi moi Gold VIP","Tiep tuc", "Thoat" );
		}
		else
		{
		    SetPVarInt(playerid, "OpenShop", 5);
  			PinLogin(playerid);
		}
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o vi tri mua VIP.");
	}
	return 1;
}

CMD:businessshop(playerid, params[])
{
    if(ShopClosed == 1)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Cac cua hang hien dang duoc dong cua.");

	if(GetPVarInt(playerid, "PinConfirmed"))
	{
		ShowPlayerDialog(playerid, DIALOG_SHOPBUSINESS, DIALOG_STYLE_LIST, "Businesses Shop", "Mua Business\nDoi moi Business", "Chon", "Thoat");
	}
	else
	{
	    SetPVarInt(playerid, "OpenShop", 6);
		PinLogin(playerid);
	}
	return 1;
}

/*CMD:toyshop(playerid, params[])
{
    if(ShopClosed == 1)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Cac cua hang hien dang duoc dong cua.");

	if (IsAtClothingStore(playerid) || IsPlayerInRangeOfPoint(playerid, 4.0, 2927.5244, -1549.1826, 11.0469))
	{
 		if(GetPVarInt(playerid, "PinConfirmed"))
   		{
   			ShowModelSelectionMenu(playerid, ToyList2, "Toy Shop");
		}
		else
		{
  			PinLogin(playerid);
		}
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o mot cua hang quan ao.");
	}
	return 1;
}*/

CMD:halloweenshop(playerid, params[])
{
    if(HalloweenShop == 1)
	    return SendClientMessageEx(playerid, COLOR_GREY, "Cac cua hang hien dang duoc dong cua.");

	if (IsAtClothingStore(playerid))
	{
 		if(GetPVarInt(playerid, "PinConfirmed"))
   		{
			new string[128];
			format(string, sizeof(string), "Pumpkin Toy (Cost: 75 Credits | Stock: %d)\nSpiked Club Toy (Cost: 60 Credits)", PumpkinStock);
			ShowPlayerDialog(playerid, DIALOG_HALLOWEENSHOP, DIALOG_STYLE_LIST, "Halloween Shop", string, "Chon", "Thoat");
			return 1;
		}
		else
		{
  			PinLogin(playerid);
		}
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o cua hang quan ao.");
	}
	return 1;
}


/*CMD:muadochoi(playerid, params[]) {
	return cmd_buytoys(playerid, params);
}

CMD:buytoys(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 4, 2787.095947, 2390.353027, 1240.531127) || IsPlayerInRangeOfPoint(playerid, 4, 1774.7533, 1422.6665, 2013.4979) || IsPlayerInRangeOfPoint(playerid, 4, 775.0900, 1742.4900, 1938.3800))
	{
		if(PlayerInfo[playerid][pDonateRank] < 3)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "* Ban khong phai la Gold or Platinum VIP!");
		}
		else
		{
			ShowPlayerDialog( playerid, BUYTOYSGOLD, DIALOG_STYLE_MSGBOX, "Cua hang Toys", "Ch�o mung ban den cua hang do choi VIP! O day ban co the mua phu kien de gan vao nhan vat cua ban.\n\nDau tien, chung toi se chon mot slot toys de luu tru cac do choi.","Tiep tuc", "Cancel" );
		}
	}
	else
	{
		new biz = InBusiness(playerid);
	   	if (biz == INVALID_BUSINESS_ID || Businesses[biz][bType] != BUSINESS_TYPE_CLOTHING) {
	        SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban khong o mot cua hang quan ao!");
	        return 1;
	    }
		if (Businesses[biz][bInventory] < 1) {
	    	SendClientMessageEx(playerid, COLOR_GRAD2, "   Cua hang khong co quan ao!");
		    return 1;
		}
		if (!Businesses[biz][bStatus]) {
		    SendClientMessageEx(playerid, COLOR_GRAD2, "   Cua hang quan ao hien dang duoc dong cua!");
		    return 1;
		}
		ShowPlayerDialog( playerid, BUYTOYS, DIALOG_STYLE_MSGBOX, "Cua hang do choi", "Chao munng ban den cua hang do choi! O day ban co the mua phu kien de gan' vao nhan vat cua ban.\n\nDau tien, chung toi se chon mot slot toys de luu tru cac toys.","Tiep tuc", "Cancel" );
	}
	return 1;
}*/

CMD:trogiupdochoi(playerid, params[]) return cmd_toyhelp(playerid, params);
CMD:toyhelp(playerid, params[])
{
 	SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
	SendClientMessageEx(playerid, COLOR_WHITE,"*** TOY HELP ***");
	SendClientMessageEx(playerid, COLOR_GRAD3,"De mua trang bi! Hay den cua hang quan ao va go {AA3333}/buytoys");
	SendClientMessageEx(playerid, COLOR_GRAD3,"He mac,thao hoac xoa! Ban co the su dung lenh {AA3333}/toys");
	SendClientMessageEx(playerid, COLOR_GRAD3,"De mat tat ca trang bi mot cach nhanh chong, go {AA3333}/wat");
	SendClientMessageEx(playerid, COLOR_GRAD3,"De thao tat ca trang bi mot cach nhanh chong, go {AA3333}/dat");
	SendClientMessageEx(playerid, COLOR_GRAD3,"De chon mot trang bi nao do nhanh hon, go {AA3333}/wt [toyslot]");
	SendClientMessageEx(playerid, COLOR_GRAD3,"De thao mot trang bi nao do nhanh hon, go {AA3333}/dt [toyslot]");
	return 1;
}

CMD:toys(playerid, params[])
{
	if(GetPVarInt(playerid, "EventToken" ) == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay trong su kien.");
	ShowPlayerDialog( playerid, TOYS, DIALOG_STYLE_LIST, "Giao dien do choi", "Su dung/Cat do choi\nSua do choi\nXoa do choi","Lua chon", "Huy bo" );
	return 1;
}

CMD:wt(playerid, params[])
{
	new toyslot;
	if(sscanf(params, "d", toyslot)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /wt [toyslot]");

	if(toyslot < 1 || toyslot > 11 + PlayerInfo[playerid][pToySlot]) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /wt [toyslot]");
	if(GetPVarInt(playerid, "EventToken" ) == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay trong su kien.");

	for(new i; i < 11; i++)
	{
		if(PlayerHoldingObject[playerid][i] == toyslot)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, i-1))
			{
				return 1;
			}
		}
	}

	if(PlayerToyInfo[playerid][toyslot-1][ptScaleX] == 0) {
		PlayerToyInfo[playerid][toyslot-1][ptScaleX] = 1.0;
		PlayerToyInfo[playerid][toyslot-1][ptScaleY] = 1.0;
		PlayerToyInfo[playerid][toyslot-1][ptScaleZ] = 1.0;
	}

	if(PlayerToyInfo[playerid][toyslot-1][ptModelID] != 0)
	{
		new toycount = GetFreeToySlot(playerid);
		PlayerHoldingObject[playerid][toycount] = toyslot;
		SetPlayerAttachedObject(playerid, toycount-1,
			PlayerToyInfo[playerid][toyslot-1][ptModelID],
			PlayerToyInfo[playerid][toyslot-1][ptBone],
			PlayerToyInfo[playerid][toyslot-1][ptPosX],
			PlayerToyInfo[playerid][toyslot-1][ptPosY],
			PlayerToyInfo[playerid][toyslot-1][ptPosZ],
			PlayerToyInfo[playerid][toyslot-1][ptRotX],
			PlayerToyInfo[playerid][toyslot-1][ptRotY],
			PlayerToyInfo[playerid][toyslot-1][ptRotZ],
			PlayerToyInfo[playerid][toyslot-1][ptScaleX],
			PlayerToyInfo[playerid][toyslot-1][ptScaleY],
			PlayerToyInfo[playerid][toyslot-1][ptScaleZ]
		);
	}
	return 1;
}

CMD:dt(playerid, params[])
{
	new toyslot;
	if(sscanf(params, "d", toyslot)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /dt [toyslot]");

	if(toyslot < 1 || toyslot > 11 + PlayerInfo[playerid][pToySlot]) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /dt [toyslot]");


	for(new i; i < 11; i++)
	{
		if(PlayerHoldingObject[playerid][i] == toyslot)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, i-1))
			{
				RemovePlayerAttachedObject(playerid, i-1);
				PlayerHoldingObject[playerid][i] = 0;
				break;
			}
		}
	}
	return 1;
}

CMD:wat(playerid, params[])
{
	if(GetPVarInt(playerid, "EventToken" ) == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the su dung lenh nay trong su kien.");
	new count = 0;
	SendClientMessageEx(playerid, COLOR_WHITE, "* Attached all toys below slot 10.");
	for(new x;x<MAX_PLAYERTOYS;x++)
	{
		count++;
		if(PlayerToyInfo[playerid][x][ptScaleX] == 0) {
			PlayerToyInfo[playerid][x][ptScaleX] = 1.0;
			PlayerToyInfo[playerid][x][ptScaleY] = 1.0;
			PlayerToyInfo[playerid][x][ptScaleZ] = 1.0;
		}
		if(PlayerToyInfo[playerid][x][ptModelID] != 0) SetPlayerAttachedObject(playerid, x, PlayerToyInfo[playerid][x][ptModelID], PlayerToyInfo[playerid][x][ptBone], PlayerToyInfo[playerid][x][ptPosX], PlayerToyInfo[playerid][x][ptPosY], PlayerToyInfo[playerid][x][ptPosZ], PlayerToyInfo[playerid][x][ptRotX], PlayerToyInfo[playerid][x][ptRotY], PlayerToyInfo[playerid][x][ptRotZ], PlayerToyInfo[playerid][x][ptScaleX], PlayerToyInfo[playerid][x][ptScaleY], PlayerToyInfo[playerid][x][ptScaleZ]),
		PlayerHoldingObject[playerid][x+1] = x+1;
		if(count == 10)
			break;
	}
	return 1;
}

CMD:dat(playerid, params[])
{
	SendClientMessageEx(playerid, COLOR_WHITE, "* Ban da xoa toan bo do choi tren nguoi.");
	for(new x;x<MAX_PLAYERTOYS;x++)
	{
		RemovePlayerAttachedObject(playerid, x);
    }
	for(new i; i < 11; i++)
	{
		PlayerHoldingObject[playerid][i] = 0;
	}
    return 1;
}

CMD:tichthu(playerid, params[])
{
	if(IsACop(playerid))
	{
		new string[128], choice[32], giveplayerid;
		if(sscanf(params, "s[32]u", choice, giveplayerid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /take [name] [player]");
			SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : lacansa, tienban, Weapons, Pot, Crack, Materials, Radio, Heroin, Rawopium, Syringes, Potseeds, OpiumSeeds, DrugCrates.");
			return 1;
		}

		if (playerid == giveplayerid)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay voi chinh minh!");
			return 1;
		}
		else if(strcmp(choice,"opiumseeds",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "*Ban da lay do tren nguoi %s opiumseeds.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away your opiumseeds.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's opiumseeds.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pOpiumSeeds] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}

			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else if(strcmp(choice,"potseeds",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* You have taken away %s's potseeds.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away your potseeds.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's potseeds.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pWSeeds] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}

			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else if(strcmp(choice,"drugcrates",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* You have taken away %s's Drug Crates.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away your Drug Crates.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's Drug Crates.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pCrates] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}

			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else if(strcmp(choice,"Syringes",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* You have taken away %s's syringes.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away your syringes.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's syringes.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pSyringes] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}

			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else if(strcmp(choice,"Rawopium",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* You have taken away %s's raw opium.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away your raw opium.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's raw opium.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pRawOpium] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}

			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else if(strcmp(choice,"Heroin",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* You have taken away %s's Heroin.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away your Heroin.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's Heroin.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pHeroin] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}

			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else if(strcmp(choice,"radio",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* You have taken away %s's radio.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away your radio.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's radio.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pRadio] = 0;
					PlayerInfo[giveplayerid][pRadioFreq] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}

			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else if(strcmp(choice,"weapons",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* You have taken away %s's weapons.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away your weapons.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's weapons.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ResetPlayerWeaponsEx(giveplayerid);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}

			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else if(strcmp(choice,"tienban",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* You have taken away %s's tien ban.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away your tien ban.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's tien ban.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pTienBan] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else if(strcmp(choice,"lacansa",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* You have taken away %s's la can sa.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away your la can sa.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's la can sa.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pCansap] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else if(strcmp(choice,"pot",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* You have taken away %s's pot.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away your pot.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's pot.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pPot] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else if(strcmp(choice,"crack",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* You have taken away %s's crack.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away your crack.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's crack.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pCrack] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}

			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else if(strcmp(choice,"materials",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* You have taken away %s's materials.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s as taken away your materials.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Officer %s has taken away %s's materials.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pMats] = 0;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
					return 1;
				}

			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Invalid item specified.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai la nhan vien thuc thi phap luat.");
		return 1;
	}
	return 1;
}

CMD:duadouong(playerid, params[]) {
	return cmd_selldrink(playerid, params);
}

CMD:selldrink(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 19 || PlayerInfo[playerid][pJob2] == 19)
	{
		if(IsAtBar(playerid))
		{
			new string[128], giveplayerid;
			if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /duadouong [player]");

			if(IsPlayerConnected(giveplayerid))
			{
				if(playerid == giveplayerid)
				{
					return SendClientMessageEx(playerid, COLOR_GREY, " Ban khong the ban do uong cho chinh minh.");
				}
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					DrinkOffer[giveplayerid] = playerid;
					format(string, sizeof(string), "* Nguoi ban hang %s da cung cap cho ban do mot thuc uong.su dung /chapnhan drink de cho chon mot thuc uong.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Ban da dua cho %s do uong.",GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				}
				else
				{
					return SendClientMessageEx(playerid, COLOR_GREY, " Nguoi choi do khong gan ban!");
				}
			}
			else
			{
				return SendClientMessageEx(playerid, COLOR_GREY, " Nguoi choi do bi mat ket noi!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong o quan Bar!");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, " Ban khong phai la nguoi phuc vu!");
		return 1;
	}
	return 1;
}

/*CMD:setchamp(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /setchamp [player]");

		if(IsPlayerConnected(giveplayerid))
		{
			new giveplayer[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			new nstring[MAX_PLAYER_NAME];
			format(nstring, sizeof(nstring), "%s", giveplayer);
			strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
			Titel[TitelWins] = PlayerInfo[giveplayerid][pWins];
			Titel[TitelLoses] = PlayerInfo[giveplayerid][pLoses];
			Misc_Save();
			format(string, sizeof(string), "* You have made %s the new Boxing Champion.", giveplayer);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);

		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
	}
	return 1;
}*/

CMD:boxstats(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 12 && PlayerInfo[playerid][pJob2] != 12)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai la mot Boxer!");
		return 1;
	}

	new string[128], ttext[20];//Title
	new clevel = PlayerInfo[playerid][pBoxSkill];
	if(clevel >= 0 && clevel <= 50) { ttext = "Beginner"; }
	else if(clevel >= 51 && clevel <= 200) { ttext = "Amateur"; }
	else if(clevel >= 201 && clevel <= 400) { ttext = "Professional"; }
	new ntext[20];//NickName
	new level = PlayerInfo[playerid][pWins];
	if(level > 0 && PlayerInfo[playerid][pLoses] == 0)
	{
		ntext = "Undefeated";
	}
	else
	{
		if(level >= 0 && level <= 10) { ntext = "Newcomer"; }
		else if(level >= 11 && level <= 20) { ntext = "Touchy Fist"; }
		else if(level >= 21 && level <= 30) { ntext = "Nut Cracker"; }
		else if(level >= 31 && level <= 40) { ntext = "Tommygun"; }
		else if(level >= 41 && level <= 50) { ntext = "Skull Breaker"; }
		else if(level >= 51 && level <= 60) { ntext = "Light Speed"; }
		else if(level >= 61 && level <= 70) { ntext = "Unbroken Warrior"; }
		else if(level >= 71) { ntext = "Itallion Stallion"; }
	}
	SendClientMessageEx(playerid, COLOR_WHITE, "|__________________ Boxing Records __________________|");
	format(string, sizeof(string), "| Nha vo dich hien tai: %s, voi' [%d] Trung thuong va [%d] Thiet hai.", Titel[TitelName],Titel[TitelWins],Titel[TitelLoses]);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "| Danh hieu hien tai: %s.", ttext);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "| Nickname hien tai: %s.", ntext);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "| Tong so Thang: %d.", PlayerInfo[playerid][pWins]);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "| Tong so thiet hai: %d.", PlayerInfo[playerid][pLoses]);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	SendClientMessageEx(playerid, COLOR_WHITE, "|____________________________________________________|");
	return 1;
}

CMD:hocvo(playerid, params[])
{
	return cmd_train(playerid, params);
}
CMD:train(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 754.0793,-26.4657,1000.5904) || IsPlayerInRangeOfPoint(playerid, 3.0, 754.0793,-26.4657,1000.5904))
	{
		if(PlayerInfo[playerid][pDonateRank] >= 1)
		{
			ShowPlayerDialog(playerid, FIGHTMENU, DIALOG_STYLE_LIST, "Hoc vo", "Boxing $400\nElbow $400\nKneehead $400\nKung-Fu	$400\nGrabKick $400\nBinh thuong", "Hoc", "Huy bo");
		}
		else
		{
			ShowPlayerDialog(playerid, FIGHTMENU, DIALOG_STYLE_LIST, "Hoc vo", "Boxing $500\nElbow $500\nKneehead $500\nKung-Fu	$500\nGrabKick $500\nBinh thuong", "Hoc", "Huy bo");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, " Ban khong o tai khu vuc hoc vo (Ben trong phong tap gym)");
	}
	return 1;
}

CMD:battay(playerid, params[]) {
	return cmd_shakehand(playerid, params);
}


CMD:shakehand(playerid, params[])
{
	new string[128], giveplayerid, style;
	if(sscanf(params, "ud", giveplayerid, style)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /battay [player] [style (1-8)]");

	if(IsPlayerConnected(giveplayerid) || (PlayerInfo[giveplayerid][pAdmin] >= 2 && PlayerInfo[playerid][pTogReports] == 0))
	{
		if(giveplayerid == playerid)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the bat tay rieng voi ban.");
			return 1;
		}
		else if(PlayerInfo[giveplayerid][pAdmin] >= 2 && PlayerInfo[giveplayerid][pTogReports] != 1) {
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the bat tay.");
			return 1;
		}
		if(style >= 1 && style < 9)
		{
			new Float: ppFloats[3];

			GetPlayerPos(giveplayerid, ppFloats[0], ppFloats[1], ppFloats[2]);

			if(!IsPlayerInRangeOfPoint(playerid, 5, ppFloats[0], ppFloats[1], ppFloats[2]))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Ban dang qua xa. Ban khong the bat tay ngay bay gio.");
				return 1;
			}

			SetPVarInt(playerid, "shrequest", giveplayerid);
			SetPVarInt(playerid, "shstyle", style);

			format(string, sizeof(string), "Ban da de nghi bat tay voi %s, vui long cho ho tra loi.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_WHITE, string);

			format(string, sizeof(string), "%s da yeu cau bat tay voi ban, hay su dung ((/chapnhan battay)) de bat tay voi nhau.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /battay [player] [style (1-8)]");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	}
	return 1;
}

CMD:fight(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 12 && PlayerInfo[playerid][pJob2] != 12)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai la mot Vo si!");
		return 1;
	}
	if(InRing > 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Da co mot cuoc tran dau dang dien ra, vui logn doi toi khi ket thuc!");
		return 1;
	}
	if(PlayerBoxing[playerid] > 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban da san sang chien dau!");
		return 1;
	}

	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /fight [player]");

	if(IsPlayerConnected(giveplayerid))
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(IsPlayerInRangeOfPoint(playerid,20.0,765.9343,0.2761,1000.7173) || IsPlayerInRangeOfPoint(playerid,20.0,768.48, -73.66, 1000.57))
			{
				if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the dau voi chinh ban"); return 1; }
				format(string, sizeof(string), "* Ban da khieu chien voi %s.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Vo si %s muon chien dau voi ban (su dung /chapnhan boxing) de chap nhan.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				BoxOffer[giveplayerid] = playerid;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD2," Ban khong o Gym!");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
			return 1;
		}

	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		return 1;
	}
	return 1;
}

CMD:music(playerid, params[])
{
	if(PlayerInfo[playerid][pCDPlayer])
	{
		new choice[32];
		if(sscanf(params, "s[32]", choice))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /music [name]");
			SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Bat, Tat, Tiep");
			return 1;
		}

		if(strcmp(choice,"bat",true) == 0)
		{
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Am nhac da mo", 5000, 5);
			new channel = Music[playerid];
			PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
		}
		else if(strcmp(choice,"tat",true) == 0)
		{
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~Am nhac da tat", 5000, 5);
			PlayerFixRadio(playerid);
			if(GetPVarType(playerid, "MusicIRadio"))
			{
			    StopAudioStreamForPlayerEx(playerid);
			    DeletePVar(playerid, "MusicIRadio");
			}
		}
		else if(strcmp(choice,"tiep",true) == 0)
		{
			if(Music[playerid] == 0) { Music[playerid] = 1; }
			else if(Music[playerid] == 1) { Music[playerid] = 2; }
			else if(Music[playerid] == 2) { Music[playerid] = 3; }
			else if(Music[playerid] == 3) { Music[playerid] = 4; }
			else if(Music[playerid] == 4) { Music[playerid] = 5; }
			else if(Music[playerid] == 5) { Music[playerid] = 6; }
			else if(Music[playerid] == 6) { Music[playerid] = 0; }
			new channel = Music[playerid];
			PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Lenh sai vui long xem lai!");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong co may nghe nhac! (mua tai 24/7)");
		return 1;
	}
	return 1;
}

CMD:mp3(playerid, params[])
{
	if(PlayerInfo[playerid][pCDPlayer] || PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "You must be on foot to use your MP3 Player.");

		ShowPlayerDialog(playerid, SETSTATION, DIALOG_STYLE_LIST, "MP3 Player - Choose a station","The loai\nTop 50 Stations\nTim kiem\nK-LSR\nNick's Radio\nTuye chon URL\nTat radio", "Lua chon", "Dong");
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co CD/MP3 Player.");
	return 1;
}

CMD:emslist(playerid, params[]) {

	if(IsAMedic(playerid)) {

		new szZone[MAX_ZONE_NAME],
			x;
		new string[1280];
		foreach(new i : Player) {

			if(GetPVarType(i, "EMSAttempt")) {
				GetPlayer3DZone(i, szZone, sizeof(szZone));
				switch(GetPVarInt(i, "EMSAttempt")) {

					case 1: {
						ListItemTrackId[playerid][x] = i;
						x++;
						format(string, sizeof(string), "%s{FF0000}%s Dang Can Cap Cuu (/getpt %d) - Vi Tri %s\n", string, GetPlayerNameEx(i), i, szZone);
					}
				}
			}
		}
		ShowPlayerDialog(playerid, DIALOG_MEDIC_LIST, DIALOG_STYLE_LIST, "Medic | Danh sach ID", string, "Enroute", "Cancel");
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong phai la medic.");
	return 1;
}

CMD:dichvu(playerid, params[])
{
	new string[128], choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /dichvu [name]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Taxi, Bus, Medic, Suaxe, Capcuu, Pizza");
		return 1;
	}

	if(PlayerInfo[playerid][pJailTime] > 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the su dung trong nha tu.");
		return 1;
	}
	if(gettime() < PlayerInfo[playerid][pServiceTime]) return SendClientMessage(playerid, COLOR_WHITE, "Ban phai cho 30 giay truoc khi su dung lenh nay mot lan nua. " );

	if(strcmp(choice,"capcuu",true) == 0)
	{
		if(GetPVarInt(playerid, "Injured") == 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong bi thuong, ban khong the goi EMS!");
			return 1;
		}
		new zone[MAX_ZONE_NAME];
		GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
		SetPVarInt(playerid, "EMSAttempt", 1);
		SendClientMessageEx(playerid, COLOR_WHITE, "EMS da  duoc thong bao ve vi tri hien tai cua ban va dang tren duong.");
		format(string, sizeof(string), "Cong Van khuan cap (%d) %s duoc nguoi bi thuong tai %s, Ho yeu cau van chuyen cap cuu ngay lam tuc.",playerid, GetPlayerNameEx(playerid), zone);
		SendGroupMessage(3, TEAM_MED_COLOR, string);
		PlayerInfo[playerid][pServiceTime] = gettime()+30;
		return 1;
	}
	else if(strcmp(choice,"taxi",true) == 0)
	{
		if(TaxiDrivers < 1) return SendClientMessageEx(playerid, COLOR_GREY, "   Cong ty taxi hien khong co ai dang duty lam nhiem vu thoi diem nay, hay thu lai sau!");
		if(TransportDuty[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the goi cho mot xe taxi vi khong co ai lam viec!");

		new szZoneName[MAX_ZONE_NAME];
		GetPlayer2DZone(playerid, szZoneName, MAX_ZONE_NAME);
		format(string, sizeof(string), "** %s(%d) dang can mot tai xe taxi tai %s - su dung /ataxi de chap nhan cuoc goi.", GetPlayerNameEx(playerid), playerid, szZoneName );
		SendTaxiMessage(TEAM_AZTECAS_COLOR, string);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da keu goi mot lai xe taxi, cho tra loi.");
		SetPVarInt(playerid, "TaxiCall", 1);
		PlayerInfo[playerid][pServiceTime] = gettime()+30;
		return 1;
	}

	else if(strcmp(choice,"bus",true) == 0)
	{
		if(BusDrivers < 1) return SendClientMessageEx(playerid, COLOR_GREY, "   Khong co ai lam viec tai xe' xe bus vao thoi diem nay, hay thu lai sau!");
		if(TransportDuty[playerid] > 0) SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the goi cho mot xe bus vi khong co ai lam viec!");

		new szZoneName[MAX_ZONE_NAME];
		GetPlayer2DZone(playerid, szZoneName, sizeof(szZoneName));
		format(string, sizeof(string), "** %s(%d) can mot tai xe bus tai %s - su dung /abus de chap nhan cuoc goi.", GetPlayerNameEx(playerid), playerid, szZoneName );
		SendTaxiMessage(TEAM_AZTECAS_COLOR, string);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da keu goi mot lai xe bus, cho tra loi.");
		SetPVarInt(playerid, "BusCall", 1);
		PlayerInfo[playerid][pServiceTime] = gettime()+30;
		return 1;
	}
	else if(strcmp(choice,"medic",true) == 0)
	{
		new OnDutyMedics;
		foreach(new i: Player)
		{
			if(IsAMedic(i) && PlayerInfo[i][pDuty] == 1)
			{
				OnDutyMedics++;
			}
		}
		if(OnDutyMedics < 1)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Khong co nhan vien y te lam viec vao thoi diem nay, hay thu lai sau!");
			return 1;
		}
		else
		{
			format(string, sizeof(string), "** %s can mot Medic - su dung /chapnhan medic de chap nhan cuoc goi.", GetPlayerNameEx(playerid));
			SendGroupMessage(3, TEAM_AZTECAS_COLOR, string);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da keu goi mot bac si, cho doi cau tra loi.");
			MedicCall = playerid;
			PlayerInfo[playerid][pServiceTime] = gettime()+30;
			OnDutyMedics = 0;
			return 1;
		}
	}
	else if(strcmp(choice,"suaxe",true) == 0)
	{
		if(Mechanics < 1)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Khong co ai lam tho sua xe vao thoi diem nay, hay thu lai sau!");
			return 1;
		}
		format(string, sizeof(string), "** %s dang can mot tho sua xe so dien thoai: %d", GetPlayerNameEx(playerid),PlayerInfo[playerid][pPnumber]);
		SendBussicMessage(TEAM_AZTECAS_COLOR, string);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da keu mot tho sua xe, cho tra loi.");
		MechanicCall = playerid;
		PlayerInfo[playerid][pServiceTime] = gettime()+30;
		return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ten dich vu cua ban da sai cu phap'!");
		return 1;
	}
}

CMD:yeucautrogiup(playerid, params[])
{
	if(Advisors < 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Khong co Junior Helpers On Duty lam viec vao thoi diem nay, hay thu lai sau!");
		return 1;
	}
	new string[128];
	if(isnull(params))
	{
		JustReported[playerid]=10;
		format(string, sizeof(string), "** %s(%i) duoc yeu cau giup do, reason: None. (su dung /chapnhantrogiup %i)", GetPlayerNameEx(playerid), playerid, playerid);
		SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da yeu cau su tro giup cua Junior Helper, cho tra loi.");
		SetPVarInt( playerid, "COMMUNITY_ADVISOR_REQUEST", 1 );
		SetPVarInt( playerid, "HelpTime", 5);
		SetPVarString( playerid, "HelpReason", "None");
		SetTimerEx( "HelpTimer", 60000, 0, "d", playerid);
		return 1;
	}
	if(PlayerInfo[playerid][pLevel] < 4)
	{
		if(PlayerInfo[playerid][pRHMutes] >= 4 || PlayerInfo[playerid][pRHMuteTime] > 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban hien dang bi cam yeu cau giup do.");
			return 1;
		}
		if(JustReported[playerid] > 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Doi 10 giay sau khi gui mot yeu cau tiep theo!");
			return 1;
		}
		JustReported[playerid]=10;
		format(string, sizeof(string), "** %s(%i) duoc yeu cau giup do, reason: %s. (su dung /chapnhantrogiup %i)", GetPlayerNameEx(playerid), playerid, params, playerid);
		SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da yeu cau su tro giup cua Junior Helper, cho tra loi.");
		SetPVarInt( playerid, "COMMUNITY_ADVISOR_REQUEST", 1 );
		SetPVarInt( playerid, "HelpTime", 5);
		SetPVarString( playerid, "HelpReason", params);
		SetTimerEx( "HelpTimer", 60000, 0, "d", playerid);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban khong phai la mot Newbie!");
	}
	return 1;
}

CMD:showrequests(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] >= 2)
	{
		new string[128], reason[64];
		SendClientMessageEx(playerid, COLOR_GREEN, "____________________ YEU CAU TRO GIUP _____________________");
		foreach(new i: Player)
		{
			if(GetPVarInt(i, "COMMUNITY_ADVISOR_REQUEST"))
			{
			    GetPVarString(i, "HelpReason", reason, 64);
				format(string, sizeof(string), "%s  | ID: %i | Reason: %s | Het han: %i Phut.", GetPlayerNameEx(i), i, reason, GetPVarInt(i, "HelpTime"));
				SendClientMessageEx(playerid, COLOR_REPORT, string);
			}
		}
		SendClientMessageEx(playerid, COLOR_GREEN, "_________________________________________________________");
	}
	return 1;
}

CMD:rhmute(playerid, params[])
{
	if (PlayerInfo[playerid][pHelper] >= 2)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /rhmute [player]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pRHMuteTime] == 0)
			{
			    if(PlayerInfo[giveplayerid][pRHMutes] == 0)
			    {
  					PlayerInfo[giveplayerid][pRHMutes] = 1;
					format(string, sizeof(string), "*** %s da cho %s canh cao dau tien ve tinh trang lam dung yeu cau giup do", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendAdvisorMessage(COLOR_COMBINEDCHAT, string);

					ShowPlayerDialog(giveplayerid, 7954, DIALOG_STYLE_MSGBOX, "Tro giup canh bao lam dung", "Mot Junior Helper da canh bao ban khong nen lam dung /requesthelp.\n\nLuu y rang viec lam dung /requesthelp co the dan den mot tu cam /requesthelp hoac mat dac quyen hoan toan.", "Next", "");

					format(string, sizeof(string), "AdmCmd: %s has given %s their first warning about help request abuse", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					Log("logs/mute.log", string);

			    }
			    else if(PlayerInfo[giveplayerid][pRHMutes] == 1)
			    {
  					PlayerInfo[giveplayerid][pRHMutes] = 2;
					PlayerInfo[giveplayerid][pRHMuteTime] = 30*60;
					format(string, sizeof(string), "*** %s da tam thoi bi chan %s tu viec su dung /requesthelp", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendAdvisorMessage(COLOR_COMBINEDCHAT, string);

					ShowPlayerDialog(giveplayerid, 7954, DIALOG_STYLE_MSGBOX, "Tam thoi bi tran /requesthelp", "Ban da duoc tam thoi bi chan tu viec su dung /requesthelp\n\nVi day la lan dau tien ban da bi tran tu yeu cau giup do, ban se khong the su dung /requesthelp 30 phut.\n\nHai cam' hon se dan den mot so mat mat trong uu tien cua lenh.", "Next", "");

					format(string, sizeof(string), "AdmCmd: %s da tam thoi bi tran su dung /requesthelp by %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
					Log("logs/mute.log", string);
			    }
			    else if(PlayerInfo[giveplayerid][pRHMutes] == 2)
			    {
  					PlayerInfo[giveplayerid][pRHMutes] = 3;
					PlayerInfo[giveplayerid][pRHMuteTime] = 90*60;
					format(string, sizeof(string), "*** %s da tam thoi bi tran %s tu viec su dung /requesthelp", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendAdvisorMessage(COLOR_COMBINEDCHAT, string);

					ShowPlayerDialog(giveplayerid, 7954, DIALOG_STYLE_MSGBOX, "Tam thoi bi tran /requesthelp", "Ban da duoc tam thoi bi chan tu viec su dung  /requesthelp\n\nVi day la lan thu hai ban da bi tran tu yeu cau giup do, ban se khong the su dung /requesthelp 1 gio 30 phut.\n\nMot cam hon se dan den mot so mat mat trong uu cua lenh.", "Next", "");

					format(string, sizeof(string), "AdmCmd: %s da tam thoi bi tran tu viec su dung /requesthelp by %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
					Log("logs/mute.log", string);
			    }
				else if(PlayerInfo[giveplayerid][pRHMutes] == 3)
			    {
  					PlayerInfo[giveplayerid][pRHMutes] = 4;
					format(string, sizeof(string), "*** %s da vinh vien bi tran %s su dung /requesthelp", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendAdvisorMessage(COLOR_COMBINEDCHAT, string);

					ShowPlayerDialog(giveplayerid,7954,DIALOG_STYLE_MSGBOX, "Vinh vien bu cam /requesthelp", "Ban da vinh vien bi cam su dung /requesthelp.\n\nBan se can phai lien he voi adminitrator thong qua /baocao khang cao nay.", "Next", "");

					format(string, sizeof(string), "AdmCmd: %s was permanently blocked from /requesthelp by %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
					Log("logs/mute.log", string);
			    }
				DeletePVar(giveplayerid, "COMMUNITY_ADVISOR_REQUEST");
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi do da bi vo hieu hoa tu /requesthelp.");
			}
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi ban chon khong hop le.");
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
	}
	return 1;
}

CMD:rhmutereset(playerid, params[])
{
	if (PlayerInfo[playerid][pHelper] >= 2)
	{
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /rhmutereset [Nguoi choi] [Ly do]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pRHMutes] >= 2)
			{
				PlayerInfo[giveplayerid][pRHMutes]--;
				PlayerInfo[giveplayerid][pRHMuteTime] = 0;
				format(string, sizeof(string), "*** %s da mo khoa %s yeu cau tro giup, reason: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
				SendAdvisorMessage(COLOR_COMBINEDCHAT, string);
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, "Ban da bi tran /requesthelp. Bay gio ban co the su dung he thong giup do mot lan nua.");
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, "Hay chap nhan loi xin loi cua chung toi cho bat ky loi va bat tien nay co the gay ra.");
				format(string, sizeof(string), "AdmCmd: %s da duoc mo khoa /requesthelp boi %s, ly do: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				Log("logs/mute.log", string);
			}
			else
			{
			    SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi do khong bi chan yeu cau tro giup!");
			}

		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
	}
	return 1;
}

CMD:findnewb(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] < 2) {
        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai Junior Helper.");
	}
	else if(GetPVarInt(playerid, "AdvisorDuty") == 0) {
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai lam nhiem vu nhu Junior Helper.");
	}
	else {
	    new Float: Pos[3][2], i[2], vw[2], Message[38 + MAX_PLAYER_NAME];
	    if(!GetPVarType(playerid, "HelpingSomeone")) {
     		foreach(new x: Player)
			{
			 	if(PlayerInfo[x][pLevel] == 1 && PlayerInfo[x][pHelpedBefore] == 0) {
    				GetPlayerPos(x, Pos[0][0], Pos[1][0], Pos[2][0]);
    				GetPlayerPos(playerid, Pos[0][1], Pos[1][1], Pos[2][1]);
    				vw[0] = GetPlayerVirtualWorld(x);
					i[0] = GetPlayerInterior(x);
					vw[1] = GetPlayerVirtualWorld(playerid);
					i[1] = GetPlayerInterior(playerid);

					SetPVarFloat(playerid, "AdvisorLastx", Pos[0][1]);
					SetPVarFloat(playerid, "AdvisorLasty", Pos[1][1]);
					SetPVarFloat(playerid, "AdvisorLastz", Pos[2][1]);
					SetPVarInt(playerid, "AdvisorLastInt", i[1]);
					SetPVarInt(playerid, "AdvisorLastVW", vw[1]);

					SetPlayerVirtualWorld(playerid, vw[0]);
					SetPlayerInterior(playerid, i[0]);
					SetPlayerPos(playerid, Pos[0][0], Pos[1][0]+2, Pos[2][0]);
					PlayerInfo[x][pHelpedBefore] = 1;
					SetPVarInt(playerid, "HelpingSomeone", 1);
					ShowPlayerDialog(x, 0, DIALOG_STYLE_MSGBOX, "Bao helper", "Mot Junior Helper vua chuyen den hang. Hay hoi anh bat cu dieu gi lien quan den may chu/mot trong nhung dich vu cua chung toi.", "Dong", "");
					if(i[0] > 0 || vw[0] > 0) Player_StreamPrep(playerid, Pos[0][0], Pos[1][0], Pos[2][0], FREEZE_TIME);
					format(Message, sizeof(Message), "Ban da duoc dich chuyen den Newbie %s, nhap lai lenh de duoc cau tra loi.", GetPlayerNameEx(x));
					SendClientMessageEx(playerid, COLOR_WHITE, Message);
					break;
		    	}
			}
		}
		else
		{
		    DeletePVar(playerid, "HelpingSomeone");
			SetPlayerPos(playerid, GetPVarFloat(playerid, "AdvisorLastx"), GetPVarFloat(playerid, "AdvisorLasty"), GetPVarFloat(playerid, "AdvisorLastz"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "AdvisorLastVW"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "AdvisorLastInt"));
			if(GetPVarInt(playerid, "AdvisorLastInt") > 0 || GetPVarInt(playerid, "AdvisorLastVW") > 0) Player_StreamPrep(playerid, GetPVarFloat(playerid, "AdvisorLastx"), GetPVarFloat(playerid, "AdvisorLasty"), GetPVarFloat(playerid, "AdvisorLastz"), FREEZE_TIME);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da duoc dich chuyen back to your previous location.");
		}
	}
	return 1;
}

CMD:chapnhantrogiup(playerid, params[]) {
	return cmd_accepthelp(playerid, params);
}

CMD:accepthelp(playerid, params[])
{
    if(PlayerInfo[playerid][pHelper] < 2) {
        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la Junior Helper.");
	}
	else if(HelpingNewbie[playerid] != INVALID_PLAYER_ID) {
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban dang giup do mot nguoi nao do.");
	}
	else if(GetPVarInt(playerid, "AdvisorDuty") == 0) {
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong on duty Junior Helper.");
	}
	else {

		new Player, string[128], Float:health, Float:armor;

		if(sscanf(params, "u", Player)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /chapnhantrogiup [PlayerID]");
		}
		else if(Player == playerid) {
		    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the chap nhan mot yeu cau su giup do tu chinh minh.");
		}
		else if(!IsPlayerConnected(Player)) {
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		}
		else if(GetPVarInt(Player, "COMMUNITY_ADVISOR_REQUEST") == 0) {
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong can su giup do.");
		}
		else {

		    format(string, sizeof(string), "* %s da chap nhan yeu cau giup do tu %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(Player));
			SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
			format(string, sizeof(string), "* Ban da chap nhan %s's yeu cau giup do, neu ban tro giup xong su dung /ketthuctrogiup de quay ve vi tri cu cua ban.",GetPlayerNameEx(Player));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Advisor %s da chap nhan yeu cau giup do cua ban.",GetPlayerNameEx(playerid));
			SendClientMessageEx(Player, COLOR_LIGHTBLUE, string);
			PlayerInfo[playerid][pAcceptedHelp]++;
			ReportCount[playerid]++;
			ReportHourCount[playerid]++;
			new Float: x, Float: y, Float: z, Float: r, i, vw;
			vw = GetPlayerVirtualWorld(playerid);
			i = GetPlayerInterior(playerid);
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, r);
			SetPVarFloat(playerid, "AdvisorLastx", x);
			SetPVarFloat(playerid, "AdvisorLasty", y);
			SetPVarFloat(playerid, "AdvisorLastz", z);
			SetPVarFloat(playerid, "AdvisorLastr", r);
			SetPVarInt(playerid, "AdvisorLastInt", i);
			SetPVarInt(playerid, "AdvisorLastVW", vw);
			GetPlayerPos(Player, x, y, z);
			vw = GetPlayerVirtualWorld(Player);
			i = GetPlayerInterior(Player);
			SetPlayerPos(playerid, x, y+2, z);
			SetPlayerVirtualWorld(playerid, vw);
			SetPlayerInterior(playerid, i);
			GetPlayerHealth(playerid,health);
			SetPVarFloat(playerid, "pPreGodHealth", health);
			GetPlayerArmour(playerid,armor);
			SetPVarFloat(playerid, "pPreGodArmor", armor);
			SetPlayerHealth(playerid, 100);
		    SetPlayerArmor(playerid, 100);
		    SetPVarInt(playerid, "pGodMode", 1);
			if(i > 0 || vw > 0) Player_StreamPrep(playerid, x, y, z, FREEZE_TIME);
			HelpingNewbie[playerid] = Player;
			AddCAReportToken(playerid); // Advisor Tokens
			DeletePVar(Player, "COMMUNITY_ADVISOR_REQUEST");
			DeletePVar(Player, "HelpTime");
			return 1;

		}
	}
	return 1;
}

CMD:ketthuctrogiup(playerid, params[]) {
	return cmd_finishhelp(playerid, params);
}

CMD:finishhelp(playerid, params[])
{
	if(HelpingNewbie[playerid] != INVALID_PLAYER_ID)
	{
		new string[128], Float:health, Float:armor;
		format(string, sizeof(string), "* %s da hoan thanh yeu cau su tro giup tu %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(HelpingNewbie[playerid]));
		SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
		SetPlayerPos(playerid, GetPVarFloat(playerid, "AdvisorLastx"), GetPVarFloat(playerid, "AdvisorLasty"), GetPVarFloat(playerid, "AdvisorLastz"));
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "AdvisorLastVW"));
		SetPlayerInterior(playerid, GetPVarInt(playerid, "AdvisorLastInt"));
		DeletePVar(playerid, "pGodMode");
		health = GetPVarFloat(playerid, "pPreGodHealth");
		SetPlayerHealth(playerid,health);
		armor = GetPVarFloat(playerid, "pPreGodArmor");
		if(armor > 0) {
			SetPlayerArmor(playerid,armor);
		}
		else
		{
			RemoveArmor(playerid);
		}
		DeletePVar(playerid, "pPreGodHealth");
		DeletePVar(playerid, "pPreGodArmor");
		if(GetPVarInt(playerid, "AdvisorLastInt") > 0 || GetPVarInt(playerid, "AdvisorLastVW") > 0) Player_StreamPrep(playerid, GetPVarFloat(playerid, "AdvisorLastx"), GetPVarFloat(playerid, "AdvisorLasty"), GetPVarFloat(playerid, "AdvisorLastz"), FREEZE_TIME);
		HelpingNewbie[playerid] = INVALID_PLAYER_ID;
		return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban se khong tro giup do bat cu ai!");
		return 1;
	}
}

CMD:troi(playerid, params[]) {
	return cmd_tie(playerid, params);
}

CMD:tie(playerid, params[])
{
	if(PlayerInfo[playerid][pRope] > 0)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /troi [Player]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerTied[giveplayerid] > 0)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi do da bi troi!");
				return 1;
			}
			if(PlayerCuffed[giveplayerid] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the troi nguoi choi nay.");
			if(PlayerInfo[giveplayerid][pJailTime] > 0)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the troi nguoi choi nay." );
				return 1;
			}
			if( PlayerInfo[playerid][pRope] == 0 )
			{
				SendClientMessageEx( playerid, COLOR_WHITE, "Ban khong co day troi." );
			}
			else
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					new car = GetPlayerVehicleID(playerid);
					if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the troi chinh minh!"); return 1; }
					if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
					{
						if(PlayerCuffed[giveplayerid] == 1 || PlayerCuffed[giveplayerid] == 2) {
							SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lam dieu nay bay gio.");
							return 1;
						}

						format(string, sizeof(string), "* Ban da bi troi boi %s.", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Ban da troi %s vao xe.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						switch( PlayerInfo[giveplayerid][pSex] ) {
							case 1: format(string, sizeof(string), "* %s da troi %s vao xe, vi vay anh ta khong the cu dong duoc.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							case 2: format(string, sizeof(string), "* %s da troi %s vao xe, vi vay co ta khong the cu dong duoc.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
						}
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(giveplayerid, "~r~Troi", 2500, 3);
						SetPVarInt(giveplayerid, "IsFrozen", 1);
						TogglePlayerControllable(giveplayerid, 0);
						PlayerTied[giveplayerid] = 1;
						PlayerInfo[playerid][pRope]--;
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_GREY, "  Nguoi choi khong trong xe cua ban hoac ban khong phai nguoi dieu khien chiec xe!");
						return 1;
					}
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi do khong gan ban.");
					return 1;
				}
			}

		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong co day thung!");
	}
	return 1;
}

CMD:coitroi(playerid, params[]) {
	return cmd_untie(playerid, params);
}

CMD:untie(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /coitroi [Player]");

	if(IsPlayerConnected(giveplayerid))
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the coi troi cho chinh minh"); return 1; }
			if(PlayerCuffed[giveplayerid] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the coi troi cho nguoi choi do.");
			if(PlayerTied[giveplayerid])
			{
				DeletePVar(giveplayerid, "IsFrozen");
				format(string, sizeof(string), "* Ban da duoc coi troi boi %s.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Ban coi troi %s.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				GameTextForPlayer(giveplayerid, "~g~Coi troi", 2500, 3);
				TogglePlayerControllable(giveplayerid, 1);
				PlayerTied[giveplayerid] = 0;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi choi do khong bi troi!");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi do khong gan ban.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		return 1;
	}
	return 1;
}

/*CMD:uongnuoc(playerid, params[]) {
	return cmd_usesprunk(playerid, params);
}


CMD:usesprunk(playerid, params[])
{
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lam dieu nay trong khi dang trong su kien Hunger Games!");
    #if defined zombiemode
	if(zombieevent == 1 && GetPVarType(playerid, "pIsZombie")) return SendClientMessageEx(playerid, COLOR_GREY, "Zombies khong the su dung.");
	#endif
	if(PlayerInfo[playerid][pSprunk] > 0)
	{
		if(GetPVarInt(playerid, "UsingSprunk") == 1) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban da co the uong mot sprunk.");
		if( PlayerCuffed[playerid] >= 1 || GetPVarInt(playerid, "Injured") == 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay ngay bay gio.");
			return 1;
		}

		if(IsPlayerInAnyVehicle(playerid))
		{
			if(IsABike(GetPlayerVehicleID(playerid)))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay trong mot chiec xe dap.");
				return 1;
			}
		}
		new string[128];
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
		format(string, sizeof(string), "* %s mo ra mot lon sprunk.", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPVarInt(playerid, "UsingSprunk", 1);
		SetPVarInt(playerid, "DrinkCooledDown", 1);
		PlayerInfo[playerid][pSprunk]--;
		return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bat ly lon sprunk nao, mua tu 24/7!");
		return 1;
	}
}*/

CMD:hutthuoc(playerid, params[]) {
	return cmd_usecigar(playerid, params);
}

CMD:usecigar(playerid, params[])
{
	if(PlayerInfo[playerid][pCigar] > 0)
	{
		if( PlayerCuffed[playerid] >= 1 || GetPVarInt(playerid, "Injured") == 1 )
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay bay gio.");
			return 1;
		}
		new string[128];
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
		format(string, sizeof(string), "* %s lay mot dieu xi ga ra va cham lua.", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerInfo[playerid][pCigar]--;
		return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co dieu xi ga nao ca, mua tai cua hang 24/7!");
		return 1;
	}
}

CMD:paintcar(playerid, params[]) {
	new iPaintID;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban dang khong o trong mot chiec xe.");
	if(PlayerInfo[playerid][pSpraycan] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Binh phun cua ban hien dang trong.");
	if(sscanf(params, "i", iPaintID)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /paintcar [0-6] (3 de loai bo mot paintjob)");
	if(!(0 <= iPaintID <= 6)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Cong viec son xe phai tu giua 0 va 6.");

	for(new i = 0; i < MAX_PLAYERVEHICLES; i++)
	{
		if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][i][pvId]))
		{
			PlayerVehicleInfo[playerid][i][pvPaintJob] = iPaintID;
			ChangeVehiclePaintjob(PlayerVehicleInfo[playerid][i][pvId], iPaintID);
			PlayerInfo[playerid][pSpraycan]--;
			g_mysql_SaveVehicle(playerid, i);
			return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da ap dung thanh cong mot viec son xe cua ban.");
		}
	}
	for(new i = 0; i < sizeof(VIPVehicles); i++)
	{
		if(IsPlayerInVehicle(playerid, VIPVehicles[i]))
		{
			ChangeVehiclePaintjob(VIPVehicles[i], iPaintID);
			PlayerInfo[playerid][pSpraycan]--;
			return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da ap dung thanh cong mot viec son xe nay.");
		}
	}
	for(new i = 0; i < sizeof(FamedVehicles); i++)
	{
		if(IsPlayerInVehicle(playerid, FamedVehicles[i]))
		{
			ChangeVehiclePaintjob(FamedVehicles[i], iPaintID);
			PlayerInfo[playerid][pSpraycan]--;
			return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da ap dung thanh cong mot viec son xe nay.");
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the phun xe cua nguoi khac.");
	return 1;
}

CMD:sellfish(playerid, params[])
{
	if (!IsAt247(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban khong o 24/7!");
		return 1;
	}

	new string[128], fishid;
	if(sscanf(params, "d", fishid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /sellfish [fish]");

	new price;
	if(fishid < 1 || fishid > 5) { SendClientMessageEx(playerid, COLOR_GREY, "   Fish number cant be below 1 or above 5!"); return 1; }
	else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(1)!"); return 1; }
	else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(2)!"); return 1; }
	else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(3)!"); return 1; }
	else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(4)!"); return 1; }
	else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(5)!"); return 1; }

	switch (fishid)
	{
	case 1:
		{
			if(Fishes[playerid][pWeight1] < 20)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Chung toi chi quan tam den loai ca co trong luong 20 LBS hoac nhieu hon.");
				return 1;
			}
			price = FishCost(playerid, Fishes[playerid][pFid1]);
			price = price * Fishes[playerid][pWeight1];
			GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
			format(string, sizeof(string), "* Ban da ban duoc cua ban %s rang trong luong %d, cho $%d.", Fishes[playerid][pFish1],Fishes[playerid][pWeight1],price);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, price);
			ClearFishID(playerid, 1);
		}
	case 2:
		{
			if(Fishes[playerid][pWeight2] < 20)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Chung toi chi quan tam den loai ca co trong luong 20 LBS hoac nhieu hon.");
				return 1;
			}
			price = FishCost(playerid, Fishes[playerid][pFid2]);
			price = price * Fishes[playerid][pWeight2];
			GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
			format(string, sizeof(string), "* Ban da ban ca cua ban %s rang trong luong %d, cho $%d.", Fishes[playerid][pFish2],Fishes[playerid][pWeight2],price);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, price);
			ClearFishID(playerid, 2);
		}
	case 3:
		{
			if(Fishes[playerid][pWeight3] < 20)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Chung toi chi quan tam den loai ca co trong luong 20 LBS hoac nhieu hon.");
				return 1;
			}
			price = FishCost(playerid, Fishes[playerid][pFid3]);
			price = price * Fishes[playerid][pWeight3];
			GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
			format(string, sizeof(string), "* Ban da ban duoc cua ban %s rang trong luong %d, cho $%d.", Fishes[playerid][pFish3],Fishes[playerid][pWeight3],price);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, price);
			ClearFishID(playerid, 3);
		}
	case 4:
		{
			if(Fishes[playerid][pWeight4] < 20)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Chung toi chi quan tam den loai ca co trong luong 20 LBS hoac nhieu hon.");
				return 1;
			}
			price = FishCost(playerid, Fishes[playerid][pFid4]);
			price = price * Fishes[playerid][pWeight4];
			GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
			format(string, sizeof(string), "* Ban da ban ca cua ban %s rang trong luong %d, cho $%d.", Fishes[playerid][pFish4],Fishes[playerid][pWeight4],price);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, price);
			ClearFishID(playerid, 4);
		}
	case 5:
		{
			if(Fishes[playerid][pWeight5] < 20)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Chung toi chi quan tam den loai ca co trong luong 20 LBS hoac nhieu hon.");
				return 1;
			}
			price = FishCost(playerid, Fishes[playerid][pFid5]);
			price = price * Fishes[playerid][pWeight5];
			GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
			format(string, sizeof(string), "* Ban da ban ca cua ban %s rang trong luong %d, cho $%d.", Fishes[playerid][pFish5],Fishes[playerid][pWeight5],price);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, price);
			ClearFishID(playerid, 5);
		}
	}
	Fishes[playerid][pLastFish] = 0;
	Fishes[playerid][pFishID] = 0;
	return 1;
}

CMD:giave(playerid, params[])
{
	return cmd_fare(playerid,params);
}

CMD:fare(playerid, params[])
{
	if(IsATaxiDriver(playerid) || PlayerInfo[playerid][pJob] == 17 || PlayerInfo[playerid][pJob2] == 17 && PlayerInfo[playerid][pTaxiLicense] == 1)
	{
		new string[128], fare;
		if(sscanf(params, "d", fare)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /fare [price]");

		if(PlayerInfo[playerid][pJailTime] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay vao thoi diem nay.");

		if(TransportDuty[playerid] > 0)
		{
			if(TransportDuty[playerid] == 1)
			{
				TaxiDrivers -= 1;
			}
			else if(TransportDuty[playerid] == 2)
			{
				BusDrivers -= 1;
			}

			TransportDuty[playerid] = 0;
			format(string, sizeof(string), "* Ban da off-duty va ban kiem duoc $%d.", TransportMoney[playerid]);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, TransportMoney[playerid]);
			TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
			SetPlayerToTeamColor(playerid);
			return 1;
		}
		if(GetPVarInt(playerid, "MechanicDuty") == 1 || GetPVarInt(playerid, "LawyerDuty") == 1) return SendClientMessageEx(playerid,COLOR_GREY,"You need to get off duty with your mechanic/lawyer job first.");
		if(GetPlayerState(playerid) != 2) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai nguoi lai xe!");
		if(fare < 1 || fare > 10) return SendClientMessageEx(playerid, COLOR_GREY, "   Gia ve xe phai o tu $1 den $10!");
		new newcar = GetPlayerVehicleID(playerid);
		if(IsAnBus(newcar))
		{
			BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid] = fare;
			format(string, sizeof(string), "Ban dang lam tai xe Bus, gia ve: $%d.", TransportValue[playerid]);
		}
		else
		{
			TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = fare;
			format(string, sizeof(string), "Ban dang lam tai xe Taxi, gia ve: $%d.", TransportValue[playerid]);
		}
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		if(IsATaxiDriver(playerid)) SetPlayerColor(playerid, COLOR_TAXI); else SetPlayerColor(playerid,TEAM_TAXI_COLOR);
	}
	else
	{
		return SendClientMessageEx(playerid,COLOR_GREY,"Ban khong phai la taxi/bus duoc cap phep hoat dong!");
	}
	return 1;
}
CMD:caucaddddd(playerid, params[])
{
	return cmd_fishhhh(playerid,params);
}
CMD:fishhhh(playerid, params[])
{

	if(PlayerInfo[playerid][pFishes] > 5)
	{
		return 1;
	}
	if(Fishes[playerid][pWeight1] > 0 && Fishes[playerid][pWeight2] > 0 && Fishes[playerid][pWeight3] > 0 && Fishes[playerid][pWeight4] > 0 && Fishes[playerid][pWeight5] > 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the thuc hien nhieu hon nam ca tai mot thoi diem - ban hoac phat hanh chung dau tien.");
		return 1;
	}

	new string[128];
	new Veh = GetPlayerVehicleID(playerid);
	if((IsAtFishPlace(playerid)) || IsABoat(Veh))
	{
		new Caught;
		new rand;
		new fstring[MAX_PLAYER_NAME];
		new Level = PlayerInfo[playerid][pFishSkill];
		if(Level >= 0 && Level <= 50) { Caught = random(20)-7; }
		else if(Level >= 51 && Level <= 100) { Caught = random(50)-20; }
		else if(Level >= 101 && Level <= 200) { Caught = random(100)-50; }
		else if(Level >= 201 && Level <= 400) { Caught = random(160)-60; }
		else if(Level >= 401) { Caught = random(180)-70; }
		rand = random(sizeof(FishNames));
		if(Caught <= 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "D�ng gay.");
			return 1;
		}
		else if(rand == 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban da cau duoc mot chiec ao, va nem no di.");
			return 1;
		}
		else if(rand == 4)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban da cau duoc mot chiec quan dai, va nem do di.");
			return 1;
		}
		else if(rand == 7)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban da cau duoc mot con co the va nem no di.");
			return 1;
		}
		else if(rand == 10)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban da cau duoc mot doi giay va nem no di.");
			return 1;
		}
		else if(rand == 13)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban da cau duoc mot tui rac va nem no di.");
			return 1;
		}
		else if(rand == 20)
		{
			new mrand = random(500);
			format(string, sizeof(string), "* Ban da cau duoc mot tui tien va co ($%d).", mrand);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, mrand);
			return 1;
		}
		if(Fishes[playerid][pWeight1] == 0)
		{
			PlayerInfo[playerid][pFishes] += 1;

			if(DoubleXP) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da dat duoc 2 diem ky nang cau ca thay vi 1. (Double XP Active)");
				PlayerInfo[playerid][pFishSkill] += 2;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
			}
			else
  			if(PlayerInfo[playerid][pDoubleEXP] > 0 && !DoubleXP)
			{
				format(string, sizeof(string), "Ban da dat duoc 2 diem ky nang cau ca thay vi 1. Ban co %d gio con lai tren the nhan doi EXP.", PlayerInfo[playerid][pDoubleEXP]);
				SendClientMessageEx(playerid, COLOR_YELLOW, string);
   				PlayerInfo[playerid][pFishSkill] += 2;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
			}
			else
			{
  				PlayerInfo[playerid][pFishSkill] += 1;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE;
			}

			format(fstring, sizeof(fstring), "%s", FishNames[rand]);
			strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
			Fishes[playerid][pWeight1] = Caught;
			format(string, sizeof(string), "* Ban da bat duoc mot %s, can nang %d pounds.", Fishes[playerid][pFish1], Caught);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			Fishes[playerid][pLastWeight] = Caught;
			Fishes[playerid][pLastFish] = 1;
			Fishes[playerid][pFid1] = rand;
			Fishes[playerid][pFishID] = rand;
			if(Caught > PlayerInfo[playerid][pBiggestFish])
			{
				format(string, sizeof(string), "* Ky luc cu cua ban %d ban da duoc thong qua, ky luc moi cua ban %d pounds.", PlayerInfo[playerid][pBiggestFish], Caught);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pBiggestFish] = Caught;
			}
		}
		else if(Fishes[playerid][pWeight2] == 0)
		{
			PlayerInfo[playerid][pFishes] += 1;

			if(DoubleXP) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da dat duoc 2 diem ky nang cau ca thay vi 1. (Double XP Active)");
				PlayerInfo[playerid][pFishSkill] += 2;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
			}
			else
  			if(PlayerInfo[playerid][pDoubleEXP] > 0 && !DoubleXP)
			{
				format(string, sizeof(string), "Ban da dat duoc 2 diem ky nang cau ca thay vi 1. Ban co %d gio con lai tren the nhan doi EXP.", PlayerInfo[playerid][pDoubleEXP]);
				SendClientMessageEx(playerid, COLOR_YELLOW, string);
   				PlayerInfo[playerid][pFishSkill] += 2;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
			}
			else
			{
  				PlayerInfo[playerid][pFishSkill] += 1;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE;
			}

			format(fstring, sizeof(fstring), "%s", FishNames[rand]);
			strmid(Fishes[playerid][pFish2], fstring, 0, strlen(fstring), 255);
			Fishes[playerid][pWeight2] = Caught;
			format(string, sizeof(string), "* Ban da bat duoc %s,cang nang %d pounds.", Fishes[playerid][pFish2], Caught);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			Fishes[playerid][pLastWeight] = Caught;
			Fishes[playerid][pLastFish] = 2;
			Fishes[playerid][pFid2] = rand;
			Fishes[playerid][pFishID] = rand;
			if(Caught > PlayerInfo[playerid][pBiggestFish])
			{
				format(string, sizeof(string), "* Ky luc cu cua ban %d bang da duong thong qua, ky luc moi cua ban %d pounds.", PlayerInfo[playerid][pBiggestFish], Caught);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pBiggestFish] = Caught;
			}
		}
		else if(Fishes[playerid][pWeight3] == 0)
		{
			PlayerInfo[playerid][pFishes] += 1;

			if(DoubleXP) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da dat duoc 2 diem ky nang cau ca thay vi 1. (Double XP Active)");
				PlayerInfo[playerid][pFishSkill] += 2;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
			}
			else
  			if(PlayerInfo[playerid][pDoubleEXP] > 0 && !DoubleXP)
			{
				format(string, sizeof(string), "Ban da dat duoc 2 diem ky nang cau ca thay vi 1. Ban con %d gio nhan doi EXP token.", PlayerInfo[playerid][pDoubleEXP]);
				SendClientMessageEx(playerid, COLOR_YELLOW, string);
   				PlayerInfo[playerid][pFishSkill] += 2;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
			}
			else
			{
  				PlayerInfo[playerid][pFishSkill] += 1;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE;
			}

			format(fstring, sizeof(fstring), "%s", FishNames[rand]);
			strmid(Fishes[playerid][pFish3], fstring, 0, strlen(fstring), 255);
			Fishes[playerid][pWeight3] = Caught;
			format(string, sizeof(string), "* Ban da cau duoc %s, trong luong %d pounds.", Fishes[playerid][pFish3], Caught);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			Fishes[playerid][pLastWeight] = Caught;
			Fishes[playerid][pLastFish] = 3;
			Fishes[playerid][pFid3] = rand;
			Fishes[playerid][pFishID] = rand;
			if(Caught > PlayerInfo[playerid][pBiggestFish])
			{
				format(string, sizeof(string), "* Ky luc cua cua ban cau duoc ca %d da bi pha bo, xac lap ky luc moi khi cau la %d pounds.", PlayerInfo[playerid][pBiggestFish], Caught);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pBiggestFish] = Caught;
			}
		}
		else if(Fishes[playerid][pWeight4] == 0)
		{
			PlayerInfo[playerid][pFishes] += 1;

			if(DoubleXP) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da dat duoc 2 diem ky nang cau ca thay vi 1 (Double XP Active)");
				PlayerInfo[playerid][pFishSkill] += 2;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
			}
			else
  			if(PlayerInfo[playerid][pDoubleEXP] > 0 && !DoubleXP)
			{
				format(string, sizeof(string), "Ban da dat duoc 2 diem ky nang cau ca thay vi 1 Ban con %d gio con lai nhan doi EXP token.", PlayerInfo[playerid][pDoubleEXP]);
				SendClientMessageEx(playerid, COLOR_YELLOW, string);
   				PlayerInfo[playerid][pFishSkill] += 2;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
			}
			else
			{
  				PlayerInfo[playerid][pFishSkill] += 1;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE;
			}

			format(fstring, sizeof(fstring), "%s", FishNames[rand]);
			strmid(Fishes[playerid][pFish4], fstring, 0, strlen(fstring), 255);
			Fishes[playerid][pWeight4] = Caught;
			format(string, sizeof(string), "* Ban da cau duoc %s, trong luong %d pounds.", Fishes[playerid][pFish4], Caught);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			Fishes[playerid][pLastWeight] = Caught;
			Fishes[playerid][pLastFish] = 4;
			Fishes[playerid][pFid4] = rand;
			Fishes[playerid][pFishID] = rand;
			if(Caught > PlayerInfo[playerid][pBiggestFish])
			{
				format(string, sizeof(string), "* Ky luc cua cua ban cau duoc ca %d da bi pha bo, xac lap ky luc moi khi cau la %d pounds.", PlayerInfo[playerid][pBiggestFish], Caught);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pBiggestFish] = Caught;
			}
		}
		else if(Fishes[playerid][pWeight5] == 0)
		{
			PlayerInfo[playerid][pFishes] += 1;

			if(DoubleXP) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da dat duoc 2 diem ky nang cau ca thay vi 1 (Double XP Active)");
				PlayerInfo[playerid][pFishSkill] += 2;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
			}
			else
  			if(PlayerInfo[playerid][pDoubleEXP] > 0 && !DoubleXP)
			{
				format(string, sizeof(string), "Ban da dat duoc 2 diem ky nang cau ca thay vi 1. Ban con %d gio con lai nhan doi EXP token.", PlayerInfo[playerid][pDoubleEXP]);
				SendClientMessageEx(playerid, COLOR_YELLOW, string);
   				PlayerInfo[playerid][pFishSkill] += 2;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
			}
			else
			{
  				PlayerInfo[playerid][pFishSkill] += 1;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE;
			}

			format(fstring, sizeof(fstring), "%s", FishNames[rand]);
			strmid(Fishes[playerid][pFish5], fstring, 0, strlen(fstring), 255);
			Fishes[playerid][pWeight5] = Caught;
			format(string, sizeof(string), "* Ban da cau duoc %s, trong luong %d pounds.", Fishes[playerid][pFish5], Caught);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			Fishes[playerid][pLastWeight] = Caught;
			Fishes[playerid][pLastFish] = 5;
			Fishes[playerid][pFid5] = rand;
			Fishes[playerid][pFishID] = rand;
			if(Caught > PlayerInfo[playerid][pBiggestFish])
			{
				format(string, sizeof(string), "* Ky luc cua cua ban cau duoc ca %d da bi pha bo, xac lap ky luc moi khi cau la %d pounds.", PlayerInfo[playerid][pBiggestFish], Caught);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pBiggestFish] = Caught;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ca cua ban da day,ban khong the cau them.");
			return 1;
		}
		if(PlayerInfo[playerid][pFishSkill] == 50)
		{ SendClientMessageEx(playerid, COLOR_YELLOW, "* Ky nang cau ca cua ban dat cap do 2, ban co the bat duoc ca to hon."); }
		else if(PlayerInfo[playerid][pFishSkill] == 100)
		{ SendClientMessageEx(playerid, COLOR_YELLOW, "* Ky nang cau ca cua ban dat cap do 3, ban co the bat duoc ca to hon."); }
		else if(PlayerInfo[playerid][pFishSkill] == 200)
		{ SendClientMessageEx(playerid, COLOR_YELLOW, "* Ky nang cau ca cua ban dat cap do 4, ban co the bat duoc ca to hon."); }
		else if(PlayerInfo[playerid][pFishSkill] == 400)
		{ SendClientMessageEx(playerid, COLOR_YELLOW, "* Ky nang cau ca cua ban dat cap do 5, ban co the bat duoc ca to hon."); }
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o Santa Maria Pier, hoac tren mot chiec thuyen danh ca.");
		return 1;
	}
	return 1;
}

CMD:fishes(playerid, params[])
{
	new string[128];

	SendClientMessageEx(playerid, COLOR_WHITE, "|__________________ Cau ca __________________|");
	format(string, sizeof(string), "** (1) Ca: %s.   Trong luong: %d.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1]);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "** (2) Ca: %s.   Trong luong: %d.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2]);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "** (3) Ca: %s.   Trong luong: %d.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3]);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "** (4) Ca: %s.   Trong luong: %d.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4]);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "** (5) Ca: %s.   Trong luong: %d.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5]);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	SendClientMessageEx(playerid, COLOR_WHITE, "|____________________________________________|");
	return 1;
}

CMD:releasefish(playerid, params[])
{
	new fishid;
	if(sscanf(params, "d", fishid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /releasefish [fish 1-5]");

	if(fishid < 1 || fishid > 5) { SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /releasefish [fish 1-5]"); return 1; }
	else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "That slot is empty."); return 1; }
	else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "That slot is empty."); return 1; }
	else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "That slot is empty."); return 1; }
	else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "That slot is empty."); return 1; }
	else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "That slot is empty."); return 1; }
	ClearFishID(playerid, fishid);
	Fishes[playerid][pLastFish] = 0;
	Fishes[playerid][pFishID] = 0;
	SendClientMessageEx(playerid, COLOR_GREY, "You released a fish");
	return 1;
}

CMD:throwback(playerid, params[])
{
	if(Fishes[playerid][pLastFish] > 0)
	{
		ClearFishID(playerid, Fishes[playerid][pLastFish]);
		Fishes[playerid][pLastFish] = 0;
		Fishes[playerid][pFishID] = 0;
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da nem con ca cuoi cung cua ban.");
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban tham chi khong bat mot con ca chua.");
		return 1;
	}
	return 1;
}

CMD:throwbackall(playerid, params[])
{
	if(Fishes[playerid][pWeight1] > 0 || Fishes[playerid][pWeight2] > 0 || Fishes[playerid][pWeight3] > 0 || Fishes[playerid][pWeight4] > 0 || Fishes[playerid][pWeight5] > 0)
	{
		ClearFishes(playerid);
		Fishes[playerid][pLastFish] = 0;
		Fishes[playerid][pFishID] = 0;
		SendClientMessageEx(playerid, COLOR_GREY, "Ban da nem lai tat ca ca'");
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban tham chi khong bat mot con ca.");
		return 1;
	}
	return 1;
}

CMD:giayphep(playerid, params[])
{
	new string[128], text1[20], text2[20];
	if(PlayerInfo[playerid][pCarLic]) { text1 = "Co"; } else { text1 = "Chua co"; }
	if(PlayerInfo[playerid][pBoatLic]) { text2 = "Co"; } else { text2 = "Chua co"; }
	SendClientMessageEx(playerid, COLOR_WHITE, "Your licenses...");
	format(string, sizeof(string), "** Giay phep lai xe: %s.", text1);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "** Giay phep thuyen: %s.", text2);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	return 1;
}

CMD:showid(playerid, params[])
{
	return cmd_choxemgiayphep(playerid, params);
}

CMD:choxemgiayphep(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /choxemgiayphep [player]");

	if(IsPlayerConnected(giveplayerid))
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the hien giay phep cho chinh ban - su dung /licenses cho rang."); return 1; }
			new text1[20], text2[20];
			if(PlayerInfo[playerid][pCarLic]) { text1 = "Acquired"; } else { text1 = "Not acquired"; }
			if(PlayerInfo[playerid][pBoatLic]) { text2 = "Acquired"; } else { text2 = "Not acquired"; }
			switch(PlayerInfo[playerid][pNation])
			{
				case 0:
				{
					SendClientMessageEx(giveplayerid, COLOR_WHITE, "** Cong dan cua Los Santos **");
				}
				case 1:
				{
					SendClientMessageEx(giveplayerid, COLOR_TR, "** Cong dan cua San Fierro  **");
				}
			}
			format(string, sizeof(string), "Listing %s's licenses...", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
			format(string, sizeof(string), "Date of Birth: %s", PlayerInfo[playerid][pBirthDate]);
			SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
			format(string, sizeof(string), "** Giay phep lai xe: %s.", text1);
			SendClientMessageEx(giveplayerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Giay phep lai thuyen: %s.", text2);
			SendClientMessageEx(giveplayerid, COLOR_GREY, string);
			format(string, sizeof(string), "* %s da cho ban xem giay phep.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Ban da cho %s xem giay phep.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi do khong gan ban.");
			return 1;
		}

	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		return 1;
	}
	return 1;
}

CMD:lucsoat(playerid, params[])
{
	if(IsACop(playerid) || PlayerInfo[playerid][pJob] == 8 || PlayerInfo[playerid][pJob2] == 8)
	{
		new string[128], storageid, giveplayerid;
		if(sscanf(params, "u", giveplayerid)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /lucsoat [player]");
			return 1;
		}
		/*if(sscanf(params, "ud", giveplayerid, storageid)) {
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /lucsoat [player] [storageid]");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
		return 1;
		}

		if(storageid < 0 || storageid > 1) {
			SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /lucsoat [player] [storageid]");
			SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
			return 1;
		}*/

		if(IsPlayerConnected(giveplayerid))
		{
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the luc soat chinh minh!"); return 1; }

				/*// Find the storageid of the storagedevice.
				if(storageid == 1) {
					new bool:itemEquipped = false;
					for(new i = 0; i < 3; i++)
					{
						if(StorageInfo[giveplayerid][i][sAttached] == 1) {
							storageid = i+1;
							itemEquipped = true;
						}
					}
					if(itemEquipped == false) return SendClientMessageEx(playerid, COLOR_WHITE, "That person doesn't have a storage device equipped!");
				}*/
				new packages = GetPVarInt(giveplayerid, "Packages");
				new crates = PlayerInfo[giveplayerid][pCrates];
				SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
				format(string, sizeof(string), "*** %s' items...  ***", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				if(PlayerInfo[giveplayerid][pPot] > 0)
				{
					format(string, sizeof(string), "(Tui) %d grams pot.", PlayerInfo[giveplayerid][pPot]);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				/*if(hanglau[giveplayerid] == 1)
				{
				    SendClientMessage(playerid, COLOR_RED, "Hop dong giao hang vu khi (Hang lau)");
				}*/
				if(PlayerInfo[giveplayerid][pWSeeds] == 1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "(Tui) Hat giong can sa");
				}
				if(PlayerInfo[giveplayerid][pCrack] > 0)
				{
					format(string, sizeof(string), "(Tui) %d grams crack.", PlayerInfo[giveplayerid][pCrack]);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				if(PlayerInfo[giveplayerid][pMats] > 0)
				{
					format(string, sizeof(string), "(Tui) %d materials.", PlayerInfo[giveplayerid][pMats]);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				if(PlayerInfo[giveplayerid][pTienBan] > 0)
				{
					format(string, sizeof(string), "(Tui) %d Tien Ban.", PlayerInfo[giveplayerid][pTienBan]);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				if(PlayerInfo[giveplayerid][pRawOpium] > 0)
				{
					format(string, sizeof(string), "(Tui) %d grams thuoc phien tho.", PlayerInfo[giveplayerid][pRawOpium]);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				if(PlayerInfo[giveplayerid][pSyringes] > 0)
				{
					format(string, sizeof(string), "(Tui) %d kim tiem.", PlayerInfo[giveplayerid][pSyringes]);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				if(PlayerInfo[giveplayerid][pOpiumSeeds] > 0)
				{
					format(string, sizeof(string), "(Tui) %d hat thuoc phien.", PlayerInfo[giveplayerid][pOpiumSeeds]);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				if(PlayerInfo[giveplayerid][pCansap] > 0)
				{
					format(string, sizeof(string), "So Luong La Can Sa:%d", PlayerInfo[giveplayerid][pCansap]);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
                if(packages > 0)
				{
					format(string, sizeof(string), "(Tui) %d goi vat lieu.", packages);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				if(crates > 0)
				{
					format(string, sizeof(string), "(Tui) %d drug crates.", crates);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				if(storageid > 0)
				{
					if(StorageInfo[giveplayerid][storageid-1][sPot] > 0)
					{
						format(string, sizeof(string), "(%s) %d grams pot.", storagetype[storageid], StorageInfo[giveplayerid][storageid-1][sPot]);
						SendClientMessageEx(playerid, COLOR_GREY, string);
					}
					if(StorageInfo[giveplayerid][storageid-1][sCrack] > 0)
					{
						format(string, sizeof(string), "(%s) %d grams crack.", storagetype[storageid], StorageInfo[giveplayerid][storageid-1][sCrack]);
						SendClientMessageEx(playerid, COLOR_GREY, string);
					}
					if(StorageInfo[giveplayerid][storageid-1][sMats] > 0)
					{
						format(string, sizeof(string), "(%s) %d materials.", storagetype[storageid], StorageInfo[giveplayerid][storageid-1][sMats]);
						SendClientMessageEx(playerid, COLOR_GREY, string);
					}
				}

				if(Fishes[giveplayerid][pWeight1] > 0 || Fishes[giveplayerid][pWeight2] > 0 || Fishes[giveplayerid][pWeight3] > 0 || Fishes[giveplayerid][pWeight4] > 0 || Fishes[giveplayerid][pWeight5] > 0)
				{
					format(string, sizeof(string), "(Tui) %d ca.", PlayerInfo[giveplayerid][pFishes]);
					SendClientMessageEx(playerid, COLOR_GREY, string);
				}
				//if(PlayerInfo[giveplayerid][pPhoneBook] > 0) SendClientMessageEx(playerid, COLOR_GREY, "Danh ba dien thoai.");
				if(PlayerInfo[giveplayerid][pCDPlayer] > 0) SendClientMessageEx(playerid, COLOR_GREY, "May ghe nhac.");
				new weaponname[50];
				format(string, sizeof(string), "*** %s' vu khi...  ***", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				for (new i = 0; i < 12; i++)
				{
					if(PlayerInfo[giveplayerid][pGuns][i] > 0)
					{
						GetWeaponName(PlayerInfo[giveplayerid][pGuns][i], weaponname, sizeof(weaponname));
						format(string, sizeof(string), "Vu khi: %s.", weaponname);
						SendClientMessageEx(playerid, COLOR_GRAD1, string);
					}
				}
				SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
				format(string, sizeof(string), "* %s da luc soat %s thay vat pham pham phap.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi do khong gan ban.");
			}

		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi khong hop le.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai la mot nhan vien thuc thi phap luat, hoac mot ve si!");
		return 1;
	}
	return 1;
}

CMD:hbadge(playerid, params[])
{
    #if defined zombiemode
	if(zombieevent == 1 && GetPVarType(playerid, "pIsZombie")) return SendClientMessageEx(playerid, COLOR_GREY, "Zombies khong su dung duoc lenh nay.");
	#endif
	if (IsAHitman(playerid))
	{
		new giveplayerid = 1;
 		if(sscanf(params, "d", giveplayerid)) {
			SendClientMessageEx(playerid, COLOR_GREY, "Su dung /hbadge 0 de thiet lap");
		}
		if(giveplayerid == 0)
		{
  			SendClientMessageEx(playerid, COLOR_WHITE, "Ban da cai huy hieu cua ban lai binh thuong");
  			SetPlayerColor(playerid,TEAM_HIT_COLOR);
		}
		else
		{
			Group_ListGroups(playerid, DIALOG_HBADGE);
		}
	}
	return 1;
}

CMD:profile(playerid, params[])
{
	if(IsAHitman(playerid))
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /profile [player]");

		if(IsPlayerConnected(giveplayerid))
		{
		    new f2text[42];

			if(PlayerInfo[giveplayerid][pFMember] < INVALID_FAMILY_ID)
			{
				format(f2text, sizeof(f2text), "%s", FamilyInfo[PlayerInfo[giveplayerid][pFMember]][FamilyName]);
			} else f2text = "None";

			SendClientMessageEx(playerid, COLOR_WHITE, "Profile Information:");
			format(string, sizeof(string), "Ten: %s", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Ngay sinh: %s", PlayerInfo[giveplayerid][pBirthDate]);
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
			if(0 <= PlayerInfo[giveplayerid][pMember] < MAX_GROUPS)
			{
				format(string, sizeof(string), "To chuc: %s", arrGroupData[PlayerInfo[giveplayerid][pMember]][g_szGroupName]);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
			format(string, sizeof(string), "Family: %s", f2text);
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Bounty: $%d", PlayerInfo[giveplayerid][pHeadValue]);
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
		}
	}
	return 1;
}

CMD:ranks(playerid, params[])
{
	if ((!IsAHitman(playerid)) && PlayerInfo[playerid][pAdmin] < 4) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la thanh vien cua hitman");
	SendClientMessageEx(playerid, COLOR_WHITE, "|__________________ Agency's Ranks __________________|");

	new string[128];
	foreach(new i: Player)
	{
		if((IsAHitman(i)))
		{
			if( GoChase[playerid] == INVALID_PLAYER_ID )
			{
				format(string, sizeof(string), "* Name: %s | Rank %d | Completed Hits: %d | Failed Hits: %d", GetPlayerNameEx(i),PlayerInfo[i][pRank], PlayerInfo[i][pCHits], PlayerInfo[i][pFHits]);
				SendClientMessageEx(playerid, COLOR_GREY, string);
			}
			else
			{
				format(string, sizeof(string), "* Name: %s | Rank %d | Completed Hits: %d | Failed Hits: %d | Chasing: %s", GetPlayerNameEx(i),PlayerInfo[i][pRank], PlayerInfo[i][pCHits], PlayerInfo[i][pFHits], GetPlayerNameEx(GoChase[i]));
				SendClientMessageEx(playerid, COLOR_GREY, string);
			}
		}
	}
	return 1;
}

CMD:plantcarbomb(playerid, params[]) {
	return cmd_pcb(playerid, params);
}

CMD:pcb(playerid, params[])
{
	if (IsAHitman(playerid))
	{
		if (PlayerInfo[playerid][pC4] == 0)
		{
			if (PlayerInfo[playerid][pBombs] != 0)
			{
				new carid = GetPlayerVehicleID(playerid);
				new closestcar = GetClosestCar(playerid, carid);
				if(IsPlayerInRangeOfVehicle(playerid, closestcar, 4.0))
				{
					if(VehicleBomb{closestcar} == 1)
					{
						SendClientMessageEx(playerid, COLOR_GRAD2, "Da dat C4 tren dong co xe!");
						return 1;
					}
					VehicleBomb{closestcar} = 1;
					PlacedVehicleBomb[playerid] = closestcar;
					ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
					ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
					SendClientMessageEx(playerid, COLOR_GREEN, "Da dat bom C4 vao dong co xe, su dung /pickupbomb de loai bo no.");
					PlayerInfo[playerid][pC4] = 1;
					PlayerInfo[playerid][pBombs]--;
					PlayerInfo[playerid][pC4Used] = 2;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o gan xe");
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co C4!");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, " Ban can phai trien khai 1 C4 tai mot thoi diem ! ");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, " Ban khong phai la thanh vien cua Hitman Agency ! ");
	}
	return 1;
}

CMD:plantbomb(playerid, params[]) {
	return cmd_pb(playerid, params);
}

CMD:pb(playerid, params[])
{
	if (IsAHitman(playerid))
	{
		if (PlayerInfo[playerid][pC4] == 0)
		{
			if (PlayerInfo[playerid][pBombs] != 0)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					SendClientMessageEx(playerid, COLOR_LIGHTRED,"Ban khong de dat C4 trong khi trong mot chiec xe!");
					return 1;
				}
				GetPlayerPos(playerid,Positions[0][0], Positions[0][1], Positions[0][2]);
				SetPVarFloat(playerid, "DYN_C4_FLOAT_X", Positions[0][0]);
				SetPVarFloat(playerid, "DYN_C4_FLOAT_Y", Positions[0][1]);
				SetPVarFloat(playerid, "DYN_C4_FLOAT_Z", Positions[0][2]);
				PlayerInfo[playerid][pC4] = CreateDynamicObject(1654, Positions[0][0], Positions[0][1], Positions[0][2]-0.9, 0, 89.325012207031, 3.9700012207031);
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
				SendClientMessageEx(playerid, COLOR_GREEN, "Ban da C4 tren mat dat', /pickupbomb de loai bo no.");
				//PlayerInfo[playerid][pC4] = 1;
				PlayerInfo[playerid][pBombs]--;
				PlayerInfo[playerid][pC4Used] = 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co C4!");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, " Ban chi co the chien khai C4 mot lan! ");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, " Ban khong la thanh vien cua hitman ! ");
	}
	return 1;
}

CMD:pub(playerid, params[]) {
	return cmd_pickupbomb(playerid, params);
}

CMD:pickupbomb(playerid, params[])
{
	if (!IsAHitman(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la Hitman!");
		return 1;
	}
	if (PlayerInfo[playerid][pC4] == 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban chua dat mot bomb!");
		return 1;
	}
	new carid = GetPlayerVehicleID(playerid);
	new closestcar = GetClosestCar(playerid, carid);
	if(IsPlayerInRangeOfVehicle(playerid, closestcar, 4.0) && VehicleBomb{closestcar} == 1)
	{
		VehicleBomb{closestcar} = 0;
		PlacedVehicleBomb[playerid] = INVALID_VEHICLE_ID;
		PickUpC4(playerid);
		SendClientMessageEx(playerid, COLOR_GREEN, "Bomb chon thanh cong.");
		PlayerInfo[playerid][pBombs]++;
		PlayerInfo[playerid][pC4Used] = 0;
		PlayerInfo[playerid][pC4Get] = 1;
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "DYN_C4_FLOAT_X"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Y"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Z")))
	{
		PickUpC4(playerid);
		SendClientMessageEx(playerid, COLOR_GREEN, "Bomb chon thanh cong.");
		PlayerInfo[playerid][pBombs]++;
		PlayerInfo[playerid][pC4Used] = 0;
		PlayerInfo[playerid][pC4Get] = 1;
		return 1;
	}
	return 1;
}

CMD:myc4(playerid, params[])
{
	if (IsAHitman(playerid))
	{
		new string[128];

		if (PlayerInfo[playerid][pBombs] > 0)
		{
			format(string, sizeof(string), "Ban hien co %i C4 trong kho cua ban.", PlayerInfo[playerid][pBombs]);
		}
		else
		{
			format(string, sizeof(string), "Ban khong co bat ky C4 trong kho cua ban.");
		}

		SendClientMessageEx(playerid, COLOR_GRAD2, string);
	}

	return 1;
}

CMD:layvatlieu(playerid, params[]) {
	return cmd_getmats(playerid, params);
}

CMD:getmats(playerid, params[])
{
	if (PlayerInfo[playerid][pJob] != 9 && PlayerInfo[playerid][pJob2] != 9 && PlayerInfo[playerid][pJob] != 18 && PlayerInfo[playerid][pJob2] != 18)
	{
		SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong phai la mot Arms Dealer hoac Craftsman!");
		return 1;
	}
	if(CheckPointCheck(playerid))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Hay dam bao rang tram kiem soat hien tai cua ban bi pha huy dau tien (hoac ban co goi tai lieu, hoac mot tram kiem soat hien co).");
		return 1;
	}

	new mypoint = -1;
	new mypointex = -1;
	new mydeliver = 0;

	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	for (new i=0; i<MAX_POINTS; i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 1)
		{
			mypoint = i;
			mypointex = i;
			mydeliver = Points[i][MatPoint];
		}
	}
	if (IsPlayerInRangeOfPoint(playerid, 10.0, 2102.71, -103.97, 2.28)) // Matrun 3
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(IsABoat(vehicle))
		{
			if(GetPVarInt(playerid, "Packages") >= 10) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban can phai cung cap ca goi dau tien cua ban.");

			if(PlayerInfo[playerid][pDonateRank] == 1)
			{
			    if(GetPlayerCash(playerid) < 1125)
			    {
			        SendClientMessageEx(playerid, COLOR_GREY," Ban khong co $1125 de chi tra!");
			        return 1;
			    }
				GivePlayerCash(playerid, -1125);
				SetPVarInt(playerid, "Packages", 23);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban da mua 23 vat lieu va cha cho $1125.");
				SendClientMessageEx(playerid, COLOR_YELLOW,"Bronze VIP: Ban nhan duoc 1.5x goi hang, se giup ban nhan duoc them 1.5x vat lieu.");
			}
			else if(PlayerInfo[playerid][pDonateRank] == 2 || PlayerInfo[playerid][pDonateRank] == 3)
			{
   				if(GetPlayerCash(playerid) < 1500)
			    {
			        SendClientMessageEx(playerid, COLOR_GREY," Ban khong co kha nang chi tra $1500!");
			        return 1;
			    }
				GivePlayerCash(playerid, -1500);
				SetPVarInt(playerid, "Packages", 30);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban da mua 30 goi vat lieu va cha cho $1500.");
				SendClientMessageEx(playerid, COLOR_YELLOW,"Silver & Gold VIP: Ban nhan duoc 2x goi hang, se giup ban nhan duoc them 2x vat lieu.");
			}
			else if(PlayerInfo[playerid][pDonateRank] >= 4)
			{
				if(GetPlayerCash(playerid) < 1875)
			    {
			        SendClientMessageEx(playerid, COLOR_GREY," Ban khong co kha nang chi tra $1875!");
			        return 1;
			    }
				GivePlayerCash(playerid, -1875);
				SetPVarInt(playerid, "Packages", 38);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban da mua 38 goi vat lieu va cha cho $1875.");
				SendClientMessageEx(playerid, COLOR_YELLOW,"Platinum VIP: Ban nhan duoc 2.5x goi hang, se giup ban nhan duoc them 2.5x vat lieu.");
			}
			else
			{
				if(GetPlayerCash(playerid) < 750)
			    {
			        SendClientMessageEx(playerid, COLOR_GREY," Ban khong co kha nang chi tra $750!");
			        return 1;
			    }
				GivePlayerCash(playerid, -750);
				SetPVarInt(playerid, "Packages", 15);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban da mua 15 goi vat lieu va tra cho $750.");
			}

			SendClientMessageEx(playerid, COLOR_WHITE, "HUONG DAN Follow the river to the West to get to the factory and deliver your Materials Packages.");
			SetPVarInt(playerid, "MatDeliver", 333);
			SetPVarInt(playerid, "tpMatRunTimer", 15);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
			SetPlayerCheckpoint(playerid, -330.44, -467.54, 0.85, 5);
			return 1;
		}
 		else
		{
			SendClientMessageEx(playerid, COLOR_GREY," Ban dang khong o tren mot chiec thuyen!");
		}
		return 1;
	}
	if (IsPlayerInRangeOfPoint(playerid, 4.0, -1816.528686, -179.502624, 9.398437)) // Matrun 4
	{
		if(GetPVarInt(playerid, "Packages") >= 10) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban phai cung cap cac goi vat lieu truoc tien cua ban.");

		if(PlayerInfo[playerid][pDonateRank] == 1)
		{
			if(GetPlayerCash(playerid) < 900)
			{
   				SendClientMessageEx(playerid, COLOR_GREY," Ban khong co du $900 de chi tra!");
       			return 1;
   			}
			GivePlayerCash(playerid, -900);
			SetPVarInt(playerid, "Packages", 18);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban mua 18 Goi vat lieu voi gia $900.");
			SendClientMessageEx(playerid, COLOR_YELLOW,"Bronze VIP: Ban nhan duoc 1.5x goi hang, se giup ban nhan duoc them 1.5x vat lieu.");
		}
		else if(PlayerInfo[playerid][pDonateRank] == 2 || PlayerInfo[playerid][pDonateRank] == 3)
		{
			if(GetPlayerCash(playerid) < 1200)
			{
   				SendClientMessageEx(playerid, COLOR_GREY," Ban khong co du $1200 de chi tra!");
       			return 1;
   			}
			GivePlayerCash(playerid, -1200);
			SetPVarInt(playerid, "Packages", 24);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban mua 24 Goi vat lieu voi gia $1200.");
			SendClientMessageEx(playerid, COLOR_YELLOW,"Silver & Gold VIP: Ban nhan duoc 2x goi hang, se giup ban nhan duoc them 2x vat lieu.");
		}
		else if(PlayerInfo[playerid][pDonateRank] >= 4)
		{
			if(GetPlayerCash(playerid) < 1500)
			{
   				SendClientMessageEx(playerid, COLOR_GREY," Ban khong co du $1500 de chi tra!");
       			return 1;
   			}
			GivePlayerCash(playerid, -1500);
			SetPVarInt(playerid, "Packages", 30);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban mua 30 Goi vat lieu voi gia $1500.");
			SendClientMessageEx(playerid, COLOR_YELLOW,"Platinum VIP: Ban nhan duoc 2.5x goi hang, se giup ban nhan duoc them 2.5x vat lieu.");
		}
		else
		{
			if(GetPlayerCash(playerid) < 600)
			{
   				SendClientMessageEx(playerid, COLOR_GREY," Ban khong co du $600 de chi tra!");
       			return 1;
   			}
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban mua 12 Goi vat lieu voi gia $600.");
			GivePlayerCash(playerid, -600);
			SetPVarInt(playerid, "Packages", 12);
		}

		SetPVarInt(playerid, "MatDeliver", 444);
		SetPVarInt(playerid, "tpMatRunTimer", 12);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
		SetPlayerCheckpoint(playerid, -1872.879760, 1416.312500, 7.180089, 5);
		return 1;
	}
	if (IsPlayerInRangeOfPoint(playerid, 4.0, -1522.7351, 2587.2612, 55.8359)) // Matrun TR
	{
		if(GetPVarInt(playerid, "Packages") >= 10) return SendClientMessageEx(playerid, COLOR_GRAD2, "You must deliver your packages first.");

		if(PlayerInfo[playerid][pDonateRank] == 1)
		{
			if(GetPlayerCash(playerid) < 900)
			{
   				SendClientMessageEx(playerid, COLOR_GREY," Ban khong co du $900 de chi tra!");
       			return 1;
   			}
			GivePlayerCash(playerid, -900);
			SetPVarInt(playerid, "Packages", 18);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban mua 18 Goi vat lieu voi gia $900.");
			SendClientMessageEx(playerid, COLOR_YELLOW,"Bronze VIP: Ban nhan duoc 1.5x goi hang, se giup ban nhan duoc them 1.5x vat lieu.");
		}
		else if(PlayerInfo[playerid][pDonateRank] == 2 || PlayerInfo[playerid][pDonateRank] == 3)
		{
			if(GetPlayerCash(playerid) < 1200)
			{
   				SendClientMessageEx(playerid, COLOR_GREY," Ban khong co du $1200 de chi tra!");
       			return 1;
   			}
			GivePlayerCash(playerid, -1200);
			SetPVarInt(playerid, "Packages", 24);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban mua 24 Goi vat lieu voi gia $1200.");
			SendClientMessageEx(playerid, COLOR_YELLOW,"Silver & Gold VIP: Ban nhan duoc 2x goi hang, se giup ban nhan duoc them 2x vat lieu.");
		}
		else if(PlayerInfo[playerid][pDonateRank] >= 4)
		{
			if(GetPlayerCash(playerid) < 1500)
			{
   				SendClientMessageEx(playerid, COLOR_GREY," Ban khong co du $1500 de chi tra!");
       			return 1;
   			}
			GivePlayerCash(playerid, -1500);
			SetPVarInt(playerid, "Packages", 30);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban mua 30 Goi vat lieu voi gia $1500.");
			SendClientMessageEx(playerid, COLOR_YELLOW,"Platinum VIP: Ban nhan duoc 2.5x goi hang, se giup ban nhan duoc them 2.5x vat lieu.");
		}
		else
		{
			if(GetPlayerCash(playerid) < 600)
			{
   				SendClientMessageEx(playerid, COLOR_GREY," Ban khong co du $600 de chi tra!");
       			return 1;
   			}
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban mua 12 Goi vat lieu voi gia $600.");
			GivePlayerCash(playerid, -600);
			SetPVarInt(playerid, "Packages", 12);
		}

		SetPVarInt(playerid, "MatDeliver", 555);
		SetPVarInt(playerid, "tpMatRunTimer", 12);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
		SetPlayerCheckpoint(playerid, -688.7897, 966.1434, 12.1627, 5);
		return 1;
	}
	if (mypoint == -1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " Ban khong o diem lay vat lieu!");
		return 1;
	}
	mypoint = -1;
	for (new i=0; i<MAX_POINTS; i++)
	{
		if (Points[i][MatPoint] == mydeliver && Points[i][Type] == 2)
		{
			mypoint = i;
		}
	}
	if (mypoint == -1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " Ban khong o diem lay vat lieu o nha may");
		return 1;
	}

	if(PlayerInfo[playerid][pDonateRank] == 1)
	{
		if(GetPlayerCash(playerid) < 750)
		{
			SendClientMessageEx(playerid, COLOR_GREY," Ban khong co du $750 de chi tra!");
			return 1;
		}
		GivePlayerCash(playerid, -750);
		SetPVarInt(playerid, "Packages", 15);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban da mua 15 goi vat lieu voi gia $750.");
		SendClientMessageEx(playerid, COLOR_YELLOW,"Bronze VIP: Ban nhan duoc 1.5x goi hang, se giup ban nhan duoc them 1.5x vat lieu.");
	}
	else if(PlayerInfo[playerid][pDonateRank] == 2 || PlayerInfo[playerid][pDonateRank] == 3)
	{
		if(GetPlayerCash(playerid) < 1000)
		{
			SendClientMessageEx(playerid, COLOR_GREY," Ban khong co du $1000 de chi tra!");
			return 1;
		}
		GivePlayerCash(playerid, -1000);
		SetPVarInt(playerid, "Packages", 20);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban da mua 20 goi vat lieu voi gia $1000.");
		SendClientMessageEx(playerid, COLOR_YELLOW,"Silver & Gold VIP: Ban nhan duoc 2x goi hang, se giup ban nhan duoc them 2x vat lieu.");
	}
	else if(PlayerInfo[playerid][pDonateRank] >= 4)
	{
		if(GetPlayerCash(playerid) < 1250)
		{
			SendClientMessageEx(playerid, COLOR_GREY," Ban khong co du $1250 de chi tra!");
			return 1;
		}
		GivePlayerCash(playerid, -1250);
		SetPVarInt(playerid, "Packages", 25);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban da mua 25 goi vat lieu voi gia $1250.");
		SendClientMessageEx(playerid, COLOR_YELLOW,"Platinum VIP: Ban nhan duoc 2.5x goi hang, se giup ban nhan duoc them 2.5x vat lieu.");
	}
	else
	{
		if(GetPlayerCash(playerid) < 500)
		{
			SendClientMessageEx(playerid, COLOR_GREY," Ban khong co du $500 de chi tra!");
			return 1;
		}
		GivePlayerCash(playerid, -500);
		SetPVarInt(playerid, "Packages", 10);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE,"* Ban da mua 10 goi vat lieu voi gia $500.");
	}

	SetPVarInt(playerid, "MatDeliver", mydeliver);
	SetPVarInt(playerid, "tpMatRunTimer", 10);
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
	for(new i = 0; i < sizeof(FamilyInfo); i++)
	{
		if(strcmp(Points[mypointex][Owner], FamilyInfo[i][FamilyName], true) == 0)
		{
			FamilyInfo[i][FamilyBank] = FamilyInfo[i][FamilyBank]+125;
			//SendClientMessageEx(playerid, COLOR_WHITE, " Family owner recieved 50 percent of the cost.");
		}
	}
	SetPlayerCheckpoint(playerid, Points[mypoint][Pointx], Points[mypoint][Pointy], Points[mypoint][Pointz], 5);
	return 1;
}

CMD:getcrate(playerid, params[])
{
	if (PlayerInfo[playerid][pJob] != 14 && PlayerInfo[playerid][pJob2] != 14)
	{
		SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong phai la Nguoi buon lau thuoc!");
		return 1;
	}
	new mypoint = -1;

	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	for (new i=0; i<MAX_POINTS; i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && strcmp(Points[i][Name], "Drug Factory", true) == 0)
		{
			mypoint = i;
		}
	}
	if (mypoint == -1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " Ban khong o trong Drug Factory!");
		return 1;
	}
	if(PlayerInfo[playerid][pCrates])
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lay them nua!");
		return 1;
	}
	if(GetPlayerCash(playerid) > 1000)
	{
		SendClientMessageEx(playerid, COLOR_LIGHTRED,"Loai thuoc ma ban muon buon lau? (Loai crack hoac pot)");
		SetPVarInt(playerid, "ChoosingDrugs", 1);
		return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY," Ban khong co $1000 de chi tra!");
		return 1;
	}
}

/*CMD:batdaugiaobanh(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);

	if(PlayerInfo[playerid][pJob] != 21 && PlayerInfo[playerid][pJob2] != 21)
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la nhan vien cua hang pizza");

	else if(GetPlayerSkin(playerid) != 155)
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban can mac dong phuc cua cua hang");

	else if(PizzaPlayer[playerid][Player_Vehicle_ID] != vehicleid) 
		return SendClientMessageEx(playerid, COLOR_GREY, "Khong phai phuong tien giao hang cua ban");

	else if(BanhHienTai[playerid] == 0) 
		return SendClientMessageEx(playerid,COLOR_GREY, "Khong co banh giao bang niem tin ha cha");

	else if(!IsPlayerInRangeOfPoint(playerid, 3.0, 2095.9663,-1796.6667,13.3889)){
		return SendClientMessageEx(playerid, COLOR_GREY,"khong the thuc hien");
	}
	else if(batdaugiaobanh[playerid] == 1)
		return SendClientMessage(playerid, COLOR_GREY, "Ban dang giao banh khong tiep tuc /huybo pizza");
	if(BanhHienTai[playerid] == 3)
	{
		switch(random(3))
		{
			case 0:
			{
				SetPlayerCheckpoint(playerid, 1980.3746,-1718.9766,17.0304, 2.0);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Hay di giao theo ban do cham do");
				BanhHienTai[playerid] -= 1;
			}
			case 1:
			{
				SetPlayerCheckpoint(playerid, 2067.6985,-1628.8773,14.2066, 2.0);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Hay di giao theo ban do cham do");
				BanhHienTai[playerid] -= 1;
			}
			case 2:
			{
				SetPlayerCheckpoint(playerid, 2244.5708,-1637.6563,16.2379, 2.0);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Hay di giao theo ban do cham do");
				BanhHienTai[playerid] -= 1;
			}
		}
		batdaugiaobanh[playerid] = 1;
		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_GREY,"Ban chua lay du so luong banh");

	return 1;
}*/
CMD:laybanhdialogg(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 21 && PlayerInfo[playerid][pJob2] != 21) {
		SendClientMessageEx(playerid,COLOR_GREY,"Ban khong phai la Pizza Boy!");
		return 1;
	}
	else if(GetPlayerSkin(playerid) != 155) {
	    SendClientMessageEx(playerid,COLOR_GREY,"Ban can phai co trong Pizza Stack uniform!");
		return 1;
	}
	else if(GetPVarType(playerid, "Pizza")) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban da cung cap banh pizza!");
		return 1;
	}
	else if(laybanhchatlenxe[playerid] == 1){
		SendClientMessageEx(playerid, COLOR_GREY,"Ban da lay banh hay chat ra xe va tiep tuc");
		return 1;
	}
	else if(dalayxe[playerid] == 0){
		SendClientMessageEx(playerid, COLOR_GREY,"Ban chua lay xe");
		return 1;
	} 
	if(dalayxetrucker[playerid] == 1)
	{
		truckerdonhang[playerid] = 0;
		SoLanTrucker[playerid] = 0;
		soluonghang[playerid] = 0;
		DestroyVehicle(TruckerOwner[playerid][Player_Vehicle_ID]);
		dalayxetrucker[playerid] = 0;
		DeletePVar(playerid, "camhang");
		TruckerOwner[playerid][Player_Vehicle_ID] = INVALID_VEHICLE_ID;
		TruckerCarGo[TruckerOwner[playerid][Player_Vehicle_ID]] = 0;
		SendClientMessage(playerid, -1, "Ban da tra xe lai cho cong ty");
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 2098.9956,-1800.2728,13.3889))
	{
		if(BanhHienTai[playerid] < SOLUONGBANH)
		{
			laybanhchatlenxe[playerid] = 1;
			SetPlayerAttachedObject(playerid, 0, 1582, 5, 0.219000, 0.000000, 0.145000, -82.599922, 0.000000, 102.000038, 1.000000, 1.000000, 1.000000, 0, 0);
			ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
			SetPVarInt(playerid, "DaLayBanh", 1);
			SendClientMessageEx(playerid, -1, "~Pizza~ Hay chat banh len phuong tien cua ban de di giao ({FF3333}Y{FFFFFF})");
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban da lay du so luong banh");
			return 1;
		}
	}
	return 1;
}

/*CMD:laybanh(playerid, params[]) {
	return cmd_getpizza(playerid, params);
}

CMD:getpizza(playerid, params[]) {
	if(PlayerInfo[playerid][pJob] != 21 && PlayerInfo[playerid][pJob2] != 21) {
		SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong phai la Pizza Boy!");
	}
    else if(!IsAPizzaCar(GetPlayerVehicleID(playerid))) {
	    SendClientMessageEx(playerid,COLOR_GREY,"   Ban phai mac trang phuc Pizza Boy theo dung yeu cau cua tiem Pizza Stack!");
	}
	else if(GetPlayerSkin(playerid) != 155) {
	    SendClientMessageEx(playerid,COLOR_GREY,"   Ban can phai co trong Pizza Stack uniform!");
	}
	else if(GetPVarType(playerid, "Pizza")) {
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban da cung cap banh pizza!");
	}
	else if(!IsPlayerInRangeOfPoint(playerid, 3.0, 2096.1035,-1795.0962,13.3889)) {
		SendClientMessageEx(playerid,COLOR_GREY,"   Ban dang khong o Pizza Stack pickup!");
	}
	else {

		new rand = random(MAX_HOUSES - 1);
		while(!(HouseInfo[rand][hOwned])) {
			if(++rand >= MAX_HOUSES) {
				rand = 1;
			}
		}

		new
			iDist = floatround(GetPlayerDistanceFromPoint(playerid, HouseInfo[rand][hExteriorX], HouseInfo[rand][hExteriorY], HouseInfo[rand][hExteriorZ])),
			szMessage[86];

		SetPVarInt(playerid, "tpPizzaTimer", iDist / 80);
		SetPVarInt(playerid, "pizzaTotal", iDist / 10);
		SetPVarInt(playerid, "pizzaTimer", iDist / 10);
		SetPVarInt(playerid, "Pizza", rand);

		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPPIZZARUNTIMER);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_PIZZATIMER);

		PlayerInfo[playerid][pServiceTime] = gettime()+7;
		format(szMessage, sizeof(szMessage), "Ban cung cap pizza cho %s. Ban co %d giay de cung cap no!", StripUnderscore(HouseInfo[rand][hOwnerName]), iDist / 10);
		SendClientMessageEx(playerid, COLOR_WHITE, szMessage);

		SetPlayerCheckpoint(playerid, HouseInfo[rand][hExteriorX], HouseInfo[rand][hExteriorY], HouseInfo[rand][hExteriorZ], 5);
	}
	return 1;
}*/

CMD:setrentable(playerid, params[])
{
	if(Homes[playerid] > 0)
	{
		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && ((IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hExtVW] && GetPlayerInterior(playerid) == HouseInfo[i][hExtIW]) ||
			(IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])))
			{
				if(!HouseInfo[i][hRentable])
				{
					HouseInfo[i][hRentable] = 1;
					ReloadHouseText(i);
					return SendClientMessageEx(playerid, COLOR_WHITE, "Ngoi nha nay hien tai co the thue.");
				}
				else
				{
					HouseInfo[i][hRentable] = 0;
					ReloadHouseText(i);
					return SendClientMessageEx(playerid, COLOR_WHITE, "Ngoi nha nay khong the thue." );
				}
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o gan nha so huu.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:setrent(playerid, params[])
{
	new string[128], fee;
	if(Homes[playerid] > 0)
	{
		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && ((IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hExtVW] && GetPlayerInterior(playerid) == HouseInfo[i][hExtIW]) ||
			(IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])))
			{
				if(sscanf(params, "d", fee)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /setrent [Tien phi]");
				if(!(1 <= fee <= 10000)) return SendClientMessageEx(playerid, COLOR_WHITE, "Phi thue nha phai lon hon $1 va nho hon $10,000.");
				else
				{
					HouseInfo[i][hRentFee] = fee;
					format(string, sizeof(string), "Ban da thiet lap phi thue nha thanh $%s.", number_format(HouseInfo[i][hRentFee]));
					SendClientMessageEx(playerid, COLOR_WHITE, string);

					ReloadHouseText(i);
					return 1;
				}
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o nha ban so huu");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:evict(playerid, params[])
{
	new string[128], giveplayerid;
	if(Homes[playerid] > 0)
	{
		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && ((IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hExtVW] && GetPlayerInterior(playerid) == HouseInfo[i][hExtIW]) ||
			(IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])))
			{
				if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /evict [player]");
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the duoi chinh minh.");
					else if(PlayerInfo[giveplayerid][pRenting] == i)
					{
						format(string, sizeof(string), "%s da duoi ban ra khoi nha cua ho.", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_WHITE, string);

						format(string, sizeof(string), "Ban da duoi %s ra khoi nha.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_WHITE, string);

						PlayerInfo[giveplayerid][pRenting] = INVALID_HOUSE_ID;
						return 1;
					}
					else return SendClientMessageEx(playerid, COLOR_WHITE, "Nguoi do khong thue nha cua ban.");
				}
				else return SendClientMessageEx(playerid, COLOR_GRAD2, "Nguoi choi khong hop le.");
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o nha ban so huu");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:evictall(playerid, params[])
{
	if(Homes[playerid] > 0)
	{
		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && ((IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hExtVW] && GetPlayerInterior(playerid) == HouseInfo[i][hExtIW]) ||
			(IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])))
			{
				new giveplayerid, string[56];
				foreach(new p: Player)
				{
					if(PlayerInfo[p][pRenting] == i)
					{
						format(string, sizeof(string), "%s da duoi ban ra khoi nha cua ban.", GetPlayerNameEx(playerid));
						SendClientMessageEx(p, COLOR_WHITE, string);
						PlayerInfo[p][pRenting] = INVALID_HOUSE_ID;
						++giveplayerid;
					}
				}
				format(string, sizeof(string), "%d da bi duoi ra khoi ngoi nha cua ban", giveplayerid);
				return SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o nha ban so huu");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:khoanha(playerid, params[]) {
	return cmd_lockhouse(playerid, params);
}

CMD:lockhouse(playerid, params[])
{
	if(Homes[playerid] > 0)
	{
		for(new i; i < MAX_HOUSES; i++)
		{
			if(GetPlayerSQLId(playerid) == HouseInfo[i][hOwnerID] && ((IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hExtVW] && GetPlayerInterior(playerid) == HouseInfo[i][hExtIW]) ||
			(IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW])))
			{
				new szMessage[30 + MAX_PLAYER_NAME];

				if(HouseInfo[i][hLock] == 1)
				{
					HouseInfo[i][hLock] = 0;
					format(szMessage, sizeof(szMessage), "* %s has da mo khoa ngoi nha.", GetPlayerNameEx(playerid));
					return ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					HouseInfo[i][hLock] = 1;
					format(szMessage, sizeof(szMessage), "* %s da khoa ngoi nha.", GetPlayerNameEx(playerid));
					return ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong gan nha cua ban.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu nha nao.");
	return 1;
}

CMD:givehit(playerid, params[])
{
	if (IsAHitman(playerid))
	{
		if(PlayerInfo[playerid][pRank] < 5)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Chi co rank 5 tro len moi cho the dua hop dong cho nguoi khac !");
			return 1;
		}

		new string[128], giveplayerid, targetid;
		if(sscanf(params, "uu", giveplayerid, targetid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /givehit [Player] [targetid]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(GoChase[giveplayerid] != INVALID_PLAYER_ID)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Hitman do dang thuc hien mot hop dong khac!");
				return 1;
			}
			if(GotHit[targetid] == 1)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Hitman khac da nhan hop dong nay!");
				return 1;
			}
			if(IsPlayerConnected(targetid))
			{
				if(PlayerInfo[targetid][pHeadValue] == 0)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "   Muc tieu khong co hop dong!");
					return 1;
				}

				format(string, sizeof(string), "* Ban yeu cau %s hop dong giet %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(targetid));
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Hitman %s Ban da nhan hop dong giet %s .[/chapnhan hopdong] de bat dau hop dong.", GetPlayerNameEx(playerid), GetPlayerNameEx(targetid));
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				HitOffer[giveplayerid] = playerid;
				HitToGet[giveplayerid] = targetid;
				return 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi dat hop dong dang an, su dung /xemhopdong de xem!");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Himan khong online!");
			return 1;
		}
	}
	return 1;
}

CMD:givemehit(playerid, params[])
{
	if (IsAHitman(playerid))
	{
		new string[128], targetid;
		if(sscanf(params, "u", targetid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /givemehit [targetid]");

		if(IsPlayerConnected(targetid))
		{
			if(GoChase[playerid] != INVALID_PLAYER_ID)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Ban da nhan mot hop dong khac, hay nhanh tay su ly hop dong de tiep tuc!");
				return 1;
			}
			if(GotHit[targetid] == 1)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Hitman khac da chap nhan hop dong nay!");
				return 1;
			}
			if(PlayerInfo[targetid][pHeadValue] == 0)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Muc tieu khong co hop dong!");
				return 1;
			}
			format(string, sizeof(string), "* Ban da nhan hop dong giet %s. [/chapnhan hopdong] de bat dau hop dong", GetPlayerNameEx(targetid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			HitOffer[playerid] = playerid;
			HitToGet[playerid] = targetid;
			return 1;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi hop dong dang an, su dung /hopdong !");
			return 1;
		}
	}
	return 1;
}

/*CMD:speedo(playerid, params[]) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
		SendClientMessageEx(playerid, COLOR_GREY, "You're not driving a vehicle.");
	}
	else if(!PlayerInfo[playerid][pSpeedo]) {
		SendClientMessageEx(playerid, COLOR_WHITE, "You have enabled your speedometer.");
		PlayerInfo[playerid][pSpeedo] = 1;

		if(!FindTimePoints[playerid] && arr_Engine{GetPlayerVehicleID(playerid)} != 0) {

			new
				szSpeed[42];

			format(szSpeed, sizeof(szSpeed),"~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~%.0f MPH", player_get_speed(playerid));
			GameTextForPlayer(playerid, szSpeed, 1500, 3);
		}
	}
	else {
		SendClientMessageEx(playerid, COLOR_WHITE, "You have disabled your speedometer.");
		PlayerInfo[playerid][pSpeedo] = 0;
		if(!FindTimePoints[playerid] && arr_Engine{GetPlayerVehicleID(playerid)} != 0) GameTextForPlayer(playerid, " ", 1500, 3);
	}
	return 1;
} // old speedometer */

CMD:speedopos(playerid, params[])
{
	if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER && GetPlayerState(playerid) != PLAYER_STATE_PASSENGER )
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong lai chiec xe nao ca.");
	}
	if (PlayerInfo[playerid][pSpeedo])
	{
		new Float: TPosX[2], Float:TPosY[2];
		if(!sscanf(params, "ff", TPosX[0], TPosY[0]))
		{
			if(TPosX[0] < 0 || TPosX[0] > 640)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /speedopos (optional) [X] [Y]");
				return SendClientMessageEx(playerid, COLOR_GREY, "X phai tren 0 va duoi 640");
			}
			if(TPosY[0] < 0 || TPosY[0] > 640)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /speedopos (optional) [X] [Y]");
				return SendClientMessageEx(playerid, COLOR_GREY, "Y phai tren 0 va duoi 480");
			}
			TPosX[1] = TPosX[0] + 60.0;
			TPosY[1] = TPosY[0] + 17.0;
		}
		else
		{
			switch(GetPVarInt(playerid, "SpeedoPos"))
			{
				case 0:
				{
					TPosX[0] = 495.0;
					TPosY[0] = 20.0;
					TPosX[1] = 555.0;
					TPosY[1] = 37.0;
					SetPVarInt(playerid, "SpeedoPos", 1);
				}
				case 1:
				{
					TPosX[0] = 495.0;
					TPosY[0] = 367.0;
					TPosX[1] = 555.0;
					TPosY[1] = 384.0;
					SetPVarInt(playerid, "SpeedoPos", 2);
				}
				case 2:
				{
					TPosX[0] = 495.0;
					TPosY[0] = 133.0;
					TPosX[1] = 555.0;
					TPosY[1] = 150.0;
					SetPVarInt(playerid, "SpeedoPos", 0);
				}
			}
		}

		PlayerTextDrawDestroy(playerid, _vhudTextFuel[playerid]);
		_vhudTextFuel[playerid] = CreatePlayerTextDraw(playerid, TPosX[0], TPosY[0], "~b~Xang: N/A");
		PlayerTextDrawBackgroundColor(playerid, _vhudTextFuel[playerid], 255);
		PlayerTextDrawFont(playerid, _vhudTextFuel[playerid], 1);
		PlayerTextDrawLetterSize(playerid, _vhudTextFuel[playerid], 0.270000, 2.000000);
		PlayerTextDrawColor(playerid, _vhudTextFuel[playerid], -1);
		PlayerTextDrawSetOutline(playerid, _vhudTextFuel[playerid], 1);
		PlayerTextDrawSetProportional(playerid, _vhudTextFuel[playerid], 1);

		PlayerTextDrawDestroy(playerid, _vhudTextSpeed[playerid]);
		_vhudTextSpeed[playerid] = CreatePlayerTextDraw(playerid, TPosX[1], TPosY[0], "~b~MPH: N/A");
		PlayerTextDrawBackgroundColor(playerid, _vhudTextSpeed[playerid], 255);
		PlayerTextDrawFont(playerid, _vhudTextSpeed[playerid], 1);
		PlayerTextDrawLetterSize(playerid, _vhudTextSpeed[playerid], 0.270000, 2.000000);
		PlayerTextDrawColor(playerid, _vhudTextSpeed[playerid], -1);
		PlayerTextDrawSetOutline(playerid, _vhudTextSpeed[playerid], 1);
		PlayerTextDrawSetProportional(playerid, _vhudTextSpeed[playerid], 1);

		PlayerTextDrawDestroy(playerid, _vhudSeatBelt[playerid]);
		_vhudSeatBelt[playerid] = CreatePlayerTextDraw(playerid, TPosX[1], TPosY[1], "~b~SB: ~r~OFF");
		PlayerTextDrawBackgroundColor(playerid, _vhudSeatBelt[playerid], 255);
		PlayerTextDrawFont(playerid, _vhudSeatBelt[playerid], 1);
		PlayerTextDrawLetterSize(playerid, _vhudSeatBelt[playerid], 0.270000, 2.000000);
		PlayerTextDrawColor(playerid, _vhudSeatBelt[playerid], -1);
		PlayerTextDrawSetOutline(playerid, _vhudSeatBelt[playerid], 1);
		PlayerTextDrawSetProportional(playerid, _vhudSeatBelt[playerid], 1);

		PlayerTextDrawDestroy(playerid, _vhudLights[playerid]);
		_vhudLights[playerid] = CreatePlayerTextDraw(playerid, TPosX[0], TPosY[1], "~b~Den: ~r~OFF");
		PlayerTextDrawBackgroundColor(playerid, _vhudLights[playerid], 255);
		PlayerTextDrawFont(playerid, _vhudLights[playerid], 1);
		PlayerTextDrawLetterSize(playerid, _vhudLights[playerid], 0.270000, 2.000000);
		PlayerTextDrawColor(playerid, _vhudLights[playerid], -1);
		PlayerTextDrawSetOutline(playerid, _vhudLights[playerid], 1);
		PlayerTextDrawSetProportional(playerid, _vhudLights[playerid], 1);

		ShowVehicleHUDForPlayer(playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da di chuyen vi tri dong ho toc do.");

	}
	return 1;
}

/*CMD:speedo(playerid, params[])
{
	if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER && GetPlayerState(playerid) != PLAYER_STATE_PASSENGER )
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o tren xe.");
	}
	else if (!PlayerInfo[playerid][pSpeedo])
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da bat dong ho toc do.");
		PlayerInfo[playerid][pSpeedo] = 1;
		ShowVehicleHUDForPlayer(playerid);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da vo hieu hoa dong ho toc do.");
		PlayerInfo[playerid][pSpeedo] = 0;
		HideVehicleHUDForPlayer(playerid);
	}

	return 1;
} // new speedometer*/

CMD:togglehunger(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] > 1)
		return 1;

	if (_hungerTextVisible[playerid] == 1)
	{
		PlayerTextDrawHide(playerid, _hungerText[playerid]);
		_hungerTextVisible[playerid] = 0;
	}
	else
	{
		PlayerTextDrawShow(playerid, _hungerText[playerid]);
		_hungerTextVisible[playerid] = 1;
	}

	SendClientMessage(playerid, COLOR_WHITE, "Ban da bat thanh trang thai co the (se co hieu luc trong lan dang nhap tiep theo).");

	return 1;
}

CMD:pc(playerid, params[])
{
	if(PlayerInfo[playerid][pSurveillance] > 0)
	{
		if(GetPVarInt(playerid, "cameraactive") == 1)
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "Cho cho may anh khac het han.");
			return 1;
		}

		new string[128];
		PlayerInfo[playerid][pSurveillance]--;
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban dat may anh cua ban, di tron va su dung /sc. Ping het han trong vong 2 phut.");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		SetPVarInt(playerid, "cameraactive", 1);
		DestroyDynamic3DTextLabel(Camera3D[playerid]);
		Camera3D[playerid] = CreateDynamic3DTextLabel("** A small camera. **",0x008080FF,X,Y,Z,4.0,.worldid = GetPlayerVirtualWorld(playerid));
		SetPVarFloat(playerid, "cameraX", X);
		SetPVarFloat(playerid, "cameraY", Y);
		SetPVarFloat(playerid, "cameraZ", Z);
		SetPVarInt(playerid, "cameravw", GetPlayerVirtualWorld(playerid));
		SetPVarInt(playerid, "cameraint", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "cameraexpire", SetTimerEx("cameraexpire", 120000, 0, "d", playerid));
		format(string, sizeof(string), "* %s dat mot cai gi do tren mat dat.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co camera giam sat!");
	}
	return 1;
}

CMD:sc(playerid, params[])
{
	if(GetPVarInt(playerid, "cameraactive") == 1)
	{
		new string[128];
		if(GetPVarInt(playerid, "camerasc") == 1)
		{
			SetCameraBehindPlayer(playerid); //view cam off
			SetPlayerPos(playerid, GetPVarFloat(playerid, "cameraX2"), GetPVarFloat(playerid, "cameraY2"), GetPVarFloat(playerid, "cameraZ2"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "cameravw2"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "cameraint2"));
			TogglePlayerControllable(playerid,1);
			DeletePVar(playerid, "camerasc");
			KillTimer(GetPVarInt(playerid, "cameraexpire"));
		}
		else
		{
			format(string, sizeof(string), "* %s nhin vao Camera ngam canh vat xung quanh.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			format(string, sizeof(string), "Camera nay se het han sau 2 phut. (( %s ))", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPVarFloat(playerid, "cameraX2", X);
			SetPVarFloat(playerid, "cameraY2", Y);
			SetPVarFloat(playerid, "cameraZ2", Z);
			SetPVarInt(playerid, "cameravw2", GetPlayerVirtualWorld(playerid));
			SetPVarInt(playerid, "cameraint2", GetPlayerInterior(playerid));

			TogglePlayerControllable(playerid,0);
			SetPlayerPos(playerid, GetPVarFloat(playerid, "cameraX"), GetPVarFloat(playerid, "cameraY"), GetPVarFloat(playerid, "cameraZ") - 30.0);
			SetPlayerCameraPos(playerid, GetPVarFloat(playerid, "cameraX"), GetPVarFloat(playerid, "cameraY"), GetPVarFloat(playerid, "cameraZ") + 20.0); //viewcam on
			SetPlayerCameraLookAt(playerid, GetPVarFloat(playerid, "cameraX"), GetPVarFloat(playerid, "cameraY"), GetPVarFloat(playerid, "cameraZ"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "cameravw"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "cameraint"));
			SetPVarInt(playerid, "camerasc", 1);
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Camera cua ban khong hieu luc!");
	}
	return 1;
}

CMD:dc(playerid, params[])
{
	if(GetPVarInt(playerid, "cameraactive") == 1)
	{
		if(GetPVarInt(playerid, "camerasc") == 1)
		{
			SetCameraBehindPlayer(playerid);
			SetPlayerPos(playerid, GetPVarFloat(playerid, "cameraX2"), GetPVarFloat(playerid, "cameraY2"), GetPVarFloat(playerid, "cameraZ2"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "cameravw2"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "cameraint2"));
			TogglePlayerControllable(playerid,1);
		}

		DestroyDynamic3DTextLabel(Camera3D[playerid]);
		SendClientMessageEx(playerid, COLOR_GRAD1, "Camera da huy!");
		KillTimer(GetPVarInt(playerid, "cameraexpire"));
		DeletePVar(playerid, "cameraexpire");
		DeletePVar(playerid, "cameraactive");
		DeletePVar(playerid, "camerasc");
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Chang co gi say ra!");
	}
	return 1;
}

CMD:rccam(playerid, params[])
{
	if(PlayerInfo[playerid][pRccam] > 0)
	{
		new string[128];
		if(GetPVarInt(playerid, "rccam") == 0)
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "Ban phai di bo de dat RCCam!");
				return 1;
			}
			PlayerInfo[playerid][pRccam]--;
			SetPVarInt(playerid, "rccam", 1);
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPVarFloat(playerid, "rcX", X);
			SetPVarFloat(playerid, "rcY", Y);
			SetPVarFloat(playerid, "rcZ", Z);
			if(GetPVarInt(playerid, "rcveh") != 0)
			{
				DestroyVehicle(GetPVarInt(playerid, "rcveh"));
			}
			SetPVarInt(playerid, "rcveh", AddStaticVehicle(594, X, Y, Z, 0, 0, 0));
			IsPlayerEntering{playerid} = true;
			PutPlayerInVehicle(playerid, GetPVarInt(playerid, "rcveh"), 0);
			SetPVarInt(playerid, "rccamtimer", SetTimerEx("rccam", 60000, 0, "d", playerid));
			format(string, sizeof(string), "* %s dat mot cai gi do len mat dat.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			DestroyVehicle(GetPVarInt(playerid, "rcveh"));
			SetPlayerPos(playerid, GetPVarFloat(playerid, "rcX"), GetPVarFloat(playerid, "rcY"), GetPVarFloat(playerid, "rcZ"));
			DeletePVar(playerid, "rccam");
			KillTimer(GetPVarInt(playerid, "rccamtimer"));
		}
	}
	else
	{
		if(GetPVarInt(playerid, "rccam") == 1)
		{
			DestroyVehicle(GetPVarInt(playerid, "rcveh"));
			SetPlayerPos(playerid, GetPVarFloat(playerid, "rcX"), GetPVarFloat(playerid, "rcY"), GetPVarFloat(playerid, "rcZ"));
			DeletePVar(playerid, "rccam");
			KillTimer(GetPVarInt(playerid, "rccamtimer"));
			return 1;
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co RC Cam!");
	}
	return 1;
}

CMD:firstaid(playerid, params[])
{
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lam dieu nay khi dang trong su kien Hunger Games!");
	if(GetPVarInt(playerid, "IsInArena") >= 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay khi dang trong arena!");
		return 1;
	}
	if(GetPVarInt(playerid, "Injured") == 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay bay gio.");
		return 1;
	}
	if(PlayerInfo[playerid][pFirstaid] > 0)
	{
		if(GetPVarInt(playerid, "usingfirstaid") == 0)
		{
			new string[128];
			PlayerInfo[playerid][pFirstaid]--;
			SetPVarInt(playerid, "firstaid5", SetTimerEx("firstaid5", 5000, 1, "d", playerid));
			SetPVarInt(playerid, "firstaidexpire", SetTimerEx("firstaidexpire",10*60000, 0, "d", playerid));
			SetPVarInt(playerid, "usingfirstaid", 1);
			format(string, sizeof(string), "* %s dang su dung do so cuu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "Ban dang su dung bo so cuu!");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co bo dung cu so cuu!");
	}
	return 1;
}

CMD:sweep(playerid, params[])
{
	if(PlayerInfo[playerid][pSweep] > 0)
	{
		if(PlayerInfo[playerid][pSweepLeft] > 0)
		{
			new string[128], giveplayerid;
			if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /sweep [player]");

			if(!ProxDetectorS(4.0, playerid, giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "You need to be close to the person.");
			PlayerInfo[playerid][pSweepLeft]--;
			format(string, sizeof(string), "* %s sweeps a large wand around %s's body...", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			if(PlayerInfo[giveplayerid][pBugged] != INVALID_GROUP_ID)
			{
				format(string, sizeof(string), "* A small spark is seen as the bug on %s shorts out.", GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "(bug) %s: *static*", GetPlayerNameEx(giveplayerid));
				SendBugMessage(PlayerInfo[giveplayerid][pBugged], string);
				PlayerInfo[giveplayerid][pBugged] = INVALID_GROUP_ID;
			}
			else
			{
				ProxDetector(30.0, playerid, "Khong co gi say ra.", COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "Sweeper da het pin!");
			PlayerInfo[playerid][pSweep]--;
			PlayerInfo[playerid][pSweepLeft] = 3;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co sweep!");
	}
	return 1;
}

CMD:gps(playerid, params[])
{
	if(PlayerInfo[playerid][pGPS] > 0)
	{
		new string[128];
		if(GetPVarInt(playerid, "gpsonoff") == 0)
		{
			format(string, sizeof(string), "* %s da mo GPS len.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "gpsonoff", 1);
			textdrawscount++;
			GPS[playerid] = TextDrawCreate(95.000000, 319.000000, "Dang tai...");
			TextDrawAlignment(GPS[playerid], 2);
			TextDrawBackgroundColor(GPS[playerid], 255);
			TextDrawFont(GPS[playerid], 2);
			TextDrawLetterSize(GPS[playerid], 0.250000, 1.800000);
			TextDrawColor(GPS[playerid], -1);
			TextDrawSetOutline(GPS[playerid], 1);
			TextDrawSetProportional(GPS[playerid], 1);
			TextDrawShowForPlayer(playerid, GPS[playerid]);
		}
		else
		{
			format(string, sizeof(string), "* %s da tat GPS.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			DeletePVar(playerid, "gpsonoff");
			TextDrawDestroy(GPS[playerid]);
			textdrawscount--;
		}
	}

	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co GPS!");
	}
	return 1;
}

CMD:ww(playerid, params[])
{
	return cmd_wristwatch(playerid, params);
}

CMD:dongho(playerid, params[]) {
	return cmd_wristwatch(playerid, params);
}

CMD:wristwatch(playerid, params[])
{
	if(PlayerInfo[playerid][pWristwatch] > 0)
	{
		new string[128];
		if(GetPVarInt(playerid, "wristwatchonoff") == 0)
		{
			SetPVarInt(playerid, "wristwatchonoff", 1);
			TextDrawShowForPlayer(playerid, WristWatch);
			format(string, sizeof(string), "* %s da lay dong ho deo len tay cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			KillTimer(GetPVarInt(playerid, "wristwatchtimer"));
			TextDrawHideForPlayer(playerid, WristWatch);
			DeletePVar(playerid, "wristwatchonoff");
			format(string, sizeof(string), "* %s da cat dong ho deo tay cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co dong ho deo tay!");
	}
	return 1;
}

CMD:nghihinh(playerid, params[]) {
	return cmd_receiver(playerid, params);
}

CMD:receiver(playerid, params[])
{
	if(PlayerInfo[playerid][pReceiver] > 0)
	{
		if(!GetPVarType(playerid, "pReceiverOn"))
		{
			SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da bat may thu cua ban.");
			SetPVarInt(playerid, "pReceiverOn", 1);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da tat may thu cua ban.");
			DeletePVar(playerid, "pReceiverOn");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co may thu.");
	}
	return 1;
}

CMD:smslog(playerid, params[])
{
	if(PlayerInfo[playerid][pSmslog] > 0) GetSMSLog(playerid);
	else return SendClientMessageEx(playerid, COLOR_YELLOW, "    Ban khong co tin nhan SMS nao!");
	return 1;
}

CMD:chetao(playerid, params[])
{
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lam dieu nay khi dang them gia su kien Hunger Games!");
	if (PlayerInfo[playerid][pJob] != 18 && PlayerInfo[playerid][pJob2] != 18)
	{
		SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong phai la Tho thu cong!");
		return 1;
	}
	if (PlayerInfo[playerid][pJailTime] > 0)
	{
		SendClientMessageEx(playerid,COLOR_GREY,"   Ban khong the lam dieu nay khi dang trong tu!");
		return 1;
	}
	new string[128];
	if (GetPVarInt(playerid, "ArmsTimer") > 0)
	{
		format(string, sizeof(string), "   Ban phai doi %d giay truoc khi che tao lai.", GetPVarInt(playerid, "ArmsTimer"));
		SendClientMessageEx(playerid,COLOR_GREY,string);
		return 1;
	}
	if(PlayerInfo[playerid][pHospital] > 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the che tao khi dang o benh vien.");
		return 1;
	}
	new giveplayerid, choice[32], weapon, price;
	if(sscanf(params, "us[32]", giveplayerid, choice))
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
		SendClientMessageEx(playerid, COLOR_YELLOW, "<< Hang thu cong co san >>");
		SendClientMessageEx(playerid, COLOR_GRAD1, "screwdriver(1000)	 smslog(2000)");
		SendClientMessageEx(playerid, COLOR_GRAD1, "wristwatch(500)	 surveillance(8000)");
		SendClientMessageEx(playerid, COLOR_GRAD1, "tire(250)	         lock(500)");
		SendClientMessageEx(playerid, COLOR_GRAD1, "firstaid(1000)	 camera(250)");
		SendClientMessageEx(playerid, COLOR_GRAD1, "rccam(8000)	     receiver(5000)");
		SendClientMessageEx(playerid, COLOR_GRAD1, "gps(1000)          bugsweep(10000)");
		//SendClientMessageEx(playerid, COLOR_GRAD1, "parachute(50)          bag(6000)");
		SendClientMessageEx(playerid, COLOR_GRAD1, "parachute(50)        mailbox(15000)");
		SendClientMessageEx(playerid, COLOR_GRAD1, "metaldetector(12500) syringe(500)");
		SendClientMessageEx(playerid, COLOR_GRAD1, "closet(50000)");
		SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /craft [Player] [craftname]");
		return 1;
	}
	if(HungerPlayerInfo[giveplayerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi nay khong the nhan bat cu thu gi vao luc nay.");
	if (IsPlayerConnected(giveplayerid))
	{
		if(isnull(choice))
		{
			SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
			SendClientMessageEx(playerid, COLOR_YELLOW, "<< Hang thu cong co san >>");
			SendClientMessageEx(playerid, COLOR_GRAD1, "screwdriver(1000)	 smslog(2000)");
			SendClientMessageEx(playerid, COLOR_GRAD1, "wristwatch(500)	 surveillance(8000)");
			SendClientMessageEx(playerid, COLOR_GRAD1, "tire(250)	         lock(500)");
			SendClientMessageEx(playerid, COLOR_GRAD1, "firstaid(1000)	 camera(25000)");
			SendClientMessageEx(playerid, COLOR_GRAD1, "rccam(8000)	     receiver(5000)");
			SendClientMessageEx(playerid, COLOR_GRAD1, "gps(1000)          bugsweep(10000)");
			SendClientMessageEx(playerid, COLOR_GRAD1, "parachute(50)          mailbox(15000)");
			SendClientMessageEx(playerid, COLOR_GRAD1, "metaldetector(12500) syringe(500)");
			SendClientMessageEx(playerid, COLOR_GRAD1, "closet(50000)");
			SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /craft [Player] [craftname]");
			return 1;
		}
		/*if(strcmp(choice,"bag",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 6000)
			{
				price = 6000;
				weapon = 14;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}*/
		if(strcmp(choice, "screwdriver", true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 1000)
			{
				price = 1000;
				weapon = 1;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
		else if(strcmp(choice, "smslog", true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 2000)
			{
				price = 2000;
				weapon = 2;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
		else if(strcmp(choice, "wristwatch", true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 500)
			{
				price = 500;
				weapon = 3;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
		else if(strcmp(choice, "surveillance", true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 8000)
			{
				price = 8000;
				weapon = 4;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
		else if(strcmp(choice, "tire", true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 250)
			{
				price = 250;
				weapon = 5;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
		else if(strcmp(choice, "lock", true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 500)
			{
				price = 500;
				weapon = 6;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
		else if(strcmp(choice, "firstaid", true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 1000)
			{
				price = 1000;
				weapon = 7;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
		else if(strcmp(choice,"camera",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 250)
			{
				price = 25000;
				weapon = 8;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
		else if(strcmp(choice,"rccam",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 8000)
			{
				price = 8000;
				weapon = 9;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
		else if(strcmp(choice,"receiver",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 5000)
			{
				price = 5000;
				weapon = 10;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
		else if(strcmp(choice,"gps",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 1000)
			{
				price = 1000;
				weapon = 11;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}

		else if(strcmp(choice,"bugsweep",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 10000)
			{
				price = 10000;
				weapon = 12;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}

		else if(strcmp(choice,"parachute",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 50)
			{
				price = 50;
				weapon = 13;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}

        else if(strcmp(choice,"metaldetector",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 12500)
			{
				price = 12500;
				weapon = 14;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}

		else if(strcmp(choice,"mailbox",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 15000)
			{
				price = 15000;
				weapon = 15;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
        else if(strcmp(choice,"syringe",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 500)
			{
				price = 500;
				weapon = 16;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
		else if(strcmp(choice,"closet",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 50000)
			{
				price = 50000;
				weapon = 17;
			}
			else
			{
				SendClientMessageEx(playerid,COLOR_GREY,"   Khong du vat lieu!");
				return 1;
			}
		}
		else { SendClientMessageEx(playerid,COLOR_GREY,"   Ten Craft khong hop le!"); return 1; }
		if (ProxDetectorS(5.0, playerid, giveplayerid))
		{
			if(weapon == 17)
			{
				if(PlayerInfo[giveplayerid][pPhousekey] == INVALID_HOUSE_ID && PlayerInfo[giveplayerid][pPhousekey2] == INVALID_HOUSE_ID)
				{
					if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu mot ngoi nha!");
					else
					{
						SendClientMessageEx(playerid, COLOR_GREY, "Ho khong so huu ngoi nha!");
						SendClientMessageEx(giveplayerid, COLOR_GREY, "Ban khong so hu ngoi nha!");
					}
				}
			}
			if(giveplayerid == playerid)
			{
				if(weapon != 16 && weapon != 17)
				{
					PlayerInfo[playerid][pMats] -= price;
				}

				switch(weapon)
				{
				case 1:
					{
						PlayerInfo[playerid][pScrewdriver]++;
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/chetaovukhi");
					}
				case 2:
					{
						PlayerInfo[playerid][pSmslog]++;
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/smslog");
					}
				case 3:
					{
						PlayerInfo[playerid][pWristwatch]++;
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/dongho");
					}
				case 4:
					{
						PlayerInfo[playerid][pSurveillance]++;
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/(p)lace(c)amera /(s)ee(c)amera /(d)estroy(c)amera");
					}
				case 5:
					{
						PlayerInfo[playerid][pTire]++;
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/suaxe");
					}
				case 6:
					{
						PlayerInfo[playerid][pLock]=1;
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/lock");
					}
				case 7:
					{
						PlayerInfo[playerid][pFirstaid]++;
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/firstaid");
					}
				case 8:
					{
						GivePlayerValidWeapon(playerid, 43, 50);
					}
				case 9:
					{
						PlayerInfo[playerid][pRccam]++;
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/rccam");
					}
				case 10:
					{
						PlayerInfo[playerid][pReceiver]++;
						SetPVarInt(playerid, "pReceiverMLeft", 4);
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "You will receive the next four department radio messages.");
					}
				case 11:
					{
						PlayerInfo[playerid][pGPS]++;
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/gps");
					}
				case 12:
					{
						PlayerInfo[playerid][pSweep]++;
						PlayerInfo[playerid][pSweepLeft] = 3;
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/sweep");
					}
				case 13:
					{
						GivePlayerValidWeapon(playerid, 46, 2);
					}
				case 14:
					{
						if(PlayerInfo[playerid][pTreasureSkill] >=0 && PlayerInfo[playerid][pTreasureSkill] <= 24) PlayerInfo[playerid][pMetalDetector] += 25;
						else if(PlayerInfo[playerid][pTreasureSkill] >=25 && PlayerInfo[playerid][pTreasureSkill] <= 149) PlayerInfo[playerid][pMetalDetector] += 50;
						else if(PlayerInfo[playerid][pTreasureSkill] >=150 && PlayerInfo[playerid][pTreasureSkill] <= 299) PlayerInfo[playerid][pMetalDetector] += 75;
						else if(PlayerInfo[playerid][pTreasureSkill] >=300 && PlayerInfo[playerid][pTreasureSkill] <= 599) PlayerInfo[playerid][pMetalDetector] += 100;
						else if(PlayerInfo[playerid][pTreasureSkill] >=600) PlayerInfo[playerid][pMetalDetector] += 125;
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/search");
					}
				case 15:
					{
						PlayerInfo[playerid][pMailbox]++;
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "Su dung /placemailbox gui thu den noi muon.");
					}
				case 16:
					{
						if(PlayerInfo[playerid][pSyringes] < 3)
						{
							PlayerInfo[playerid][pMats] -= price;
							PlayerInfo[playerid][pSyringes]++;
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/useheroin");
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the giu them ong tiem duoc nua.");
						}
					}
				case 17:
					{
						if(GetPlayerVirtualWorld(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey]][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey]][hIntIW])
						{
							if(IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hInteriorZ]))
							{
								GetPlayerPos(playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetZ]);
								if(IsValidDynamic3DTextLabel(HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetTextID])) DestroyDynamic3DTextLabel(Text3D:HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetTextID]);
								HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetTextID] = CreateDynamic3DTextLabel("Tu quan ao\n/closet de su dung", 0xFFFFFF88, HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetX], HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetY], HouseInfo[PlayerInfo[playerid][pPhousekey]][hClosetZ]+0.5,10.0, .testlos = 1, .worldid = HouseInfo[PlayerInfo[playerid][pPhousekey]][hIntVW], .interiorid = HouseInfo[PlayerInfo[playerid][pPhousekey]][hIntIW], .streamdistance = 10.0);
								SaveHouse(PlayerInfo[playerid][pPhousekey]);
								PlayerInfo[playerid][pMats] -= price;
								SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/closet(add/remove)");
							}
							else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong nha cua ban!");
						}
						else if(GetPlayerVirtualWorld(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey2]][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey2]][hIntIW])
						{
							if(IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorX], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorY], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hInteriorZ]))
							{
								GetPlayerPos(playerid, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetX], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetY], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetZ]);
								if(IsValidDynamic3DTextLabel(HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetTextID])) DestroyDynamic3DTextLabel(Text3D:HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetTextID]);
								HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetTextID] = CreateDynamic3DTextLabel("Tu quan ao\n/closet de su dung", 0xFFFFFF88, HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetX], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetY], HouseInfo[PlayerInfo[playerid][pPhousekey2]][hClosetZ]+0.5,10.0, .testlos = 1, .worldid = HouseInfo[PlayerInfo[playerid][pPhousekey2]][hIntVW], .interiorid = HouseInfo[PlayerInfo[playerid][pPhousekey2]][hIntIW], .streamdistance = 10.0);
								SaveHouse(PlayerInfo[playerid][pPhousekey2]);
								PlayerInfo[playerid][pMats] -= price;
								SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "/closet(add/remove)");
								printf("Check 5");
							}
							else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o ben trong ngoi nha!");
						}
						else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o ben trong ngoi nha!");
					}
				}
				format(string, sizeof(string), "   Ban da tao cho minh mot %s.", choice);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				switch( PlayerInfo[playerid][pSex] )
				{
					case 1: format(string, sizeof(string), "* %s tao ra mot vat pham tu vat lieu trong tui cua ho.", GetPlayerNameEx(playerid));
					case 2: format(string, sizeof(string), "* %s tao ra mot vat pham tu vat lieu trong tui cua ho.", GetPlayerNameEx(playerid));
				}
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			format(string, sizeof(string), "* Ban muon ban %s de mua a %s.", GetPlayerNameEx(giveplayerid), choice);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Tho thu cong %s muon ban cho ban  %s, (su dung /chapnhan craft) de mua.", GetPlayerNameEx(playerid), choice);
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			CraftOffer[giveplayerid] = playerid;
			CraftId[giveplayerid] = weapon;
			CraftMats[giveplayerid] = price;
			format(CraftName[giveplayerid], 50, "%s", choice);
			if(PlayerInfo[playerid][pAdmin] < 3)
			{
				SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
			}
			return 1;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong o gan ban.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
		return 1;
	}
}

CMD:getpot(playerid, params[])
{
	new string[128], amount;
	if(sscanf(params, "d", amount)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /getpot [amount]");

	new tel;
	new price;
	new level = PlayerInfo[playerid][pDrugsSkill];
	if(level >= 0 && level <= 50)
	{ tel = 100; if(amount < 1 || amount > 10) { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lay tren 10 hay kiem tra lai ki nang cong viec cua ban!"); return 1; } }
	else if(level >= 51 && level <= 100)
	{ tel = 100; if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lay tren 20 hay kiem tra lai ki nang cong viec cua ban!"); return 1; } }
	else if(level >= 101 && level <= 200)
	{ tel = 100; if(amount < 1 || amount > 30) { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lay tren 30 hay kiem tra lai ki nang cong viec cua ban!"); return 1; } }
	else if(level >= 201 && level <= 400)
	{ tel = 100; if(amount < 1 || amount > 40) { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lay tren 40 hay kiem tra lai ki nang cong viec cua ban!"); return 1; } }
	else if(level >= 401)
	{ tel = 100; if(amount < 1 || amount > 50) { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lay tren 50 hay kiem tra lai ki nang cong viec cua ban!"); return 1; } }
	new mypoint = -1;
	for (new i=0; i<MAX_POINTS; i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 3)
		{
			mypoint = i;
		}
	}
	if (mypoint == -1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong Drug House!");
		return 1;
	}
	if ( PlayerInfo[playerid][pPot] >= 25)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban da dat gioi han toi da 25 gram Pot trong nguoi.");
		return 1;
	}
	if (PlayerInfo[playerid][pJob] == 4 || PlayerInfo[playerid][pJob2] == 4)
	{
		price = amount * tel;
		if(Points[mypoint][Stock] < amount && PlayerInfo[playerid][pDonateRank] < 1) return SendClientMessageEx(playerid, COLOR_GREY, "   Drug House khong co nhieu pot!");
		if(GetPlayerCash(playerid) > price)
		{
			format(string, sizeof(string), "* Ban da lay %d grams Pot voi gia $%d.", amount, price);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, -price);
			PlayerInfo[playerid][pPot] += amount;
			if(PlayerInfo[playerid][pDonateRank] < 1)
			{
				Points[mypoint][Stock] -= amount;
				format(string, sizeof(string), " POT/OPIUM CO SAN: %d/1000.", Points[mypoint][Stock]);
				UpdateDynamic3DTextLabelText(Points[mypoint][TextLabel], COLOR_YELLOW, string);
			}
			for(new i = 0; i < sizeof(FamilyInfo); i++)
			{
				if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
				{
					FamilyInfo[i][FamilyBank] = FamilyInfo[i][FamilyBank]+price/2;
				}
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lay thuoc!");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "You're not a Nguoi ban thuoc phien.");
		return 1;
	}
	return 1;
}

CMD:getcrack(playerid, params[])
{
	new string[128], amount;
	if(sscanf(params, "d", amount)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /getcrack [amount]");

	new tel;
	new price;
	new level = PlayerInfo[playerid][pDrugsSkill];
	if(level >= 0 && level <= 50)
	{
		tel = 500;
		if(amount < 1 || amount > 5)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lay tren 5 gram Crack, hay kiem tra lai ki nang cong viec cua ban!");
			return 1;
		}
	}
	else if(level >= 51 && level <= 100)
	{ tel = 500; if(amount < 1 || amount > 5) { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lay tren 10 hay kiem tra lai ki nang cong viec cua ban!"); return 1; } }
	else if(level >= 101 && level <= 200)
	{ tel = 500; if(amount < 1 || amount > 15) { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lay tren 15 hay kiem tra lai ki nang cong viec cua ban!"); return 1; } }
	else if(level >= 201 && level <= 400)
	{ tel = 500; if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lay tren 20 hay kiem tra lai ki nang cong viec cua ban!"); return 1; } }
	else if(level >= 401)
	{ tel = 500; if(amount < 1 || amount > 25) { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lay tren 25 hay kiem tra lai ki nang cong viec cua ban!"); return 1; } }
	new mypoint = -1;
	for (new i=0; i<MAX_POINTS; i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 4)
		{
			mypoint = i;
		}
	}
	if (mypoint == -1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, " Ban khong o diem lay Crack!");
		return 1;
	}
	if ( PlayerInfo[playerid][pCrack] >= 25)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, " Ban da dat gioi han toi da 25 gram Crack trong nguoi");
		return 1;
	}
	if (PlayerInfo[playerid][pJob] == 4 || PlayerInfo[playerid][pJob2] == 4)
	{
		price = amount * tel;
		if(Points[mypoint][Stock] < amount && PlayerInfo[playerid][pDonateRank] < 1) return SendClientMessageEx(playerid, COLOR_GREY, "   Crack da lay het, khong the lay them!");
		if(GetPlayerCash(playerid) > price)
		{
			format(string, sizeof(string), "* Ban da lay %d grams Crack voi gia $%d.", amount, price);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, -price);
			PlayerInfo[playerid][pCrack] += amount;
			if(PlayerInfo[playerid][pDonateRank] < 1) Points[mypoint][Stock] = Points[mypoint][Stock]-amount;
			format(string, sizeof(string), " CRACK CO SAN: %d/500.", Points[mypoint][Stock]);
			UpdateDynamic3DTextLabelText(Points[mypoint][TextLabel], COLOR_YELLOW, string);
			for(new i = 0; i < sizeof(FamilyInfo); i++)
			{
				if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
				{
					FamilyInfo[i][FamilyBank] = FamilyInfo[i][FamilyBank]+price/2;
				}
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lay thuoc!");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai Nguoi ban thuoc phien.");
		return 1;
	}
	return 1;
}

CMD:holster(playerid, params[])
{
	new string[128];
    if(!GetPVarType(playerid, "WeaponsHolstered"))
    {
        SetPlayerArmedWeapon(playerid, 0);
        SetPVarInt(playerid, "WeaponsHolstered", 1);
    	format(string, sizeof(string), "* %s holsters their weapon.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
    }
	else
	{
	    if(GetPVarInt(playerid, "TackleMode") == 0)
		{
	        DeletePVar(playerid, "WeaponsHolstered");
	    	format(string, sizeof(string), "* %s unholsters their weapon.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		else
		{
			return SendClientMessageEx(playerid, COLOR_GRAD2, "You must disable tackling before unholstering");
		}
	}
}

/*
CMD:tackle(playerid, params[])
{
	#if defined zombiemode
	if(zombieevent == 1 && GetPVarType(playerid, "pIsZombie")) return SendClientMessageEx(playerid, COLOR_GREY, "Zombies can't tackle humans!");
	#endif
	if(IsACop(playerid))
	{
		if(GetPVarInt(playerid, "WeaponsHolstered") == 0)
	    {
	        cmd_holster(playerid, params);
		}
        if(GetPVarInt(playerid, "TackleMode") == 0)
        {
	        SetPVarInt(playerid, "TackleMode", 1);
	        return SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You've enabled tackling.  Aim at the suspect and hit enter to initiate the tackle.");
		}
		else
		{
	        SetPVarInt(playerid, "TackleMode", 0);
	        return SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "You've disabled tackling. You may now unholster your weapon. (/holster)");
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD2, "You're not Law Enforcement.");
}*/

/* CMD:beanbag(playerid, params[])
{
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lam dieu nay khi dang tham gia su kien Hunger Games!");
	if(IsACop(playerid))
	{
		new string[128];
		if(PlayerInfo[playerid][pConnectHours] < 2 || PlayerInfo[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lay sung cao su, ban dang bi han che vu khi!");

		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay, ban dang trong xe.");
			return 1;
		}

		if(GetPVarInt(playerid, "IsInArena") >= 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay bay gio, ban dang trong arena!");
			return 1;
		}
		if(GetPVarInt( playerid, "EventToken") != 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang tham gia su kien.");
			return 1;
		}
		if(PlayerCuffedTime[playerid] > 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
			return 1;
		}
		if(GetPVarInt(playerid, "Injured") == 1)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
			return 1;
		}

		if(PlayerInfo[playerid][pJailTime] > 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay trong tu.");
			return 1;
		}
		if(PlayerCuffed[playerid] >= 1) {
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay bay gio.");
			return 1;
		}
		if(PlayerInfo[playerid][pHasBean] < 1)
		{
		    SendClientMessage(playerid, COLOR_WHITE, "Ban chua lay sung cao su tu kho!");
		    return 1;
		}
		if(pBean{playerid} == 0)
		{
			pBeanReplace{playerid} = PlayerInfo[playerid][pGuns][3];
			if(PlayerInfo[playerid][pGuns][3] != 0) RemovePlayerWeapon(playerid, PlayerInfo[playerid][pGuns][3]);
			format(string, sizeof(string), "*%s lay khau sung cao su ra tu sau lung", GetPlayerNameEx(playerid));
			ProxDetector(4.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerValidWeapon(playerid, 25, 30);
			pBean{playerid} = 1;
		}
		else
		{
			RemovePlayerWeapon(playerid, 25);
			GivePlayerValidWeapon(playerid, pBeanReplace{playerid}, 60000);		
			format(string, sizeof(string), "* %s da cat khau sung cao su ra sau lung ", GetPlayerNameEx(playerid));
			ProxDetector(4.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			pBean{playerid} = 0;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban khong phai la nhan vien chinh phu!");
		return 1;
	}
	return 1;
}
CMD:tazer(playerid, params[])
{
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lam dieu nay khi dang tham gia su kien Hunger Games!");
    #if defined zombiemode
	if(zombieevent == 1 && GetPVarType(playerid, "pIsZombie")) return SendClientMessageEx(playerid, COLOR_GREY, "Zombies khong the su dung.");
	#endif
	if(IsACop(playerid))
	{
		new string[128];
		if(PlayerInfo[playerid][pConnectHours] < 2 || PlayerInfo[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lay sung dien, ban dang bi han che vu khi!");

		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay, ban dang trong xe.");
			return 1;
		}

		if(GetPVarInt(playerid, "IsInArena") >= 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay bay gio, ban dang trong arena!");
			return 1;
		}
		if(GetPVarInt( playerid, "EventToken") != 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang tham gia su kien.");
			return 1;
		}
		if(PlayerCuffedTime[playerid] > 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
			return 1;
		}
		if(GetPVarInt(playerid, "Injured") == 1)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
			return 1;
		}

		if(PlayerInfo[playerid][pJailTime] > 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay trong tu.");
			return 1;
		}
		if(PlayerCuffed[playerid] >= 1) {
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay bay gio.");
			return 1;
		}
		if(PlayerInfo[playerid][pHasTazer] < 1)
		{
		    SendClientMessage(playerid, COLOR_WHITE, "Ban khong co sung dien!");
		    return 1;
		}

		if(pTazer{playerid} == 0)
		{
			pTazerReplace{playerid} = PlayerInfo[playerid][pGuns][2];
			if(PlayerInfo[playerid][pGuns][2] != 0) RemovePlayerWeapon(playerid, PlayerInfo[playerid][pGuns][2]);
			format(string, sizeof(string), "* %s cat khau sung dien vao bao.", GetPlayerNameEx(playerid));
			ProxDetector(4.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerValidWeapon(playerid, 23, 60000);
			pTazer{playerid} = 1;
		}
		else
		{
			RemovePlayerWeapon(playerid, 23);
			GivePlayerValidWeapon(playerid, pTazerReplace{playerid}, 60000);
			format(string, sizeof(string), "* %s lay khau sung dien ra khoi bao.", GetPlayerNameEx(playerid));
			ProxDetector(4.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			pTazer{playerid} = 0;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban khong phai la nhan vien chinh phu!");
		return 1;
	}
	return 1;
} */

CMD:vradar(playerid, params[])
{
	if (!IsPlayerInAnyVehicle(playerid))
		return SendClientMessageEx(playerid, 0xFF0000FF, "Ban khong the su dung radar dieu khien ben ngoai mot chiec xe.");

	if(!IsACop(playerid))
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la nhan vien thuc thi phap luat!");

	switch (CarRadars[playerid])
	{
		case 0: // player has not deployed dashboard radar
		{
			CarRadars[playerid] = 1;
			PlayerTextDrawShow(playerid, _crTextTarget[playerid]);
			PlayerTextDrawShow(playerid, _crTextSpeed[playerid]);
			PlayerTextDrawShow(playerid, _crTickets[playerid]);

			SendClientMessageEx(playerid, COLOR_WHITE, "Ban dang su dung radar dieu khien cua ban, su dung /vradar mot lan nua de tat no.");
			SetPVarInt(playerid, "_lastTicketWarning", 0);
		}

		case 1..2: // dashboard radar has been deployed
		{
			CarRadars[playerid] = 0;
			PlayerTextDrawHide(playerid, _crTextTarget[playerid]);
			PlayerTextDrawHide(playerid, _crTextSpeed[playerid]);
			PlayerTextDrawHide(playerid, _crTickets[playerid]);

			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong con su dung radar dieu khien cua ban.");
			DeletePVar(playerid, "_lastTicketWarning");
		}
	}

	return 1;
}

CMD:sungtocdo(playerid, params[]) {
	return cmd_radargun(playerid, params);
}

CMD:radargun(playerid, params[])
{
	if(IsACop(playerid))
	{
		new string[128];
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay trong xe.");
			return 1;
		}

		if(GetPVarInt(playerid, "IsInArena") >= 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay bay gio, ban dang o arena!");
			return 1;
		}
		if(GetPVarInt( playerid, "EventToken") != 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang tham gia su kien.");
			return 1;
		}

		if(GetPVarInt(playerid, "Injured") == 1)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
			return 1;
		}

		if(PlayerInfo[playerid][pJailTime] > 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay trong tu.");
			return 1;
		}
		if(PlayerCuffed[playerid] >= 1) {
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay khi bi cong tay.");
			return 1;
		}

		new SpeedRadar = GetPVarInt(playerid, "SpeedRadar");
		if(SpeedRadar == 0)
		{
			SetPVarInt(playerid, "RadarReplacement", PlayerInfo[playerid][pGuns][9]);
			if(PlayerInfo[playerid][pGuns][9] != 0) RemovePlayerWeapon(playerid, PlayerInfo[playerid][pGuns][9]);
			format(string, sizeof(string), "* %s lay ra mot khau sung ban toc do.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerValidWeapon(playerid, 43, 2);
			SetPVarInt(playerid, "SpeedRadar", 1);
		}
		else
		{
			RemovePlayerWeapon(playerid, 43);
			GivePlayerValidWeapon(playerid, GetPVarInt(playerid, "RadarReplacement"), 2);
			format(string, sizeof(string), "* %s da cat khau sung ban toc do.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			DeletePVar(playerid, "SpeedRadar");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban khong phai la nhan vien chinh phu!");
		return 1;
	}
	return 1;
}

CMD:thoigianlanhluong(playerid, params[]) {
	return cmd_nextpaycheck(playerid, params);
}

CMD:nextpaycheck(playerid, params[])
{
	new string[128];
	format(string, sizeof(string), "Tong so phut tu khi nhan Paycheck truoc: %d  Thoi gian de nhan Paycheck tiep theo: %d", floatround(PlayerInfo[playerid][pConnectSeconds]/60), floatround((3600-PlayerInfo[playerid][pConnectSeconds]) / 60));
	SendClientMessageEx(playerid, COLOR_YELLOW, string);
	SendClientMessageEx(playerid, COLOR_GRAD2, "Xin luu y thoi gian nhan Paycheck cua ban khong duoc tinh khi ban AFK");
	return 1;
}

CMD:congtay(playerid, params[]) {
	return cmd_cuff(playerid, params);
}

CMD:cuff(playerid, params[])
{
	if(IsACop(playerid))
	{
		if(GetPVarInt(playerid, "Injured") == 1 || PlayerCuffed[ playerid ] >= 1 || PlayerInfo[ playerid ][ pJailTime ] > 0 || PlayerInfo[playerid][pHospital] > 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
			return 1;
		}

		if(PlayerInfo[playerid][pHasCuff] < 1)
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co chiec cong tay nao!");
		    return 1;
		}

		new string[128], giveplayerid, Float:health, Float:armor;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /cuff [Player]");
		if(IsPlayerConnected(giveplayerid))
		{
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the tu cong tay minh!"); return 1; }
				if(PlayerCuffed[giveplayerid] == 1 || GetPlayerSpecialAction(giveplayerid) == SPECIAL_ACTION_HANDSUP)
				{
					format(string, sizeof(string), "* Ban da bi cong tay boi %s.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Ban da cong tay %s, su dung /uncuff de thao cong.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s da cong tay %s lai.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(giveplayerid, "~r~Cong tay", 2500, 3);
					TogglePlayerControllable(giveplayerid, 0);
					ClearAnimations(giveplayerid);
					GetPlayerHealth(giveplayerid, health);
					GetPlayerArmour(giveplayerid, armor);
					SetPVarFloat(giveplayerid, "cuffhealth",health);
					SetPVarFloat(giveplayerid, "cuffarmor",armor);
					SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED);
					ApplyAnimation(giveplayerid,"ped","cower",1,1,0,0,0,0,1);
					SetPlayerAttachedObject(giveplayerid, 7, 19418, 6, -0.011, 0.028, -0.022, -15.600012, -33.699977, -81.700035, 1.0, 1.0, 1.0);
					ApplyAnimation(giveplayerid, "ped", "FLOOR_hit_f", 4.0, 0, 1, 1, 1, 0, 1);
					PlayerCuffed[giveplayerid] = 2;
					SetPVarInt(giveplayerid, "PlayerCuffed", 2);
					SetPVarInt(giveplayerid, "IsFrozen", 1);
					//Frozen[giveplayerid] = 1;
					PlayerCuffedTime[giveplayerid] = 300;
				}
				else if(GetPVarType(giveplayerid, "IsTackled"))
				{
				    format(string, sizeof(string), "* %s da lay chiec cong tu trong nguoi ra va cong tay %s lai.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetTimerEx("CuffTackled", 4000, 0, "ii", playerid, giveplayerid);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do chua dau hang hoac chua bi cuong che !");
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong o gan ban.");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "nguoi choi khong hop le.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai nhan vien chinh phu");
	}
	return 1;
}
CMD:cuff1(playerid, params[])
{
	if(IsACop(playerid))
	{
		if(GetPVarInt(playerid, "Injured") == 1 || PlayerCuffed[ playerid ] >= 1 || PlayerInfo[ playerid ][ pJailTime ] > 0 || PlayerInfo[playerid][pHospital] > 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
			return 1;
		}

		if(PlayerInfo[playerid][pHasCuff] < 1)
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co chiec cong tay nao!");
		    return 1;
		}

		new string[128], giveplayerid, Float:health, Float:armor;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /handcuff2 [Player]");
		if(IsPlayerConnected(giveplayerid))
		{
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the tu cong tay minh!"); return 1; }
				if(PlayerCuffed[giveplayerid] == 1)
				{
					format(string, sizeof(string), "* Ban da bi cong tay boi %s.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Ban da cong tay %s, su dung /uncuff de thao cong.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s da co ng tay %s lai.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(giveplayerid, "~r~Cong tay", 2500, 3);
					//TogglePlayerControllable(giveplayerid, 0);
					//ClearAnimations(giveplayerid);
					GetPlayerHealth(giveplayerid, health);
					GetPlayerArmour(giveplayerid, armor);
					SetPVarFloat(giveplayerid, "cuffhealth",health);
					SetPVarFloat(giveplayerid, "cuffarmor",armor);
					SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED);
					ApplyAnimation(giveplayerid,"ped","cower",4.1,1,0,0,0,0,1);
					PlayerCuffed[giveplayerid] = 2;
					SetPVarInt(giveplayerid, "PlayerCuffed", 2);
					SetPVarInt(giveplayerid, "IsFrozen", 1);
					SetPVarInt(giveplayerid, "dabicongtay", 1);
					//Frozen[giveplayerid] = 1;
					PlayerCuffedTime[giveplayerid] = 300;
				}
				else if(GetPVarType(giveplayerid, "IsTackled"))
				{
				    format(string, sizeof(string), "* %s da lay chiec cong tu trong nguoi ra va cong tay %s lai.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetTimerEx("CuffTackled", 4000, 0, "ii", playerid, giveplayerid);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Doi tuong chua bi khong che");
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong o gan ban.");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai nhan vien chinh phu");
	}
	return 1;
}

CMD:thaocong(playerid, params[]) {
	return cmd_uncuff(playerid, params);
}

CMD:uncuff(playerid, params[])
{
	if(IsACop(playerid))
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /uncuff [Player]");

		if(IsPlayerConnected(giveplayerid))
		{
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				/*if(PlayerInfo[giveplayerid][pJailTime] >= 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "You can't uncuff a jailed player.");
					return 1;
				} */
				if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the thao cong tay cho chinh minh."); return 1; }
				if(PlayerCuffed[giveplayerid]>1)
				{
					DeletePVar(giveplayerid, "IsFrozen");
					format(string, sizeof(string), "* Ban da duoc thao cong tay boi %s.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Ban da thao cong tay %s.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s da thao cong tay %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(giveplayerid, "~g~Thao cong", 2500, 3);
					TogglePlayerControllable(giveplayerid, 1);
					ClearAnimations(giveplayerid);
					SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
					PlayerCuffed[giveplayerid] = 0;
                    PlayerCuffedTime[giveplayerid] = 0;
                    SetPlayerHealth(giveplayerid, GetPVarFloat(giveplayerid, "cuffhealth"));
                    SetPlayerArmor(giveplayerid, GetPVarFloat(giveplayerid, "cuffarmor"));
                    DeletePVar(giveplayerid, "cuffhealth");
					DeletePVar(giveplayerid, "PlayerCuffed");
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong bi cong tay.");
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong o gan ban.");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai nhan vien chinh phu");
	}
	return 1;
}

CMD:dualenxe(playerid, params[]) {
	return cmd_detain(playerid, params);
}

CMD:detain(playerid, params[])
{
	if(IsACop(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay, ban dang trong xe.");
			return 1;
		}

		new string[128], giveplayerid, seat;
		if(sscanf(params, "ud", giveplayerid, seat)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /dualenxe [Player] [cho ngoi 1-3]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(seat < 1 || seat > 3)
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "ID cho ngoi tren xe phai tu 1 den 3.");
				return 1;
			}
			if(IsACop(giveplayerid))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the dua canh sat khac len xe.");
				return 1;
			}
			if(IsPlayerInAnyVehicle(giveplayerid))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do dang o trong mot chiec xe, hay dua nguoi do ra khoi xe de tiep tuc.");
				return 1;
			}
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the moi chinh minh len xe!"); return 1; }
				if(PlayerCuffed[giveplayerid] == 2)
				{
					new carid = gLastCar[playerid];
					if(IsSeatAvailable(carid, seat))
					{
						new Float:pos[6];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						GetPlayerPos(giveplayerid, pos[3], pos[4], pos[5]);
						GetVehiclePos(carid, pos[0], pos[1], pos[2]);
						if (floatcmp(floatabs(floatsub(pos[0], pos[3])), 10.0) != -1 &&
								floatcmp(floatabs(floatsub(pos[1], pos[4])), 10.0) != -1 &&
								floatcmp(floatabs(floatsub(pos[2], pos[5])), 10.0) != -1) return false;
						format(string, sizeof(string), "* Ban da bi dua len xe boi %s .", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Ban da dua %s len xe.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s da dua %s len xe cua ho.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(giveplayerid, "~r~Giam giu", 2500, 3);
						ClearAnimations(giveplayerid);
						TogglePlayerControllable(giveplayerid, false);
						IsPlayerEntering{giveplayerid} = true;
						PutPlayerInVehicle(giveplayerid, carid, seat);
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_GREY, "Cho ngoi khong ton tai!");
						return 1;
					}
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong bi cong.");
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, " Ban khong o gan nguoi do hoac chiec xe cua ban!");
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban khong phai la nhan vien chinh phu!");
	}
	return 1;
}

CMD:dandi(playerid, params[]) {
	return cmd_drag(playerid, params);
}

CMD:drag(playerid, params[])
{
	if(IsACop(playerid))
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /dandi [playerid]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(GetPVarInt(giveplayerid, "PlayerCuffed") == 2)
			{
				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, " Ban phai ra khoi xe moi co the su dung lenh nay.");
				if(GetPVarInt(giveplayerid, "BeingDragged") == 1)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, " Nguoi do da duoc dan theo. ");
					return 1;
				}
                new Float:dX, Float:dY, Float:dZ;
				GetPlayerPos(giveplayerid, dX, dY, dZ);
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, dX, dY, dZ))
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, " Nguoi do o gan ban.");
					return 1;
				}
				format(string, sizeof(string), "* %s hien dan dan ban di.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
				format(string, sizeof(string), "* Ban bi dan di %s, ban the di chuyen chung ngay bay gio.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "* %s grabs ahold of %s and begins to move them.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SendClientMessageEx(playerid, COLOR_WHITE, "Ban dang dan mot nguoi tinh nghi, Nhan '{AA3333}FIRE{FFFFFF}' nut de dung lai.");
				SetPVarInt(giveplayerid, "BeingDragged", 1);
				SetPVarInt(playerid, "DraggingPlayer", giveplayerid);
				SetTimerEx("DragPlayer", 1000, 0, "ii", playerid, giveplayerid);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, " Nguoi chi dinh khong bi cong!");
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, " Ban khong phai la thuc thi phap luat chinh' thuc!");
		return 1;
	}
	return 1;
}

CMD:find(playerid, params[]) {
	return cmd_timkiem(playerid, params);
}

CMD:timkiem(playerid, params[]) {
	if(PlayerInfo[playerid][pJob] != 1 && PlayerInfo[playerid][pJob2] != 1) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai Tham tu.");
	}
	else if(gettime() < UsedFind[playerid]) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban dang tim kiem nguoi nao do - doi trong giay lat.");
	}
	else {
		new
			iTargetID;

		if(sscanf(params, "u", iTargetID)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /timkiem [Player]");
		}
		else if(iTargetID == playerid) {
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the tim kiem chinh minh.");
		}
		else if(!IsPlayerConnected(iTargetID)) {
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		}
		else if(GetPlayerInterior(iTargetID) != 0) {
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do dang trong mot ngoi nha.");
		}
		else if(PlayerInfo[iTargetID][pAdmin] >= 2 && PlayerInfo[iTargetID][pTogReports] != 1) {
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the tim kiem nguoi nay.");
		}
		else if (GetPVarInt(playerid, "_SwimmingActivity") >= 1) {
			SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the tim kiem nguoi nay khi dang boi.");
		}
		else if(PhoneOnline[iTargetID] == 0 && PlayerInfo[iTargetID][pPnumber] != 0|| PlayerInfo[iTargetID][pBugged] == PlayerInfo[playerid][pMember])
		{
			switch(PlayerInfo[playerid][pDetSkill]) {
				case 0 .. 50: {
					FindTimePoints[playerid] = 4;
					UsedFind[playerid] = gettime()+120;
				}
				case 51 .. 100: {
					FindTimePoints[playerid] = 6;
					UsedFind[playerid] = gettime()+90;
				}
				case 101 .. 200: {
					FindTimePoints[playerid] = 8;
					UsedFind[playerid] = gettime()+60;
				}
				case 201 .. 400: {
					FindTimePoints[playerid] = 10;
					UsedFind[playerid] = gettime()+30;
				}
				default: {
					FindTimePoints[playerid] = 12;
					UsedFind[playerid] = gettime()+15;
				}
			}

			new
				szZone[MAX_ZONE_NAME],
				szMessage[108];

			SetPlayerMarkerForPlayer(playerid, iTargetID, FIND_COLOR);
			GetPlayer3DZone(iTargetID, szZone, sizeof(szZone));
			format(szMessage, sizeof(szMessage), "%s da duoc nhin thay lan cuoi tai %s.", GetPlayerNameEx(iTargetID), szZone);
			SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
			FindingPlayer[playerid]=iTargetID;
			FindTime[playerid] = 1;

			if(DoubleXP) {
				SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da nhan duoc 2 ki nang Tham tu thay vi  1. (Nhan doi XP)");
				PlayerInfo[playerid][pDetSkill] += 2;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
			}
			else
			if(PlayerInfo[playerid][pDoubleEXP] > 0 && !DoubleXP) {
				format(szMessage, sizeof(szMessage), "Ban da nhan duoc 2 ki nang Tham tu thay vi  1. Ban con %d gio nhan doi EXP token.", PlayerInfo[playerid][pDoubleEXP]);
				SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
				PlayerInfo[playerid][pDetSkill] += 2;
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
			}
			else
			{
				++PlayerInfo[playerid][pDetSkill];
				PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE;
			}

			switch(PlayerInfo[playerid][pDetSkill]) {
				case 50: SendClientMessageEx(playerid, COLOR_YELLOW, "* Cong viec Tham tu dat diem ki nang Level 2, ban co the tim kiem nhanh hon.");
				case 100: SendClientMessageEx(playerid, COLOR_YELLOW, "* Cong viec Tham tu dat diem ki nang Level 3, ban co the tim kiem nhanh hon.");
				case 200: SendClientMessageEx(playerid, COLOR_YELLOW, "* Cong viec Tham tu dat diem ki nang Level 4, ban co the tim kiem nhanh hon.");
				case 400: SendClientMessageEx(playerid, COLOR_YELLOW, "* Cong viec Tham tu dat diem ki nang Level 5, ban co the tim kiem nhanh hon.");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the tim kiem duoc dau vet nguoi nay.");
			return 1;
		}
	}
	return 1;
}

// dinhvi
CMD:dinhvi(playerid, params[]) {
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Ban khong phai canh sat");
	new targetid;

	if(sscanf(params, "u", targetid)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /dinhvi [nguoi choi]");
	}
	if(targetid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the tim kiem chinh minh.");
	if(!IsPlayerConnected(targetid)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	}
	if(GetPlayerInterior(targetid) != 0) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do dang trong mot ngoi nha.");
	}
	if(GetPVarInt(playerid, "_SwimmingActivity") >= 1) {
		return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the tim kiem nguoi nay khi dang boi.");
	}
	if(PhoneOnline[targetid] == 0 && PlayerInfo[targetid][pPnumber] != 0|| PlayerInfo[targetid][pBugged] == PlayerInfo[playerid][pMember])
		{
	new
		szZone[MAX_ZONE_NAME],
		string[150],
		Float:posx,
		Float:posy,
		Float:posz;
	GetPlayerPos(targetid,posx, posy, posz);
	GetPlayer3DZone(targetid, szZone, sizeof(szZone));
	format(string, sizeof(string), "DINH VI: %s dang duoc nhin thay tai %s (Toa do 3D : %0.2f, %0.2f, %0.2f).", GetPlayerNameEx(targetid), szZone,posx,posy,posz);
	SendClientMessageEx(playerid, COLOR_GRAD2, string);
	return true;
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD2, "Khong the dinh vi duoc nguoi nay.");
}


CMD:deletehit(playerid, params[])
{
	if( PlayerInfo[playerid][pAdmin] >= 4 || (arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] == 2 && PlayerInfo[playerid][pRank] >= 5) || arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] == 2 )
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /deletehit [player]");

		if(!IsPlayerConnected(giveplayerid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
			return 1;
		}

		if(PlayerInfo[giveplayerid][pHeadValue] >= 1 )
		{
			PlayerInfo[giveplayerid][pHeadValue] = 0;
			format(string, sizeof(string), "<< %s da loai bo hop dong %s >>", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			Log("logs/contracts.log", string);
			format(string, sizeof(string), "Ban da go bo hop dong ma la tren %s la nguoi dung dau.", GetPlayerNameEx(giveplayerid) );
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			GoChase[giveplayerid] = INVALID_PLAYER_ID;

			foreach(new i: Player)
			{
				if( HitToGet[i] == giveplayerid )
				{
					HitToGet[i] = INVALID_PLAYER_ID;
					HitOffer[i] = INVALID_PLAYER_ID;
				}
			}
		}
		else
		{
			SendClientMessageEx( playerid, COLOR_WHITE, "Khong co hop dong nao tren nguoi choi!" );
		}
	}
	return 1;
}
CMD:bangiap(playerid, params[]) {
	return cmd_guard(playerid, params);
}

CMD:guard(playerid, params[])
{
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lam dieu nay khi dang trong Hunger Games Event!");
	if(PlayerInfo[playerid][pJob] != 8 && PlayerInfo[playerid][pJob2] != 8)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la Ve si");
		return 1;
	}
	if(WatchingTV[playerid] != 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang xem TV!");
		return 1;
	}
	if(GetPVarInt(playerid, "IsInArena") >= 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay khi dang arena!");
		return 1;
	}
	new string[128], giveplayerid, money;
	if(sscanf(params, "ud", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /bangiap [Player] [Gia tien]");
	if (GetPVarInt(playerid, "GuardTimer") > 0)
	{
		format(string, sizeof(string), "   Ban phi cho %d giay truoc khi ban ao giap khac.", GetPVarInt(playerid, "GuardTimer"));
		SendClientMessageEx(playerid,COLOR_GREY,string);
		return 1;
	}
	if(money < 200 || money > 1000) { SendClientMessageEx(playerid, COLOR_GREY, "Gia theo quy dinh phai tu $200 toi $1000."); return 1; }
	if(IsPlayerConnected(giveplayerid))
	{

		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the /bangiap cho chinh minh.");
				return 1;
			}

			SetPVarInt(playerid, "GuardTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GUARDTIMER);
			format(string, sizeof(string), "* Ban ban giap cho %s voi gia $%d.", GetPlayerNameEx(giveplayerid), money);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Ve si %s muon ban ao giap cho ban voi gia $%d, su dung /chapnhan aogiap de nhan ao giap.", GetPlayerNameEx(playerid), money);
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			GuardOffer[giveplayerid] = playerid;
			GuardPrice[giveplayerid] = money;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong o gan ban.");
		}

	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	}
	return 1;
}

CMD:free(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 2 && PlayerInfo[playerid][pJob2] != 2)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai la Luat su!");
		return 1;
	}
	if(PlayerInfo[playerid][pLawSkill] >= 401)
	{
		ApprovedLawyer[playerid] = 1;
	}

	new
		giveplayerid;

	if(sscanf(params, "u", giveplayerid)) {
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /free [Player]");
	}
	else if(!IsPlayerConnected(giveplayerid)) {
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	}
	else if(giveplayerid == playerid) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the tha tu do cho minh.");
	}
	else if(PlayerInfo[giveplayerid][pJailTime] > 0 && ApprovedLawyer[playerid] == 1 && WantLawyer[giveplayerid] >= 1) {

		new
			string[128];

		format(string, sizeof(string), "* Ban giai thoat %s khoi nha tu.", GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ban da duoc tha tu, boi Luat su %s.", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		ApprovedLawyer[playerid] = 0;
		WantLawyer[giveplayerid] = 0;
		CallLawyer[giveplayerid] = 0;
		JailPrice[giveplayerid] = 0;
		PlayerInfo[giveplayerid][pJailTime] = 1;

		if(DoubleXP) {
			SendClientMessageEx(playerid, COLOR_YELLOW, "Ban da dat duoc 2 diem ki nang Luat su thay vi 1. (Nhan doi XP)");
			PlayerInfo[playerid][pLawSkill] += 2;
			PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
		}
		else
		if(PlayerInfo[playerid][pDoubleEXP] > 0 && !DoubleXP)
		{
			format(string, sizeof(string), "Ban da dat duoc 2 diem ki nang Luat su thay vi 1. Ban con %d gio choi nhan doi EXP token.", PlayerInfo[playerid][pDoubleEXP]);
			SendClientMessageEx(playerid, COLOR_YELLOW, string);
			PlayerInfo[playerid][pLawSkill] += 2;
			PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE * 2;
		}
		else
		{
			++PlayerInfo[playerid][pLawSkill];
			PlayerInfo[playerid][pXP] += PlayerInfo[playerid][pLevel] * XP_RATE;
		}

		switch(PlayerInfo[playerid][pLawSkill]) {
			case 50: SendClientMessageEx(playerid, COLOR_YELLOW, "* Ki nang luat su cua ban dat Level 2, Ban se kiem duoc nhieu tien va co thoi gian  it hon  de bao chua.");
			case 100: SendClientMessageEx(playerid, COLOR_YELLOW, "* Ki nang luat su cua ban dat Level 3, Ban se kiem duoc nhieu tien va co thoi gian  it hon  de bao chua.");
			case 200: SendClientMessageEx(playerid, COLOR_YELLOW, "* Ki nang luat su cua ban dat Level 4, Ban se kiem duoc nhieu tien va co thoi gian  it hon  de bao chua.");
			case 400: SendClientMessageEx(playerid, COLOR_YELLOW, "* Ki nang luat su cua ban dat Level 5, Ban se kiem duoc nhieu tien va co thoi gian  it hon  de bao chua.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi do khong phai la Luat su.");
	return 1;
}

CMD:thoigianbaolanh(playerid, params[]) {
	return cmd_defendtime(playerid, params);
}

CMD:defendtime(playerid, params[])
{
	new string[128];
	if(PlayerInfo[playerid][pDefendTime] < 1)
	{
		SendClientMessageEx(playerid, COLOR_YELLOW, "Ban co the nhan duoc bao lanh.");
	}
	else {
		format(string, sizeof(string), "Ban se nhan duoc mot bao lanh trong %d phut.", PlayerInfo[playerid][pDefendTime]);
		SendClientMessageEx(playerid, COLOR_YELLOW, string);
	}
	return 1;
}

CMD:baolanh(playerid, params[]) {
	return cmd_defend(playerid, params);
}

CMD:defend(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 2 && PlayerInfo[playerid][pJob2] != 2)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai la luat su!");
		return 1;
	}

	new string[128];
	if(gettime() < PlayerInfo[playerid][pLawyerTime])
	{
		format(string, sizeof(string), "Ban phai cho doi %d giay!", PlayerInfo[playerid][pLawyerTime]-gettime());
		SendClientMessageEx(playerid, COLOR_GRAD1,string);
		return 1;
	}

	new giveplayerid, money;
	if(sscanf(params, "ud", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /defend [player] [price]");
	if(money < 2000 || money > 10000) { SendClientMessageEx(playerid, COLOR_GREY, "   So tien phai tu $2,000 hoac tren $10,000!"); return 1; }
	if(IsPlayerConnected(giveplayerid))
	{
		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the cung cap bao ve cho chinh minh!");
				return 1;
			}
			if(PlayerInfo[giveplayerid][pDefendTime] > 0) {
			    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban phai cho doi them 1 gio truoc khi bao ve nguoi nay.");
			}
			if(PlayerInfo[giveplayerid][pWantedLevel] > 0)
			{
				format(string, sizeof(string), "* Ban duoc cung cap bao ve %s cho $%d.", GetPlayerNameEx(giveplayerid), money);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Luat su %s muon bao ve ban $%d, (su dung /chapnhan defense) de chap nhan.", GetPlayerNameEx(playerid), money);
				SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pLawyerTime] = gettime()+60;
				DefendOffer[giveplayerid] = playerid;
				DefendPrice[giveplayerid] = money;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi do khong bi truy na!");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	}
	return 1;
}

CMD:huybo(playerid, params[]) {
	return cmd_cancel(playerid, params);
}

CMD:cancel(playerid, params[])
{
	new string[128], choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "|__________________ Huy Bo __________________|");
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /huybo [name]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Trucker, Sex, Vatlieu, Pot, Crack, Vukhi, Craft, Suaxe, Luatsu, Bodyguard, Live, Refill, Xe, Boxing");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Taxi, Bus, Medic, Mechanic, Ticket, Witness, Kethon, Lyhon, Drink, House, Giaohang, Help");
		if(IsAHitman(playerid)) { SendClientMessageEx(playerid, COLOR_GREY, "Special: contract"); }
		SendClientMessageEx(playerid, COLOR_WHITE, "|____________________________________________|");
		return 1;
	}

	if(strcmp(choice,"sex",true) == 0) {	SexOffer[playerid] = INVALID_PLAYER_ID; SexPrice[playerid] = 0; }
	else if(strcmp(choice,"vatlieu",true) == 0) { MatsOffer[playerid] = INVALID_PLAYER_ID; MatsStorageID[playerid] = -1; MatsPrice[playerid] = 0; MatsAmount[playerid] = 0; }
	else if(strcmp(choice,"pot",true) == 0) { PotOffer[playerid] = INVALID_PLAYER_ID; PotStorageID[playerid] = -1; PotPrice[playerid] = 0; PotGram[playerid] = 0; }
	else if(strcmp(choice,"crack",true) == 0) { CrackOffer[playerid] = INVALID_PLAYER_ID; CrackStorageID[playerid] = -1; CrackPrice[playerid] = 0; CrackGram[playerid] = 0; }
	else if(strcmp(choice,"vukhi",true) == 0) { GunOffer[playerid] = INVALID_PLAYER_ID; GunStorageID[playerid] = -1; GunId[playerid] = 0; }
	else if(strcmp(choice,"craft",true) == 0) { CraftOffer[playerid] = INVALID_PLAYER_ID; CraftId[playerid] = 0; }
	else if(strcmp(choice,"suaxe",true) == 0) {	RepairOffer[playerid] = INVALID_PLAYER_ID; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
	else if(strcmp(choice,"luatsu",true) == 0) { WantLawyer[playerid] = 0; CallLawyer[playerid] = 0; }
	else if(strcmp(choice,"bodyguard",true) == 0) { GuardOffer[playerid] = INVALID_PLAYER_ID; GuardPrice[playerid] = 0; }
	else if(strcmp(choice,"live",true) == 0) { LiveOffer[playerid] = INVALID_PLAYER_ID; }
	else if(strcmp(choice,"refill",true) == 0) { RefillOffer[playerid] = INVALID_PLAYER_ID; RefillPrice[playerid] = 0; }
	else if(strcmp(choice,"xe",true) == 0) { VehicleOffer[playerid] = INVALID_PLAYER_ID; VehiclePrice[playerid] = 0; VehicleId[playerid] = -1; }
	else if(strcmp(choice,"house",true) == 0) { HouseOffer[playerid] = INVALID_PLAYER_ID; HousePrice[playerid] = 0; House[playerid] = 0; }
	else if(strcmp(choice,"boxing",true) == 0) { BoxOffer[playerid] = INVALID_PLAYER_ID; }
	else if(strcmp(choice,"witness",true) == 0) { MarryWitnessOffer[playerid] = INVALID_PLAYER_ID; }
	else if(strcmp(choice,"kethon",true) == 0) { ProposeOffer[playerid] = INVALID_PLAYER_ID; }
	else if(strcmp(choice,"lyhon",true) == 0) { DivorceOffer[playerid] = INVALID_PLAYER_ID; }
	else if(strcmp(choice,"drink",true) == 0) { DrinkOffer[playerid] = INVALID_PLAYER_ID; }
	else if(strcmp(choice,"giaohang",true) == 0)
	{
 		DeletePVar(playerid, "LoadTruckTime");
		DeletePVar(playerid, "TruckDeliver");
		TruckUsed[playerid] = INVALID_VEHICLE_ID;
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
 		DisablePlayerCheckpoint(playerid);
	}
	else if(strcmp(choice,"trogiup", true) == 0)
	{
	    if(GetPVarInt(playerid, "COMMUNITY_ADVISOR_REQUEST") == 1)
	    {
		    DeletePVar(playerid, "COMMUNITY_ADVISOR_REQUEST");
			DeletePVar(playerid, "HelpTime");
			DeletePVar(playerid, "HelpReason");
		}
		else {
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong yeu cau tro giup.");
		    return 1;
		}
	}
	else if(strcmp(choice,"trucker",true) == 0)
	{	
		if(dalayxetrucker[playerid] == 1)
		{
			truckerdonhang[playerid] = 0;
			SoLanTrucker[playerid] = 0;
			soluonghang[playerid] = 0;
			DestroyVehicle(TruckerOwner[playerid][Player_Vehicle_ID]);
			dalayxetrucker[playerid] = 0;
			DeletePVar(playerid, "camhang");
			RemovePlayerAttachedObject(playerid, 0);
			TruckerOwner[playerid][Player_Vehicle_ID] = INVALID_VEHICLE_ID;
			TruckerCarGo[TruckerOwner[playerid][Player_Vehicle_ID]] = 0;
		}
		else 
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban chua lay xe");
			return 1;
		}

	}
	else if(strcmp(choice,"pizza",true) == 0)
	{
		if(dalayxe[playerid] == 1)
		{
			DestroyVehicle(PizzaPlayer[playerid][Player_Vehicle_ID]);
			PizzaPlayer[playerid][Player_Vehicle_ID] = INVALID_VEHICLE_ID;
			dalayxe[playerid] = 0;
			DeletePVar(playerid, "toinha");
			batdaugiaobanh[playerid] = 0;
			DeletePVar(playerid, "DaLayBanh");
			BanhHienTai[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 0);
		}
		else 
		{
			SendClientMessage(playerid, COLOR_GREY, "Ban chua lay xe");
			return 1;
		}
	}
	else if(strcmp(choice,"hopdong",true) == 0)
	{
		if(!IsAHitman(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong HQ Hitman!");
		new Float:health;
		GetPlayerHealth(playerid, health);
		new hpint = floatround( health, floatround_round );
		if (hpint >=  80)
		{
			HitToGet[playerid] = INVALID_PLAYER_ID;
			HitOffer[playerid] = INVALID_PLAYER_ID;
			GetChased[GoChase[playerid]] = INVALID_PLAYER_ID;
			GotHit[GoChase[playerid]] = 0;
			GoChase[playerid] = INVALID_PLAYER_ID;
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the huy bo khi mau duoi 80 phan tram!");
	}
	else if(strcmp(choice,"ticket",true) == 0) { TicketOffer[playerid] = INVALID_PLAYER_ID; TicketMoney[playerid] = 0; }
	else if(strcmp(choice,"medic",true) == 0) { if(IsPlayerConnected(MedicCall)) { if(MedicCall == playerid) { MedicCall = INVALID_PLAYER_ID; } else { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai nguoi goi!"); return 1; } } }
	else if(strcmp(choice,"suaxe",true) == 0) { if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = INVALID_PLAYER_ID; } else { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai nguoi goi!"); return 1; } } }
	else if(strcmp(choice,"help",true) == 0) { if(GetPVarInt(playerid, "COMMUNITY_ADVISOR_REQUEST")) { DeletePVar(playerid, "COMMUNITY_ADVISOR_REQUEST"); } else { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai nguoi goi!"); return 1; } }
	else if(strcmp(choice,"taxi",true) == 0)
	{
		if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
		{
			GameTextForPlayer(TaxiAccepted[playerid], "~w~Tai xe Taxir~n~~r~Huy bo cuoc goi", 5000, 1);
			DeletePVar(TaxiAccepted[playerid], "TaxiCall");
			TaxiAccepted[playerid] = INVALID_PLAYER_ID;
			GameTextForPlayer(playerid, "~w~Ban da~n~~r~Huy bo cuoc goi", 5000, 1);
			TaxiCallTime[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
			foreach(new i: Player)
			{
				if(TaxiAccepted[i] != INVALID_PLAYER_ID && TaxiAccepted[i] == playerid)
				{
						GameTextForPlayer(i, "~w~Tai xe Taxi~n~~r~Huy bo cuoc goi", 5000, 1);
						TaxiCallTime[i] = 0;
						DeletePVar(TaxiAccepted[i], "TaxiCall");
						TaxiAccepted[i] = INVALID_PLAYER_ID;
						DisablePlayerCheckpoint(i);
				}
			}
		}
	}
	else if(strcmp(choice,"bus",true) == 0)
	{
		if(TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
		{
			GameTextForPlayer(BusAccepted[playerid], "~w~Tai xe Bus~n~~r~Huy bo cuoc goi", 5000, 1);
			DeletePVar(BusAccepted[playerid], "BusCall");
			BusAccepted[playerid] = INVALID_PLAYER_ID;
			GameTextForPlayer(playerid, "~w~Ban da~n~~r~Huy bo cuoc goi", 5000, 1);
			BusCallTime[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
			foreach(new i: Player)
			{
				if(BusAccepted[i] != INVALID_PLAYER_ID && BusAccepted[i] == playerid)
				{
					GameTextForPlayer(i, "~w~Tai xe Bus~n~~r~Huy bo cuoc goi", 5000, 1);
					BusCallTime[i] = 0;
					DeletePVar(BusAccepted[i], "BusCall");
					BusAccepted[i] = INVALID_PLAYER_ID;
					DisablePlayerCheckpoint(i);
				}
			}
		}
	}
	else { return 1; }
	format(string, sizeof(string), "* Ban da huy bo: %s.", choice);
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	return 1;
}

CMD:refill(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 7 && PlayerInfo[playerid][pJob2] != 7)
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la tho sua xe.");
	}

	new string[128];
	if(gettime() < PlayerInfo[playerid][pMechTime])
	{
		format(string, sizeof(string), "Ban phai doi  %d giay!", PlayerInfo[playerid][pMechTime]-gettime());
		return SendClientMessageEx(playerid, COLOR_GRAD1,string);
	}
	new giveplayerid, money;
	if(sscanf(params, "ud", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /refill [player] [price]");

	if(!(money >= 1 && money < 100000))
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Gia khong hop le theo quy dinh - khong thap hon 1 hoac cao hon $99,999.");
	}
	if(IsPlayerConnected(giveplayerid))
	{
		if(ProxDetectorS(8.0, playerid, giveplayerid) && IsPlayerInAnyVehicle(giveplayerid))
		{

			new Float: fueltogive;
			switch(PlayerInfo[playerid][pMechSkill])
			{
			case 0 .. 49: fueltogive = 2.0;
			case 50 .. 99: fueltogive = 4.0;
			case 100 .. 199: fueltogive = 6.0;
			case 200 .. 399: fueltogive = 8.0;
			default: fueltogive = 10.0;
			}
			if(giveplayerid == playerid)
			{
				if(PlayerInfo[playerid][pMechSkill] >= 400)
				{
					new vehicleid = GetPlayerVehicleID(playerid);
					VehicleFuel[vehicleid] = VehicleFuel[vehicleid] + fueltogive;
					if(VehicleFuel[vehicleid] > 100.0) VehicleFuel[vehicleid] = 100.0;
					format(string, sizeof(string), "* %s da do xang vao chiec xe cua ho.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "* Ban them %.2f nhien lieu cho chiec xe.",fueltogive);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					for(new vehicleslot = 0; vehicleslot < MAX_PLAYERVEHICLES; vehicleslot++)
					{
						if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][vehicleslot][pvId]))
						{
							if(vehicleslot != -1) {
								format(string, sizeof(string), "UPDATE `vehicles` SET `pvFuel` = %0.5f WHERE `id` = '%d'", VehicleFuel[vehicleid], PlayerVehicleInfo[playerid][vehicleslot][pvSlotId]);
								mysql_function_query(MainPipeline, string, false, "OnQueryFinish", "ii", SENDDATA_THREAD, playerid);
							}
						}
					}
					return 1;
				}
				SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the dua ra nap tien cho chinh minh."); return 1;
			}
			format(string, sizeof(string), "* Ban duoc cung cap %s them %.2f nhien lieu cho chiec xe cua ho voi gia $%d.",GetPlayerNameEx(giveplayerid),fueltogive,money);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Car Mechanic %s muon them %.2f nhien lieu vao xe cua ban gia $%d, su dung /chapnhan refill de chap nhan.",GetPlayerNameEx(playerid),fueltogive,money);
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			PlayerInfo[playerid][pMechTime] = gettime()+60;
			RefillOffer[giveplayerid] = playerid;
			RefillPrice[giveplayerid] = money;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi do khong gan ban, hoac khong o trong mot chiec xe.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	return 1;
}

CMD:suaxe(playerid, params[]) {
	return cmd_repair(playerid, params);
}

CMD:repair(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 7 && PlayerInfo[playerid][pJob2] != 7)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   ban khong phai Tho sua xe!");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the sua chua khi dang trong xe.");

	new string[128];
	if(gettime() < PlayerInfo[playerid][pMechTime])
	{
		format(string, sizeof(string), "ban phai cho %d giay!", PlayerInfo[playerid][pMechTime]-gettime());
		SendClientMessageEx(playerid, COLOR_GRAD1,string);
		return 1;
	}
	if(GetPVarInt(playerid, "EventToken")) {
		return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the lam dieu nay trong su kien.");
	}
	new giveplayerid, money;
	if(sscanf(params, "ud", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /suaxe [Player] [Gia tien]");

	if(PlayerInfo[playerid][pTire] > 0)
	{
		if(money < 1 || money > 10000) { SendClientMessageEx(playerid, COLOR_GREY, "   Gia khong thap hon $1 hoac cao hon $10,000!"); return 1; }
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
			    new closestcar = GetClosestCar(playerid);

	  			if(IsPlayerInRangeOfVehicle(playerid, closestcar, 8.0))
	  			{
					if(ProxDetectorS(8.0, playerid, giveplayerid)&& IsPlayerInAnyVehicle(giveplayerid))
					{
						if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "   Khong the lam dieu do!"); return 1; }
	                    if(!IsABike(closestcar) && !IsAPlane(closestcar))
						{
							new engine,lights,alarm,doors,bonnet,boot,objective;
							GetVehicleParamsEx(closestcar,engine,lights,alarm,doors,bonnet,boot,objective);
							if(bonnet == VEHICLE_PARAMS_OFF || bonnet == VEHICLE_PARAMS_UNSET)
							{
								SendClientMessageEx(playerid, COLOR_GRAD1, "Mui xe phai duoc mo ra de sua chua no.");
								return 1;
							}
						}
						format(string, sizeof(string), "* Ban duoc cung cap %s de sua chiec xe cho ho $%d .",GetPlayerNameEx(giveplayerid),money);
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Car Mechanic %s muon sua chiec xe cua ban voi gia' $%d, (su dung /chapnhan suaxe) de chap nhan.",GetPlayerNameEx(playerid),money);
						SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pMechTime] = gettime()+60;
						RepairOffer[giveplayerid] = playerid;
						RepairPrice[giveplayerid] = money;
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi choi do khong gan ban / khong o trong mot chiec xe.");
					}
				}
				else
				{
				    SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong o gan bat ky chiec xe nao.");
				}
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi do dang offline.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong co bat ky lop xe, mua mot cai tu mot tho thu cong.");
	}
	return 1;
}

CMD:f(playerid, params[])
{
	if(gFam[playerid] == 1)
	{
		SendClientMessageEx(playerid, TEAM_CYAN_COLOR, "Ban dang vo hieu hoa tro chuyen Family. /togfamily!");
		return 1;
	}

	new string[128];
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/f)amily [family chat]");

	if(IsAHitman(playerid))
	{
		format(string, sizeof(string), "** (%d) %s %s: %s **", PlayerInfo[playerid][pRank], arrGroupRanks[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]], GetPlayerNameEx(playerid), params);
		SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
	}
	else if(PlayerInfo[playerid][pFMember] < INVALID_FAMILY_ID)
	{
	    new fam = PlayerInfo[playerid][pFMember];
	    /*if(0 <= PlayerInfo[playerid][pDivision] < 5)
	    {
	        new division[GROUP_MAX_DIV_LEN];
	        format(division, sizeof(division), "%s", FamilyDivisionInfo[PlayerInfo[playerid][pFMember]][PlayerInfo[playerid][pDivision]]);
		    format(string, sizeof(string), "** (%i) %s %s: %s **", PlayerInfo[playerid][pRank], FamilyRankInfo[fam][PlayerInfo[playerid][pRank]], GetPlayerNameEx(playerid), params);
			SendNewFamilyMessage(fam, TEAM_AZTECAS_COLOR, string);
		}*/
		//else
		//{
		    format(string, sizeof(string), "** (%i) %s %s: %s **", PlayerInfo[playerid][pRank], FamilyRankInfo[fam][PlayerInfo[playerid][pRank]], GetPlayerNameEx(playerid), params);
			SendNewFamilyMessage(fam, TEAM_AZTECAS_COLOR, string);
		//}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o trong Family!");
	}
	return 1;
}

/*CMD:g(playerid, params[])
{

	new
		string[128],
		iGroupID = PlayerInfo[playerid][pMember],
		iRank = PlayerInfo[playerid][pRank];

	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: (/g)roup [group chat]");
	if (iGroupID == INVALID_GROUP_ID) return SendClientMessageEx(playerid, COLOR_GRAD2, "You're not a part of a group!");

	format(string, sizeof(string), "** (%d) %s %s: %s **", iRank, arrGroupRanks[iGroupID][iRank], GetPlayerNameEx(playerid), params);
	foreach(new i: Player) {
	    if (PlayerInfo[playerid][pMember] == iGroupID) SendClientMessageEx(i, TEAM_AZTECAS_COLOR, string);
	}

	return 1;
}*/

CMD:news(playerid, params[])
{
	if (IsAReporter(playerid))
	{
		new string[128];
		if(shutdown == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "He thong thong tin hien dang dong." );
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /news [text]");

		new newcar = GetPlayerVehicleID(playerid);
		if(IsANewsCar(newcar) || IsPlayerInRangeOfPoint(playerid,7.0,639.7627,-11.1346,1107.9656))
		{
			if(PlayerInfo[playerid][pRank] < 1)
			{
				SendClientMessageEx(playerid, COLOR_GRAD2, "Ban phai it nhat la rank 1.");
			}
			else
			{
				format(string, sizeof(string), "NR %s: %s", GetPlayerNameEx(playerid), params);
				OOCNews(COLOR_NEWS,string);
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong xe/may bay tin tuc hoac phong thu  ..");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai la phong vien tin tuc!");
	}
	return 1;
}

CMD:watchtv(playerid, params[])
{
	for(new i; i < MAX_HOUSES; i++)
	{
		if(WatchingTV[playerid] != 0 || (IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hIntVW] && GetPlayerInterior(playerid) == HouseInfo[i][hIntIW]))
		{
			if(broadcasting == 0) return SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Khong co gi tren TV!");

			new string[128];
			if(WatchingTV[playerid] == 0)
			{
				format(string, sizeof(string), "* %s bat TV", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Su dung /watchtv mot lan nua de tat xem TV");
				BroadcastLastVW[playerid] = GetPlayerVirtualWorld(playerid);
				BroadcastLastInt[playerid] = GetPlayerInterior(playerid);
				GetPlayerPos(playerid, BroadcastFloats[playerid][1], BroadcastFloats[playerid][2], BroadcastFloats[playerid][3]);
				GetPlayerFacingAngle(playerid, BroadcastFloats[playerid][0]);

				WatchingTV[playerid] = 1;
				viewers++;
				UpdateSANewsBroadcast();

				TogglePlayerControllable(playerid, false);
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, 4225);
				SetPlayerPos(playerid, 639.2813,-11.8090,1111.4656);

				if(cameraangle == 0)
				{
					SetPlayerCameraPos(playerid, 635.6883,-11.1890,1108.6041);
					SetPlayerCameraLookAt(playerid, 641.3040,-12.2565,1108.1642);
				}
				else if(cameraangle == 1)
				{
					SetPlayerCameraPos(playerid, 637.9041,-8.3097,1108.9656);
					SetPlayerCameraLookAt(playerid, 640.9764,-14.7714,1107.9656);
				}
				else if(cameraangle == 2)
				{
					SetPlayerCameraPos(playerid, 638.6522,-15.6267,1108.9656);
					SetPlayerCameraLookAt(playerid, 640.7208,-9.5926,1107.2006);
				}
				else
				{
					SetPlayerCameraPos(playerid, 635.6883,-11.1890,1108.6041);
					SetPlayerCameraLookAt(playerid, 641.3040,-12.2565,1108.1642);
				}
				return 1;
			}
			else
			{
				SetPlayerPos(playerid,BroadcastFloats[playerid][1],BroadcastFloats[playerid][2],BroadcastFloats[playerid][3]);
				SetPlayerVirtualWorld(playerid, BroadcastLastVW[playerid]);
				PlayerInfo[playerid][pVW] = BroadcastLastVW[playerid];
				SetPlayerInterior(playerid, BroadcastLastInt[playerid]);
				PlayerInfo[playerid][pInt] = BroadcastLastInt[playerid];
				SetPlayerFacingAngle(playerid, BroadcastFloats[playerid][0]);
				SetCameraBehindPlayer(playerid);
				Player_StreamPrep(playerid, BroadcastFloats[playerid][1],BroadcastFloats[playerid][2],BroadcastFloats[playerid][3], FREEZE_TIME);

				WatchingTV[playerid] = 0;
				viewers--;
				UpdateSANewsBroadcast();

				format(string, sizeof(string), "* %s da dung xem TV", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				return 1;
			}
		}
	}
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban phai o trong ngoi nha!");
	return 1;
}

CMD:cameraangle(playerid, params[])
{
	if (IsAReporter(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid,10.0,631.8096,-10.9424,1107.9729))
		{
			if(broadcasting == 0)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Hien khong phat song!");
				return 1;
			}

			new string[128], choice[32];
			if(sscanf(params, "s[32]", choice))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /cameraangle [location]");
				SendClientMessageEx(playerid, COLOR_GRAD1, "Dia diem: Giua,Trai,Phai");
				return 1;
			}

			if(strcmp(choice,"giua",true) == 0)
			{
				format(string, sizeof(string), "** %s thay doi goc camera ra giua **", GetPlayerNameEx(playerid));
				SendGroupMessage(4, RADIO, string);
				cameraangle = 0;
				DestroyDynamic3DTextLabel(camera);
				camera = CreateDynamic3DTextLabel("*The Camera*",COLOR_RED,635.6883,-11.1890,1108.6041,13.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
			}
			else if(strcmp(choice,"trai",true) == 0)
			{
				format(string, sizeof(string), "** %s thay doi goc camera sang tra **", GetPlayerNameEx(playerid));
				SendGroupMessage(4, RADIO, string);
				cameraangle = 1;
				DestroyDynamic3DTextLabel(camera);
				camera = CreateDynamic3DTextLabel("*The Camera*",COLOR_RED,637.9041,-8.3097,1107.9656,13.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
			}
			else if(strcmp(choice,"phai",true) == 0)
			{
				format(string, sizeof(string), "** %s thay doi goc camera sang phai **", GetPlayerNameEx(playerid));
				SendGroupMessage(4, RADIO, string);
				cameraangle = 2;
				DestroyDynamic3DTextLabel(camera);
				camera = CreateDynamic3DTextLabel("*The Camera*",COLOR_RED,638.6522,-15.6267,1107.9656,13.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "Goc camera khong duoc xac nhan");
				return 1;
			}
			foreach(new i: Player)
			{
				if(WatchingTV[i] == 1)
				{
					if(cameraangle == 0)
					{
						SetPlayerCameraPos(i, 635.6883,-11.1890,1108.6041);
						SetPlayerCameraLookAt(i, 641.3040,-12.2565,1108.1642);
					}
					else if(cameraangle == 1)
					{
						SetPlayerCameraPos(i, 637.9041,-8.3097,1108.9656);
						SetPlayerCameraLookAt(i, 640.9764,-14.7714,1107.9656);
					}
					else if(cameraangle == 2)
					{
						SetPlayerCameraPos(i, 638.6522,-15.6267,1108.9656);
						SetPlayerCameraLookAt(i, 640.7208,-9.5926,1107.2006);
					}
					else
					{
						SetPlayerCameraPos(i, 635.6883,-11.1890,1108.6041);
						SetPlayerCameraLookAt(i, 641.3040,-12.2565,1108.1642);
					}
				}
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Khong o trong phong thu!");
		}
	}
	return 1;
}

CMD:stopnews(playerid, params[])
{
	if(IsAReporter(playerid) && (PlayerInfo[playerid][pRank] >= 5 || arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] == 4))
	{
	    if(shutdown == 0)
	    {
	        shutdown = 1;
	        SendClientMessageEx(playerid, COLOR_WHITE, "Ban vua moi tat toan bo he thong thong tin..." );
	        if(broadcasting == 1)
	        {
	            SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Phat thanh truyen hinh vua tat..");
				broadcasting = 0;
				UpdateSANewsBroadcast();
				DestroyDynamic3DTextLabel(camera);
	            foreach(new i: Player)
				{
					if(WatchingTV[i] == 1)
					{
						SetPlayerPos(i,BroadcastFloats[i][1],BroadcastFloats[i][2],BroadcastFloats[i][3]);
						SetPlayerVirtualWorld(i, BroadcastLastVW[i]);
						PlayerInfo[i][pInt] = BroadcastLastVW[i];
						SetPlayerInterior(i, BroadcastLastInt[i]);
						PlayerInfo[i][pInt] = BroadcastLastInt[i];
						SetPlayerFacingAngle(i, BroadcastFloats[i][0]);
						SetCameraBehindPlayer(i);
						WatchingTV[i] = 0;
						viewers = 0;
						UpdateSANewsBroadcast();
						Player_StreamPrep(i, BroadcastFloats[i][1],BroadcastFloats[i][2],BroadcastFloats[i][3], FREEZE_TIME);
					}
				}
	        }
	        foreach(new i: Player)
	        {
	            if(TalkingLive[i] != INVALID_PLAYER_ID)
				{
					SendClientMessageEx(i, COLOR_LIGHTBLUE, "* He thong tro chuyen truc tuyen bi tat.");
					SendClientMessageEx(TalkingLive[i], COLOR_LIGHTBLUE, "* He thong tro chuyen truc tuyen bi tat.");
					TogglePlayerControllable(i, 1);
					TogglePlayerControllable(TalkingLive[i], 1);
					TalkingLive[TalkingLive[i]] = INVALID_PLAYER_ID;
					TalkingLive[i] = INVALID_PLAYER_ID;
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Live vua moi tat..");
					return 1;
				}
	        }
	    }
	    else
	    {
	        shutdown = 0;
	        SendClientMessageEx(playerid, COLOR_WHITE, "Ban vua bat he thong tin tuc " );
	    }
	}
	return 1;
}

CMD:liveban(playerid, params[])
{
	if (IsAReporter(playerid))
	{
	    new giveplayerid,
	        string[128];

	    if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /liveban [Player]");
	    if(PlayerInfo[giveplayerid][pLiveBanned] == 0)
	    {
	        PlayerInfo[giveplayerid][pLiveBanned] = 1;
	        format(string, sizeof(string), "%s da bi cam phong van %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	        SendGroupMessage(4, RADIO, string);
	        return 1;
	    }
	    else
	    {
	        PlayerInfo[giveplayerid][pLiveBanned] = 0;
	        format(string, sizeof(string), "%s da duoc bo cam %s tro chuyen truc tuyen", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	        SendGroupMessage(4, RADIO, string);
	        return 1;
	    }
	}
	return 1;
}

CMD:broadcast(playerid, params[])
{
	if (IsAReporter(playerid))
	{
	    if(shutdown == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "He thong tin hieu hien dang bi vo hieu hoa." );
		if(IsPlayerInRangeOfPoint(playerid,10.0,631.8096,-10.9424,1107.9729))
		{
			new string[128];
			if(broadcasting == 0)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* LIVE: Bay gio phat song");
				broadcasting = 1;
				cameraangle = 0;
				UpdateSANewsBroadcast();
				format(string, sizeof(string), "%s se phat truc tuyen bay gio tu phong tu! /watchtv mo tivi theo doi!", GetPlayerNameEx(playerid));
				OOCNews(COLOR_NEWS,string);
				camera = CreateDynamic3DTextLabel("*The Camera*",COLOR_RED,635.6883,-11.1890,1108.6041,13.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
				return 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Khong con phat thanh");
				broadcasting = 0;
				UpdateSANewsBroadcast();
				DestroyDynamic3DTextLabel(camera);
				foreach(new i: Player)
				{
					if(WatchingTV[i] == 1)
					{
						SetPlayerPos(i,BroadcastFloats[i][1],BroadcastFloats[i][2],BroadcastFloats[i][3]);
						SetPlayerVirtualWorld(i, BroadcastLastVW[i]);
						PlayerInfo[i][pInt] = BroadcastLastVW[i];
						SetPlayerInterior(i, BroadcastLastInt[i]);
						PlayerInfo[i][pInt] = BroadcastLastInt[i];
						SetPlayerFacingAngle(i, BroadcastFloats[i][0]);
						SetCameraBehindPlayer(i);
						WatchingTV[i] = 0;
						viewers = 0;
						UpdateSANewsBroadcast();
						Player_StreamPrep(i, BroadcastFloats[i][1],BroadcastFloats[i][2],BroadcastFloats[i][3], FREEZE_TIME);
					}
				}
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban khong o trong phong thu!");
		}
	}
	return 1;
}

CMD:live(playerid, params[])
{
	if(IsAReporter(playerid) && PlayerInfo[playerid][pRank] > 0)
	{
	    if(shutdown == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "He thong tin hieu hien dang bi vo hieu hoa." );
		if(TalkingLive[playerid] != INVALID_PLAYER_ID)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Truc truyen noi chuyen ket thuc.");
			SendClientMessageEx(TalkingLive[playerid], COLOR_LIGHTBLUE, "* Truc truyen noi chuyen kett.");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(TalkingLive[playerid], 1);
			DeletePVar(playerid, "IsLive");
			DeletePVar(TalkingLive[playerid], "IsLive");
			TalkingLive[TalkingLive[playerid]] = INVALID_PLAYER_ID;
			TalkingLive[playerid] = INVALID_PLAYER_ID;
			return 1;
		}

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /live [Player]");

		if (IsPlayerConnected(giveplayerid))
		{
			if (ProxDetectorS(5.0, playerid, giveplayerid))
			{
			    if(PlayerInfo[giveplayerid][pLiveBanned] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do bi cam tro chuyen truc tuyen.");
				if(PlayerCuffed[giveplayerid] >= 1 || PlayerCuffed[playerid] >= 1)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lam dieu nay bay gio.");
				}
				else
				{
					if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the moi noi chuyen truc tuyen voi chinh minh!"); return 1; }
					format(string, sizeof(string), "* Ban moi %s tro chuyen truc tuyen.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s da moi ban mot cuoc tr chuyen truc tuyen, su dung /chapnhan live de bat dau doi thoai.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					LiveOffer[giveplayerid] = playerid;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong o gan ban.");
				return 1;
			}

		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai phong vien Tin tuc!");
	}
	return 1;
}

CMD:usepot(playerid, params[])
{
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the su dung khi dang tham gia su kien Hunger Games!");
	#if defined zombiemode
	if(zombieevent == 1 && GetPVarType(playerid, "pIsZombie")) return SendClientMessageEx(playerid, COLOR_GREY, "Zombie khong the su dung.");
	#endif
	if(GetPVarType(playerid, "PlayerCuffed") || GetPVarType(playerid, "Injured") || GetPVarType(playerid, "IsFrozen") || PlayerInfo[playerid][pHospital] || PlayerInfo[playerid][pJailTime] > 0) {
   		return SendClientMessage(playerid, COLOR_GRAD2, "Ban khong the lam dieu do vao thoi gian nay!");
	}
	if(GetPVarInt(playerid, "IsInArena") >= 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the su dung thuoc khi dang trong arena!");
		return 1;
	}
	if(PlayerBoxing[playerid] > 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung thuoc khi dang chien dau.");
		return 1;
	}
	if(UsedWeed[playerid] == 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban phai doi sau 5 giay de tiep tuc su dung thuoc.");
		return 1;
	}
	new string[128], Float:health, healthint, storageid;

	/*if(sscanf(params, "d", storageid)) {
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /usepot [storageid]");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
		return 1;
	}

	if(storageid < 0 || storageid > 1) {
		SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /usepot [storageid]");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
		return 1;
	}

	// Find the storageid of the storagedevice.
	if(storageid == 1) {
		new bool:itemEquipped = false;
		for(new i = 0; i < 3; i++)
		{
			if(StorageInfo[playerid][i][sAttached] == 1) {
				storageid = i+1;
				itemEquipped = true;
			}
		}
		if(itemEquipped == false) return SendClientMessageEx(playerid, COLOR_WHITE, "You don't have a storage device equipped!");
	}*/

	if(storageid == 0 && PlayerInfo[playerid][pPot] > 1 || (storageid > 0) && StorageInfo[playerid][storageid-1][sPot] > 1)
	{
		GetPlayerHealth(playerid, health);
		healthint = floatround(health, floatround_round);
		if(healthint >= 100 )
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Health cua ban da day.");
			return 1;
		}
		if(PlayerStoned[playerid] > 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban dang su dung Pot qua nhieu.");
		PlayerStoned[playerid] += 1;
		if(PlayerStoned[playerid] == 3)
		{
			GameTextForPlayer(playerid, "~w~Ban dang ~b~phe thuoc", 5000, 3);
		}
		if(healthint > 80)
		{
			SetPlayerHealth(playerid, 100);
		}
		else
		{
			SetPlayerHealth(playerid, health + 20.0);
		}
		PlayAudioStreamForPlayer(playerid, "http://web.samp-vn.com/bandadungmotgoipot.mp3");
		SendClientMessageEx(playerid, COLOR_GREY, " Ban su dung 2 gram  pot!");
		format(string, sizeof(string), "* %s dang su dung pot.", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

		if(storageid == 0) {
			PlayerInfo[playerid][pPot] -= 2;
		} else {
			StorageInfo[playerid][storageid-1][sPot] -= 2;
		}

		UsedWeed[playerid] = 1;
		SetTimerEx("ClearDrugs", 5000, false, "d", playerid);
		if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",2.1,0,0,0,0,0);
		switch(GetPVarInt(playerid, "STD")) {
			case 1:
			{
				DeletePVar(playerid, "STD");
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* ban khong bi nhiem STI do tac dung cua cac loai thuoc!!");
			}
			case 2:
			{
				SetPVarInt(playerid, "STD", 1);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban giam STI den chlamydia do tac dung cua loai thuoc!");
			}
			case 3:
			{
				SetPVarInt(playerid, "STD", 2);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban giam STI den  benh lau cua do tac dung cua loai thuoc!");
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bat Pot nao!");
	}
	return 1;
}

CMD:usegiap(playerid,params[])
{
	if(PlayerInfo[playerid][pGiap] < 1) return ChatHoTro(playerid,255,"Ban khong co giap de trang bi.",5000);
	new Float:health;
	GetPlayerHealth(playerid,health);
	//if(armour  > 99) return ChatHoTro(playerid,255,"Hien tai giap cua ban khong hu hong nhieu.",5000);
	TogglePlayerControllable(playerid,0);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 1, 0, 0, 0, 0, 1);
	cmd_me(playerid, "Lay giap ra va tien hanh trang bi ao giap len nguoi...");
	ChatHoTro(playerid,255,"Ban dang trang bi ao giap vui long cho doi 20s",7000);
	// await task_ms(20000);
	SetTimerEx("UseArmorEx", 20000, false, "d", playerid);
	return 1;
}
forward UseArmorEx(playerid);
public UseArmorEx(playerid)
{
	TogglePlayerControllable(playerid,1);
	SetPlayerArmour(playerid, 100);
	PlayerInfo[playerid][pGiap] -= 1;
	ClearAnimations(playerid);
	cmd_do(playerid, "Da trang bi thanh cong ao giap...");
	ChatHoTro(playerid,255,"Ban da trang bi thanh cong ao giap, tinh trang la (100)",5000);
}
CMD:usecrack(playerid, params[])
{
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the su dung khi dang tham gia su kien Hunger Games!");
    #if defined zombiemode
	if(zombieevent == 1 && GetPVarType(playerid, "pIsZombie")) return SendClientMessageEx(playerid, COLOR_GREY, "Zombie khong the su dung.");
	#endif
	if(GetPVarType(playerid, "PlayerCuffed") || GetPVarType(playerid, "Injured") || GetPVarType(playerid, "IsFrozen") || PlayerInfo[playerid][pHospital] || PlayerInfo[playerid][pJailTime] > 0) {
   		return SendClientMessage(playerid, COLOR_GRAD2, "Ban khong the lam dieu do vao thoi gian nay!");
	}
	if(GetPVarInt(playerid, "IsInArena") >= 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the su dung thuoc khi dang trong arena!");
		return 1;
	}
	if(PlayerBoxing[playerid] > 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung thuoc khi dang chien dau.");
		return 1;
	}
	if(UsedCrack[playerid] == 1)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban phai doi sau 5 giay de tiep tuc su dung thuoc.");
		return 1;
	}
	new Float:armour;
	GetPlayerArmour(playerid, armour);
	if(armour >= 100)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban da day ao giap.");
		return 1;
	}

	new storageid;
	/*if(sscanf(params, "d", storageid)) {
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /usecrack [storageid]");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
		return 1;
	}

	if(storageid < 0 || storageid > 1) {
		SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /usecrack [storageid]");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
		return 1;
	}

	// Find the storageid of the storagedevice.
	if(storageid == 1) {
		new bool:itemEquipped = false;
		for(new i = 0; i < 3; i++)
		{
			if(StorageInfo[playerid][i][sAttached] == 1) {
				storageid = i+1;
				itemEquipped = true;
			}
		}
		if(itemEquipped == false) return SendClientMessageEx(playerid, COLOR_WHITE, "You don't have a storage device equipped!");
	}*/

	if(storageid == 0 && PlayerInfo[playerid][pCrack] > 0 || (storageid > 0) && StorageInfo[playerid][storageid-1][sCrack] > 1)
	{
		if(PlayerStoned[playerid] > 2) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban dang su dung crack qua nhieu.");
		PlayerStoned[playerid] += 1;
		if(PlayerStoned[playerid] == 1)
		{
			GameTextForPlayer(playerid, "~w~Ban dang ~b~phe thuoc", 15000, 3);
		}
		new string[128], Float:PlayersArmour;
		GetPlayerArmour(playerid, PlayersArmour);
		PlayAudioStreamForPlayer(playerid, "http://web.samp-vn.com/bandadungcrack.mp3");
		SendClientMessageEx(playerid, COLOR_GREY, " Ban su dung 1 gram crack!");
		format(string, sizeof(string), "* %s dang su dung crack.", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

		if(storageid == 0) {
			PlayerInfo[playerid][pCrack] -= 1;
		} else {
			StorageInfo[playerid][storageid-1][sCrack] -= 1;
		}
		if(CurrentArmor[playerid] < PlayersArmour && GetPVarInt(playerid, "IsInArena") == 0)
	    {
	    	format( string, sizeof( string ), "[MAYCHU] %s (ID %d) co the dang hack giap. (Ghi lai: %f - Hien tai: %f) (2)", GetPlayerNameEx(playerid), playerid, CurrentArmor[playerid], PlayersArmour);
			ABroadCast( COLOR_YELLOW, string, 2 );
			format(string, sizeof(string), "%s (ID %d) co the dang hack giap. (Ghi lai: %f - Hien tai: %f) (2)", GetPlayerNameEx(playerid), playerid, CurrentArmor[playerid], PlayersArmour);
			Log("logs/hack.log", string);
	        return 1;
	    }
		UsedCrack[playerid] = 1;
		SetTimerEx("ClearDrugs", 10000, false, "d", playerid);
		if(PlayersArmour > 51)
		{
			SetPlayerArmor(playerid, 100);
		}
		else
		{
			SetPlayerArmor(playerid, PlayersArmour + 50.0);
		}
		if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",2.1,0,0,0,0,0);
		switch(GetPVarInt(playerid, "STD")) {
			case 1:
			{
				DeletePVar(playerid, "STD");
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* ban khong bi nhiem STI do tac dung cua cac loai thuoc!");
			}
			case 2:
			{
				SetPVarInt(playerid, "STD", 1);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban giam STI den chlamydia do tac dung cua loai thuoc!");
			}
			case 3:
			{
				SetPVarInt(playerid, "STD", 2);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban giam STI den  benh lau cua do tac dung cua loai thuoc!");
			}
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co Crack nao!");
	}
	return 1;
}

CMD:healme(playerid, params[])
{
	if (IsPlayerInRangeOfPoint(playerid, 2.0, 1179.4012451172,-1331.5632324219,2423.0461425781))//2103.3252,2824.2102,-16.1672
	{
		if(GetPVarType(playerid, "STD"))
		{
			DeletePVar(playerid, "STD");
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban khong con bi nhiem HIV nua , vi vay ban khong can su giup do tu benh vien!");
			GivePlayerCash(playerid, -100);
			SendClientMessageEx(playerid, TEAM_CYAN_COLOR, "Bac si: Hoa don y te cua ban la $100,-. Chuc mot ngay tot lanh!");
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong bi HIV de chua benh!");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong o benh vien!");
	}
	return 1;
}

CMD:moiraxe(playerid, params[]) {
	return cmd_eject(playerid, params);
}

CMD:eject(playerid, params[])
{
	new State;
	if(IsPlayerInAnyVehicle(playerid))
	{
		State=GetPlayerState(playerid);
		if(State!=PLAYER_STATE_DRIVER)
		{
			SendClientMessageEx(playerid,COLOR_GREY,"   Ban chi co the duoi nguoi khac ra khoi xe khi cam lai!");
			return 1;
		}

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /moiraxe [Player]");

		new test;
		test = GetPlayerVehicleID(playerid);
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the duoi chinh minh ra khoi xe!"); return 1; }
				if(IsPlayerInVehicle(giveplayerid,test))
				{
					if(GetPVarInt(giveplayerid, "EMSAttempt") != 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the duoi mot benh nhan!");
					format(string, sizeof(string), "* You have thrown %s out of the car.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Ban da bi duoi ra khoi xe boi %s.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					RemovePlayerFromVehicle(giveplayerid);
					new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(giveplayerid, slx, sly, slz);
					SetPlayerPos(giveplayerid, slx, sly+3, slz+1);
					format(string, sizeof(string), "* %s da duoi %s ra khoi xe.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "   Nguoi do khong trong xe cua ban!");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, " ID/Name khong hop le!");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban can phai o trong mot chiec xe!");
	}
	return 1;
}

CMD:sex(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 3 || PlayerInfo[playerid][pJob2] == 3)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Ban chi co the quan he tinh duc tren xe!");
			return 1;
		}
		new Car = GetPlayerVehicleID(playerid);

		new string[128], giveplayerid, money;
		if(sscanf(params, "ud", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /sex [Player] [Gia tien]");

		if(money < 1 || money > 10000) { SendClientMessageEx(playerid, COLOR_GREY, "   Gia tien phai tren $1 va khong qua $10,000!"); return 1; }
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the quan he voi chinh minh, hay /jerkoff de tu suong :D !"); return 1; }
					if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, Car))
					{
						if(gettime() >= PlayerInfo[playerid][pSexTime])
						{
							format(string, sizeof(string), "* Ban yeu cau %s quan he tinh duc voi ban, voi gia $%s.", GetPlayerNameEx(giveplayerid), number_format(money));
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Gai diem %s da moi ban quan he tinh duc, voi gia $%s (su dung /chapnhan sex) de thuc hien.", GetPlayerNameEx(playerid), number_format(money));
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							SexOffer[giveplayerid] = playerid;
							SexPrice[giveplayerid] = money;
							PlayerInfo[playerid][pSexTime] = gettime()+60;
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_GRAD2, " Ban da quan he tinh duc, xin vui long doi thoi gian tai lai!");
							return 1;
						}
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_GREY, "   Ban hoac nguoi khac phai o trong Oto!");
						return 1;
					}
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong o gan ban.");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai Gai diem!");
	}
	return 1;
}

CMD:wanted(playerid, params[])
{
	if(IsACop(playerid) || PlayerInfo[playerid][pJob] == 2 || PlayerInfo[playerid][pJob2] == 2)
	{
		new string[128], x;

		SendClientMessageEx(playerid, COLOR_GREEN, "Danh sach nghi pham truy na:");
		foreach(new i: Player)
		{
			if(PlayerInfo[i][pWantedLevel] >= 1)
			{
				format(string, sizeof(string), "%s%s: %d", string,GetPlayerNameEx(i),PlayerInfo[i][pWantedLevel]);
				x++;
				if(x > 3) {
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					x = 0;
					format(string, sizeof(string), " ");
				} else {
					format(string, sizeof(string), "%s, ", string);
				}
			}
		}
		if(x <= 3 && x > 0)
		{
			string[strlen(string)-2] = '.';
			SendClientMessageEx(playerid, COLOR_YELLOW, string);
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai Luat su hay nhan vien chinh phu!");
	}
	return 1;
}

CMD:drop(playerid, params[])
{
	new string[128], choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /drop [name]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san: Weapons, Pot, Crack, Materials, Packages, Crates, Radio, Pizza, Seeds, Rawopium, Heroin, Syringes");
		return 1;
	}
    else if(strcmp(choice,"seeds",true) == 0)
	{
		if(PlayerInfo[playerid][pOpiumSeeds] > 0 || PlayerInfo[playerid][pWSeeds] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "Ban da giam %d hat giong.", PlayerInfo[playerid][pOpiumSeeds]+PlayerInfo[playerid][pWSeeds]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			PlayerInfo[playerid][pOpiumSeeds] = 0, PlayerInfo[playerid][pWSeeds] = 0;
			format(string, sizeof(string), "* %s da nem bo hat giong cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong mang theo hat giong de vut bo!");
		}
	}
    else if(strcmp(choice,"rawopium",true) == 0)
	{
		if(PlayerInfo[playerid][pRawOpium] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "Ban da giam %d grams raw opium.", PlayerInfo[playerid][pRawOpium]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			PlayerInfo[playerid][pRawOpium] = 0;
			format(string, sizeof(string), "* %s da nem bo raw opium cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong tro bat ki raw opium nao de nem bo!");
		}
	}
	else if(strcmp(choice,"heroin",true) == 0)
	{
		if(PlayerInfo[playerid][pHeroin] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "Ban da giam %d grams heroin.", PlayerInfo[playerid][pHeroin]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			PlayerInfo[playerid][pHeroin] = 0;
			format(string, sizeof(string), "* %s da nem bo heroin cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong mang theo heroin de vut bo!");
		}
	}
	else if(strcmp(choice,"syringes",true) == 0)
	{
		if(PlayerInfo[playerid][pSyringes] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "Ban da giam %d bom kim tiem.", PlayerInfo[playerid][pSyringes]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			PlayerInfo[playerid][pSyringes] = 0;
			format(string, sizeof(string), "* %s nem bo kim tiem cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong mang theo kim tiem de vut bo!");
		}
	}

	else if(strcmp(choice,"materials",true) == 0)
	{
		if(PlayerInfo[playerid][pMats] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "Ban da giam %d Vat lieu.", PlayerInfo[playerid][pMats]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s da nem bo goi vat lieu cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pMats] = 0;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong tro bat ki goi vat lieu nao de nem bo!");
		}
	}
	else if(strcmp(choice,"radio",true) == 0)
	{
		if(PlayerInfo[playerid][pRadio] != 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s da vut bo radio cam tay cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pRadio] = 0;
			PlayerInfo[playerid][pRadioFreq] = 0;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong mang theo portable radio de vut bo!");
		}
	}
	else if(strcmp(choice,"weapons",true) == 0)
	{
		if(GetPVarInt(playerid, "IsInArena") >= 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay bay gio, ban dang trong arena!");
			return 1;
		}
		if(GetPVarInt( playerid, "EventToken") != 0)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang tham gia su kien.");
			return 1;
		}
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		ResetPlayerWeaponsEx(playerid);
		format(string, sizeof(string), "* %s da vut bo Sung cua ho.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else if(strcmp(choice,"pot",true) == 0)
	{
		if(PlayerInfo[playerid][pPot] > 0)
		{
			format(string, sizeof(string), "Ban da giam %d grams pot.", PlayerInfo[playerid][pPot]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s da nem bo pot cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pPot] = 0;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong tro bat ki goi pot nao de vut bo!");
		}
	}
	else if(strcmp(choice,"crack",true) == 0)
	{
		if(PlayerInfo[playerid][pCrack] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "Ban da giam %d grams crack.", PlayerInfo[playerid][pCrack]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s da nem bo crack cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pCrack] = 0;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong tro bat ki goi crack nao de nem bo!");
		}
	}
	else if(strcmp(choice,"packages",true) == 0)
	{
		if(GetPVarInt(playerid, "Packages") > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s da nem bo goi vat lieu cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			DeletePVar(playerid, "Packages");
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong cho bat ki goi nao de nem bo!");
		}
	}
	else if(strcmp(choice,"crates",true) == 0)
	{
		if(PlayerInfo[playerid][pCrates] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s da nem bo thung thuoc cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pCrates] = 0;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong cho bat ki thung thuoc nao de nem bo!");
		}
	}
	else if(strcmp(choice,"pizza",true) == 0)
	{
		if(GetPVarInt(playerid, "Pizza") > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s da nem bo banh pizza giao cua ho.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            DeletePVar(playerid, "Pizza");
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong cung cap pizzas!");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /drop [name]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san: Weapons, Pot, Crack, Materials, Packages, Crates, Radio");
	}
	return 1;
}

CMD:show(playerid, params[])
{
	new string[128], giveplayerid, choice[32];
	if(sscanf(params, "us[32]", giveplayerid, choice))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /show [Player] [name]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san: Pot, Crack, Heroin, Materials");
		return 1;
	}

	if(giveplayerid == playerid)
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the hien thi cho chinh minh!");
		return 1;
	}

	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if (!ProxDetectorS(5.0, playerid, giveplayerid))
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong o gan ban.");
				return 1;
			}

			if (strcmp(choice, "materials", true) == 0)
			{
			    new amount = PlayerInfo[playerid][pMats];
			    if(amount < 1)
			    {
			        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co Vat lieu nao!");
					return 1;
			    }
				format(string, sizeof(string), "%s da cho xem %d Materials.",  GetPlayerNameEx(playerid), amount);
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);

				format(string, sizeof(string), "Ban da cho xem %s cua %d Materials.", GetPlayerNameEx(giveplayerid), amount);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);

				format(string, sizeof(string), "* %s ban da cho xem %s mot so Materials.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			if (strcmp(choice, "pot", true) == 0)
			{
			    new amount = PlayerInfo[playerid][pPot];
			    if(amount < 1)
			    {
			        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bat ki pot!");
					return 1;
			    }
				format(string, sizeof(string), "%s da cho xem %d grams of pot.",  GetPlayerNameEx(playerid), amount);
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);

				format(string, sizeof(string), "Ban da cho xem %s cua %d grams of pot.", GetPlayerNameEx(giveplayerid), amount);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);

				format(string, sizeof(string), "* %s ban da cho xem %s mot so Pot.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			if (strcmp(choice, "crack", true) == 0)
			{
			    new amount = PlayerInfo[playerid][pCrack];
			    if(amount < 1)
			    {
			        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bat ki crack!");
					return 1;
			    }
				format(string, sizeof(string), "%s da cho xem %d grams of crack.",  GetPlayerNameEx(playerid), amount);
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);

				format(string, sizeof(string), "Ban da cho xem %s cua %d grams of crack.", GetPlayerNameEx(giveplayerid), amount);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);

				format(string, sizeof(string), "* %s ban da cho xem %s mot so Crack.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
   			if (strcmp(choice, "heroin", true) == 0)
			{
			    new amount = PlayerInfo[playerid][pHeroin];
			    if(amount < 1)
			    {
			        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co bat ki heroin!");
					return 1;
			    }
				format(string, sizeof(string), "%s da cho xem %d milligrams heroin.",  GetPlayerNameEx(playerid), amount);
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);

				format(string, sizeof(string), "Ban da cho xem %s cua %d milligrams of heroin.", GetPlayerNameEx(giveplayerid), amount);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);

				format(string, sizeof(string), "* %s ban da cho xem %s mot so heroin.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
		}
	}
	return 1;
}

/*CMD:givestorage(playerid, params[])
{
	new string[128], giveplayerid, choice[32];
	if(sscanf(params, "us[32]", giveplayerid, choice))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /givestorage [player] [storage item]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san : Bag, Backpack, Briefcase");
		return 1;
	}

	if(IsPlayerConnected(giveplayerid))
	{
		if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
		if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "You can not use this command on yourself!");

		if (strcmp(choice, "bag", true) == 0)
		{
			if(StorageInfo[playerid][0][sAttached] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "You must unequip it first before giving it away!");

			format(string, sizeof(string), "You have recieved a Bag from %s.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
			StorageInfo[giveplayerid][0][sStorage] = 1;
			StorageInfo[playerid][0][sStorage] = 0;
			new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
			format(string, sizeof(string), "%s(IP:%s) has given %s (IP:%s) a Bag.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
			Log("logs/pay.log", string);
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				format(string, sizeof(string), "[Admin] %s(IP:%s) has given %s(IP:%s) a Bag.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/admingive.log", string);
				format(string, sizeof(string), "[MAYCHU] %s(IP:%s) has given %s(IP:%s) a Bag.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				ABroadCast(COLOR_YELLOW, string, 2);
			}
			format(string, sizeof(string), "Ban da cho %s a Bag.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "* %s has given %s a Bag.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		if (strcmp(choice, "backpack", true) == 0)
		{
			if(StorageInfo[playerid][1][sAttached] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "You must unequip it first before giving it away!");

			format(string, sizeof(string), "You have recieved a Backpack from %s.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
			StorageInfo[giveplayerid][1][sStorage] = 1;
			StorageInfo[playerid][1][sStorage] = 0;
			new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
			format(string, sizeof(string), "%s(IP:%s) has given %s (IP:%s) a Backpack.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
			Log("logs/pay.log", string);
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				format(string, sizeof(string), "[Admin] %s(IP:%s) has given %s(IP:%s) a Backpack.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/admingive.log", string);
				format(string, sizeof(string), "[MAYCHU] %s(IP:%s) has given %s(IP:%s) a Backpack.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				ABroadCast(COLOR_YELLOW, string, 2);
			}
			format(string, sizeof(string), "Ban da cho %s a Backpack.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "* %s has given %s a Backpack.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		if (strcmp(choice, "briefcase", true) == 0)
		{
			if(StorageInfo[playerid][2][sAttached] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "You must unequip it first before giving it away!");

			format(string, sizeof(string), "You have recieved a Briefcase from %s.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
			StorageInfo[giveplayerid][2][sStorage] = 1;
			StorageInfo[playerid][2][sStorage] = 0;
			new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
			format(string, sizeof(string), "%s(IP:%s) has given %s (IP:%s) a Briefcase.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
			Log("logs/pay.log", string);
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				format(string, sizeof(string), "[Admin] %s(IP:%s) has given %s(IP:%s) a Briefcase.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				Log("logs/admingive.log", string);
				format(string, sizeof(string), "[MAYCHU] %s(IP:%s) has given %s(IP:%s) a Briefcase.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex);
				ABroadCast(COLOR_YELLOW, string, 2);
			}
			format(string, sizeof(string), "Ban da cho %s a Briefcase.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "* %s has given %s a Briefcase.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
	}
	return 1;
}*/

CMD:give(playerid, params[])
{
	new string[128], giveplayerid, choice[32], storageid, amount;

	if(sscanf(params, "us[32]d", giveplayerid, choice, amount))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /give [Player] [name] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san: Pot, Crack, Materials, Firework, GoldTokens, Heroin, Rawopium, Syringes, Opiumseeds");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san: Sprunk, Pbtokens Thuoc sung, Sat, la can sa, tien ban");
		return 1;
	}
	/*if(sscanf(params, "us[32]dd", giveplayerid, choice, storageid, amount))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /give [Player] [name] [storageid] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san: Pot, Crack, Materials, Firework");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
		return 1;
	}

	if(storageid < 0 || storageid > 1) {
		SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /give [Player] [name] [storageid] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san: Pot, Crack, Materials, Firework");
		SendClientMessageEx(playerid, COLOR_GREY, "StorageIDs: (0) Pocket - (1) Equipped Storage Device");
		return 1;
	}

	// Find the storageid of the storagedevice.
	if(storageid == 1) {
		new bool:itemEquipped = false;
		for(new i = 0; i < 3; i++)
		{
			if(StorageInfo[playerid][i][sAttached] == 1) {
				storageid = i+1;
				itemEquipped = true;
			}
		}
		if(itemEquipped == false) return SendClientMessageEx(playerid, COLOR_WHITE, "You don't have a storage device equipped!");
	}*/

	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong co nhieu!");
			if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong gan ban.");
			if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay tren chinh minh!");

			if (strcmp(choice, "materials", true) == 0)
			{
				TransferStorage(giveplayerid, -1, playerid, storageid, 4, amount, -1, -1);
			}
			if(strcmp(choice, "sprunk", true) == 0)
			{
				if(PlayerInfo[playerid][pSprunk] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc %d Sprunk Can(s) tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pSprunk] += amount;
					PlayerInfo[playerid][pSprunk] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d Sprunk Can(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					format(string, sizeof(string), "Ban da cho %s %d Sprunk Can(s).", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s da cho %s mot ty Sprunk Can(s).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co nhieu.");
			}
			if(strcmp(choice, "thuocsung", true) == 0)
			{
				if(PlayerInfo[playerid][pThuocSung] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc so luong: %d thuoc sung tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pThuocSung] += amount;
					PlayerInfo[playerid][pThuocSung] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d so luong thuoc sung", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					format(string, sizeof(string), "Ban da dua cho %s so luong thuoc sung: %d ", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s vua dua cho %s mot so luong thuoc sung", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co nhieu.");
			}
			if(strcmp(choice, "banh", true) == 0)
			{
				if(PlayerInfo[playerid][pBanh] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc so luong: %d banh trung thu tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pBanh] += amount;
					PlayerInfo[playerid][pBanh] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d banh trung thu", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					format(string, sizeof(string), "Ban da dua cho %s so luong banh trung thu: %d ", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s vua dua cho %s mot so luong banh trung thu", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co nhieu.");
			}
			if(strcmp(choice, "sat", true) == 0)
			{
				if(PlayerInfo[playerid][pSat] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc so luong: %d sat sug tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pSat] += amount;
					PlayerInfo[playerid][pSat] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d so luong sat ", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					format(string, sizeof(string), "Ban da dua cho %s so luong sat: %d ", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s vua dua cho %s mot so luong sat", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co nhieu.");
			}
			if(strcmp(choice, "lacansa", true) == 0)
			{
				if(PlayerInfo[playerid][pCansap] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc so luong: %d La Can Sa tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pCansap] += amount;
					PlayerInfo[playerid][pCansap] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d so luong sat ", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					format(string, sizeof(string), "Ban da dua cho %s so luong Can Sa: %d ", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s vua dua cho %s mot so luong Can Sa", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co nhieu.");
			}
			if(strcmp(choice, "tienban", true) == 0)
			{
				if(PlayerInfo[playerid][pTienBan] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc so luong: %d Tien Ban Tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pTienBan] += amount;
					PlayerInfo[playerid][pTienBan] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d so luong Tien Ban ", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					format(string, sizeof(string), "Ban da dua cho %s so luong Tien Ban: %d ", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s vua dua cho %s mot so luong Tien Ban", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co nhieu.");
			}
			if(strcmp(choice, "medkit", true) == 0)
			{
				if(PlayerInfo[playerid][pTienBan] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc so luong: %d Medkit tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pMedkit] += amount;
					PlayerInfo[playerid][pMedkit] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d so luong Medkit ", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					format(string, sizeof(string), "Ban da dua cho %s so luong Medkit: %d ", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s vua dua cho %s mot so luong Medkit", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co nhieu Medkit.");
			}
			if(strcmp(choice, "pbtokens", true) == 0)
			{
				if(PlayerInfo[playerid][pPaintTokens] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc %d Paintball Token(s) tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pPaintTokens] += amount;
					PlayerInfo[playerid][pPaintTokens] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d Paintball Token(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					format(string, sizeof(string), "Ban da cho %s %d Paintball Token(s).", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s da cho %s mot ty Paintball Token(s).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong co nhieu.");
			}
			if (strcmp(choice, "goldtokens", true) == 0)
			{
				if(PlayerInfo[playerid][pGoldBoxTokens] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc %d Gold Box Token(s) tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pGoldBoxTokens] += amount;
					PlayerInfo[playerid][pGoldBoxTokens] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d Gold Box Token(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					if(PlayerInfo[playerid][pAdmin] >= 2)
					{

						format(string, sizeof(string), "[Admin] %s(IP:%s) da cho %s(IP:%s) %d Gold Box Token(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						Log("logs/admingive.log", string);
						format(string, sizeof(string), "[MAYCHU] %s(IP:%s) da cho %s(IP:%s) %d Gold Box Token(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						ABroadCast(COLOR_YELLOW, string, 2);
					}
					format(string, sizeof(string), "Ban da cho %s %d Gold Box Token(s).", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s da cho %s mot ty Gold Box Token(s).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co nhieu!");
					return 1;
				}
			}
			if (strcmp(choice, "firework", true) == 0)
			{
				if(PlayerInfo[playerid][pFirework] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc %d firework(s) tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pFirework] += amount;
					PlayerInfo[playerid][pFirework] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d firework(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					if(PlayerInfo[playerid][pAdmin] >= 2)
					{

						format(string, sizeof(string), "[Admin] %s(IP:%s) da cho %s(IP:%s) %d firework(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						Log("logs/admingive.log", string);
						format(string, sizeof(string), "[MAYCHU] %s(IP:%s) da cho %s(IP:%s) %d firework(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						ABroadCast(COLOR_YELLOW, string, 2);
					}
					format(string, sizeof(string), "Ban da cho %s %d firework(s).", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s da cho %s mot ty firework(s).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co nhieu!");
					return 1;
				}
			}
			if (strcmp(choice, "opiumseeds", true) == 0)
			{
				if(PlayerInfo[playerid][pOpiumSeeds] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc %d opium seed(s) tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pOpiumSeeds] += amount;
					PlayerInfo[playerid][pOpiumSeeds] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d opium seed(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					if(PlayerInfo[playerid][pAdmin] >= 2)
					{
						format(string, sizeof(string), "[Admin] %s(IP:%s) da cho %s(IP:%s) %d opium seed(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						Log("logs/admingive.log", string);
						format(string, sizeof(string), "[MAYCHU] %s(IP:%s) da cho %s(IP:%s) %d opium seed(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						ABroadCast(COLOR_YELLOW, string, 2);
					}
					format(string, sizeof(string), "Ban da cho %s %d opium seed(s).", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s da cho %s mot ty opium seed(s).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co nhieu!");
					return 1;
				}
			}
			if (strcmp(choice, "syringes", true) == 0)
			{
				if(PlayerInfo[playerid][pSyringes] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc %d syringe(s) tu %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pSyringes] += amount;
					PlayerInfo[playerid][pSyringes] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d syringe(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					if(PlayerInfo[playerid][pAdmin] >= 2)
					{

						format(string, sizeof(string), "[Admin] %s(IP:%s) da cho %s(IP:%s) %d syringe(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						Log("logs/admingive.log", string);
						format(string, sizeof(string), "[MAYCHU] %s(IP:%s) da cho %s(IP:%s) %d syringe(s).", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						ABroadCast(COLOR_YELLOW, string, 2);
					}
					format(string, sizeof(string), "Ban da cho %s %d syringe(s).", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s da cho %s mot ty syringe(s).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co nhieu!");
					return 1;
				}
			}
			if (strcmp(choice, "heroin", true) == 0)
			{
				if(PlayerInfo[playerid][pHeroin] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc %d milligram(s) of heroin from %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pHeroin] += amount;
					PlayerInfo[playerid][pHeroin] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d milligram(s) of heroin.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					if(PlayerInfo[playerid][pAdmin] >= 2)
					{
						format(string, sizeof(string), "[Admin] %s(IP:%s) da cho %s(IP:%s) %d milligram(s) of heroin.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						Log("logs/admingive.log", string);
						format(string, sizeof(string), "[MAYCHU] %s(IP:%s) da cho %s(IP:%s) %d milligram(s) of heroin.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						ABroadCast(COLOR_YELLOW, string, 2);
					}
					format(string, sizeof(string), "Ban da cho %s %d milligram(s) of heroin.", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s da cho %s mot ty milligram(s) of heroin.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co nhieu!");
					return 1;
				}
			}
			if (strcmp(choice, "rawopium", true) == 0)
			{
				if(PlayerInfo[playerid][pRawOpium] >= amount)
				{
					format(string, sizeof(string), "Ban da nhan duoc %d milligram(s) of raw opium from %s.", amount, GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pRawOpium] += amount;
					PlayerInfo[playerid][pRawOpium] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) da cho %s (IP:%s) %d milligram(s) of raw opium.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, number_format(amount));
					Log("logs/pay.log", string);
					if(PlayerInfo[playerid][pAdmin] >= 2)
					{
						format(string, sizeof(string), "[Admin] %s(IP:%s) da cho %s(IP:%s) %d milligram(s) of raw opium.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						Log("logs/admingive.log", string);
						format(string, sizeof(string), "[MAYCHU] %s(IP:%s) da cho %s(IP:%s) %d milligram(s) of raw opium.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
						ABroadCast(COLOR_YELLOW, string, 2);
					}
					format(string, sizeof(string), "Ban da cho %s %d milligram(s) of raw opium.", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s da cho %s mot ty milligram(s) of raw opium.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co nhieu!");
					return 1;
				}
			}
			if (strcmp(choice, "pot", true) == 0)
			{
				TransferStorage(giveplayerid, -1, playerid, storageid, 2, amount, -1, -1);
			}
			if (strcmp(choice, "crack", true) == 0)
			{
				TransferStorage(giveplayerid, -1, playerid, storageid, 3, amount, -1, -1);
			}
		}
	}
	return 1;
}

CMD:selltreasure(playerid, params[])
{
	new choice[32], amount;
    if(sscanf(params, "s[32]d", choice, amount))
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /selltreasure [name] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san: junkmetal ($150), newcoin ($50), oldcoin ($100), brokenwatch ($5), oldkey ($20), goldwatch ($50000)");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san: goldnugget ($100000), silvernugget ($25000), treasurechest ($1000000)");
		return 1;
	}
	else if(!IsPlayerInRangeOfPoint(playerid, 3 , 164.9517, -1779.5931, 4.3000)) {
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o diem ban.");
	}
	else if(amount < 0) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the ban am Item.");
	}
	new szMessage[128];
	if(strcmp(choice, "junkmetal", true) == 0) {
	    if(amount <= GetPVarInt(playerid, "junkmetal") && amount > 0) {
	        format(szMessage, 128, "Ban da ban  %d junk metals voi gia $%d.", amount, amount*150);
	        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	        GivePlayerCash(playerid, amount*150);
	        SetPVarInt(playerid, "junkmetal", GetPVarInt(playerid, "junkmetal")-amount);
	        SaveTreasureInventory(playerid);
	    }
	    else {
	        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du Item de ban.");
	    }
	}
	else if(strcmp(choice, "newcoin", true) == 0) {
	    if(amount <= GetPVarInt(playerid, "newcoin") && amount > 0) {
	        format(szMessage, 128, "Ban da ban  %d new coins voi gia $%d.", amount, amount*50);
	        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	        GivePlayerCash(playerid, amount*50);
	        SetPVarInt(playerid, "newcoin", GetPVarInt(playerid, "newcoin")-amount);
	        SaveTreasureInventory(playerid);
	    }
	    else {
	        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du Item de ban.");
	    }
	}
	else if(strcmp(choice, "oldcoin", true) == 0) {
	    if(amount <= GetPVarInt(playerid, "oldcoin") && amount > 0) {
	        format(szMessage, 128, "Ban da ban  %d old coins voi gia $%d.", amount, amount*100);
	        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	        GivePlayerCash(playerid, amount*100);
	        SetPVarInt(playerid, "oldcoin", GetPVarInt(playerid, "oldcoin")-amount);
	        SaveTreasureInventory(playerid);
	    }
	    else {
	        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du Item de ban.");
	    }
	}
	else if(strcmp(choice, "brokenwatch", true) == 0) {
	    if(amount <= GetPVarInt(playerid, "brokenwatch") && amount > 0) {
	        format(szMessage, 128, "Ban da ban  %d broken watchs voi gia $%d.", amount, amount*5);
	        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	        GivePlayerCash(playerid, amount*5);
	        SetPVarInt(playerid, "brokenwatch", GetPVarInt(playerid, "brokenwatch")-amount);
	        SaveTreasureInventory(playerid);
	    }
	    else {
	        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du Item de ban.");
	    }
	}
	else if(strcmp(choice, "oldkey", true) == 0) {
	    if(amount <= GetPVarInt(playerid, "oldkey") && amount > 0) {
	        format(szMessage, 128, "Ban da ban  %d old keys voi gia $%d.", amount, amount*20);
	        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	        GivePlayerCash(playerid, amount*20);
	        SetPVarInt(playerid, "oldkey", GetPVarInt(playerid, "oldkey")-amount);
	        SaveTreasureInventory(playerid);
	    }
	    else {
	        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du Item de ban.");
	    }
	}
	else if(strcmp(choice, "goldwatch", true) == 0) {
	    if(amount <= GetPVarInt(playerid, "goldwatch") && amount > 0) {
	        format(szMessage, 128, "Ban da ban  %d gold watchs voi gia $%d.", amount, amount*50000);
	        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	        GivePlayerCash(playerid, amount*50000);
	        SetPVarInt(playerid, "goldwatch", GetPVarInt(playerid, "goldwatch")-amount);
	        SaveTreasureInventory(playerid);
	    }
	    else {
	        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du Item de ban.");
	    }
	}
	else if(strcmp(choice, "goldnugget", true) == 0) {
	    if(amount <= GetPVarInt(playerid, "goldnugget") && amount > 0) {
	        format(szMessage, 128, "Ban da ban  %d gold nuggets voi gia $%d.", amount, amount*100000);
	        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	        GivePlayerCash(playerid, amount*100000);
	        SetPVarInt(playerid, "goldnugget", GetPVarInt(playerid, "goldnugget")-amount);
	        SaveTreasureInventory(playerid);
	    }
	    else {
	        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du Item de ban.");
	    }
	}
	else if(strcmp(choice, "silvernugget", true) == 0) {
	    if(amount <= GetPVarInt(playerid, "silvernugget") && amount > 0) {
	        format(szMessage, 128, "Ban da ban  %d silver nuggets voi gia $%d.", amount, amount*25000);
	        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	        GivePlayerCash(playerid, amount*25000);
	        SetPVarInt(playerid, "silvernugget", GetPVarInt(playerid, "silvernugget")-amount);
	        SaveTreasureInventory(playerid);
	    }
	    else {
	        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du Item de ban.");
	    }
	}
	else if(strcmp(choice, "treasurechest", true) == 0) {
	    if(amount <= GetPVarInt(playerid, "treasurechest") && amount > 0) {
	        format(szMessage, 128, "Ban da ban %d treasure chests voi gia $%d.", amount, amount*1000000);
	        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	        GivePlayerCash(playerid, amount*1000000);
	        SetPVarInt(playerid, "treasure", GetPVarInt(playerid, "treasure")-amount);
	        SaveTreasureInventory(playerid);
	    }
	    else {
	        SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co du Item de ban");
	    }
	}
	return 1;
}

CMD:sell(playerid, params[])
{
	new string[128], giveplayerid, choice[32], amount, price;
    if(sscanf(params, "us[32]dd", giveplayerid, choice, amount, price))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /sell [Player] [name] [amount] [Gia tien]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san: Thuocsung, Sat, Pot, Crack, Materials, Firework, Syringes, Rawopium, Heroin, RimKit, Carvoucher, PVIPVoucher");
		return 1;
	}
	if(PlayerCuffed[playerid] >= 1 || PlayerInfo[playerid][pHospital] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the lam dieu nay bay gio.");
	if(WatchingTV[playerid] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang xem TV!");
	if(price < 50000) return SendClientMessageEx(playerid, COLOR_GREY, "Gia khong the thap hon $50,000. Su dung /give cho mot giao dich tranh lua dao.");
	if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "So tien khong the duoi 1.");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	if(playerid == giveplayerid) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the ban cho chinh ban!");
	if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi mua phai o gan ban.");

	if(strcmp(choice, "materials", true) == 0)
	{
 		if(PlayerInfo[playerid][pJob] != 9 && PlayerInfo[playerid][pJob2] != 9 && PlayerInfo[playerid][pJob] != 18 && PlayerInfo[playerid][pJob2] != 18)
		{
			return SendClientMessageEx(playerid, COLOR_GREY, "ban khong phai Nguoi che tao vu khi hoac Tho thu cong.");
		}
		if(GetPVarInt(playerid, "SellMatsTimer") > 0)
		{
			format(string, sizeof(string), "Ban phai tro %d de tiep tuc ban viet lieu.", GetPVarInt(playerid, "SellMatsTimer"));
			return SendClientMessageEx(playerid,COLOR_GREY,string);
		}
		if(amount > PlayerInfo[playerid][pMats]) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co nhieu  vat lieu!"); return 1; }
		format(string, sizeof(string), "* Ban muon ban %s cho %s materials voi gia $%s.", GetPlayerNameEx(giveplayerid), number_format(amount), number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* %s muon ban cho ban %s materials voi gia $%s, (su dung /chapnhan mats) de mua.", GetPlayerNameEx(playerid), number_format(amount), number_format(price));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		SetPVarInt(playerid, "SellMatsTimer", 30);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_SELLMATSTIMER);
		MatsOffer[giveplayerid] = playerid;
		MatsPrice[giveplayerid] = price;
		MatsAmount[giveplayerid] = amount;
	 	SetPVarInt(giveplayerid, "MatsSeller_SQLId", GetPlayerSQLId(playerid));
	}

	else if (strcmp(choice, "crack", true) == 0)
	{
 		if(PlayerInfo[playerid][pJob] != 4 && PlayerInfo[playerid][pJob2] != 4)
		{
			return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai Nguoi ban thuoc phien.");
		}
		if(gettime() < PlayerInfo[playerid][pDrugsTime])
		{
			return SendClientMessageEx(playerid, COLOR_WHITE, "Ban phai tro 1 phut sau khi da ban thuoc.");
		}
		if(amount < 1 || amount > 99) { SendClientMessageEx(playerid, COLOR_GREY, "   Grams khong thao hon 1, hoac tren 99!"); return 1; }
		if(price < 1 || price > 99999) { SendClientMessageEx(playerid, COLOR_GREY, "   Gia khong thap hon 1, hoac tren 99999!"); return 1; }
		if(amount > PlayerInfo[playerid][pCrack]) { SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong co nhieu Crack!"); return 1; }
		format(string, sizeof(string), "* Ban muon ban %s cho %d grams of crack voi gia $%d.", GetPlayerNameEx(giveplayerid), amount, price);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Nguoi ban thuoc phien %s muon ban cho ban %d grams of crack voi gia $%s, (su dung /chapnhan crack) de mua.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		PlayerInfo[playerid][pDrugsTime] = gettime()+60;
		CrackOffer[giveplayerid] = playerid;
		CrackPrice[giveplayerid] = price;
		CrackGram[giveplayerid] = amount;
	 	SetPVarInt(giveplayerid, "CrackSeller_SQLId", GetPlayerSQLId(playerid));
	}
	else if (strcmp(choice, "pot", true) == 0)
	{
 		if(PlayerInfo[playerid][pJob] != 4 && PlayerInfo[playerid][pJob2] != 4)
		{
			return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong phai Nguoi ban thuoc phien.");
		}
		if(gettime() < PlayerInfo[playerid][pDrugsTime])
		{
			return SendClientMessageEx(playerid, COLOR_WHITE, "Ban phai tro 1 phut sau khi da ban thuoc.");
		}
		if(amount < 1 || amount > 99) { return SendClientMessageEx(playerid, COLOR_GREY, "   Grams khong thao hon 1, hoac tren 99!"); }
		if(price < 1 || price > 99999) { return SendClientMessageEx(playerid, COLOR_GREY, "   Gia khong thap hon 1, hoac tren 99999!"); }
		if(amount > PlayerInfo[playerid][pPot]) { return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong co nhieu pot!"); }
		format(string, sizeof(string), "* Ban muon ban %s cho %d grams of pot voi gia $%d.", GetPlayerNameEx(giveplayerid), amount, price);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Nguoi ban thuoc phien %s muon ban cho ban %d grams of pot voi gia $%s, (su dung /chapnhan pot) de mua.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
		PlayerInfo[playerid][pDrugsTime] = gettime()+60;
		PotOffer[giveplayerid] = playerid;
		PotPrice[giveplayerid] = price;
		PotGram[giveplayerid] = amount;
	 	SetPVarInt(giveplayerid, "PotSeller_SQLId", GetPlayerSQLId(playerid));
	}

	else if (strcmp(choice, "firework", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pFirework]) { SendClientMessageEx(playerid, COLOR_GREY, "  Ban khong co nhieu fireworks!"); return 1; }
		format(string, sizeof(string), "* Ban muon ban %s cho %d fireworks voi gia $%s.", GetPlayerNameEx(giveplayerid), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* %s muon ban cho ban %d fireworks voi gia $%s, (su dung /chapnhan firework) de mua.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	 	SetPVarInt(giveplayerid, "FireworkOffer", playerid);
	 	SetPVarInt(giveplayerid, "FireworkPrice", price);
	 	SetPVarInt(giveplayerid, "FireworkCount", amount);
	 	SetPVarInt(giveplayerid, "FireworkSeller_SQLId", GetPlayerSQLId(playerid));
	}
	else if (strcmp(choice, "syringes", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pSyringes])
			return SendClientMessageEx(playerid, COLOR_GREY, " Ban khong co nhieu syringes.");

		if(PlayerInfo[giveplayerid][pSyringes] >= 3)
		    return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do da co 3 syringes.");

		format(string, sizeof(string), "* Ban muon ban %s cho %d syringes voi gia $%s.", GetPlayerNameEx(giveplayerid), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* %s muon ban cho ban %d syringes voi gia $%s, (su dung /chapnhan syringes) de mua.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	 	SetPVarInt(giveplayerid, "SyringesOffer", playerid);
	 	SetPVarInt(giveplayerid, "SyringesPrice", price);
	 	SetPVarInt(giveplayerid, "SyringesCount", amount);
	 	SetPVarInt(giveplayerid, "SyringesSeller_SQLId", GetPlayerSQLId(playerid));
	}

    else if (strcmp(choice, "rawopium", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pRawOpium])
			return SendClientMessageEx(playerid, COLOR_GREY, " Ban khong co nhieu raw opium.");

		format(string, sizeof(string), "* Ban muon ban %s cho %d grams raw opium voi gia $%s.", GetPlayerNameEx(giveplayerid), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* %s muon ban cho ban %d grams raw opium voi gia $%s, (su dung /chapnhan rawopium) de mua.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	 	SetPVarInt(giveplayerid, "RawOpiumOffer", playerid);
	 	SetPVarInt(giveplayerid, "RawOpiumPrice", price);
	 	SetPVarInt(giveplayerid, "RawOpiumCount", amount);
	 	SetPVarInt(giveplayerid, "RawOpiumSeller_SQLId", GetPlayerSQLId(playerid));
	}

	else if (strcmp(choice, "heroin", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pHeroin])
			return SendClientMessageEx(playerid, COLOR_GREY, " Ban khong co nhieu heroin.");

		format(string, sizeof(string), "* Ban muon ban %s cho %d gramshe roin voi gia $%s.", GetPlayerNameEx(giveplayerid), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* %s muon ban cho ban %d grams heroin voi gia $%s, (su dung /chapnhan heroin) de mua.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	 	SetPVarInt(giveplayerid, "HeroinOffer", playerid);
	 	SetPVarInt(giveplayerid, "HeroinPrice", price);
	 	SetPVarInt(giveplayerid, "HeroinCount", amount);
	 	SetPVarInt(giveplayerid, "HeroinSeller_SQLId", GetPlayerSQLId(playerid));
	}

    else if (strcmp(choice, "rimkit", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pRimMod])
			return SendClientMessageEx(playerid, COLOR_GREY, " Ban khong co nhieu rim kits.");

		format(string, sizeof(string), "* Ban muon ban %s cho %d rim kits voi gia $%s.", GetPlayerNameEx(giveplayerid), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* %s muon ban cho ban %d rim its voi gia $%s, (su dung /chapnhan rimkit) de mua.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	 	SetPVarInt(giveplayerid, "RimOffer", playerid);
	 	SetPVarInt(giveplayerid, "RimPrice", price);
	 	SetPVarInt(giveplayerid, "RimCount", amount);
	 	SetPVarInt(giveplayerid, "RimSeller_SQLId", GetPlayerSQLId(playerid));
	}
	else if (strcmp(choice, "pvipvoucher", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pPVIPVoucher])
			return SendClientMessageEx(playerid, COLOR_GREY, " Ban khong co phieu su dung Platinum VIP .");

		format(string, sizeof(string), "* Ban muon ban %s cho %d phieu su dung  Platinum VIP (s) voi gia $%s.", GetPlayerNameEx(giveplayerid), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* %s muon ban cho ban %d phieu su dung Platinum VIP(s) voi gia $%s, (su dung /chapnhan pvipvoucher) de mua.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
	 	SetPVarInt(giveplayerid, "PVIPVoucherOffer", playerid);
	 	SetPVarInt(giveplayerid, "PVIPVoucherPrice", price);
	 	SetPVarInt(giveplayerid, "PVIPVoucherCount", amount);
	 	SetPVarInt(giveplayerid, "PVIPVoucherSeller_SQLId", GetPlayerSQLId(playerid));
	}
	return 1;

}

CMD:nghiviec(playerid, params[]) {
	return cmd_quitjob(playerid, params);
}

CMD:quitjob(playerid, params[])
{
	if(PlayerInfo[playerid][pDonateRank] >= 1 || PlayerInfo[playerid][pFamed] >= 1)
	{
		new jobid;
		if(sscanf(params, "d", jobid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /nghiviec [jobid]");
			SendClientMessageEx(playerid, COLOR_GREY, "Co san: 1, 2 (VIP/Famed)");
			return 1;
		}

		switch(jobid)
		{
		case 1:
			{			
				PlayAudioStreamForPlayer(playerid, "http://web.samp-vn.com/bandanghicongviecthunhat.mp3");
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da thoat cong viec chinh thanh cong.");
				PlayerInfo[playerid][pJob] = 0;
			}
		case 2:
			{
				PlayAudioStreamForPlayer(playerid, "http://web.samp-vn.com/bandanghicongviecthuhai.mp3");
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da thoat cong viec phu thanh cong.");
				PlayerInfo[playerid][pJob2] = 0;
			}
		default:
			{
				SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /nghiviec [jobid]");
				SendClientMessageEx(playerid, COLOR_GREY, "Co san: 1, 2 (VIP/Famed)");
			}
		}
	}
	else
	{
		if(PlayerInfo[playerid][pJob] > 0)
		{
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da thoat cong viec chinh thanh cong.");
			PlayerInfo[playerid][pJob] = 0;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong co cong viec!");
		}
	}
	return 1;
}

CMD:bail(playerid, params[])
{
	if(PlayerInfo[playerid][pJailTime] > 0)
	{
		if(JailPrice[playerid] > 0)
		{
			if(GetPlayerCash(playerid) > JailPrice[playerid])
			{
				new string[128];
				format(string, sizeof(string), "Ban da bao lanh cho minh voi so tien $%d.", JailPrice[playerid]);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, -JailPrice[playerid]);
				JailPrice[playerid] = 0;
				WantLawyer[playerid] = 0; CallLawyer[playerid] = 0;
				PlayerInfo[playerid][pJailTime] = 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co du kha nang bao lanh.");
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co gia tien bao lanh.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong ngoi tu.");
	}
	return 1;
}

CMD:ticket(playerid, params[])
{
	if(IsACop(playerid))
	{

		new string[128], giveplayerid, moneys, reason[64];
		if(sscanf(params, "uds[64]", giveplayerid, moneys, reason)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /ticket [Player] [Gia tien] [Ly do]");

		if(giveplayerid == playerid)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the viet ve phat cho chinh minh.");
			return 1;
		}

		if(moneys < 1 || moneys > 100000) { SendClientMessageEx(playerid, COLOR_GREY, "Ve phat khong duoi 1 VND hoac cao hon $100,000."); return 1; }
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(giveplayerid == playerid) return 1;

					format(string, sizeof(string), "* Ban da dua cho %s mot ve phat tri gia $%d, ly do: %s", GetPlayerNameEx(giveplayerid), moneys, reason);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Si quan %s da dua cho ban mot ve phat tri gia $%d, ly do: %s", GetPlayerNameEx(playerid), moneys, reason);
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Si quan %s da viet mot ve phat dua cho %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, "* Su dung /chapnhanvephat, de chap nhan ve phat.");
					TicketOffer[giveplayerid] = playerid;
					TicketMoney[giveplayerid] = moneys;
					return 1;
				}
				else
				{
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi bi phat khong gan ban.");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
			return 1;
		}
	}
	return 1;
}

CMD:backentrance(playerid, params[])
{
	if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 3) {
	    if(BackEntrance) {
	        BackEntrance = 0;
	        SendClientMessageEx(playerid, COLOR_WHITE, "Loi vao phia sau da bi khoa.");
	    }
	    else {
	        BackEntrance = 1;
	        SendClientMessageEx(playerid, COLOR_WHITE, "Loi vao phia sau da duoc mo khoa.");
	    }
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong duoc phep su dung lenh nay.");
	return 1;
}

CMD:isolate(playerid, params[])
{
	if(!IsACop(playerid)) {
	    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong duoc phep su dung lenh nay!");
	}

	else {

		new
		    iGivePlayer,
			szMessage[128];

	    if(sscanf(params, "u", iGivePlayer)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /isolate [player]");
		}
		else if(iGivePlayer == playerid) {
		    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung lenh nay voi chinh minh!");
		}
		else if(!IsPlayerConnected(iGivePlayer)) {
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		}
		else if(!ProxDetectorS(10.0, playerid, iGivePlayer)) {
		    SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong o gan ban.");
		}
		else {
			if(strfind(PlayerInfo[iGivePlayer][pPrisonReason], "[IC]", true) != -1)
   			{
                strcpy(PlayerInfo[iGivePlayer][pPrisonReason], "[ISOLATE] EBCF Arrest", 128);
         		format(szMessage, sizeof(szMessage), "Ban da dich chuyen %s toi isolation.", GetPlayerNameEx(iGivePlayer));
           		SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
            	format(szMessage, sizeof(szMessage), "%s has sent you to isolation.", GetPlayerNameEx(playerid));
	            SendClientMessageEx(iGivePlayer, COLOR_WHITE, szMessage);
	            SetPlayerPos(iGivePlayer, -2095.3391, -215.8563, 978.8315);

	        }
	        else if(strfind(PlayerInfo[iGivePlayer][pPrisonReason], "[ISOLATE]", true) != -1)
	        {
         		new rand;
           		strcpy(PlayerInfo[iGivePlayer][pPrisonReason], "[IC] EBCF Arrest", 128);
	            format(szMessage, sizeof(szMessage), "You have released %s from isolation.", GetPlayerNameEx(iGivePlayer));
	            SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	            format(szMessage, sizeof(szMessage), "%s has released you from isolation.", GetPlayerNameEx(playerid));
	            SendClientMessageEx(iGivePlayer, COLOR_WHITE, szMessage);
          		rand = random(sizeof(DocPrison));
				SetPlayerPos(iGivePlayer, DocPrison[rand][0], DocPrison[rand][1], DocPrison[rand][2]);
		    }
		    else SendClientMessageEx(playerid, COLOR_WHITE, "Nguoi do  khong o trong tu.");
		}
	}
	return 1;
}

CMD:docarrest(playerid, params[])
{
	if(!IsACop(playerid)) SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la LEO faction. ");
	else if(!IsAtArrestPoint(playerid, 2)) SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o diem bat giu tai DOC." );

	else
	{
   		new
     		moneys,
       		time,
			string[256];

        new suspect = GetClosestPlayer(playerid);
  		if(sscanf(params, "dddd", moneys, time)) SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /docarrest [fine] [minutes]");
		else if(!(1 <= moneys <= 250000)) SendClientMessageEx(playerid, COLOR_GREY, "Phat tien ngoi tu khong duoi $1 va tren $250,000.");
		else if(!(1 <= time <= 120)) SendClientMessageEx(playerid, COLOR_GREY, "Thoi gian ngoi tu khong duoi 1 va tren 120 phut - co the dua nguoi do toi tu de co them thoi gian  giam giu.");
		else if(!IsPlayerConnected(suspect)) SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		else if(!ProxDetectorS(5.0, playerid, suspect)) SendClientMessageEx(playerid, COLOR_GREY, "Ban phai o gan nghi pham.");
		else if(PlayerInfo[suspect][pWantedLevel] < 1 && PlayerInfo[playerid][pMember] != 12) SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do phai co it nhat 1 cap do truy na");
		else {
			SetPVarInt(playerid, "Arrest_Price", moneys);
			SetPVarInt(playerid, "Arrest_Time", time);
			SetPVarInt(playerid, "Arrest_Suspect", suspect);
			SetPVarInt(playerid, "Arrest_Type", 2);
			format(string, sizeof(string), "Hay viet mot bao cao ngan gon ve viec bat giu %s va nhung hanh dong do.\n\nBao cao phai co it nhat 30 ki tu va nhieu nhat la 128 ki tu.", GetPlayerNameEx(suspect));
			ShowPlayerDialog(playerid, DIALOG_ARRESTREPORT, DIALOG_STYLE_INPUT, "Bao cao bat giu", string, "Gui di", "");
	    }
	}
	return 1;
}

/*CMD:docarrest(playerid, params[])
{
	if(!IsACop(playerid)) SendClientMessageEx(playerid, COLOR_GREY, "You are not part of a LEO faction. ");
	else if(!IsAtArrestPoint(playerid, 2)) SendClientMessageEx(playerid, COLOR_GREY, "You are not at the DoC Prison arrest point." );

	else
	{
   		new
     		moneys,
       		time,
			string[128];

        new suspect = GetClosestPlayer(playerid);
  		if(sscanf(params, "dddd", moneys, time)) SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /docarrest [fine] [minutes]");
		else if(!(1 <= moneys <= 250000)) SendClientMessageEx(playerid, COLOR_GREY, "The jail fine can't be below $1 or above $250,000.");
		else if(!(1 <= time <= 120)) SendClientMessageEx(playerid, COLOR_GREY, "Jail time can't be below 1 or above 120 minutes - take the person to prison for more time.");
		else if(!IsPlayerConnected(suspect)) SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		else if(!ProxDetectorS(5.0, playerid, suspect)) SendClientMessageEx(playerid, COLOR_GREY, "You are close enough to the suspect.");
		else if(PlayerInfo[suspect][pWantedLevel] < 1 && PlayerInfo[playerid][pMember] != 12) SendClientMessageEx(playerid, COLOR_GREY, "The person must have a wanted level of at least one star.");
		else {

			format(string, sizeof(string), "* You arrested %s!", GetPlayerNameEx(suspect));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(suspect, -moneys);
			new money = floatround(moneys / 3), iGroupID = PlayerInfo[playerid][pMember];
			Tax += money;
			arrGroupData[iGroupID][g_iBudget] += money;
			new str[128], file[32];
            format(str, sizeof(str), "%s has been arrested by %s and fined $%d. $%d has been sent to %s's budget fund.",GetPlayerNameEx(suspect), GetPlayerNameEx(playerid), moneys, money, arrGroupData[iGroupID][g_szGroupName]);
            new month, day, year;
			getdate(year,month,day);
			format(file, sizeof(file), "grouppay/%d/%d-%d-%d.log", iGroupID, month, day, year);
			Log(file, str);
			ResetPlayerWeaponsEx(suspect);
			for(new x; x < MAX_PLAYERVEHICLES; x++) if(PlayerVehicleInfo[suspect][x][pvTicket] >= 1) {
				PlayerVehicleInfo[suspect][x][pvTicket] = 0;
			}
			SetPlayerInterior(suspect, 10);
			new rand = random(sizeof(DocPrison));
			SetPlayerFacingAngle(suspect, 0);
			SetPlayerPos(suspect, DocPrison[rand][0], DocPrison[rand][1], DocPrison[rand][2]);
			if(PlayerInfo[suspect][pDonateRank] >= 2) PlayerInfo[suspect][pJailTime] = ((time*60)*75)/100;
			else PlayerInfo[suspect][pJailTime] = time * 60;
			DeletePVar(suspect, "IsFrozen");
			PhoneOnline[suspect] = 1;
			PlayerInfo[suspect][pArrested] += 1;
			SetPlayerFree(suspect,playerid, "was arrested");
			PlayerInfo[suspect][pWantedLevel] = 0;
			SetPlayerToTeamColor(suspect);
			SetPlayerWantedLevel(suspect, 0);
			WantLawyer[suspect] = 1;
			TogglePlayerControllable(suspect, 1);
			ClearAnimations(suspect);
			SetPlayerSpecialAction(suspect, SPECIAL_ACTION_NONE);
			PlayerCuffed[suspect] = 0;
			DeletePVar(suspect, "PlayerCuffed");
			PlayerCuffedTime[suspect] = 0;
			PlayerInfo[suspect][pVW] = 0;
			SetPlayerVirtualWorld(suspect, 0);
			SetPlayerHealth(suspect, 100);
			strcpy(PlayerInfo[suspect][pPrisonedBy], GetPlayerNameEx(playerid), MAX_PLAYER_NAME);
			strcpy(PlayerInfo[suspect][pPrisonReason], "[IC] EBCF Arrest", 128);
			SetPlayerToTeamColor(suspect);
			Player_StreamPrep(suspect, DocPrison[rand][0], DocPrison[rand][1], DocPrison[rand][2], FREEZE_TIME);
	    }
	}
	return 1;
}*/
CMD:abus(playerid, params[]) return cmd_ataxi(playerid, params);
CMD:ataxi(playerid, params[])
{
	if(!IsATaxiDriver(playerid) && PlayerInfo[playerid][pJob] != 17 && PlayerInfo[playerid][pJob2] != 17 && PlayerInfo[playerid][pTaxiLicense] != 1)
		return SendClientMessageEx(playerid, COLOR_GREY, "ban khong phai taxi driver!");
	if(TransportDuty[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban hien dang khong Onduty.");

	new
		szMessage[128],
		iTarget;
	if(TransportDuty[playerid] == 1)
	{
		if(sscanf(params, "u", iTarget)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /ataxi [Player]");
		if(!IsPlayerConnected(iTarget)) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		if(iTarget == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the chap nhan cuoc goi taxi cua ban.");
		if(TaxiCallTime[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban da chap nhan mot cuoc goi.");
		if(!GetPVarType(iTarget, "TaxiCall")) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong goi xe taxi.");

		format(szMessage, sizeof(szMessage), "** Taxi Driver %s da chap nhan cuoc goi taxi tu %s(%d)" , GetPlayerNameEx(playerid), GetPlayerNameEx(iTarget), iTarget);
		SendTaxiMessage(TEAM_AZTECAS_COLOR, szMessage);
		format(szMessage, sizeof(szMessage), "* Taxi Driver %s da chap nhan cuoc goi taxi cua ban, xin vui long giu vi tri de ho toi don.", GetPlayerNameEx(playerid));
		SendClientMessageEx(iTarget, COLOR_LIGHTBLUE, szMessage);
		GameTextForPlayer(playerid, "~w~Nguoi lai Taxi~n~~r~Di toi diem mau do.", 5000, 1);
		TaxiCallTime[playerid] = 1;
		TaxiAccepted[playerid] = iTarget;
		DeletePVar(iTarget, "TaxiCall");
	}
	if(TransportDuty[playerid] == 2)
	{
		if(sscanf(params, "u", iTarget)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /abus [Player]");
		if(!IsPlayerConnected(iTarget)) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		if(iTarget == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the chap nhan cuoc goi bus cua ban.");
		if(BusCallTime[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban da chap nhan mot cuoc goi.");
		if(!GetPVarType(iTarget, "BusCall")) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong goi xe bus.");

		format(szMessage, sizeof(szMessage), "** Bus Driver %s da chap nhan cuoc goi Bus tu %s(%d)" , GetPlayerNameEx(playerid), GetPlayerNameEx(iTarget), iTarget);
		SendTaxiMessage(TEAM_AZTECAS_COLOR, szMessage);
		format(szMessage, sizeof(szMessage), "* Bus Driver %s da chap nhan cuoc goi taxi cua ban, xin vui long giu vi tri de ho toi don.", GetPlayerNameEx(playerid));
		SendClientMessageEx(iTarget, COLOR_LIGHTBLUE, szMessage);
		GameTextForPlayer(playerid, "~w~Nguoi lai Bus~n~~r~Di toi diem mau do", 5000, 1);
		BusCallTime[playerid] = 1;
		BusAccepted[playerid] = iTarget;
		DeletePVar(iTarget, "BusCall");
	}
	PlayerInfo[playerid][pCallsAccepted]++;
	return 1;
}

CMD:batgiam(playerid, params[]) {
	return cmd_arrest(playerid, params);
}

CMD:arrest(playerid, params[])
{
	if(!IsACop(playerid)) {
	    SendClientMessageEx(playerid, COLOR_GREY, "ban khong phai la LEO faction. ");
	}
	else if(!IsAtArrestPoint(playerid, 0) && !IsAtArrestPoint(playerid, 1)) {
 		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o gan mot diem bat giu." );
 	}

	else {


   		new
     		moneys,
       		time,
         	bail,
          	bailprice,
			string[256];

        new suspect = GetClosestPlayer(playerid);
  		if(sscanf(params, "dddd", moneys, time, bail, bailprice)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /arrest [Gia tien] [time (minutes)] [bail (0=no 1=yes)] [bailprice]");
		}
		else if(!(1 <= moneys <= 30000)) {
  			SendClientMessageEx(playerid, COLOR_GREY, "Tien phat[Gia tien] o nha tu khong duoi $1 va qua $30,000.");
		}
		else if(!(1 <= time <= 30)) {
  			SendClientMessageEx(playerid, COLOR_GREY, "Thoi gian[minutes] ngoi tu khong duoi 1 va vuot qua 30 phut - Co the dua nguoi ay den tu de co nhieu thoi gian giam giu hon");
		}
		else if(!(0 <= bail <= 1)) {
  			SendClientMessageEx(playerid, COLOR_GREY, "Tuy chon bao lanh[bail] phai duoc thiet lap 0 hoac 1.");
		}
		else if(!(0 <= bailprice <= 100000)) {
  			SendClientMessageEx(playerid, COLOR_GREY, "Gia tien bao lanh[bailprice] khong the duoi $0 va tren $100,000.");
		}
		else if(!IsPlayerConnected(suspect)) {
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		}
		else if(!ProxDetectorS(5.0, playerid, suspect)) {
		    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o gan ke tinh nghi.");
		}
		else if(PlayerInfo[suspect][pWantedLevel] < 1 && !IsAJudge(playerid)) {
		    SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do phai co it nhat 1 cap do truy na.");
		}
		else {
			SetPVarInt(playerid, "Arrest_Price", moneys);
			SetPVarInt(playerid, "Arrest_Time", time);
			SetPVarInt(playerid, "Arrest_Bail", bail);
			SetPVarInt(playerid, "Arrest_BailPrice", bailprice);
			SetPVarInt(playerid, "Arrest_Suspect", suspect);
			SetPVarInt(playerid, "Arrest_Type", 0);
			format(string, sizeof(string), "Hay viet mot bao cao ngan gon ve viec bat giu %s va nhung hanh dong do.\n\nBao cao phai co it nhat 30 ki tu va nhieu nhat la 128 ki tu.", GetPlayerNameEx(suspect));
			ShowPlayerDialog(playerid, DIALOG_ARRESTREPORT, DIALOG_STYLE_INPUT, "Bao cao bat giu", string, "Gui di", "");
	    }
	}
	return 1;
}

CMD:deport(playerid, params[])
{
	if((0 <= PlayerInfo[playerid][pLeader] < MAX_GROUPS) && arrGroupData[PlayerInfo[playerid][pLeader]][g_iGroupType] == 5)
	{
   		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /deport [Player]");
		if(!IsPlayerConnected(giveplayerid)) SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
		else if(!ProxDetectorS(5.0, playerid, giveplayerid)) SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o gan nguoi choi");
		else if(PlayerInfo[playerid][pNation] == 0 && PlayerInfo[giveplayerid][pNation] == 0) SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the truc suat cong dan San Andreas!");
		else
		{
			format(string, sizeof(string), "* Ban bi truc suat %s!", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			DeletePVar(giveplayerid, "IsFrozen");
			TogglePlayerControllable(giveplayerid, 1);
			ClearAnimations(giveplayerid);
			SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
			PlayerCuffed[giveplayerid] = 0;
			DeletePVar(giveplayerid, "PlayerCuffed");
			PlayerCuffedTime[giveplayerid] = 0;
			if(PlayerInfo[playerid][pNation] == 0 && PlayerInfo[giveplayerid][pNation] == 1)
			{
				switch(random(2))
				{
					case 0:
					{
						SetPlayerPos(giveplayerid, 1699.2, 1435.1, 10.7);
						SetPlayerFacingAngle(giveplayerid, 270.0);
					}
					case 1:
					{
						SetPlayerPos(giveplayerid, -1446.5997, 2608.4478, 55.8359);
						SetPlayerFacingAngle(giveplayerid, 180.0);
					}
				}
				SendClientMessageEx(giveplayerid, COLOR_RED, "Ban da bi truc suat quay tro lai Tierra Robada.");
			}
			else if(PlayerInfo[playerid][pNation] == 1 && PlayerInfo[giveplayerid][pNation] == 0)
			{
				switch(random(2))
				{
					case 0:
					{
						SetPlayerPos(giveplayerid, 1715.1201,-1903.1711,13.5665);
						SetPlayerFacingAngle(giveplayerid, 360.0);
					}
					case 1:
					{
						SetPlayerPos(giveplayerid, -1969.0737,138.1210,27.6875);
						SetPlayerFacingAngle(giveplayerid, 90.0);
					}
				}
				SendClientMessageEx(giveplayerid, COLOR_RED, "Ban da bi truc suat quay tro lai San Andreas.");
			}
			else if(PlayerInfo[playerid][pNation] == 1 && PlayerInfo[giveplayerid][pNation] == 1)
			{
				switch(random(2))
				{
					case 0:
					{
						SetPlayerPos(giveplayerid, 1715.1201,-1903.1711,13.5665);
						SetPlayerFacingAngle(giveplayerid, 360.0);
					}
					case 1:
					{
						SetPlayerPos(giveplayerid, -1969.0737,138.1210,27.6875);
						SetPlayerFacingAngle(giveplayerid, 90.0);
					}
				}
				PlayerInfo[giveplayerid][pNation] = 0;
				SendClientMessageEx(giveplayerid, COLOR_RED, "Ban da bi truc suat toi San Andreas.");
			}
	    }
	}
	else SendClientMessage(playerid, COLOR_GREY, "Ban khong phai Leader hoac to chuc chinh phu.");
	return 1;
}
CMD:hopdong(playerid, params[]) {
	return cmd_contract(playerid, params);
}

CMD:contract(playerid, params[])
{
	if(PlayerCuffed[playerid] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the dat hop dong trong khi dang bi cong tay.");
	if(PlayerInfo[playerid][pJailTime] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the dat hop dong trong khi dang o tu.");

	new string[128], giveplayerid, moneys, detail[32];
	if(sscanf(params, "uds[32]", giveplayerid, moneys, detail)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /hopdong [Nguoi choi] [So tien] [ly do]");

	if (!IsPlayerConnected(giveplayerid)) {
		return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	if(PlayerInfo[playerid][pLevel] < 5 || PlayerInfo[giveplayerid][pLevel] < 5) {
		return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the dat hop dong khi ban chua du level 5.");
	}
	if( moneys < 10000 || moneys > 100000)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the dat hop dong it hon $100,000 va nhieu hon $100,000.");
		return 1;
	}
	else if((moneys < 100000 || moneys > 1000000) && IsACop(giveplayerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "So tien toi thieu cho mot nhan vien chinh phu phai nhieu hon 100,000 VND.");
		return 1;
	}
	if(PlayerInfo[playerid][pLevel] < 3)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban phai dat level 3 moi co the dat hop dong.");
		return 1;
	}
	if(PlayerInfo[giveplayerid][pConnectHours] < 12)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the dat hop dong voi nguoi duoi 12 gio choi.");
		return 1;
	}
	if(PlayerInfo[playerid][pMember] != INVALID_GROUP_ID && arrGroupData[PlayerInfo[playerid][pMember]][g_iGroupType] == 2)
	{
		SendClientMessageEx( playerid, COLOR_GREY, "Ban khong the dat hop dong nhu mot Hitman." );
	}
	else
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if( moneys >= 1000001 )
			{
				SendClientMessageEx( playerid, COLOR_GREY, "Gia hop dong toi da la $1,000,000!" );
				return 1;
			}

			if( PlayerInfo[giveplayerid][pHeadValue] >= 1000000 )
			{
				SendClientMessageEx( playerid, COLOR_GREY, "That person has the maximum on their head." );
				return 1;
			}
			if(moneys + PlayerInfo[giveplayerid][pHeadValue] >= 1000001 )
			{
				SendClientMessageEx( playerid, COLOR_GREY, "That person has the maximum on their head." );
				return 1;
			}

			if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the nhan hop dong cua chinh minh."); return 1; }
			new playermoney = GetPlayerCash(playerid);
			if (moneys > 0 && playermoney >= moneys)
			{
				if(strlen(detail) > 32) return SendClientMessageEx(playerid, COLOR_GRAD1, "Chi tiet hop dong khong duoc dai hon 32 ki tu.");
				GivePlayerCash(playerid, (0 - moneys));
				PlayerInfo[giveplayerid][pHeadValue]+=moneys;
				strmid(PlayerInfo[giveplayerid][pContractBy], GetPlayerNameEx(playerid), 0, strlen(GetPlayerNameEx(playerid)), MAX_PLAYER_NAME);
				strmid(PlayerInfo[giveplayerid][pContractDetail], detail, 0, strlen(detail), 32);
				format(string, sizeof(string), "%s da dat hop dong %s gia $%d , Chi tiet: %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), moneys, detail);
				SendGroupMessage(2, COLOR_YELLOW, string);
				format(string, sizeof(string), "* Ban da dat mot hop dong %s gia $%d , Chi tiet: %s.",GetPlayerNameEx(giveplayerid), moneys, detail);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "<< %s da dat mot hop dong %s gia $%d , Chi tiet: %s >>",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),moneys,detail);
				Log("logs/contracts.log", string);
				format(string, sizeof(string), "%s ban da dat mot hop dong %s gia $%d , Chi tiet: %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), moneys, detail);
				ABroadCast(COLOR_YELLOW,string,4);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong du tien cho viec nay.");
			}
		}
	}
	return 1;
}


CMD:tudo(playerid, params[]) {
	return cmd_locker(playerid, params);
}

CMD:locker(playerid, params[]) {

	new
		iGroupID = PlayerInfo[playerid][pMember],
		szTitle[18 + GROUP_MAX_NAME_LEN],
		szDialog[100];

	if(PlayerInfo[playerid][pWRestricted] != 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the mo tu nay khi dang bi gioi han vu khi");
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ban khong the lam dieu nay khi dang tham gia su kien Hunger Games!");
	if(0 <= iGroupID < MAX_GROUPS)
	{
		for(new i; i < MAX_GROUPS; i++)
		{
			for(new j; j < MAX_GROUP_LOCKERS; j++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 3.0, arrGroupLockers[i][j][g_fLockerPos][0], arrGroupLockers[i][j][g_fLockerPos][1], arrGroupLockers[i][j][g_fLockerPos][2]) && arrGroupLockers[i][j][g_iLockerVW] == GetPlayerVirtualWorld(playerid))
				{
					if(i == iGroupID || (arrGroupData[i][g_iGroupType] == arrGroupData[iGroupID][g_iGroupType] && arrGroupLockers[i][j][g_iLockerShare]))
					{
					    format(szTitle, sizeof(szTitle), "%s Locker Menu", arrGroupData[iGroupID][g_szGroupName]);
					    if(arrGroupData[iGroupID][g_iLockerCostType] == 0) {
					        if(arrGroupData[iGroupID][g_iLockerStock] > 100)
					        {
					        	format(szTitle, sizeof(szTitle), "%s - Locker Stock: %d", szTitle, arrGroupData[iGroupID][g_iLockerStock]);
							}
							else
							{
							    format(szTitle, sizeof(szTitle), "%s - {AA3333}Locker Stock: %d", szTitle, arrGroupData[iGroupID][g_iLockerStock]);
							}
					    }
						format(szDialog, sizeof(szDialog), "Duty\nVu khi\nDong phuc%s", (arrGroupData[iGroupID][g_iGroupType] == 1) ? ("\nXoa sao\nArmour\nTazer & Cuffs & Bean") : (""));
						ShowPlayerDialog(playerid, G_LOCKER_MAIN, DIALOG_STYLE_LIST, szTitle, szDialog, "Lua chon", "Huy bo");
						return 1;
					}
					else
					{
					    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the mo tu do day.");
						return 1;
					}
				}
			}
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o gan tu lay do!");
	return 1;
}


CMD:uninvite(playerid, params[]) {
	if(0 <= PlayerInfo[playerid][pLeader] < MAX_GROUPS) {

		new
			iTargetID,
			iGroupID = PlayerInfo[playerid][pLeader];

		if(sscanf(params, "u", iTargetID)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /uninvite [Player]");
		}
		else if(IsPlayerConnected(iTargetID)) {
			if(iGroupID == PlayerInfo[iTargetID][pMember]) {
				if(playerid == iTargetID) {
					SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the duoi chinh minh.");
				}
				else if(PlayerInfo[playerid][pRank] > PlayerInfo[iTargetID][pRank] || PlayerInfo[playerid][pRank] >= Group_GetMaxRank(iGroupID)) {

					new
						szMessage[128],
						iRank = PlayerInfo[playerid][pRank];

					format(szMessage, sizeof szMessage, "%s %s da duoi ban ra khoi %s.", arrGroupRanks[iGroupID][iRank], GetPlayerNameEx(playerid), arrGroupData[iGroupID][g_szGroupName]);
					SendClientMessageEx(iTargetID, COLOR_LIGHTBLUE, szMessage);
					SendClientMessageEx(iTargetID, COLOR_WHITE, "Ban da tro thanh mot nguoi dan binh thuong.");

					format(szMessage, sizeof szMessage, "Ban da duoi %s ra khoi nhom.", GetPlayerNameEx(iTargetID));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);

					format(szMessage, sizeof szMessage, "%s %s (rank %i) da bi duoi %s (rank %i) tu %s (%i).", arrGroupRanks[iGroupID][iRank], GetPlayerNameEx(playerid), iRank, GetPlayerNameEx(iTargetID), PlayerInfo[iTargetID][pRank], arrGroupData[iGroupID][g_szGroupName], iGroupID + 1);
					Log("logs/group.log", szMessage);

					PlayerInfo[iTargetID][pNameRank] = 0;
					PlayerInfo[iTargetID][pKhuVuc] = 0;
					PlayerInfo[iTargetID][pPwInvite] = 0;
					PlayerInfo[iTargetID][pMember] = INVALID_GROUP_ID;
					PlayerInfo[iTargetID][pDivision] = -1;
					PlayerInfo[iTargetID][pLeader] = INVALID_GROUP_ID;
					PlayerInfo[iTargetID][pDuty] = 0;
					PlayerInfo[iTargetID][pMph] = 0;
					PlayerInfo[iTargetID][pRank] = INVALID_RANK;
					PlayerInfo[iTargetID][pModel] = NOOB_SKIN;
					SetPlayerSkin(iTargetID, NOOB_SKIN);

					SetPlayerToTeamColor(iTargetID);
					pTazer{iTargetID} = 0;
				}
				else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay voi nguoi cung Rank hoac cao hon.");
			}
			else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi do khong o trong nhom cua ban.");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	else if(PlayerInfo[playerid][pFMember] != INVALID_FAMILY_ID && PlayerInfo[playerid][pRank] >= 5)
	{
		new string[128], giveplayerid;
		new family = PlayerInfo[playerid][pFMember];
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /uninvite [Player]");
		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pFMember] != PlayerInfo[playerid][pFMember])
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong o trong family.");
				return 1;
			}
			if(PlayerInfo[giveplayerid][pRank] > PlayerInfo[playerid][pRank])
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the duoi nguoi co rank cao hon minh.");
				return 1;
			}
			new file[32], month, day, year ;
			getdate(year,month,day);
			format(string, sizeof(string), "* Ban da duoi %s ra khoi family.",GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Family leader %s da duoi ban ra khoi family.",GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			PlayerInfo[giveplayerid][pFMember] = INVALID_FAMILY_ID;
			PlayerInfo[giveplayerid][pRank] = INVALID_RANK;
			FamilyInfo[family][FamilyMembers] --;
			SaveFamilies();
			format(string, sizeof(string), "%s uninvited %s from %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), FamilyInfo[family][FamilyName]);
			format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
			Log(file, string);
			return 1;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
			return 1;
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Chi Leader moi co quyen su dung lenh nay.");
	return 1;
}

CMD:ouninvite(playerid, params[]) {
	if(0 <= PlayerInfo[playerid][pLeader] < MAX_GROUPS) {
		if(!isnull(params)) {

			if (IsPlayerConnected(ReturnUser(params)))
			{
				return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do dang online - su dung /uninvite.");
			}
			new
				szQuery[96],
				szName[MAX_PLAYER_NAME],
				iPos;

			mysql_escape_string(params, szName);
			format(szQuery, sizeof szQuery, "SELECT `Member`, `Rank`, `id` FROM `accounts` WHERE `Username` = '%s'", szName);
			mysql_function_query(MainPipeline, szQuery, true, "Group_QueryFinish", "ii", GROUP_QUERY_UNCHECK, playerid);

			while((iPos = strfind(szName, "_", false, iPos)) != -1) szName[iPos] = ' ';
			SetPVarString(playerid, "Group_Uninv", szName);

			format(szQuery, sizeof szQuery, "Dang co gang loai bo %s ra khoi nhom, xin vui long doi...", szName);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szQuery);
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /ouninvite [account name]");
	}
	else if(PlayerInfo[playerid][pFMember] != INVALID_FAMILY_ID && PlayerInfo[playerid][pRank] >= 5)
	{
		if(isnull(params)) {
		return SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /ouninvite [name]");
		}

		new query[512], tmpName[24];
		mysql_escape_string(params, tmpName);
		SetPVarString(playerid, "OnUninvite", tmpName);

		format(query,sizeof(query),"UPDATE `accounts` SET `FMember` = 255, `Rank` = %d,`Model` = %d WHERE `Username`='%s' \
			AND `GangModerator`=0 \
			AND `AdminLevel` < 4 \
			AND `FMember`=%d \
			AND `Rank` < %d",
			INVALID_RANK,
			CIV[random(sizeof(CIV))],
			tmpName,
			PlayerInfo[playerid][pFMember],
			PlayerInfo[playerid][pRank]
		);
		mysql_function_query(MainPipeline, query, false, "OnUninvite", "i", playerid);

		new string[128];
		format(string, sizeof(string), "Da duoi %s ra khoi family...", tmpName);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Chi co Leader moi co the su dung lenh nay.");
	return 1;
}

CMD:giverank(playerid, params[]) {
	if(0 <= PlayerInfo[playerid][pLeader] < MAX_GROUPS) {

		new
			iTargetID,
			iRank,
			iGroupID = PlayerInfo[playerid][pLeader],
            szMessage[128];

		if(sscanf(params, "ui", iTargetID, iRank)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /giverank [Player] [rank]");
		}
		else if(!(0 <= iRank <= Group_GetMaxRank(iGroupID))) {
		    format(szMessage, sizeof(szMessage), "Rank khong dung (phai tu 0 va %d)", Group_GetMaxRank(iGroupID));
			SendClientMessageEx(playerid, COLOR_GREY, szMessage);
		}
		else if(IsPlayerConnected(iTargetID)) {
			if(iGroupID == PlayerInfo[iTargetID][pMember]) {
				if(iRank == PlayerInfo[iTargetID][pRank]) {
					SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do da co rank nay.");
				}
				else if(playerid == iTargetID) {
					SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the thay doi rank cua ban!");
				}
				if(PlayerInfo[iTargetID][pRank] > PlayerInfo[playerid][pRank])
		    	{
			        SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the thuc hien lenh nay voi nguoi rank cao hon ban!");
			        return 1;
		    	}
				else if(PlayerInfo[playerid][pRank] > PlayerInfo[iTargetID][pRank] || PlayerInfo[playerid][pRank] >= Group_GetMaxRank(iGroupID) || PlayerInfo[playerid][pAdmin] >= 4) {

					format(szMessage, sizeof szMessage, "%s %s co %s ban rank %s.", arrGroupRanks[iGroupID][PlayerInfo[playerid][pRank]], GetPlayerNameEx(playerid), ((iRank > PlayerInfo[iTargetID][pRank]) ? ("promoted") : ("demoted")), arrGroupRanks[iGroupID][iRank]);
					SendClientMessageEx(iTargetID, COLOR_LIGHTBLUE, szMessage);

					format(szMessage, sizeof szMessage, "Ban co %s %s de rank cua %s.", ((iRank > PlayerInfo[iTargetID][pRank]) ? ("promoted") : ("demoted")), GetPlayerNameEx(iTargetID), arrGroupRanks[iGroupID][iRank]);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);

					format(szMessage, sizeof szMessage, "%s %s (rank %i) da cho %s rank %i (%s) trong %s (%i).", arrGroupRanks[iGroupID][PlayerInfo[playerid][pRank]], GetPlayerNameEx(playerid), PlayerInfo[playerid][pRank], GetPlayerNameEx(iTargetID), iRank, arrGroupRanks[iGroupID][iRank], arrGroupData[iGroupID][g_szGroupName], iGroupID + 1);
					Log("logs/group.log", szMessage);

					PlayerInfo[iTargetID][pRank] = iRank;
				}
				else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay voi nguoi co Rank bang ban hoac cao hon.");
			}
			else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi do khong co trong nhom cua ban.");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	else if(PlayerInfo[playerid][pFMember] != INVALID_FAMILY_ID && PlayerInfo[playerid][pRank] >= 5) {
		new string[128], giveplayerid, rank;
		new family = PlayerInfo[playerid][pFMember];
		if(sscanf(params, "ud", giveplayerid, rank)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /giverank [Player] [Rank (1-6)]");

		if(PlayerInfo[playerid][pRank] == 6)
		{
			if(rank > 6 || rank < 0) { SendClientMessageEx(playerid, COLOR_GREY, "   Khong duoc duoi 0, hoac tren 6!"); return 1; }
		}
		else if(PlayerInfo[playerid][pRank] == 5)
		{
			if(rank > 5 || rank < 0) { SendClientMessageEx(playerid, COLOR_GREY, "   Khong duoc duoi 0, hoac tren 5!"); return 1; }
		}

		if(IsPlayerConnected(giveplayerid))
		{
		    if(PlayerInfo[giveplayerid][pRank] > PlayerInfo[playerid][pRank])
		    {
		        SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the thuc hien dieu nay voi nguoi cung cap hoac cao hon!");
		        return 1;
		    }
			if(PlayerInfo[playerid][pFMember] != PlayerInfo[giveplayerid][pFMember])
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "   Nguoi nay khong trong Family cua ban!");
				return 1;
			}

			if(rank > PlayerInfo[giveplayerid][pRank])
			{
				format(string, sizeof(string), "   Ban da duoc thang len mot cap cao hon boi %s.", GetPlayerNameEx(playerid));
			}
			if(rank < PlayerInfo[giveplayerid][pRank])
			{
				format(string, sizeof(string), "   Ban da bi ha mot cap thap hon boi %s.", GetPlayerNameEx(playerid));
			}
			new file[32], month, day, year;
			getdate(year,month,day);
			format(string, sizeof(string), "* Ban cho %s rank %d.",GetPlayerNameEx(giveplayerid),rank);
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Family leader %s da cho ban rank %d.",GetPlayerNameEx(playerid),rank);
			SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
			new temprank = PlayerInfo[giveplayerid][pRank];
			PlayerInfo[giveplayerid][pRank] = rank;
			format(string, sizeof(string), "%s set %s rank from %d to %d in %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), temprank, rank, FamilyInfo[family][FamilyName]);
			format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
			Log(file, string);
			return 1;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
			return 1;
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Only group leaders may use this command.");
	return 1;
}

CMD:setdiv(playerid, params[]) {
	if(0 <= PlayerInfo[playerid][pLeader] < MAX_GROUPS) {

		new
			iTargetID,
			iDiv,
			iGroupID = PlayerInfo[playerid][pLeader],
			szMessage[128];

		if(sscanf(params, "ui", iTargetID, iDiv)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /setdiv [Player] [div]");
			format(szMessage, sizeof(szMessage), "%s", "0 (None), ");
			for(new i; i < MAX_GROUP_DIVS; i++)
			{
			    if(arrGroupDivisions[iGroupID][i][0]) format(szMessage, sizeof(szMessage), "%s%d (%s), ", szMessage, i+1, arrGroupDivisions[iGroupID][i]);
				if(strlen(szMessage) > 64 || i == (MAX_GROUP_DIVS -1) && strlen(szMessage)) { SendClientMessageEx(playerid, COLOR_GRAD2, szMessage); szMessage[0] = 0; }

			}
		}
		else if(!(0 <= iDiv <= Group_GetMaxDiv(iGroupID)+1)) {
		    format(szMessage, sizeof(szMessage), "DIV khong hop le (Phai tu 0 den %d)", Group_GetMaxDiv(iGroupID) + 1);
			SendClientMessageEx(playerid, COLOR_GREY, szMessage);
		}
		else if(IsPlayerConnected(iTargetID)) {
			if(iGroupID == PlayerInfo[iTargetID][pMember]) {
				if(iDiv - 1 == PlayerInfo[iTargetID][pDivision]) {
					if (iDiv == 0) SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong co DIV.");
					else SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do da co DIV nay roi.");
				}
				else if(PlayerInfo[playerid][pLeader] == iGroupID || PlayerInfo[playerid][pDivision] == PlayerInfo[iTargetID][pDivision] || PlayerInfo[playerid][pRank] >= (Group_GetMaxRank(iGroupID) - 3)) {

					if(iDiv == 0)
					{
						format(szMessage, sizeof(szMessage), "Ban da bi duoi ra khoi bo phan hien tai boi %s.", GetPlayerNameEx(playerid));
						SendClientMessageEx(iTargetID, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof(szMessage), "Ban da duoi %s ra khoi bo phan hien tai.", GetPlayerNameEx(iTargetID));
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof szMessage, "%s %s da duoi %s ra khoi bo phan %s (%d).", arrGroupRanks[iGroupID][PlayerInfo[playerid][pRank]], GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID), arrGroupData[iGroupID][g_szGroupName], iGroupID + 1);
						Log("logs/group.log", szMessage);
					}
					else
					{
						format(szMessage, sizeof szMessage, "%s %s da thiet lap cho ban %s DIV.", arrGroupRanks[iGroupID][PlayerInfo[playerid][pRank]], GetPlayerNameEx(playerid), arrGroupDivisions[iGroupID][iDiv-1]);
						SendClientMessageEx(iTargetID, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof szMessage, "Ban da dua %s vao bo phan %s DIV", GetPlayerNameEx(iTargetID), arrGroupDivisions[iGroupID][iDiv-1]);
						SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
						format(szMessage, sizeof szMessage, "%s %s da dua %s's DIV den %s trong %s (%d).", arrGroupRanks[iGroupID][PlayerInfo[playerid][pRank]], GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID), arrGroupDivisions[iGroupID][iDiv-1], arrGroupData[iGroupID][g_szGroupName], iGroupID + 1);
						Log("logs/group.log", szMessage);
					}
					PlayerInfo[iTargetID][pDivision] = iDiv-1;
				}
				else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong du tham quyen de phan chi cac bo phan.");
			}
			else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi do khong trong nhom cua ban.");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	else if(PlayerInfo[playerid][pFMember] != 0 && PlayerInfo[playerid][pRank] >= 5) //Gotta do it like this since we dont have  Gang Leader system
	{
	    new
			iFamily = PlayerInfo[playerid][pFMember],
			iDiv,
			targetid,
			szMessage[128];

	    if(sscanf(params, "ui", targetid, iDiv))
	    {
	        SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /setdiv [Player] [division]");
	    } else {
	        if(IsPlayerConnected(targetid))
	        {
	            if(PlayerInfo[targetid][pFMember] == PlayerInfo[playerid][pFMember])
	            {
	                if(PlayerInfo[targetid][pRank] <= PlayerInfo[playerid][pRank])
	                {
	                    if(iDiv != PlayerInfo[targetid][pDivision])
	                    {
                            if(0 <= iDiv <= 5)
							{
								new file[32], month, day, year ;
								getdate(year,month,day);
       							format(szMessage, sizeof(szMessage), "Ban da duoc chuyen den bo phan %s boi %s.", FamilyDivisionInfo[iFamily][iDiv], GetPlayerNameEx(playerid));
              					SendClientMessageEx(targetid, COLOR_LIGHTBLUE, szMessage);
                   				format(szMessage, sizeof(szMessage), "Ban da chuyen %s de bo phan %s.", GetPlayerNameEx(targetid), FamilyDivisionInfo[iFamily][iDiv]);
                       			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
                       			format(szMessage, sizeof(szMessage), "%s da di chuyen %s den bo phan %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(targetid), FamilyDivisionInfo[iFamily][iDiv]);
								format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", iFamily, year, month, day);
								Log(file, szMessage);
								PlayerInfo[targetid][pDivision] = iDiv;
							}
					  		else return SendClientMessageEx(playerid, COLOR_GREY, "ID phan chia cac bo phan khong hop le, vui long chon giua 0-4");
  						}
						else return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi nay dang trong bo phan do!");
					}
					else return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi nay co Rank cao hon ban!");
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi nay khong o trong family/gang!");
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	    }
	}
	else
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong duoc phep su dung lenh nay!");
	return 1;
}
CMD:invite(playerid, params[]) {
	if(0 <= PlayerInfo[playerid][pLeader] < MAX_GROUPS) {

		new
			iTargetID;

		if(sscanf(params, "u", iTargetID)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /invite [Player]");
		}
		else if(IsPlayerConnected(iTargetID)) {
		    if (iTargetID != playerid) {
				if(!(0 <= PlayerInfo[iTargetID][pLeader] < MAX_GROUPS) && !(0 <= PlayerInfo[iTargetID][pMember] < MAX_GROUPS) && PlayerInfo[iTargetID][pFMember] == INVALID_FAMILY_ID) {

					new
						szQuery[128],
						iGroupID = PlayerInfo[playerid][pLeader];

					format(szQuery, sizeof szQuery, "SELECT `TypeBan` FROM `groupbans` WHERE `PlayerID` = %i AND (`TypeBan` = %i OR `GroupBan` = %i)", GetPlayerSQLId(iTargetID), arrGroupData[iGroupID][g_iGroupType], iGroupID);
					mysql_function_query(MainPipeline, szQuery, true, "Group_QueryFinish", "ii", GROUP_QUERY_INVITE, playerid);

					SendClientMessage(playerid, COLOR_WHITE, "Kiem tra danh sach nhom, xin vui long tro doi...");
					SetPVarInt(playerid, "Group_Invited", iTargetID);
				}
				else SendClientMessageEx(playerid, COLOR_GREY, "Nguoi ma ban dang moi da tham gia vao nhom khac.");
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung lenh nay tren minh.");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	else if(PlayerInfo[playerid][pFMember] != INVALID_FAMILY_ID && PlayerInfo[playerid][pRank] >= 5)
	{
		new
			string[128],
			iTargetID,
			family = PlayerInfo[playerid][pFMember];

		if(sscanf(params, "u", iTargetID)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /invite [Player]");
		}
		else if(IsPlayerConnected(iTargetID))
		{
			if (!(0 <= PlayerInfo[iTargetID][pLeader] < MAX_GROUPS) && !(0 <= PlayerInfo[iTargetID][pMember] < MAX_GROUPS) && PlayerInfo[iTargetID][pFMember] == INVALID_FAMILY_ID)
			{
				if(PlayerInfo[iTargetID][pGangWarn] >= 3)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "Nguoi choi bi cam tham gia. Ho bi cam tham gia gang.");
					return 1;
				}
				new file[32], month, day, year;
				getdate(year,month,day);
				format(string, sizeof(string), "* Ban da moi %s tham gia '%s'.",GetPlayerNameEx(iTargetID), FamilyInfo[family][FamilyName]);
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* %s da moi ban tham gia '%s'. (Su dung /chapnhan family)",GetPlayerNameEx(playerid), FamilyInfo[family][FamilyName]);
				SendClientMessageEx(iTargetID, COLOR_LIGHTBLUE, string);
				InviteOffer[iTargetID] = playerid;
				InviteFamily[iTargetID] = family;
				format(string, sizeof(string), "%s invited %s to %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID), FamilyInfo[family][FamilyName]);
				format(file, sizeof(file), "family_logs/%d/%d-%02d-%02d.log", family, year, month, day);
				Log(file, string);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do dang o trong Faction hoac Family.");
			}
			return 1;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
			return 1;
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Chi co Leader moi co the su dung lenh nay.");
	return 1;
}

CMD:buybizlevel(playerid, params[])
{
	if (PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID || PlayerInfo[playerid][pBusinessRank] < 5)
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Chu cua hang moi co the su dung lenh nay.");
	}
	if (Businesses[PlayerInfo[playerid][pBusiness]][bLevel] >= 5)
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the mua Level cua hang duoc them nua.");
	}

	new newLevel = Businesses[PlayerInfo[playerid][pBusiness]][bLevel] + 1;
	new totalSales = Businesses[PlayerInfo[playerid][pBusiness]][bTotalSales];
	new totalProfits = Businesses[PlayerInfo[playerid][pBusiness]][bTotalProfits];

	if (newLevel == 2 && totalSales < 1000 && totalProfits < 300000)
		return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang khong co du doanh thu loi nhuan de mua goi level nay!");
	else if (newLevel == 3 && totalSales < 5000 && totalProfits < 2000000)
		return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang khong co du doanh thu loi nhuan de mua goi level nay!");
	else if (newLevel == 4 && totalSales < 15000 && totalProfits < 10000000)
		return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang khong co du doanh thu loi nhuan de mua goi level nay");

	new cost = Businesses[PlayerInfo[playerid][pBusiness]][bLevel] * 100000;
	if(Businesses[PlayerInfo[playerid][pBusiness]][bSafeBalance] < cost)
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang khong co du tien trong Ngan quy de mua goi Level nang cap!");
	}
	Businesses[PlayerInfo[playerid][pBusiness]][bSafeBalance] -= cost;
	OnPlayerStatsUpdate(playerid);
	new string[128];
   	format(string, sizeof(string), "~g~CUA HANG LEVEL UP~n~~w~Level hien tai la : %d", ++Businesses[PlayerInfo[playerid][pBusiness]][bLevel]);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);

    Businesses[PlayerInfo[playerid][pBusiness]][bLevelProgress] = 0;
    Businesses[PlayerInfo[playerid][pBusiness]][bInventoryCapacity] *= 2;
	if(IsBusinessGasAble(Businesses[PlayerInfo[playerid][pBusiness]][bType]))
	{
		for (new i; i < MAX_BUSINESS_GAS_PUMPS; i++)
		{
			Businesses[PlayerInfo[playerid][pBusiness]][GasPumpCapacity][i] *= 2;
		}
	}
    SaveBusiness(PlayerInfo[playerid][pBusiness]);

    return 1;
}


// Citizenship Commands
/*CMD:grantcitizenship(playerid, params[]) {

	new iGroupID = PlayerInfo[playerid][pLeader];

	if((0 <= iGroupID < MAX_GROUPS)) {


	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Only authorized business employees may use this command.");
	return 1;
}*/

// Business Leadership Commands Start

CMD:moivaocuahang(playerid, params[]) {
	return cmd_binvite(playerid, params);
}

CMD:binvite(playerid, params[]) {

	new iBusinessID = PlayerInfo[playerid][pBusiness];

	if((0 <= iBusinessID < MAX_BUSINESSES) && PlayerInfo[playerid][pBusinessRank] >= Businesses[iBusinessID][bMinInviteRank]) {

		new
			iTargetID,
			string[128];

		if(sscanf(params, "u", iTargetID)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /moivaocuahang [Player]");
		}
		else if(IsPlayerConnected(iTargetID)) {
		    if (iTargetID != playerid) {
				if(!(0 <= PlayerInfo[iTargetID][pBusiness] < MAX_BUSINESSES)) {

					SetPVarInt(iTargetID, "Business_Inviter", playerid);
					SetPVarInt(iTargetID, "Business_InviterSQLId", GetPlayerSQLId(playerid));
					SetPVarInt(iTargetID, "Business_Invited", iBusinessID);
					format(string, sizeof(string), "Ban da moi %s tham gia %s", GetPlayerNameEx(iTargetID), Businesses[iBusinessID][bName]);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "%s %s da de nghi ban lam viec tai %s - su dung /chapnhan cuahang", GetBusinessRankName(PlayerInfo[playerid][pBusinessRank]), GetPlayerNameEx(playerid), Businesses[iBusinessID][bName]);
					SendClientMessageEx(iTargetID, COLOR_LIGHTBLUE, string);

					format(string, sizeof(string), "%s da moi %s tham gia %s", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID), Businesses[iBusinessID][bName]);
					Log("logs/business.log", string);

				}
				else SendClientMessageEx(playerid, COLOR_GREY, "Nguoi ma ban dang moi da tham gia vao mot cua hang khac.");
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the moi chinh minh .");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Nhan vien kinh doanh duoc uy quyen moi co the su dung lenh nay.");
	return 1;
}

CMD:buninvite(playerid, params[]) {
	if(0 <= PlayerInfo[playerid][pBusiness] < MAX_BUSINESSES && PlayerInfo[playerid][pBusinessRank] >= Businesses[PlayerInfo[playerid][pBusiness]][bMinInviteRank]) {

		new
			iTargetID,
			iGroupID = PlayerInfo[playerid][pBusiness];

		if(sscanf(params, "u", iTargetID)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /buninvite [Player]");
		}
		else if(IsPlayerConnected(iTargetID)) {
			if(iGroupID == PlayerInfo[iTargetID][pBusiness]) {
				if(playerid == iTargetID) {
					SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the uninvite chinh minh.");
				}
				else if(PlayerInfo[playerid][pBusinessRank] > PlayerInfo[iTargetID][pBusinessRank]) {

					new
						szMessage[128],
						iRank = PlayerInfo[iTargetID][pBusinessRank];

					format(szMessage, sizeof(szMessage), "Ban da duoi %s ra khoi cua hang.", GetPlayerNameEx(iTargetID));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
					format(szMessage, sizeof(szMessage), "* Ban da bi duoi ra khoi cua hang boi %s %s.", GetPlayerNameEx(playerid));
					SendClientMessageEx(iTargetID, COLOR_LIGHTBLUE, szMessage);
					format(szMessage, sizeof(szMessage), "%s khong duoc moi %s tu %s nhu mot rank %i.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID), Businesses[PlayerInfo[iTargetID][pBusiness]][bName], iRank);
					Log("logs/business.log", szMessage);

					PlayerInfo[iTargetID][pBusiness] = INVALID_BUSINESS_ID;
					PlayerInfo[iTargetID][pBusinessRank] = 0;
					OnPlayerStatsUpdate(iTargetID);

				}
				else SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay voi nguoi co cap bac tuong duong hoac cao  hon.");
			}
			else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi do khong o trong cua hang cua ban.");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Chi nhan vien cua hang cap cao  moi su dung duoc lenh nay.");
	return 1;
}



CMD:bouninvite(playerid, params[])
{
	new name[32], query[128];
	if (sscanf(params, "s[32]", name)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /bouninvite [account name]");
    if(PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu cua hang.");
		return 1;
	}
    if(PlayerInfo[playerid][pBusinessRank] != 5) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong trong cua hang.");
		return 1;
	}
	format(query, sizeof(query), "UPDATE `accounts` SET `Business` = " #INVALID_BUSINESS_ID ", `BusinessRank` = 0 WHERE `Username` = '%s' AND `Business` = %d", g_mysql_ReturnEscaped(name, MainPipeline), PlayerInfo[playerid][pBusiness]);
	mysql_function_query(MainPipeline, query, false, "OnQueryFinish", "i", SENDDATA_THREAD);
	SendClientMessageEx(playerid, COLOR_GREY, "Ban da da nguoi do.");
	return 1;
}

CMD:bgiverank(playerid, params[])
{
    new string[128], targetid, rank;
	if (PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID)
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong cua hang!");
	}
	if(sscanf(params, "ud", targetid, rank)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /bgiverank [Player] [rank]");
	}
	else if (PlayerInfo[playerid][pBusinessRank] < Businesses[PlayerInfo[playerid][pBusiness]][bMinGiveRankRank]) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Rank cua ban khong du cao de thuc hien lenh nay!");
	}
	else if (!IsPlayerConnected(targetid)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le!");
	}
	else if (playerid == targetid) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung lenh nay tren chinh minh");
	}
	else if(PlayerInfo[playerid][pBusiness] != PlayerInfo[targetid][pBusiness]) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do khong tham gia kinh doanh voi cua hang cua ban!");
	}
	else if (PlayerInfo[targetid][pBusinessRank] > PlayerInfo[playerid][pBusinessRank])	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung lenh nay tren nguoi rank cao hon!");
	}
	else if(rank < 0 || rank > 5) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Khong duoi 0 hoac cao hon 5!");
	}
	if (rank > PlayerInfo[targetid][pBusinessRank])	{
		format(string, sizeof(string), "* Ban da duoc tang them cap bac cao hon (%s) boi %s.", GetBusinessRankName(rank), GetPlayerNameEx(playerid));
		SendClientMessageEx(targetid, COLOR_LIGHTBLUE, string);
	}
	else if (rank < PlayerInfo[targetid][pBusinessRank]) {
		format(string, sizeof(string), "* Ban da bi ha cap bac thap hon (%s) boi %s.", GetBusinessRankName(rank), GetPlayerNameEx(playerid));
		SendClientMessageEx(targetid, COLOR_LIGHTBLUE, string);
	}
	else {
		SendClientMessageEx(playerid, COLOR_GREY, "Nguoi do co cap bac");
	}
	PlayerInfo[targetid][pBusinessRank] = rank;
	format(string, sizeof(string), "* Ban da cho %s rank %d.", GetPlayerNameEx(targetid), rank);
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "%s da cho ban %s rank %i trong %s", GetPlayerNameEx(playerid), GetPlayerNameEx(targetid), rank, Businesses[PlayerInfo[targetid][pBusiness]][bName]);
	Log("logs/business.log", string);
	return 1;
}

CMD:resign(playerid, params[])
{
	if (PlayerInfo[playerid][pBusiness] != INVALID_BUSINESS_ID)
	{
		new string[128];
		format(string, sizeof(string), "%s rank %i da ra khoi cua hang", GetPlayerNameEx(playerid), PlayerInfo[playerid][pBusinessRank]);
		Log("logs/business.log", string);
		PlayerInfo[playerid][pBusiness] = INVALID_BUSINESS_ID;
		PlayerInfo[playerid][pBusinessRank] = INVALID_RANK;
		return SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da xin ra khoi cua hang cua ban.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong trong cua hang!");
}

CMD:bsafe(playerid, params[])
{
    if(PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu cua hang");
		return 1;
	}
	else if(!IsPlayerInRangeOfPoint(playerid, 25.0, Businesses[PlayerInfo[playerid][pBusiness]][bIntPos][0], Businesses[PlayerInfo[playerid][pBusiness]][bIntPos][1], Businesses[PlayerInfo[playerid][pBusiness]][bIntPos][2])) {
		SendClientMessageEx(playerid, COLOR_GREY, "Ban can phai o ben trong cua hang cua ban.");
		return 1;
	}
	else if(PlayerInfo[playerid][pBusinessRank] < Businesses[PlayerInfo[playerid][pBusiness]][bMinSafeRank]) {
		SendClientMessageEx(playerid, COLOR_GREY, "Rank cua ban khong du cao de truy cap ngan quy kinh doanh cua hang.");
		return 1;
	}
	else {
	    new choice[10], Amount, string[128];
	    if(sscanf(params, "s[10]D", choice, Amount)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /bsafe [name] [amount]");
			SendClientMessageEx(playerid, COLOR_GREY, "Ten co san: Balance, Rut, Gui");
			return 1;
		}
		else if(!strcmp(choice, "Balance", true))
		{
		    format(string, sizeof(string), "Cua hang(%d) Ngan quy: $%s ", PlayerInfo[playerid][pBusiness], number_format(Businesses[PlayerInfo[playerid][pBusiness]][bSafeBalance]));
		    SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else if(Amount < 1) {
		    SendClientMessageEx(playerid, COLOR_GREY, "So luong khong the theo 1.");
		    return 1;
		}
		else if(!strcmp(choice, "rut", true))
		{
		    if(Businesses[PlayerInfo[playerid][pBusiness]][bSafeBalance] >= Amount) {
		    	format(string, sizeof(string), "Ban da rut $%s ngan quy kinh doanh cua hang ban.", number_format(Amount));
		    	SendClientMessageEx(playerid, COLOR_WHITE, string);
		    	Businesses[PlayerInfo[playerid][pBusiness]][bSafeBalance] -= Amount;
		    	format(string, sizeof(string), "Cua hang(%d) Ngan quy: $%s", PlayerInfo[playerid][pBusiness], number_format(Businesses[PlayerInfo[playerid][pBusiness]][bSafeBalance]));
		    	SendClientMessageEx(playerid, COLOR_WHITE, string);
		    	format(string,sizeof(string),"%s (IP: %s) da rut $%s tu ngan quy cua hang (Cua hang ID - %d)",GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), number_format(Amount), PlayerInfo[playerid][pBusiness]);
				Log("logs/business.log", string);
		   		GivePlayerCash(playerid, Amount);
		   		SaveBusiness(PlayerInfo[playerid][pBusiness]);
			}
			else {
			    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co nhieu trong ngan quy cua hang");
			}
		}
		else if(!strcmp(choice, "gui", true))
		{
		    if(GetPlayerCash(playerid) >= Amount) {
		    	format(string, sizeof(string), "Ban da gui $%s vao ngan quy cua hang ban.", number_format(Amount));
		    	SendClientMessageEx(playerid, COLOR_WHITE, string);
		    	Businesses[PlayerInfo[playerid][pBusiness]][bSafeBalance] += Amount;
		    	format(string, sizeof(string), "Cua hang(%d) Ngan quy: $%s", PlayerInfo[playerid][pBusiness], number_format(Businesses[PlayerInfo[playerid][pBusiness]][bSafeBalance]));
		    	SendClientMessageEx(playerid, COLOR_WHITE, string);
		    	format(string,sizeof(string),"%s (IP: %s) da gui  $%s vao ngan quy cua hang (Cua hang ID - %d)",GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), number_format(Amount), PlayerInfo[playerid][pBusiness]);
				Log("logs/business.log", string);
		   		GivePlayerCash(playerid, -Amount);
		   		SaveBusiness(PlayerInfo[playerid][pBusiness]);
			}
			else {
			    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co nhieu tien mat");
			}
		}
	}
	return 1;
}

// Business Admin Commands

CMD:bancuahang(playerid, params[]) {
	return cmd_sellbiz(playerid, params);
}

CMD:sellbiz(playerid, params[])
{
    if(PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID )
    {
        return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so  huu cua hang!");
	}
	else if(PlayerInfo[playerid][pBusinessRank] < 5 && Businesses[PlayerInfo[playerid][pBusiness]][bOwner] != GetPlayerSQLId(playerid)) {
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai la chu cua hang.");
	}
    else if (IsPlayerInRangeOfPoint(playerid, 2.0, Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][0], Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][1], Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][2]))
    {
        new i = PlayerInfo[playerid][pBusiness];

		PlayerInfo[playerid][pBusiness] = INVALID_BUSINESS_ID;
		PlayerInfo[playerid][pBusinessRank] = 0;
		GivePlayerCash(playerid,Businesses[i][bValue]);
		OnPlayerStatsUpdate(playerid);
		Businesses[i][bOwner] = -1;
		SaveBusiness(i);
		RefreshBusinessPickup(i);
		new string[128];
		format(string,sizeof(string),"%s (IP: %s) da ban cua hang ID %d voi gia $%d",GetPlayerNameEx(playerid),GetPlayerIpEx(playerid),i, Businesses[i][bValue]);
		Log("logs/business.log", string);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "~w~Xin chuc mung~n~Ban da mua cua hang voi gia ~n~~g~$%d", Businesses[i][bValue]);
		GameTextForPlayer(playerid, string, 10000, 3);
		foreach(new j: Player) {
			if(PlayerInfo[j][pBusiness] == i) {
				PlayerInfo[j][pBusiness] = INVALID_BUSINESS_ID;
				PlayerInfo[j][pBusinessRank] = 0;
				SendClientMessageEx(playerid, COLOR_WHITE, "Chu cua hang cua ban da ban cua hang cua ho.");
			}
		}

		format(string, sizeof(string), "UPDATE `accounts` SET `Business` = "#INVALID_BUSINESS_ID", `BusinessRank` = 0 WHERE `Business` = '%d'", i);
		mysql_function_query(MainPipeline, string, false, "OnQueryFinish", "i", SENDDATA_THREAD);
		return 1;
    }
    else
    {
	    SendClientMessageEx(playerid, COLOR_WHITE, "Ban can phai co cua hang de ban.");
	    return 1;
    }
}
CMD:muacuahang(playerid, params[]) {
	return cmd_buybiz(playerid, params);
}
CMD:buybiz(playerid, params[])
{
    if(PlayerInfo[playerid][pBusiness] != INVALID_BUSINESS_ID) return SendClientMessageEx(playerid, COLOR_GREY, "Ban dang so huu mot cua hang khac!");
	for(new i = 0; i < sizeof(Businesses); i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, Businesses[i][bExtPos][0], Businesses[i][bExtPos][1], Businesses[i][bExtPos][2]))
	    {
	        if (Businesses[i][bOwner] >= 1)
	        {
	        	return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang nay da co chu so huu!");
	        }
	        if (GetPlayerCash(playerid) < Businesses[i][bValue])
	        {
	        	return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co du tien mat!");
	        }
			GivePlayerCash(playerid, -Businesses[i][bValue]);
			Businesses[i][bOwner] = GetPlayerSQLId(playerid);
			strcpy(Businesses[i][bOwnerName], GetPlayerNameEx(playerid), MAX_PLAYER_NAME);
			PlayerInfo[playerid][pBusiness] = i;
			PlayerInfo[playerid][pBusinessRank] = 5;
			SendClientMessageEx(playerid, COLOR_WHITE, "Chuc mung ban da mua cua hang thanh cong!");
			SendClientMessageEx(playerid, COLOR_WHITE, "Su dung /trogiupcuahang de xem ho tro cua hang!");
			SaveBusiness(i);
			OnPlayerStatsUpdate(playerid);
			RefreshBusinessPickup(i);
			new string[128];
			format(string,sizeof(string),"%s (IP: %s) da mua cua hang ID %d voi gia $%d.", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), i, Businesses[i][bValue]);
			Log("logs/business.log", string);
			return 1;
	    }
	}
	return SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong o gan cua hang nao ca!");
}

CMD:addmats(playerid, params[]) {
	return cmd_addmaterials(playerid, params);
}

CMD:addmaterials(playerid, params[])
{
    new	string[128], amount;
	if (PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong cua hang!");
	}
	if (Businesses[PlayerInfo[playerid][pBusiness]][bType] != BUSINESS_TYPE_GUNSHOP) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Lenh khong co san cho cua hang.");
	}
	if(sscanf(params, "d", amount) || amount < 0) {
		return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /addmaterials [amount]");
	}
	if (amount > PlayerInfo[playerid][pMats]) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co nhieu vat lieu.");
	}
	if (Businesses[PlayerInfo[playerid][pBusiness]][bInventory] + amount > Businesses[PlayerInfo[playerid][pBusiness]][bInventoryCapacity]) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Cong suat hang ton kho vuot qua muc.");
	}
	if (InBusiness(playerid) != PlayerInfo[playerid][pBusiness]) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban phai o trong cua hang.");
	}
	Businesses[PlayerInfo[playerid][pBusiness]][bInventory] += amount;
	PlayerInfo[playerid][pMats] -= amount;
	OnPlayerStatsUpdate(playerid);
	SaveBusiness(PlayerInfo[playerid][pBusiness]);
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da them vat lieu vao kho thanh cong de tien hanh kinh doanh!");
	format(string, sizeof(string), "INVENTORY: %d/%d materials", Businesses[PlayerInfo[playerid][pBusiness]][bInventory], Businesses[PlayerInfo[playerid][pBusiness]][bInventoryCapacity]);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:offergun(playerid, params[])
{
	if (PlayerInfo[playerid][pBusiness] != INVALID_BUSINESS_ID && Businesses[PlayerInfo[playerid][pBusiness]][bType] != BUSINESS_TYPE_GUNSHOP)	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong lam viec cho cua hang ban sung nao!");
	}
	new buyerid, weapon;
	if (sscanf(params, "uk<sweapon>", buyerid, weapon)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /offergun [Player] [weapon name]");
	}
	if (!IsPlayerConnected(buyerid)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le!");
	}
	if (playerid == buyerid) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the ban mot khau sung cho minh!");
	}
    if(!ProxDetectorS(5.0, playerid, buyerid)) {
    	return SendClientMessageEx(playerid, COLOR_GREY, "Khac hang khong o gan ban!");
    }
	if (InBusiness(playerid) != PlayerInfo[playerid][pBusiness]) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o ben trong cua hang!");
	}
	if(PlayerInfo[buyerid][pConnectHours] < 2 || PlayerInfo[buyerid][pWRestricted] > 0) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi nay dang bi han che vu khi!");
	}
	new b = InBusiness(playerid);
	if (Businesses[b][bInventory] < GetWeaponParam(weapon, WeaponMats)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang khong du nguyen lieu cho vu khi do");
	}
	if (Businesses[b][bInventory] < GetWeaponParam(weapon, WeaponMinLevel)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Level ban hang cua ban chua du cao de ban loai sung nay.");
 	}

	new price = GetWeaponPrice(PlayerInfo[playerid][pBusiness], weapon);

	new string[128];
	format(string, sizeof(string), "* Ban moi %s mua %s voi gia $%s", GetPlayerNameEx(buyerid), Weapon_ReturnName(weapon), number_format(price));
    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
    format(string, sizeof(string), "* Nhan vien %s moi ban mua %s voi gia $%s (su dung /chapnhan gun) de mua  vu khi.", GetPlayerNameEx(playerid), Weapon_ReturnName(weapon), number_format(price));
    SendClientMessageEx(buyerid, COLOR_LIGHTBLUE, string);

	SetPVarInt(buyerid, "Business_WeapType", weapon);
	SetPVarInt(buyerid, "Business_WeapOfferer", playerid);
	SetPVarInt(buyerid, "Business_WeapOffererSQLId", GetPlayerSQLId(playerid));
	SetPVarInt(buyerid, "Business_WeapPrice", price);
	return 1;
}


CMD:offermenu(playerid, params[])
{
    new iBusiness = InBusiness(playerid);

   	if(iBusiness == INVALID_BUSINESS_ID || (Businesses[iBusiness][bType] != BUSINESS_TYPE_BAR && Businesses[iBusiness][bType] != BUSINESS_TYPE_CLUB && Businesses[iBusiness][bType] != BUSINESS_TYPE_RESTAURANT)) return SendClientMessageEx(playerid, COLOR_GRAD2, "   You are not in a bar, club or restaurant!");
	else if(Businesses[iBusiness][bInventory] < 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "   Cua hang khong du hang ton kho!");

	new szDialog[512], pvar[25], line;

	if (Businesses[iBusiness][bType] == BUSINESS_TYPE_BAR || Businesses[iBusiness][bType] == BUSINESS_TYPE_CLUB)
	{
		for (new item; item < sizeof(Drinks); item++)
		{
			new cost = (PlayerInfo[playerid][pDonateRank] >= 1) ? (floatround(Businesses[iBusiness][bItemPrices][item] * 0.8)) : (Businesses[iBusiness][bItemPrices][item]);
			format(szDialog, sizeof(szDialog), "%s%s  ($%s)\n", szDialog, Drinks[item], number_format(cost));
			format(pvar, sizeof(pvar), "Business_MenuItem%d", line);
			SetPVarInt(playerid, pvar, item);
			format(pvar, sizeof(pvar), "Business_MenuItemPrice%d", line);
			SetPVarInt(playerid, pvar, Businesses[iBusiness][bItemPrices][item]);
			line++;
		}
	}
	else if(Businesses[iBusiness][bType] == BUSINESS_TYPE_RESTAURANT)
	{
		for (new item; item < sizeof(RestaurantItems); ++item)
		{
			new cost = (PlayerInfo[playerid][pDonateRank] >= 1) ? (floatround(Businesses[iBusiness][bItemPrices][item] * 0.8)) : (Businesses[iBusiness][bItemPrices][item]);
			format(szDialog, sizeof(szDialog), "%s%s  ($%s)\n", szDialog, RestaurantItems[item], number_format(cost));
			format(pvar, sizeof(pvar), "Business_MenuItem%d", line);
			SetPVarInt(playerid, pvar, item);
			format(pvar, sizeof(pvar), "Business_MenuItemPrice%d", line);
			SetPVarInt(playerid, pvar, Businesses[iBusiness][bItemPrices][item]);
			line++;
		}
	}

   	if(strlen(szDialog) == 0) SendClientMessageEx(playerid, COLOR_GRAD2, "   Cua hang nay khong ban bat ki mat hang nao!");
    else ShowPlayerDialog(playerid, RESTAURANTMENU, DIALOG_STYLE_LIST, "Menu", szDialog, "Mua", "Huy bo");
    return 1;
}
CMD:thucdon(playerid, params[])
{
	if (!IsAtRestaurant(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "   Ban khong o trong nha hang!");
		return 1;
	}

	new iBusiness = InBusiness(playerid);

	if (Businesses[iBusiness][bInventory] < 1) {
	    SendClientMessageEx(playerid, COLOR_GRAD2, "   Cua hang khong du hang ton kho!");
	    return 1;
	}

	if (!Businesses[iBusiness][bStatus])
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Nha hang nay da duoc dong lai!");
		return 1;
	}

	new szDialog[512], pvar[25], line;

	for (new item; item < sizeof(RestaurantItems); ++item)
	{
		format(szDialog, sizeof(szDialog), "%s%s  ($%s)\n", szDialog, RestaurantItems[item], number_format(Businesses[iBusiness][bItemPrices][item]));
		format(pvar, sizeof(pvar), "Business_MenuItem%d", line);
		SetPVarInt(playerid, pvar, item);
		format(pvar, sizeof(pvar), "Business_MenuItemPrice%d", line);
		SetPVarInt(playerid, pvar, Businesses[iBusiness][bItemPrices][item]);
		line++;
	}

	if (strlen(szDialog) == 0)
	{
        SendClientMessageEx(playerid, COLOR_GRAD2, "   Cua hang nay khong ban bat ki mat hang nao!");
    }
    else
	{
    	ShowPlayerDialog(playerid, RESTAURANTMENU2, DIALOG_STYLE_LIST, "Menu", szDialog, "Mua", "Huy bo");
    }

	return 1;
}

CMD:bpanic(playerid, params[])
{
	if (PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu hoac lam viec trong cua hang!");
	}
	if (PlayerInfo[playerid][pBusiness] != InBusiness(playerid)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong khu vuc kinh doanh!");
	}
	new string[128];
	if(GetPVarInt(playerid, "bizpanic") == 0)
	{
		format(string, sizeof(string), "** %s bam vao nut khan cap.", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		format(string, sizeof(string), "* %s %s da nhan nut bao dong khan cap o %s - /bizfind %d cho vi tri GPS cua hang.", GetBusinessRankName(PlayerInfo[playerid][pBusinessRank]), GetPlayerNameEx(playerid), Businesses[InBusiness(playerid)][bName], InBusiness(playerid));
		SendClientMessage(playerid, COLOR_GRAD2, "* Canh sat da duoc thong bao noi ban yeu cau giup do. ");
		SetPVarInt(playerid, "bizpanic", 1);
	}
	else
	{
		format(string, sizeof(string), "** %s bam tat nut khan cap", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		format(string, sizeof(string), "* %s %s khong can su tro giup o %s.", GetBusinessRankName(PlayerInfo[playerid][pBusinessRank]), GetPlayerNameEx(playerid), Businesses[InBusiness(playerid)][bName]);
		SendClientMessage(playerid, COLOR_GRAD2, "* Canh sat da duoc thong bao noi rang ban khong can tro giup nua. ");
		SetPVarInt(playerid, "bizpanic", 0);
	}
	foreach(new i: Player)
	{
		if(IsACop(i))
		{
			SetPlayerMarkerForPlayer(i, playerid, 0x2641FEAA);
			SendClientMessageEx(i, COLOR_LIGHTBLUE, string);
		}
	}
	return 1;
}

CMD:bizfind(playerid, params[])
{
	if(IsACop(playerid))
	{
	    new iBusinessID, string[128];
	    if(sscanf(params, "d", iBusinessID))
	    {
	        return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /bizfind [business id]");
	    }
		if(IsValidBusinessID(iBusinessID))
		{
		    if(Businesses[iBusinessID][bOwner])
		    {
                SetPVarInt(playerid,"bpanic", 1);
		        format(string, sizeof(string), "* Thiet lap GPS cua ban de tim %s", Businesses[iBusinessID][bName]);
 				SetPlayerCheckpoint(playerid, Businesses[iBusinessID][bExtPos][0], Businesses[iBusinessID][bExtPos][1], Businesses[iBusinessID][bExtPos][2], 4.0);
 				return 1;
			}
			return SendClientMessageEx(playerid, COLOR_GRAD2, " Ban khong so huu hoac lam viec trong cua hang. ");
		}
		return SendClientMessageEx(playerid, COLOR_GRAD2, " ID cua hang khong hop le.");
	}
	return SendClientMessageEx(playerid, COLOR_GRAD2, " Ban khong co quyen truy cap vao hoanh muc cua hang (Luon thuc thi phap luat)");
}

CMD:binventory(playerid, params[])
{
	new
		string[128],
		iBusiness = PlayerInfo[playerid][pBusiness];
	if(iBusiness != INVALID_BUSINESS_ID)
	{
		SendClientMessageEx(playerid, COLOR_GREEN, "|_________ Thong ke cua hang________|");
		format(string, sizeof(string), "So tien: %d / Cong suat: %d / Loai: %s", Businesses[iBusiness][bInventory], Businesses[iBusiness][bInventoryCapacity], GetInventoryType(iBusiness));
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		for (new i; i < MAX_BUSINESS_GAS_PUMPS; i++) {
			if (Businesses[iBusiness][GasPumpPosX][i] != 0.0) {
				format(string, sizeof(string), "Gas Tank %d:  %.2f gal / %.2f gal", i+1, Businesses[iBusiness][GasPumpGallons][i], Businesses[iBusiness][GasPumpCapacity][i]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD2, " Ban khong So huu hoac lam viec trong cua hang.");
	return 1;
}

CMD:offeritem(playerid, params[])
{
	new buyerid, item;
	if (PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID || Businesses[PlayerInfo[playerid][pBusiness]][bType] != BUSINESS_TYPE_STORE && Businesses[PlayerInfo[playerid][pBusiness]][bType] != BUSINESS_TYPE_GASSTATION) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong lam viec cho cua hang 24/7!");
	}
	if (sscanf(params, "uk<storeitem>", buyerid, item))	{
	    SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /offeritem [Player] [Item]");
	    SendClientMessageEx(playerid, COLOR_GREY, "Items - cellphone, phonebook, dice, condom, musicplayer, rope, cigar, sprunk, lock, spraycan, radio, camera, lotteryticket,");
	    return SendClientMessageEx(playerid, COLOR_GREY, "checkbook, paper, industriallock, elock, and alarmlock");
	}
	if (PlayerInfo[playerid][pBusiness] != InBusiness(playerid)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong cua hang kinh doanh!");
	}
	if (Businesses[PlayerInfo[playerid][pBusiness]][bInventory] < 1) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang khong co mat hang nay");
	}
	if (!IsPlayerConnected(buyerid)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le!");
	}
	if (item == INVALID_STORE_ITEM)	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Item khong hop le!");
	}
	if (!Businesses[PlayerInfo[playerid][pBusiness]][bItemPrices][item-1]) {
	    SendClientMessageEx(playerid, COLOR_GRAD4, "Mat hang nay khong phai de ban.");
	    return 1;
	}
	if (playerid == buyerid) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the ban Item cho chinh minh!");
	}
    if(!ProxDetectorS(5.0, playerid, buyerid)) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Khach hang khong o gan ban!");
    }

	new string[128];
    format(string, sizeof(string), "* Ban ban cho %s de mua mot %s.", GetPlayerNameEx(buyerid), StoreItems[item-1]);
    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
    format(string, sizeof(string), "* %s muon ban cho ban mot %s voi gia $%s (Su dung /chapnhan item de mua)", GetPlayerNameEx(playerid), StoreItems[item-1], number_format(Businesses[PlayerInfo[playerid][pBusiness]][bItemPrices][item-1]));
    SendClientMessageEx(buyerid, COLOR_LIGHTBLUE, string);

	SetPVarInt(buyerid, "Business_ItemType", item-1);
	SetPVarInt(buyerid, "Business_ItemPrice", Businesses[PlayerInfo[playerid][pBusiness]][bItemPrices][item-1]);
	SetPVarInt(buyerid, "Business_ItemOfferer", playerid);
	SetPVarInt(buyerid, "Business_ItemOffererSQLId", GetPlayerSQLId(playerid));

	return 1;
}

CMD:resupply(playerid, params[])
{
	new iBusiness = PlayerInfo[playerid][pBusiness];
	new amount;
	new string[128];
	new year, month, day;
	if (sscanf(params, "d", amount))
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /resupply [So luong]");
	}
	if (PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID) {
	    return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong so huu mot cua hang.");
	}
	if (PlayerInfo[playerid][pBusinessRank] < Businesses[iBusiness][bMinSupplyRank]) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Rank cua ban khong du cao de dat hang tiep te cho cua hang!");
	}
	if(amount < 1) {
		return SendClientMessageEx(playerid, COLOR_GREY, "So luong tiep te khong duoc duoi 1.");
	}
	if (Businesses[iBusiness][bOrderState] == 1) {
		return SendClientMessageEx(playerid, COLOR_WHITE, "Ban dang co mot yeu cau giao hang, hoac co the huy don dat hang truoc khi Nguoi giao hang tiep nhan.");
	}
	if (Businesses[iBusiness][bOrderState] == 2) {
		return SendClientMessageEx(playerid, COLOR_WHITE, "Ban dang co mot don dat hang dang duoc chuyen giao.");
	}
	if (Businesses[iBusiness][bSupplyPos][0] == 0.0) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Cua hang nay khong co dia diem dua hang cho Trucker's.");
	}
	if (Businesses[iBusiness][bInventory] >= Businesses[iBusiness][bInventoryCapacity]) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Han trong kho cua ban da het.");
	}
	if(Businesses[iBusiness][bInventory] + amount > Businesses[iBusiness][bInventoryCapacity])
	{
	    return SendClientMessageEx(playerid, COLOR_GREY, "Hang trong kho cua ban khong co kha nang.");
	}
	if (Businesses[iBusiness][bSafeBalance] < floatround(amount * BUSINESS_ITEMS_COST)) {
	    format(string, sizeof(string), "Safe balance is not enough for this. ($%s)", number_format(floatround(amount * BUSINESS_ITEMS_COST)));
		return SendClientMessageEx(playerid, COLOR_GREY, string);
	}

	format(Businesses[iBusiness][bOrderBy], MAX_PLAYER_NAME, "%s", GetPlayerNameEx(playerid));
	getdate(year, month, day);
	format(Businesses[iBusiness][bOrderDate], 30, "%d-%02d-%02d %02d:%02d:%02d", year, month, day, hour, minuite, second);
	Businesses[iBusiness][bSafeBalance] -= floatround(amount * BUSINESS_ITEMS_COST);
	Businesses[iBusiness][bOrderAmount] = amount;
	Businesses[iBusiness][bOrderState] = 1;
	SaveBusiness(iBusiness);
	format(string, sizeof(string), "%s (IP: %s) da dat mot don hang tiep te cho %s (%d)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), Businesses[PlayerInfo[playerid][pBusiness]][bName], PlayerInfo[playerid][pBusiness]);
	Log("logs/business.log", string);
	format(string, sizeof(string), "* Ban da dat mot don hang tiep te cho %s", Businesses[PlayerInfo[playerid][pBusiness]][bName]);
	SendClientMessage(playerid, COLOR_GRAD2, string);
	return 1;
}

CMD:checkresupply(playerid, params[])
{
	new iBusinessID = PlayerInfo[playerid][pBusiness];
	if((0 <= iBusinessID < MAX_BUSINESSES) && PlayerInfo[playerid][pBusinessRank] >= Businesses[iBusinessID][bMinSupplyRank])
	{
		new iOrderState = Businesses[iBusinessID][bOrderState];
		if (!iOrderState)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Cua hang cua ban chua bao giot dat hang tiep te.");
			return 1;
		}
		else
		{
			new string[128];
			SendClientMessageEx(playerid, COLOR_GREEN, "|___________ Thong tin dat hang moi nhat ___________|");
			format(string,sizeof(string), "Ngay/Thoigian: %s -- So tien: %s -- Tinh trang: %s", Businesses[iBusinessID][bOrderDate], number_format(Businesses[iBusinessID][bOrderAmount]), GetSupplyState(iOrderState));
			//if (iOrderState == 2) format(string,sizeof(string), "%s {DDDDDD}(Truck Distance: %d)");
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			format(string,sizeof(string), "Don hang nay da duoc gui boi %s", Businesses[iBusinessID][bOrderBy]);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			if (iOrderState == 1) SendClientMessageEx(playerid, COLOR_YELLOW, "Ban co the su dung /cancelresupply de huy bo chuyen hang nay.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Nhan vien kinh doanh duoc uy quyen moi co the su dung lenh nay.");
	return 1;
}

CMD:cancelresupply(playerid, params[])
{
	if (PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID)	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o trong mot cua hang nao ca!");
	}
	else if (PlayerInfo[playerid][pBusinessRank] < Businesses[PlayerInfo[playerid][pBusiness]][bMinSupplyRank]) {
		return SendClientMessageEx(playerid, COLOR_GREY, "Cap bac cua ban khong du cao de dat hang tiep te cho cua hang!");
	}
	else {
		new orderstate = Businesses[PlayerInfo[playerid][pBusiness]][bOrderState];
		if (orderstate == 0) {
			return SendClientMessageEx(playerid, COLOR_WHITE, "Cua hang cua ban chua bao gio dat hang tiep te.");
		}
		else if (orderstate == 2) {
		    foreach(new i : Player)
		    {
		        if(TruckDeliveringTo[GetPlayerVehicleID(i)] == PlayerInfo[playerid][pBusiness])
		        {
		            SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong the huy bo don hang khi chuyen hang dang duoc van chuyen toi!");
		            return 1;
		        }
		    }
		    Businesses[PlayerInfo[playerid][pBusiness]][bSafeBalance] += floatround(Businesses[PlayerInfo[playerid][pBusiness]][bOrderAmount] * BUSINESS_ITEMS_COST);
		    Businesses[PlayerInfo[playerid][pBusiness]][bOrderState] = 4;
			SaveBusiness(PlayerInfo[playerid][pBusiness]);
			new string[128];
			format(string, sizeof(string), "%s (IP: %s) Ban da huy bo don hang tiep te cho %s (%d)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), Businesses[PlayerInfo[playerid][pBusiness]][bName], PlayerInfo[playerid][pBusiness]);
			Log("logs/business.log", string);
			format(string, sizeof(string), "Ban da huy bo don hang tiep te cua ban! So tien $%s da duoc trao tra.", number_format(floatround(Businesses[PlayerInfo[playerid][pBusiness]][bOrderAmount] * (BUSINESS_ITEMS_COST * 0.8))));
			return SendClientMessageEx(playerid, COLOR_WHITE, string);

		}
		else if (orderstate == 1) {
		    Businesses[PlayerInfo[playerid][pBusiness]][bSafeBalance] += floatround(Businesses[PlayerInfo[playerid][pBusiness]][bOrderAmount] * BUSINESS_ITEMS_COST);
		    Businesses[PlayerInfo[playerid][pBusiness]][bOrderState] = 4;
			SaveBusiness(PlayerInfo[playerid][pBusiness]);
			new string[128];
			format(string, sizeof(string), "%s (IP: %s) da huy don hang tiep te cho %s (%d)", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid), Businesses[PlayerInfo[playerid][pBusiness]][bName], PlayerInfo[playerid][pBusiness]);
			Log("logs/business.log", string);
			format(string, sizeof(string), "Ban da huy bo don hang tiep te cua ban! So tien $%s da duoc trao tra.", number_format(floatround(Businesses[PlayerInfo[playerid][pBusiness]][bOrderAmount] * (BUSINESS_ITEMS_COST * 0.8))));
			return SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
	}
	return 1;
}

CMD:minrank(playerid, params[])
{
	new rank, command[32];
	if (PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID || PlayerInfo[playerid][pBusinessRank] < 5)
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Chi chu so huu cua hang moi su dung duoc lenh nay");
	}
	if (sscanf(params, "ds[32]", rank, command))
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /minrank [rank] [invite/giverank/supply]");
	}
	if(rank < 0 || rank > 5)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Khong duoc duoi Rank 0 hoac cao hon Rank 5!");
	}
	if (strcmp(command, "invite", true) == 0) Businesses[PlayerInfo[playerid][pBusiness]][bMinInviteRank] = rank, SaveBusiness(PlayerInfo[playerid][pBusiness]);
	else if (strcmp(command, "giverank", true) == 0) Businesses[PlayerInfo[playerid][pBusiness]][bMinGiveRankRank] = rank, SaveBusiness(PlayerInfo[playerid][pBusiness]);
	else if (strcmp(command, "supply", true) == 0) Businesses[PlayerInfo[playerid][pBusiness]][bMinSupplyRank] = rank, SaveBusiness(PlayerInfo[playerid][pBusiness]);
	else return SendClientMessageEx(playerid, COLOR_GRAD2, "Khong hop le");

	new string[128];
	format(string, sizeof(string), "Ban da thiet lap Rank toi thieu cho %s thanh %d (%s)", command, rank, GetBusinessRankName(rank));
	SendClientMessageEx(playerid, COLOR_GREY, string);

	return 1;
}

CMD:br(playerid, params[])
{
	return cmd_bizradio(playerid, params);
}

CMD:togbiz(playerid, params[])
{
    if (!IsValidBusinessID(PlayerInfo[playerid][pBusiness])) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong phai nhan vien cua hang!");
    else if(PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong phai nhan vien cua hang!");

    if(GetPVarInt(playerid, "BusinessRadio"))
    {
        DeletePVar(playerid, "BusinessRadio");
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban da kich hoat radio cua hang.");
    }
    else
    {
        SetPVarInt(playerid, "BusinessRadio", 1);
        SendClientMessageEx(playerid, COLOR_WHITE, "Ban da tat radio cua hang.");
    }
	return 1;
}

CMD:bizradio(playerid, params[])
{

	new
		string[128],
		iBusinessID = PlayerInfo[playerid][pBusiness],
		iRank = PlayerInfo[playerid][pBusinessRank];

	if (!IsValidBusinessID(iBusinessID)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong phai nhan vien cua cua hang!");
	else if(iBusinessID == INVALID_BUSINESS_ID) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong phai nhan vien cua cua hang");
	if(PlayerTied[playerid] != 0 || PlayerCuffed[playerid] != 0 || PlayerInfo[playerid][pJailTime] > 0 || GetPVarInt(playerid, "Injured")) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lam dieu nay vao luc nay.");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /b(iz)r(radio) [biz chat]");

	format(string, sizeof(string), "** (%d) %s %s: %s **", iRank, GetBusinessRankName(iRank), GetPlayerNameEx(playerid), params);
	foreach(new i: Player) {
	    if (PlayerInfo[i][pBusiness] == iBusinessID && GetPVarInt(i, "BusinessRadio") != 1) SendClientMessageEx(i, COLOR_BR, string);
	}

	return 1;
}

CMD:employeepayset(playerid, params[]) //su luong cua hang
{
	if (PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID || PlayerInfo[playerid][pBusinessRank] != 5)
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Khong duoc phep su dung lenh nay!");
	}
	new rank, amount;
	if (sscanf(params, "dd", rank, amount))
	{
	    SendClientMessageEx(playerid, COLOR_RED, "Danh sach cac khoan tien luong hien tai...");
	    for (new i, string[64]; i < 5; i++) {
	        format(string,sizeof(string), "Rank %d (%s): $%s", i, GetBusinessRankName(i), number_format(Businesses[PlayerInfo[playerid][pBusiness]][bRankPay][i]));
		    SendClientMessageEx(playerid, COLOR_WHITE, string);
	    }
		return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /employeepayset [rank] [amount]");
	}
	if (rank < 0 || rank > 4)
	{
		return SendClientMessageEx(playerid, COLOR_WHITE, "Rank khong hop le!");
   	}
	if (amount < 1 || amount > 100000)
	{
		return SendClientMessageEx(playerid, COLOR_WHITE, "So tien khong duoc thap hon $1 hoac lon hon $100,000!");
    }

	Businesses[PlayerInfo[playerid][pBusiness]][bRankPay][rank] = amount;
	SaveBusiness(PlayerInfo[playerid][pBusiness]);
    new string[128];
    format(string, sizeof(string), "Ban da thiet lap tien luong rank %d (%s) thanh $%s", rank, GetBusinessRankName(rank), number_format(amount));
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	format(string,sizeof(string),"%s da thay doi tien luong rank %d thanh $%d cho cua hang %d", GetPlayerNameEx(playerid), rank, number_format(amount), PlayerInfo[playerid][pBusiness]);
	Log("logs/business.log", string);

	return 1;
}

CMD:employeeautopay(playerid, params[])
{
	if (PlayerInfo[playerid][pBusiness] == INVALID_BUSINESS_ID || PlayerInfo[playerid][pBusinessRank] != 5)
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "Khong duoc phep su dung lenh nay!");
	}
	if (Businesses[PlayerInfo[playerid][pBusiness]][bAutoPay])
	{
		Businesses[PlayerInfo[playerid][pBusiness]][bAutoPay] = 0;
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da tat tien luong cho cac cua hang.");
		SaveBusiness(PlayerInfo[playerid][pBusiness]);
		return 1;
	}
 	else
	{
		Businesses[PlayerInfo[playerid][pBusiness]][bAutoPay] = 1;
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da kich hoat tien luong cho cac cua hang.");
		SaveBusiness(PlayerInfo[playerid][pBusiness]);
		return 1;
	}
}

CMD:editgasprice(playerid, params[])
{
	if (PlayerInfo[playerid][pBusiness] != INVALID_BUSINESS_ID && PlayerInfo[playerid][pBusinessRank] >= 5 && IsBusinessGasAble(Businesses[PlayerInfo[playerid][pBusiness]][bType]))
	{
		ShowPlayerDialog(playerid, DIALOG_GASPRICE, DIALOG_STYLE_INPUT, "Chinh sua gia Gas", "Nhap gia moi cho 1 gallon (e.g. 4.52)", "Dong y", "CancelHuy bo");
		SetPVarInt(playerid, "EditingBusiness", PlayerInfo[playerid][pBusiness]);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Khong phai cua ban hoac ban khong so huu tram xang!");
	return 1;
}

CMD:editgiacuahang(playerid, params[])
{
	new
		iBusiness = PlayerInfo[playerid][pBusiness];

	if (iBusiness != INVALID_BUSINESS_ID)
	{
	    if(PlayerInfo[playerid][pBusinessRank] >= 5)
		{
			if(Businesses[iBusiness][bType] == BUSINESS_TYPE_STORE || Businesses[iBusiness][bType] == BUSINESS_TYPE_GASSTATION) {
	    		new szDialog[912];
				for (new i = 0; i < sizeof(StoreItems); i++) format(szDialog, sizeof(szDialog), "%s%s  ($%s) (Chi Phi Toi Da: $%s)\n", szDialog, StoreItems[i], number_format(Businesses[iBusiness][bItemPrices][i]), number_format(floatround(StoreItemCost[i][ItemValue] * BUSINESS_ITEMS_COST)) );
				ShowPlayerDialog(playerid, DIALOG_STOREPRICES, DIALOG_STYLE_LIST, "Chinh sua gia tien 24/7", szDialog, "Chinh sua", "Huy bo");
				SetPVarInt(playerid, "EditingBusiness", iBusiness);
			}

		    else if(Businesses[iBusiness][bType] == BUSINESS_TYPE_CLOTHING) {
		    	ShowPlayerDialog(playerid, DIALOG_STORECLOTHINGPRICE, DIALOG_STYLE_INPUT, "Sua gia", "{FFFFFF}Nhap gia ban moi cho quan ao\n(Item voi muc gia $0 se khong duoc ban)", "Dong y", "Huy bo");
                SetPVarInt(playerid, "EditingBusiness", iBusiness);
			}
			else if(Businesses[iBusiness][bType] == BUSINESS_TYPE_GUNSHOP) {
			    new szDialog[512];
				for (new i = 0; i < sizeof(Weapons); i++) format(szDialog, sizeof(szDialog), "%s%s  ($%s)\n", szDialog, GetWeaponNameEx(Weapons[i][WeaponId]), number_format(Businesses[iBusiness][bItemPrices][i]));
				ShowPlayerDialog(playerid, DIALOG_GUNPRICES, DIALOG_STYLE_LIST, "Chinh sua gia cua hang vu khi", szDialog, "Chinh sua", "Huy bo");
				SetPVarInt(playerid, "EditingBusiness", iBusiness);
			}
			else if(Businesses[iBusiness][bType] == BUSINESS_TYPE_BAR || Businesses[iBusiness][bType] == BUSINESS_TYPE_CLUB /*|| Businesses[iBusiness][bType] == BUSINESS_TYPE_RESTAURANT*/)
			{
			    new szDialog[512];
				for (new i; i < sizeof(Drinks); i++) format(szDialog, sizeof(szDialog), "%s%s  ($%s)\n", szDialog, Drinks[i], number_format(Businesses[iBusiness][bItemPrices][i]));
				ShowPlayerDialog(playerid, DIALOG_BARPRICE, DIALOG_STYLE_LIST, "Chinh sua gia cua hang", szDialog, "Chinh sua", "Huy bo");
				SetPVarInt(playerid, "EditingBusiness", iBusiness);
			}
			else if(Businesses[iBusiness][bType] == BUSINESS_TYPE_SEXSHOP)
			{
			    new szDialog[512];
				for (new i = 0; i < sizeof(SexItems); i++) format(szDialog, sizeof(szDialog), "%s%s  ($%s)\n", szDialog, SexItems[i], number_format(Businesses[iBusiness][bItemPrices][i]));
				ShowPlayerDialog(playerid, DIALOG_SEXSHOP, DIALOG_STYLE_LIST, "Chinh sua gia cua hang", szDialog, "Chinh sua", "Huy bo");
				SetPVarInt(playerid, "EditingBusiness", iBusiness);
			}
			else if (Businesses[iBusiness][bType] == BUSINESS_TYPE_RESTAURANT)
			{
				new buf[512];
				for (new i = 0; i < sizeof(RestaurantItems); ++i)
				{
					format(buf, sizeof(buf), "%s%s  ($%s)\n", buf, RestaurantItems[i], number_format(Businesses[iBusiness][bItemPrices][i]));
				}

				ShowPlayerDialog(playerid, DIALOG_RESTAURANT, DIALOG_STYLE_LIST, "Chinh sua gia cua hang", buf, "Chinh sua", "Huy bo");
				SetPVarInt(playerid, "EditingBusiness", iBusiness);
			}
		}
		else
		{
		    SendClientMessageEx(playerid, COLOR_GREY, "Ban khong phai store owner.");
		    return 1;
		}
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong phai store owner.");
	}
	return 1;
}

CMD:bizlock(playerid, params[])
{
	if(PlayerInfo[playerid][pBusiness] != INVALID_BUSINESS_ID && PlayerInfo[playerid][pBusinessRank] >= Businesses[PlayerInfo[playerid][pBusiness]][bMinDoorRank] &&
	IsPlayerInRangeOfPoint(playerid, 2.0, Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][0], Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][1], Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][2]))
	{
		if(Businesses[PlayerInfo[playerid][pBusiness]][bStatus] == 1)
		{
			Businesses[PlayerInfo[playerid][pBusiness]][bStatus] = 0;
			new string[MAX_PLAYER_NAME + 28];
			format(string, sizeof(string), "* %s da khoa cua.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			Businesses[PlayerInfo[playerid][pBusiness]][bStatus] = 1;
			new string[MAX_PLAYER_NAME + 28];
			format(string, sizeof(string), "* %s da mo cua.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		RefreshBusinessPickup(PlayerInfo[playerid][pBusiness]);
		Streamer_UpdateEx(playerid, Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][0], Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][1], Businesses[PlayerInfo[playerid][pBusiness]][bExtPos][2]);
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban khong o gan cua hang cua ban hoac khong du quyen.");
		return 1;
	}
	return 1;
}


/*
CMD:gotocharmpoint(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] >= 4)
	{
		SetPlayerPos(playerid, CharmPoints[ActiveCharmPoint][0], CharmPoints[ActiveCharmPoint][1], CharmPoints[ActiveCharmPoint][2]);

		new vw, int;

		switch (ActiveCharmPoint)
		{
			case 0:
			{
				vw = 123051;
				int = 1;
			}

			case 1:
			{
				vw = 100078;
				int = 17;
			}

			case 2:
			{
				vw = 2345;
				int = 1;
			}

			case 3:
			{
				vw = 32423;
				int = 1;
			}

			case 4:
			{
				vw = 20083;
				int = 11;
			}
		}

		SetPlayerVirtualWorld(playerid, vw);
		SetPlayerInterior(playerid, int);
	}

	return 1;
}

CMD:giveeventtokens(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		new giveplayerid, amount;

		if (sscanf(params, "ui", giveplayerid, amount))
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /giveeventtokens [player] [amount]");
			return 1;
		}

		if (amount == 0)
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "  Amount cannot be 0!");
			return 1;
		}

		PlayerInfo[giveplayerid][pTrickortreat] += amount;

		new string[128];

		if (amount < 0)
		{
			format(string, sizeof(string), "You have taken %i of %s's tokens away.", -amount, GetPlayerNameEx(giveplayerid));
		}
		else
		{
			format(string, sizeof(string), "Ban da cho %s %i tokens.", GetPlayerNameEx(giveplayerid), amount);
		}

		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}

	return 1;
}

CMD:claimtokens(playerid, params[])
{
	if (IsPlayerInRangeOfCharm(playerid))
	{
		new time = gettime();

		if (time >= PlayerInfo[playerid][pLastCharmReceived] + 3600)
		{
			SendClientMessageEx(playerid, 0x37A621FF, "You collected 5 tokens!");
			PlayerInfo[playerid][pLastCharmReceived] = gettime();
			PlayerInfo[playerid][pTrickortreat] += 5;
			return 1;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "You have already received a charm from that point!");
			return 1;
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "You are not near the charm point!");
	}

	return 1;
} */

//======[Start of Famed Commands]=======

CMD:fc(playerid, params[]) {
	if(PlayerInfo[playerid][pFamed] >= 1 || PlayerInfo[playerid][pAdmin] >= 4) {
		if(isnull(params)) {
			SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /fc [Noi dung]");
		}
		else if(gettime() < GetPVarInt(playerid, "timeFamed")) {

			new
				szMessage[64];

			format(szMessage, sizeof(szMessage), "Ban phai tro %d giay truoc khi noi chuyen tiep tren kenh nay.", GetPVarInt(playerid, "timeFamed") - gettime());
			SendClientMessageEx(playerid, COLOR_GREY, szMessage);
		}
		else if(GetPVarType(playerid, "togFamed") == 0) {
		    SendClientMessageEx(playerid, COLOR_GREY, "Ban dang tat kenh noi chuyen Famed - /togfamed de kich hoat lai.");
		}
		else if(PlayerInfo[playerid][pFMuted] != 0) {
			SendClientMessageEx(playerid, COLOR_GREY, "Ban dang bi cam noi chuyen tren kenh Famed.");
		}
		else {

			new
				szMessage[128];

			switch(PlayerInfo[playerid][pAdmin]) {
				case 2: format(szMessage, sizeof(szMessage), "** Junior Admin %s: %s", GetPlayerNameEx(playerid), params);
				case 3: format(szMessage, sizeof(szMessage), "** General Admin %s: %s", GetPlayerNameEx(playerid), params);
				case 4: format(szMessage, sizeof(szMessage), "** Senior Admin %s: %s", GetPlayerNameEx(playerid), params);
				case 5: format(szMessage, sizeof(szMessage), "** Head Admin %s: %s", GetPlayerNameEx(playerid), params);
				case 6: format(szMessage, sizeof(szMessage), "** Lead Head Admin %s: %s", GetPlayerNameEx(playerid), params);
				case 7: format(szMessage, sizeof(szMessage), "** Executive Admin %s: %s", GetPlayerNameEx(playerid), params);

				default: {

					SetPVarInt(playerid, "timeFamed", gettime() + 5);

					switch(PlayerInfo[playerid][pFamed]) {
						case 1: format(szMessage, sizeof(szMessage), "** Old-School %s: %s", GetPlayerNameEx(playerid), params);
						case 2: format(szMessage, sizeof(szMessage), "** Chartered Old-School %s: %s", GetPlayerNameEx(playerid), params);
						case 3: format(szMessage, sizeof(szMessage), "** Famed %s: %s", GetPlayerNameEx(playerid), params);
						case 4: format(szMessage, sizeof(szMessage), "** Famed Commissioner %s: %s", GetPlayerNameEx(playerid), params);
						case 5: format(szMessage, sizeof(szMessage), "** Famed Moderator %s: %s", GetPlayerNameEx(playerid), params);
						case 6: format(szMessage, sizeof(szMessage), "** Vice-Chairman %s: %s", GetPlayerNameEx(playerid), params);
						case 7: format(szMessage, sizeof(szMessage), "** Chairman %s: %s", GetPlayerNameEx(playerid), params);
						default: return SendClientMessageEx(playerid, COLOR_GREY, "You have an invalid famed level.");
					}
				}
			}
			SendFamedMessage(COLOR_FAMED, szMessage);
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong phai la Famed!");
	return 1;
}

CMD:togfamed(playerid, params[])
{
	if(PlayerInfo[playerid][pFamed] >= 1)
	{
	    if(GetPVarInt(playerid, "togFamed") == 0)
	    {
	        SetPVarInt(playerid, "togFamed", 1);
	        SendClientMessageEx(playerid, COLOR_WHITE, "Ban da bat kenh noi chuyen Famed.");
	    }
		else {
		    SetPVarInt(playerid, "togFamed", 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "Ban da tat kenh noi chuyen Famed.");
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong phai la thanh vien Famed!");
	return 1;
}

CMD:fmute(playerid, params[])
{
	if(PlayerInfo[playerid][pFamed] >= 4 || PlayerInfo[playerid][pAdmin] >= 4)
	{
	    new string[128], targetid, reason[64];
	    if(sscanf(params, "us[64]", targetid, reason))
			return SendClientMessageEx(playerid, COLOR_GRAD1, "SU DUNG: /fmute [Player] [reason]");

		if(IsPlayerConnected(targetid))
		{
		    if(PlayerInfo[targetid][pFMuted] == 0)
		    {
		        if(targetid != INVALID_PLAYER_ID)
		        {
			        if(PlayerInfo[targetid][pFamed] > PlayerInfo[playerid][pFamed] || PlayerInfo[targetid][pAdmin] > PlayerInfo[playerid][pAdmin])
		 				return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the lam dieu nay tren nguoi nay");

					PlayerInfo[targetid][pFMuted] = 1;
					format(string, sizeof(string), "Ban da bi cam noi chuyen tren kenh Famed boi %s, ly do: %s.", GetPlayerNameEx(playerid), reason);
					SendClientMessageEx(targetid, COLOR_GRAD2, string);
					format(string, sizeof(string), "AdmCmd: %s da cam %s noi chuyen tren kenh Famed, ly do: %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(targetid), reason);
					ABroadCast(COLOR_LIGHTRED, string, 1);
					SendClientMessageEx(playerid, COLOR_LIGHTRED, string);
					Log("logs/admin.log", string);
				}
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi nay da bi noi chuyen truoc do!");
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay!");
	return 1;
}

CMD:funmute(playerid, params[])
{
	if(PlayerInfo[playerid][pFamed] >= 4 || PlayerInfo[playerid][pAdmin] >= 4)
	{
	    new string[128], targetid, reason[64];
	    if(sscanf(params, "us[64]", targetid, reason))
			return SendClientMessageEx(playerid, COLOR_GRAD1, "SU DUNG: /funmute [Nguoi choi] [Ly do]");

		if(IsPlayerConnected(targetid))
		{
		    if(PlayerInfo[targetid][pFMuted] == 1)
		    {
		        if(targetid != INVALID_PLAYER_ID)
		        {
			        if(PlayerInfo[targetid][pFamed] > PlayerInfo[playerid][pFamed] || PlayerInfo[targetid][pAdmin] > PlayerInfo[playerid][pAdmin])
		 				return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the lam dieu nay tren nguoi nay");

					PlayerInfo[targetid][pFMuted] = 0;
					format(string, sizeof(string), "Ban da duoc bo cam noi chuyen tren kenh Famed boi %s, ly do: %s.", GetPlayerNameEx(playerid), reason);
					SendClientMessageEx(targetid, COLOR_GRAD2, string);
					format(string, sizeof(string), "AdmCmd: %s da bo cam %s tren kenh Famed, ly do: %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(targetid), reason);
					ABroadCast(COLOR_LIGHTRED, string, 1);
					SendClientMessageEx(playerid, COLOR_LIGHTRED, string);
					Log("logs/admin.log", string);
				}
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi nay khong bi cam chat tai kenh Famed!");
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay!");
	return 1;
}

CMD:setfamed(playerid, params[])
{
    if(PlayerInfo[playerid][pFamed] >= 6 || PlayerInfo[playerid][pAdmin] >= 4)
    {
        new string[128], targetid, level;
	    if(sscanf(params, "ui", targetid, level)) {
			SendClientMessageEx(playerid, COLOR_GRAD1, "SU DUNG: /setfamed [Player] [level]");
			SendClientMessageEx(playerid, COLOR_GRAD2, "(1) Old-School - (2) Chartered Old-School - (3) Famed - (4) Famed Commissioner");
			SendClientMessageEx(playerid, COLOR_GRAD2, "(5) Famed Moderator - (6) Vice-Chairman - (7) Chairman");
			return 1;
		}

		if(IsPlayerConnected(targetid))
		{
		    if(targetid != INVALID_PLAYER_ID)
		    {

			    if(PlayerInfo[targetid][pFamed] > PlayerInfo[playerid][pFamed])
			        return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the lam dieu nay tren nguoi nay");

				PlayerInfo[targetid][pFamed] = level;
				format(string, sizeof(string), "AdmCmd: %s da cho %s thanh famed level %d.", GetPlayerNameEx(playerid), GetPlayerNameEx(targetid), level);
				ABroadCast(COLOR_LIGHTRED, string, 2);
				SendFamedMessage(COLOR_LIGHTRED, string);
				Log("logs/setfamed.log", string);
			}
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong hop le.");
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay!");
	return 1;
}

CMD:osetfamed(playerid, params[])
{
    if(PlayerInfo[playerid][pFamed] >= 6 || PlayerInfo[playerid][pAdmin] >= 4)
    {
        new string[128], pname[MAX_PLAYER_NAME], level;
	    if(sscanf(params, "s[32]i", pname, level))
			return SendClientMessageEx(playerid, COLOR_WHITE, "SU DUNG: /osetfamed [Player] [level]");

        new targetid = ReturnUser(pname);
		if(IsPlayerConnected(targetid))
		{
		    return SendClientMessageEx(playerid, COLOR_WHITE, "Nguoi choi nay da online, vui long su dung /setfamed");
		}
		else {
		    new
				szQuery[128],
				szPlayerName[MAX_PLAYER_NAME];

			mysql_escape_string(pname, szPlayerName);

			SetPVarInt(playerid, "Offline_Famed", level);
			SetPVarString(playerid, "Offline_Name", szPlayerName);

            format(szQuery, sizeof(szQuery), "SELECT `Famed` FROM `accounts` WHERE `Username` = '%s'", szPlayerName);
 			mysql_function_query(MainPipeline, szQuery, true, "OnQueryFinish", "iii", OFFLINE_FAMED_THREAD, playerid, g_arrQueryHandle{playerid});

 			format(string, sizeof(string), "Da thiet lap tai khoan %s den level %d famed.", szPlayerName, level);
 			SendClientMessageEx(playerid, COLOR_WHITE, string);
 			SendClientMessageEx(playerid, COLOR_YELLOW, "Xin vui long cho...");
 		}
 	}
 	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay!");
 	return 1;
}

CMD:flocker(playerid, params[]) {
	return cmd_famedlocker(playerid, params);
}

CMD:famedlocker(playerid, params[]) {
    #if defined zombiemode
	if(zombieevent == 1 && GetPVarType(playerid, "pIsZombie")) return SendClientMessageEx(playerid, COLOR_GREY, "Zombies khong su dung duoc lenh nay.");
	#endif
	if(IsPlayerInRangeOfPoint(playerid, 4.0, 900.5656, 1429.6812, -82.3250))
	{
	    switch(PlayerInfo[playerid][pFamed])
	    {
			case 0: SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong phai famed!");
			case 1: ShowPlayerDialog(playerid, DIALOG_LOCKER_OS, DIALOG_STYLE_LIST, "Old-School Locker", "First Aid Kit (Free)\nKevlar Vest ($10000)\nChange Skin ($3,000)\nJob Center", "Lua chon", "Huy bo");
			case 2: ShowPlayerDialog(playerid, DIALOG_LOCKER_COS, DIALOG_STYLE_LIST, "Chartered Old-School Locker", "First Aid Kit (Free)\nKevlar Vest ($5000)\nChange Skin ($1,500)\nJob Center", "Lua chon", "Huy bo");
			case 3: ShowPlayerDialog(playerid, DIALOG_LOCKER_FAMED, DIALOG_STYLE_LIST, "Famed Locker", "First Aid Kit (Free)\nKevlar Vest (Free)\nWeapons (Free)\nChange Skin (Free)\nJob Center\nFamed Color", "Lua chon", "Huy bo");
            case 4: ShowPlayerDialog(playerid, DIALOG_LOCKER_FAMED, DIALOG_STYLE_LIST, "Famed Commissioner Locker", "First Aid Kit (Free)\nKevlar Vest (Free)\nWeapons (Free)\nChange Skin (Free)\nJob Center\nFamed Color", "Lua chon", "Huy bo");
            case 5: ShowPlayerDialog(playerid, DIALOG_LOCKER_FAMED, DIALOG_STYLE_LIST, "Famed Moderator Locker", "First Aid Kit (Free)\nKevlar Vest (Free)\nWeapons (Free)\nChange Skin (Free)\nJob Center\nFamed Color", "Lua chon", "Huy bo");
            case 6: ShowPlayerDialog(playerid, DIALOG_LOCKER_FAMED, DIALOG_STYLE_LIST, "Famed Vice-Chairman Locker", "First Aid Kit (Free)\nKevlar Vest (Free)\nWeapons (Free)\nChange Skin (Free)\nJob Center\nFamed Color", "Lua chon", "Huy bo");
            case 7: ShowPlayerDialog(playerid, DIALOG_LOCKER_FAMED, DIALOG_STYLE_LIST, "Famed Chairman Locker", "First Aid Kit (Free)\nKevlar Vest (Free)\nWeapons (Free)\nChange Skin (Free)\nJob Center\nFamed Color", "Lua chon", "Huy bo");
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o tu do famed!");
	return 1;
}

CMD:famedplate(playerid, params[])
{
	if(PlayerInfo[playerid][pFamed] < 1)
		return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong phai la famed!");

	new string[128], Float: vHealth, inpveh;
	if(IsPlayerConnected(playerid))
	{
	    if(isnull(params))
	        return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /famedplate [os/cos/famed/remove]");

		inpveh = false;
	    for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	    {
     		if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
       		{
				GetVehicleHealth(PlayerVehicleInfo[playerid][d][pvId], vHealth);
				inpveh = 1;

    			if(vHealth < 800)
       				return SendClientMessageEx(playerid, COLOR_LIGHTRED, "Xin sua chua chiec xe cua ban truoc khi thay the plate.");

    			if(strcmp(params, "os", true) == 0)
    			{
    			    format(string, sizeof(string), "{29942B}OLD-SCHOOL");
   			    	format(PlayerVehicleInfo[playerid][d][pvPlate], 32, "%s", string);
    			    SendClientMessageEx(playerid, COLOR_FAMED, "Xe cua ban se suat hien o diem Chartered Old-School Plate,xin vui long doi trong giat lat...");
					cmd_dauxe(playerid, params); //Save a few lines of code here xD
	            }
	            else if(strcmp(params, "cos", true) == 0)
	            {
	                if(PlayerInfo[playerid][pFamed] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "ban khong phai la famed level cao de thuc hien lenh nay, Xin loi.");
                    format(string, sizeof(string), "{F2B602}COS");
					format(PlayerVehicleInfo[playerid][d][pvPlate], 32, "%s", string);
    			    SendClientMessageEx(playerid, COLOR_FAMED, "Xe cua ban se suat hien o diem Chartered Old-School Plate,xin vui long doi trong giat lat...");
					cmd_dauxe(playerid, params); //Save a few lines of code here xD
	            }
	            else if(strcmp(params, "famed", true) == 0)
	            {
	                if(PlayerInfo[playerid][pFamed] < 3) return SendClientMessageEx(playerid, COLOR_GRAD2, "ban khong phai la famed level cao de thuc hien lenh nay, Xin loi.");
                    format(string, sizeof(string), "{99FF00}FAMED");
					format(PlayerVehicleInfo[playerid][d][pvPlate], 32, "%s", string);
    			    SendClientMessageEx(playerid, COLOR_FAMED, "Xe cua ban se suat hien o diem Famed, xin vui long doi trong giat lat...");
					cmd_dauxe(playerid, params); //Save a few lines of code here xD
	            }
	            else if(strcmp(params, "remove", true) == 0)
	            {
					PlayerVehicleInfo[playerid][d][pvPlate] = 0;
    			    SendClientMessageEx(playerid, COLOR_FAMED, "Xe cua ban se suat hien o diem mac dinh, xin vui long doi trong giat lat...");
					cmd_dauxe(playerid, params); //Save a few lines of code here xD
	            }
	            else
	                return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /famedplate [os/cos/famed/remove]");
			}
		}

		if(inpveh == 0)
		    return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong o ben trong chiec xe cua ban!");
	}
	return 1;
}

CMD:fmembers(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4 || PlayerInfo[playerid][pFamed] >= 4)
	{
		new string[1024];
		foreach(new i : Player)
		{
			if(PlayerInfo[i][pFamed] >= 1)
			{
				format(string, sizeof(string), "%s\nLevel %d Famed %s", string, PlayerInfo[i][pFamed], GetPlayerNameEx(i));
			}
		}
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_LIST, "Thanh vien Famed dang online", string, "Dong", "");
	}
	else
		return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay!");
	return 1;
}


CMD:selltoy(playerid, params[])
{
	new string[1000], name[24], targetid, cost;
	if(GetPVarInt(playerid, "ttBuyer") != INVALID_PLAYER_ID) return SendClientMessageEx(playerid, COLOR_GREY, "Ban da giao dich voi nguoi khac.");
	if(GetPVarInt(playerid, "IsInArena") >= 0) return SendClientMessageEx(playerid,COLOR_GREY,"Ban khong the lam dieu nay Arena!");
   	if(GetPVarInt( playerid, "EventToken") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi trong su kien.");
	if(PlayerCuffed[playerid] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi bi cong tay.");
    if(WatchingTV[playerid] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang xem TV!");
    if(PlayerInfo[playerid][pJailTime] > 0) return SendClientMessageEx(playerid,COLOR_GREY,"Ban khong the lam dieu nay trong tu!");
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
	if(sscanf(params, "ud", targetid, cost)) return SendClientMessageEx(playerid, COLOR_GRAD1, "SU DUNG: /selltoy [playerid] [Gia tien]");
	if(!IsPlayerConnected(targetid)) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
	if(targetid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung lenh nay cho chinh minh.");
	if(!ProxDetectorS(5.0, playerid, targetid)) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi nay khong o gan ban.");
	if(InsideTradeToys[targetid] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi nay dang thuc hien giao dich, xin vui long thu lai sau.");
	if(cost < 1 || cost > 1000000000) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the ban do choi it hon $1.");
	SetPVarInt(targetid, "ttSeller", playerid);
	SetPVarInt(playerid, "ttBuyer", targetid);
	SetPVarInt(playerid, "ttCost", cost);

	new icount = GetPlayerToySlots(playerid);
	for(new x;x<icount;x++)
	{
		format(name, sizeof(name), "None");
		for(new i;i<sizeof(HoldingObjectsAll);i++)
		{
			if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
			{
				format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
			}
		}
		if(PlayerToyInfo[playerid][x][ptModelID] != 0 && (strcmp(name, "None", true) == 0))
		{
			format(name, sizeof(name), "ID: %d", PlayerToyInfo[playerid][x][ptModelID]);
		}
		format(string, sizeof(string), "%s(%d) %s\n", string, x, name);
	}
	ShowPlayerDialog(playerid, SELLTOY, DIALOG_STYLE_LIST, "Chon mot mon do choi de ban", string, "Ban", "Huy bo");
	return 1;
}

// Relay For Life

/*CMD:temprfl(playerid, params[])
{
	LoadRelayForLifeTeams();
	return 1;
}*/



// Start of the voucher commands

CMD:phieucuatoi(playerid, params[])
{
	return cmd_myvouchers(playerid,params);
}

CMD:myvouchers(playerid, params[])
{
	if(PlayerInfo[playerid][pJailTime] > 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the lam dieu nay khi dang o tu");

	ShowVouchers(playerid, playerid);
	return 1;
}


CMD:sellvoucher(playerid, params[])
{
	new choice[32], amount, price, buyer;
    if(sscanf(params, "s[32]ddu", choice, amount, price, buyer))
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /sellvoucher [name] [amount] [Gia tien] [buyer]");
		SendClientMessageEx(playerid, COLOR_GREY, "Ten co san: CarVoucher[Xe], SilverVIP[Vip Bac], GoldVIP[Vip Vang], PVIP[Vip Kim Cuong], RestrictedCar[Bo han che xe], Advert[Quang cao uu tien], 7DaySVIP[7 Ngay Vip Bac], 7DayGVIP[7Ngay Vip Vang] ");
		return 1;
	}

	new Float: bPos[3];
	GetPlayerPos(buyer, bPos[0], bPos[1], bPos[2]);
	if(GetPlayerVirtualWorld(buyer) != GetPlayerVirtualWorld(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o gan nguoi choi.");
	if(price < 1 || price > 99999999) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban phai xac dinh muc gia thap nhat la 0 VND cao nhat 99,999,999 VND.");
	if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "So luong khong hop le.");
	if(!IsPlayerConnected(buyer)) return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi khong online.");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, bPos[0], bPos[1], bPos[2])) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o gan nguoi choi nay.");
	if(GetPVarInt(playerid, "Injured") != 0 || PlayerCuffed[playerid] != 0 || PlayerInfo[playerid][pJailTime] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the lam dieu do bay gio.");
	if(GetPVarInt(buyer, "Injured") != 0 || PlayerCuffed[buyer] != 0 || PlayerInfo[buyer][pJailTime] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the ban cho tu nhan hoac nguoi dang bi thuong.");
	if(GetPVarInt(buyer, "buyingVoucher") != INVALID_PLAYER_ID) return SendClientMessageEx(playerid, COLOR_GRAD1, "Nguoi choi nay da mua phieu khac, xin vui long thu lai sa.");

	new string[128];
	if(strcmp(choice, "carvoucher", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pVehVoucher]) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co phieu.");

		SetPVarInt(buyer, "priceVoucher", price);
		SetPVarInt(buyer, "amountVoucher", amount);
		SetPVarInt(buyer, "buyingVoucher", 1);
		SetPVarInt(buyer, "sellerVoucher", playerid);
		SetPVarInt(playerid, "buyerVoucher", buyer);
		format(string, sizeof(string), "%s da de nghi ban cho ban %d phieu su dung Xe(s) voi gia $%s - Su dung /chapnhan voucher hoac /denyvoucher de tu choi.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(buyer, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Ban da cung cap %s  mua %d phieu su dung Xe(s) voi gia $%s, xin vui long doi toi khi nguoi do chap nhan hoac /decline de huy.", GetPlayerNameEx(buyer), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		SetPVarInt(buyer, "SQLID_Voucher", GetPlayerSQLId(playerid));
	}
	else if(strcmp(choice, "silvervip", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pSVIPVoucher]) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co phieu.");

		SetPVarInt(buyer, "priceVoucher", price);
		SetPVarInt(buyer, "amountVoucher", amount);
		SetPVarInt(buyer, "buyingVoucher", 2);
		SetPVarInt(buyer, "sellerVoucher", playerid);
		SetPVarInt(playerid, "buyerVoucher", buyer);
		format(string, sizeof(string), "%s da de nghi ban cho ban %d phieu su dung Silver VIP (s) voi gia $%s - Su dung /chapnhan voucher hoac /denyvoucher de tu choi.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(buyer, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Ban da cung cap %s  mua %d phieu su dung Silver VIP(s) voi gia $%s, xin vui long doi toi khi nguoi do chap nhan hoac /decline de huy.", GetPlayerNameEx(buyer), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		SetPVarInt(buyer, "SQLID_Voucher", GetPlayerSQLId(playerid));
	}
	else if(strcmp(choice, "goldvip", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pGVIPVoucher]) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co phieu.");

		SetPVarInt(buyer, "priceVoucher", price);
		SetPVarInt(buyer, "amountVoucher", amount);
		SetPVarInt(buyer, "buyingVoucher", 3);
		SetPVarInt(buyer, "sellerVoucher", playerid);
		SetPVarInt(playerid, "buyerVoucher", buyer);
		format(string, sizeof(string), "%s da de nghi ban cho ban %d phieu su dung Gold VIP (s) voi gia $%s - Su dung /chapnhan voucher hoac /denyvoucher de tu choi.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(buyer, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Ban da cung cap %s  mua %d phieu su dung Gold VIP (s) voi gia $%s, xin vui long doi toi khi nguoi do chap nhan hoac /decline de huy.", GetPlayerNameEx(buyer), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		SetPVarInt(buyer, "SQLID_Voucher", GetPlayerSQLId(playerid));
	}
	else if(strcmp(choice, "pvip", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pPVIPVoucher]) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co phieu.");

		SetPVarInt(buyer, "priceVoucher", price);
		SetPVarInt(buyer, "amountVoucher", amount);
		SetPVarInt(buyer, "buyingVoucher", 4);
		SetPVarInt(buyer, "sellerVoucher", playerid);
		SetPVarInt(playerid, "buyerVoucher", buyer);
		format(string, sizeof(string), "%s da de nghi ban cho ban %d phieu su dung Platinum VIP (s) voi gia $%s - Su dung /chapnhan voucher hoac /denyvoucher de tu choi.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(buyer, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Ban da cung cap %s  mua %d phieu su dung Platinum VIP (s) voi gia $%s, xin vui long doi toi khi nguoi do chap nhan hoac /decline de huy.", GetPlayerNameEx(buyer), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	 	SetPVarInt(buyer, "SQLID_Voucher", GetPlayerSQLId(playerid));
	}
	else if(strcmp(choice, "restrictedcar", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pCarVoucher]) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co vouchers.");

		SetPVarInt(buyer, "priceVoucher", price);
		SetPVarInt(buyer, "amountVoucher", amount);
		SetPVarInt(buyer, "buyingVoucher", 5);
		SetPVarInt(buyer, "sellerVoucher", playerid);
		SetPVarInt(playerid, "buyerVoucher", buyer);
		format(string, sizeof(string), "%s da de nghi ban cho ban %d phieu su dung Bo han che xe (s) voi gia $%s - Su dung /chapnhan voucher hoac /denyvoucher de tu choi.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(buyer, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Ban da cung cap %s  mua %d voucher su dung Bo han che xe(s) voi gia $%s, xin vui long doi toi khi nguoi do chap nhan hoac /decline de huy.", GetPlayerNameEx(buyer), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	 	SetPVarInt(buyer, "SQLID_Voucher", GetPlayerSQLId(playerid));
	}
	else if(strcmp(choice, "advert", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pAdvertVoucher]) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co vouchers.");

		SetPVarInt(buyer, "priceVoucher", price);
		SetPVarInt(buyer, "amountVoucher", amount);
		SetPVarInt(buyer, "buyingVoucher", 6);
		SetPVarInt(buyer, "sellerVoucher", playerid);
		SetPVarInt(playerid, "buyerVoucher", buyer);
		format(string, sizeof(string), "%s da de nghi ban cho ban %d voucher su dung Quang cao uu tien (s) voi gia $%s - Su dung /chapnhan voucher hoac /denyvoucher de tu choi.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(buyer, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Ban da cung cap %s  mua %d voucher su dung Quang cao uu tien (s) voi gia $%s, xin vui long doi toi khi nguoi do chap nhan hoac /decline de huy bo.", GetPlayerNameEx(buyer), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	 	SetPVarInt(buyer, "SQLID_Voucher", GetPlayerSQLId(playerid));
	}
	else if(strcmp(choice, "7daysvip", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pSVIPExVoucher]) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co vouchers.");

		SetPVarInt(buyer, "priceVoucher", price);
		SetPVarInt(buyer, "amountVoucher", amount);
		SetPVarInt(buyer, "buyingVoucher", 7);
		SetPVarInt(buyer, "sellerVoucher", playerid);
		SetPVarInt(playerid, "buyerVoucher", buyer);
		format(string, sizeof(string), "%s da de nghi ban %d voucher su dung 7 ngay dung Silver VIP (s) voi gia $%s - Su dung /chapnhan voucher hoac /denyvoucher de tu choi.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(buyer, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Ban da yeu cau %s mua %d voucher 7 ngay dung Silver VIP (s) voi gia $%s, xin vui long doi toi khi nguoi do chap nhan hoac /decline de huy bo.", GetPlayerNameEx(buyer), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	 	SetPVarInt(buyer, "SQLID_Voucher", GetPlayerSQLId(playerid));
	}
	else if(strcmp(choice, "7daygvip", true) == 0)
	{
		if(amount > PlayerInfo[playerid][pGVIPExVoucher]) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong co vouchers.");

		SetPVarInt(buyer, "priceVoucher", price);
		SetPVarInt(buyer, "amountVoucher", amount);
		SetPVarInt(buyer, "buyingVoucher", 8);
		SetPVarInt(buyer, "sellerVoucher", playerid);
		SetPVarInt(playerid, "buyerVoucher", buyer);
		format(string, sizeof(string), "%s da de nghi ban %d voucher su dung 7 ngay dung Gold VIP (s) voi gia $%s - Su dung /chapnhan voucher hoac /denyvoucher de tu choi.", GetPlayerNameEx(playerid), amount, number_format(price));
		SendClientMessageEx(buyer, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Ban da yeu cau %s mua %d voucher 7 ngay dung Gold VIP (s) voi gia $%s, xin vui long doi toi khi nguoi do chap nhan hoac /decline de huy bo.", GetPlayerNameEx(buyer), amount, number_format(price));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
	 	SetPVarInt(buyer, "SQLID_Voucher", GetPlayerSQLId(playerid));
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Invalid choice.");
	return 1;
}

CMD:denyvoucher(playerid, params[])
{
	if(GetPVarInt(playerid, "buyingVoucher") != INVALID_PLAYER_ID)
	{
		new string[128];
		format(string, sizeof(string), "* %s da tu choi voucher.", GetPlayerNameEx(playerid));
		SendClientMessageEx(GetPVarInt(playerid, "sellerVoucher"), COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ban da tu choi %s voucher.", GetPlayerNameEx(GetPVarInt(playerid, "sellerVoucher")));
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
		DeletePVar(playerid, "priceVoucher");
		DeletePVar(playerid, "amountVoucher");
		SetPVarInt(playerid, "buyingVoucher", INVALID_PLAYER_ID);
		SetPVarInt(playerid, "sellerVoucher", INVALID_PLAYER_ID);
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Khong co ai cung cap cho ban vouchers nao .");
	return 1;
}

CMD:voucherhelp(playerid, params[])
{
	SendClientMessageEx(playerid, COLOR_GRAD1, "** Player Commands: /myvouchers /denyvoucher /chapnhan voucher");
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "** Admin Commands: /checkvouchers");
	}
	return 1;
}
//end of the voucher commands

CMD:qs(playerid, params[]) return cmd_quickstats(playerid, params);
CMD:thongke(playerid, params[]) {
	return cmd_quickstats(playerid, params);
}
CMD:quickstats(playerid, params[])
{
	new string[128], Float: health, Float: armor;
	GetPlayerHealth(playerid, health);
	GetPlayerArmour(playerid, armor);

	format(string, sizeof(string), "---===== ** So lieu thong ke cua %s ** =====---", GetPlayerNameEx(playerid));
	SendClientMessageEx(playerid, COLOR_GREEN, string);
	format(string, sizeof(string), "** Cap do: %d | Tien ngan hang: %d | Tien tren nguoi: %d | Tien ban: %d | Buon Ngu: %d", PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pAccount], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pTienBan], PlayerInfo[playerid][pBuonngu],
	number_format(PlayerInfo[playerid][pAccount]), number_format(PlayerInfo[playerid][pCash]), PlayerInfo[playerid][pTienBan], PlayerInfo[playerid][pBuonngu]);
	SendClientMessageEx(playerid, COLOR_GRAD1, string);
	format(string, sizeof(string), "** Mau': %d | Giap': %d | Doi bung: %d | Khat Nuoc: %d | The luc: %d | Canh cao: %d", floatround(health), floatround(armor), PlayerInfo[playerid][pHunger], PlayerInfo[playerid][pKhatNuoc], PlayerInfo[playerid][pFitness] , PlayerInfo[playerid][pWarns]);
	SendClientMessageEx(playerid, COLOR_GRAD1, string);
	SendClientMessageEx(playerid, COLOR_GREEN, "--------------------------------------------------------------------------------------------------------------------");
	return 1;
}



// Hunger Game

CMD:createbackpack(playerid, params[])
{
	new type;
	if(sscanf(params, "d", type))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /createbackpack [type]");
		SendClientMessageEx(playerid, COLOR_GREY, "Cac loai co san: loai 1 (Giap) - loai 2 (Vu khi ngau nhien) - loai 3 (day no bung) - loai 4 (Day mau).");
		return true;
	}

	if(type < 1 || type > 4) return SendClientMessageEx(playerid, COLOR_GRAD1, "Loai khong hop le!");

	new id = NextAvailableBackpack();
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		if(id)
		{
			new Float: mypos[3];
			GetPlayerPos(playerid, mypos[0], mypos[1], mypos[2]);

			HungerBackpackInfo[id][hgBackpackType] = type;

			HungerBackpackInfo[id][hgBackpackPos][0] = mypos[0];
			HungerBackpackInfo[id][hgBackpackPos][1] = mypos[1];
			HungerBackpackInfo[id][hgBackpackPos][2] = mypos[2];

			AddNewBackpack(id);

			new string[128];
			format(string, sizeof(string), "Ban da tao mot Hunger Games Backpack thanh cong {FF0000}(Loai: %s){FFFFFF}.", GetBackpackName(id));
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_RED, "Da dat so luong toi da cua Hunger Games Backpacks.");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay!");
	}
	return true;
}

CMD:starthunger(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		if(hgActive != 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "Su kien Hunger Games da duoc bat dau.");

		SendClientMessageToAll(COLOR_LIGHTBLUE, "Su kien Hunger Games se suat hien trong 2 phut, su dung /thamgiahg de tham gia.");

		hgActive = 1;
		hgCountdown = 120;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay!");
	}
	return true;
}

CMD:endhunger(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		if(hgActive > 0)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(HungerPlayerInfo[i][hgInEvent] == 1)
				{
					SetPlayerHealth(i, HungerPlayerInfo[i][hgLastHealth]);
					SetPlayerArmor(i, HungerPlayerInfo[i][hgLastArmour]);
					SetPlayerVirtualWorld(i, HungerPlayerInfo[i][hgLastVW]);
					SetPlayerInterior(i, HungerPlayerInfo[i][hgLastInt]);
					SetPlayerPos(i, HungerPlayerInfo[i][hgLastPosition][0], HungerPlayerInfo[i][hgLastPosition][1], HungerPlayerInfo[i][hgLastPosition][2]);

					ResetPlayerWeapons(i);

					for(new w = 0; w < 12; w++)
					{
						PlayerInfo[i][pGuns][w] = HungerPlayerInfo[i][hgLastWeapon][w];
						if(PlayerInfo[i][pGuns][w] > 0 && PlayerInfo[i][pAGuns][w] == 0)
						{
							GivePlayerValidWeapon(i, PlayerInfo[i][pGuns][w], 2);
						}
					}

					HungerPlayerInfo[i][hgInEvent] = 0;
					hgPlayerCount--;
					HideHungerGamesTextdraw(i);

					for(new v = 0; v < 600; v++)
					{
						if(IsValidDynamic3DTextLabel(HungerBackpackInfo[v][hgBackpack3DText]))
						{
							DestroyDynamic3DTextLabel(HungerBackpackInfo[v][hgBackpack3DText]);
						}
						if(IsValidDynamicPickup(HungerBackpackInfo[v][hgBackpackPickupId]))
						{
							DestroyDynamicPickup(HungerBackpackInfo[v][hgBackpackPickupId]);
						}

						HungerBackpackInfo[v][hgActiveEx] = 0;
					}

					new string[128];
					format(string, sizeof(string), "Nguoi choi trong su kien: %d", hgPlayerCount);
					PlayerTextDrawSetString(i, HungerPlayerInfo[i][hgPlayerText], string);

					hgActive = 0;

					SendClientMessageToAll(COLOR_LIGHTBLUE, "** Su kien Hunger Games da ket thuc boi Administrator.");
				}
			}
		}
	}
	return true;
}

CMD:thoathg(playerid, params[])
{
	return cmd_leavehunger(playerid,params);
}

CMD:leavehunger(playerid, params[])
{
	if(HungerPlayerInfo[playerid][hgInEvent] != 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong trong su kien Hunger Games.");

	if(hgActive == 2)
	{
		if(hgPlayerCount == 3)
		{
			new szmessage[128];
			format(szmessage, sizeof(szmessage), "** %s da dung vi thu ba trong su kien Hunger Games, chuc mung", GetPlayerNameEx(playerid));
			SendClientMessageToAll(COLOR_YELLOW, szmessage);

			SetPlayerHealth(playerid, HungerPlayerInfo[playerid][hgLastHealth]);
			SetPlayerArmor(playerid, HungerPlayerInfo[playerid][hgLastArmour]);
			SetPlayerVirtualWorld(playerid, HungerPlayerInfo[playerid][hgLastVW]);
			SetPlayerInterior(playerid, HungerPlayerInfo[playerid][hgLastInt]);
			SetPlayerPos(playerid, HungerPlayerInfo[playerid][hgLastPosition][0], HungerPlayerInfo[playerid][hgLastPosition][1], HungerPlayerInfo[playerid][hgLastPosition][2]);

			ResetPlayerWeapons(playerid);

			HungerPlayerInfo[playerid][hgInEvent] = 0;
			hgPlayerCount--;
			HideHungerGamesTextdraw(playerid);
			PlayerInfo[playerid][pRewardDrawChance] += 10;
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "** Ban da nhan duoc 10 Draw Chances cho su kien Fun Event.");

			for(new w = 0; w < 12; w++)
			{
				PlayerInfo[playerid][pGuns][w] = HungerPlayerInfo[playerid][hgLastWeapon][w];
				if(PlayerInfo[playerid][pGuns][w] > 0 && PlayerInfo[playerid][pAGuns][w] == 0)
				{
					GivePlayerValidWeapon(playerid, PlayerInfo[playerid][pGuns][w], 2);
				}
			}
		}
		else if(hgPlayerCount == 2)
		{
			new szmessage[128];
			format(szmessage, sizeof(szmessage), "** %s da dung vi thu hai trong su kien Hunger Games.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(COLOR_YELLOW, szmessage);

			SetPlayerHealth(playerid, HungerPlayerInfo[playerid][hgLastHealth]);
			SetPlayerArmor(playerid, HungerPlayerInfo[playerid][hgLastArmour]);
			SetPlayerVirtualWorld(playerid, HungerPlayerInfo[playerid][hgLastVW]);
			SetPlayerInterior(playerid, HungerPlayerInfo[playerid][hgLastInt]);
			SetPlayerPos(playerid, HungerPlayerInfo[playerid][hgLastPosition][0], HungerPlayerInfo[playerid][hgLastPosition][1], HungerPlayerInfo[playerid][hgLastPosition][2]);

			ResetPlayerWeapons(playerid);

			HungerPlayerInfo[playerid][hgInEvent] = 0;
			hgPlayerCount--;
			HideHungerGamesTextdraw(playerid);
			PlayerInfo[playerid][pRewardDrawChance] += 25;
			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "** Ban da nhan duoc 25 Draw Chances cho su kien Fun Event.");

			for(new w = 0; w < 12; w++)
			{
				PlayerInfo[playerid][pGuns][w] = HungerPlayerInfo[playerid][hgLastWeapon][w];
				if(PlayerInfo[playerid][pGuns][w] > 0 && PlayerInfo[playerid][pAGuns][w] == 0)
				{
					GivePlayerValidWeapon(playerid, PlayerInfo[playerid][pGuns][w], 2);
				}
			}

			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(HungerPlayerInfo[i][hgInEvent] == 1)
				{
					format(szmessage, sizeof(szmessage), "** %s da dat duoc top 1 trong su kien Hunger Games.", GetPlayerNameEx(i));
					SendClientMessageToAll(COLOR_YELLOW, szmessage);

					SetPlayerHealth(i, HungerPlayerInfo[i][hgLastHealth]);
					SetPlayerArmor(i, HungerPlayerInfo[i][hgLastArmour]);
					SetPlayerVirtualWorld(i, HungerPlayerInfo[i][hgLastVW]);
					SetPlayerInterior(i, HungerPlayerInfo[i][hgLastInt]);
					SetPlayerPos(i, HungerPlayerInfo[i][hgLastPosition][0], HungerPlayerInfo[i][hgLastPosition][1], HungerPlayerInfo[i][hgLastPosition][2]);

					ResetPlayerWeapons(i);

					HungerPlayerInfo[i][hgInEvent] = 0;
					hgPlayerCount--;
					SetPVarInt(i, "hungerEx", 1);
					HideHungerGamesTextdraw(i);
					PlayerInfo[i][pRewardDrawChance] += 50;
					SendClientMessageEx(i, COLOR_LIGHTBLUE, "** Ban da nhan duoc 50 Draw Chances cho su kien Fun Event.");
					hgActive = 0;

					for(new w = 0; w < 12; w++)
					{
						PlayerInfo[i][pGuns][w] = HungerPlayerInfo[i][hgLastWeapon][w];
						if(PlayerInfo[i][pGuns][w] > 0 && PlayerInfo[i][pAGuns][w] == 0)
						{
							GivePlayerValidWeapon(i, PlayerInfo[i][pGuns][w], 2);
						}
					}
				}
			}

			for(new i = 0; i < 600; i++)
			{
				if(IsValidDynamic3DTextLabel(HungerBackpackInfo[i][hgBackpack3DText]))
				{
					DestroyDynamic3DTextLabel(HungerBackpackInfo[i][hgBackpack3DText]);
				}
				if(IsValidDynamicPickup(HungerBackpackInfo[i][hgBackpackPickupId]))
				{
					DestroyDynamicPickup(HungerBackpackInfo[i][hgBackpackPickupId]);
				}

				HungerBackpackInfo[i][hgActiveEx] = 0;
			}
		}
		else if(hgPlayerCount > 3 || hgPlayerCount == 1)
		{
			SetPlayerHealth(playerid, HungerPlayerInfo[playerid][hgLastHealth]);
			SetPlayerArmor(playerid, HungerPlayerInfo[playerid][hgLastArmour]);
			SetPlayerVirtualWorld(playerid, HungerPlayerInfo[playerid][hgLastVW]);
			SetPlayerInterior(playerid, HungerPlayerInfo[playerid][hgLastInt]);
			SetPlayerPos(playerid, HungerPlayerInfo[playerid][hgLastPosition][0], HungerPlayerInfo[playerid][hgLastPosition][1], HungerPlayerInfo[playerid][hgLastPosition][2]);

			ResetPlayerWeapons(playerid);

			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da chet hoac thoat khoi Hunger Game, hay no luc chien thang vao lan sau.");

			HungerPlayerInfo[playerid][hgInEvent] = 0;
			hgPlayerCount--;

			HideHungerGamesTextdraw(playerid);

			for(new w = 0; w < 12; w++)
			{
				PlayerInfo[playerid][pGuns][w] = HungerPlayerInfo[playerid][hgLastWeapon][w];
				if(PlayerInfo[playerid][pGuns][w] > 0 && PlayerInfo[playerid][pAGuns][w] == 0)
				{
					GivePlayerValidWeapon(playerid, PlayerInfo[playerid][pGuns][w], 2);
				}
			}
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the roi su kien o thoi diem nay.");

	new string[128];
	format(string, sizeof(string), "Nguoi choi trong su kien: %d", hgPlayerCount);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		PlayerTextDrawSetString(i, HungerPlayerInfo[i][hgPlayerText], string);
	}
	return true;
}

CMD:thamgiahg(playerid, params[])
{
	return cmd_joinhunger(playerid,params);
}

CMD:joinhunger(playerid, params[])
{
	if(hgActive == 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "Su kien Hunger Games chua duoc cong bo!");
	if(hgActive == 2) return SendClientMessageEx(playerid, COLOR_GRAD1, "Su kien Hunger Games da duoc bat dau!");
	if(GetPVarInt(playerid, "IsInArena") >= 0) return SendClientMessageEx(playerid,COLOR_GREY,"Ban khong the lam dieu nay khi dang trong Arena!");
   	if(GetPVarInt( playerid, "EventToken") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung lenh nay khi ban dang trong mot su kien.");
	if(PlayerCuffed[playerid] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the tham gia khi dang bi cong!");
    if(WatchingTV[playerid] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay khi dang xem TV!");
    if(PlayerInfo[playerid][pJailTime] > 0) return SendClientMessageEx(playerid,COLOR_GREY,"Ban khong the lam dieu nay khi dang o tu!");
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the lam dieu nay bay gio.");
	if(PlayerInfo[playerid][pAdmin] >= 2) return SendClientMessageEx(playerid, COLOR_GREY, "Ban dang la Admin, ban khong the tham gia.");
	if(HungerPlayerInfo[playerid][hgInEvent] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ban da trong su kien Hunger Games.");

	GetPlayerPos(playerid, HungerPlayerInfo[playerid][hgLastPosition][0], HungerPlayerInfo[playerid][hgLastPosition][1], HungerPlayerInfo[playerid][hgLastPosition][2]);
	new rand = random(sizeof(hgRandomSpawn));
	SetPlayerPos(playerid, hgRandomSpawn[rand][0], hgRandomSpawn[rand][1], hgRandomSpawn[rand][2]);

	GetPlayerHealth(playerid, HungerPlayerInfo[playerid][hgLastHealth]);
	SetPlayerHealth(playerid, 9999.9);

	GetPlayerArmour(playerid, HungerPlayerInfo[playerid][hgLastArmour]);
	SetPlayerArmour(playerid, 0);

	HungerPlayerInfo[playerid][hgLastVW] = GetPlayerVirtualWorld(playerid);
	SetPlayerVirtualWorld(playerid, 2039);

	HungerPlayerInfo[playerid][hgLastInt] = GetPlayerInterior(playerid);
	SetPlayerInterior(playerid, 0);

	for(new w = 0; w < 12; w++)
	{
		HungerPlayerInfo[playerid][hgLastWeapon][w] = PlayerInfo[playerid][pGuns][w];
	}

	ResetPlayerWeapons(playerid);
	pTazer{playerid} = 0;

	for(new x;x<MAX_PLAYERTOYS;x++)
	{
		RemovePlayerAttachedObject(playerid, x);
	}

	for(new i; i < 11; i++)
	{
		PlayerHoldingObject[playerid][i] = 0;
	}

	CreateHungerGamesTextdraw(playerid);

	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Ban da tham gia su kien Hunger Games.");
	SendClientMessageEx(playerid, COLOR_GRAD1, "* Ban co the roi khoi su kien bat cu luc nao bang lenh /thoathg.");
	SendClientMessageEx(playerid, COLOR_RED, "* Luu y : Ban dang su dung god & ban khong the roi di cho toi khi su kien bat dau.");

	HungerPlayerInfo[playerid][hgInEvent] = 1;
	hgPlayerCount++;

	new string[128];
	format(string, sizeof(string), "So nguoi choi event: %d", hgPlayerCount);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		PlayerTextDrawSetString(i, HungerPlayerInfo[i][hgPlayerText], string);
	}

	if(PlayerInfo[playerid][pHungerVoucher] > 0)
	{
		ShowPlayerDialog(playerid, DIALOG_HUNGERGAMES, DIALOG_STYLE_MSGBOX, "Xac nhan vao Hunger Games", "Ban co muon vao su kien Hunger Games?", "Dong y", "Tu choi");
	}
	return true;
}

CMD:nhatdo(playerid, params[])
{
	return cmd_openbackpack(playerid, params);
}

CMD:openbackpack(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh, ban dang la Admin.");
	if(hgActive == 2)
	{
		new backpack;
		if(HungerPlayerInfo[playerid][hgInEvent] == 1)
		{
			if(GetPlayerVirtualWorld(playerid) != 2039) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o gan ba lo nao ca.");
			for(new i = 0; i < 600; i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, HungerBackpackInfo[i][hgBackpackPos][0], HungerBackpackInfo[i][hgBackpackPos][1], HungerBackpackInfo[i][hgBackpackPos][2]))
				{
					backpack = i;
				}
			}

			if(HungerBackpackInfo[backpack][hgActiveEx] == 0) // Quick fix for the backpack not disappearing bug
			{
				return SendClientMessageEx(playerid, COLOR_GRAD1, "Ba lo nay da duoc mo va su dung.");
			}

			if(HungerBackpackInfo[backpack][hgBackpackType] == 1)
			{
				new Float: exarmor;
				GetPlayerArmour(playerid, exarmor);
				SetPlayerArmor(playerid, exarmor+15);
				SendClientMessageEx(playerid, COLOR_GRAD1, "Ban da nhat do va nhan duoc 15 phan tram giap.");
				HungerBackpackInfo[backpack][hgActiveEx] = 0;
				DestroyDynamic3DTextLabel(HungerBackpackInfo[backpack][hgBackpack3DText]);
				DestroyDynamicPickup(HungerBackpackInfo[backpack][hgBackpackPickupId]);
			}
			else if(HungerBackpackInfo[backpack][hgBackpackType] == 2)
			{
				new rand = Random(1, 20);
				if(rand > 0 && rand < 6)
				{
					GivePlayerWeapon(playerid, 24, 2);
					SendClientMessageEx(playerid, COLOR_GRAD1, "Ban da nhat do va nhan duoc 1 khau Deagle.");
					HungerBackpackInfo[backpack][hgActiveEx] = 0;
					DestroyDynamic3DTextLabel(HungerBackpackInfo[backpack][hgBackpack3DText]);
					DestroyDynamicPickup(HungerBackpackInfo[backpack][hgBackpackPickupId]);
				}
				else if(rand > 5 && rand < 11)
				{
					GivePlayerWeapon(playerid, 25, 2);
					SendClientMessageEx(playerid, COLOR_GRAD1, "Ban da nhat do va nhan duoc 1 khau Shotgun.");
					HungerBackpackInfo[backpack][hgActiveEx] = 0;
					DestroyDynamic3DTextLabel(HungerBackpackInfo[backpack][hgBackpack3DText]);
					DestroyDynamicPickup(HungerBackpackInfo[backpack][hgBackpackPickupId]);
				}
				else if(rand > 10 && rand < 16)
				{
					GivePlayerWeapon(playerid, 29, 2);
					SendClientMessageEx(playerid, COLOR_GRAD1, "Ban da nhat do va nhan duoc 1 khau MP5.");
					HungerBackpackInfo[backpack][hgActiveEx] = 0;
					DestroyDynamic3DTextLabel(HungerBackpackInfo[backpack][hgBackpack3DText]);
					DestroyDynamicPickup(HungerBackpackInfo[backpack][hgBackpackPickupId]);
				}
				else if(rand > 15 && rand < 21)
				{
					GivePlayerWeapon(playerid, 33, 2);
					SendClientMessageEx(playerid, COLOR_GRAD1, "Ban da nhat do va nhan duoc 1 khau Rifle.");
					HungerBackpackInfo[backpack][hgActiveEx] = 0;
					DestroyDynamic3DTextLabel(HungerBackpackInfo[backpack][hgBackpack3DText]);
					DestroyDynamicPickup(HungerBackpackInfo[backpack][hgBackpackPickupId]);
				}
			}
			else if(HungerBackpackInfo[backpack][hgBackpackType] == 3)
			{
				PlayerInfo[playerid][pHunger] = 100;
				SendClientMessageEx(playerid, COLOR_GRAD1, "Ban da nhat do va nhan duoc 100 hunger (tranh doi bung).");
				HungerBackpackInfo[backpack][hgActiveEx] = 0;
				DestroyDynamic3DTextLabel(HungerBackpackInfo[backpack][hgBackpack3DText]);
				DestroyDynamicPickup(HungerBackpackInfo[backpack][hgBackpackPickupId]);
			}
			else if(HungerBackpackInfo[backpack][hgBackpackType] == 4)
			{
				SetPlayerHealth(playerid, 100.0);
				SendClientMessageEx(playerid, COLOR_GRAD1, "Ban da nhat do va nhan duoc 100 mau.");\
				HungerBackpackInfo[backpack][hgActiveEx] = 0;
				DestroyDynamic3DTextLabel(HungerBackpackInfo[backpack][hgBackpack3DText]);
				DestroyDynamicPickup(HungerBackpackInfo[backpack][hgBackpackPickupId]);
			}
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong o trong Hunger Games");
	}
	else return SendClientMessageEx(playerid, COLOR_GRAD1, "Hien tai khong co su kien Hunger Games.");
	return true;
}

CMD:hungerhelp(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "** Hunger Games: /starthunger /createbackpack /hgplayers /endhunger");
	}

	SendClientMessageEx(playerid, COLOR_GRAD1, "** Hunger Games: /thamgiahg /thoathg /nhatdo");
	return true;
}

CMD:nguoichoihg(playerid, params[])
{
	return cmd_hgplayers(playerid, params);
}

CMD:hgplayers(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		new string[128]; // 8024 memory is not enough when there is 400+ players in the event
		foreach(new i : Player)
		{
			if(HungerPlayerInfo[i][hgInEvent] == 1)
			{
				format(string, sizeof(string), "Nguoi choi %s (ID %i)", GetPlayerNameEx(i), i);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
		}
	}
	else
		return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong the su dung lenh nay!");
	return 1;
}

CMD:fps(playerid, params[])
{
	if(GetPVarInt(playerid, "FPSToggle") == 0)
	{
		ShowFPSCounter(playerid);
		SetPVarInt(playerid, "FPSToggle", 1);
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da bat truy cap FPS cua ban.");
	}
	else
	{
		HideFPSCounter(playerid);
		SetPVarInt(playerid, "FPSToggle", 0);
		SendClientMessageEx(playerid, COLOR_WHITE, "Ban da tat truy cap FPS cua ban.");
	}
	return true;
}

CMD:toghalloweenshop(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] > 5 || PlayerInfo[playerid][pPR] == 2 || PlayerInfo[playerid][pShopTech] == 3)
	{
		new string[128];
		if(HalloweenShop)
		{
			HalloweenShop = 0;
			SendClientMessageEx(playerid, COLOR_RED, "Ban da mo cac cua hang halloween.  Bay gio no san sang cho nguoi choi.");
			g_mysql_SaveMOTD();
			format(string, sizeof(string), "Admin %s(%i) da mo cua cac cua hang do choi halloween.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid) );
			Log("logs/zombiecure.log", string);
		}
		else{
			HalloweenShop = 1;
			SendClientMessageEx(playerid, COLOR_RED, "Ban da tat cac cua hang halloween.  Bay gio no chua san sang cho nguoi choi.");
			g_mysql_SaveMOTD();
			format(string, sizeof(string), "Admin %s(%i) da tat cua cac cua hang do choi halloween.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid) );
			Log("logs/zombiecure.log", string);
		}
	}
	return 1;
}

CMD:setpumpkinstock(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] > 5 || PlayerInfo[playerid][pPR] == 2 || PlayerInfo[playerid][pShopTech] == 3)
	{
		new string[128], pumpkins;
		if(sscanf(params, "d", pumpkins)) return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /setpumpkinstock [stock]");
		format(string, sizeof(string), "Ban da thiet lap gia co phieu %d.", pumpkins);
		SendClientMessageEx(playerid, COLOR_GRAD1, string);
		format(string, sizeof(string), "Admin %s(%i) da thiet lap gia co phieu tu %d thanh %d.", GetPlayerNameEx(playerid), GetPlayerSQLId(playerid), pumpkins, PumpkinStock );
		Log("logs/zombiecure.log", string);
		PumpkinStock = pumpkins;
		g_mysql_SaveMOTD();
	}
	return 1;
}

CMD:pddoor(playerid, params[])
{
	new string[128];
	if(IsACop(playerid))
	{
		if(isnull(params))
			return SendClientMessageEx(playerid, COLOR_GRAD1, "SU DUNG: /pddoor [mo/dong]");

		if(strcmp(params, "mo", true) == 0)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0,1487.00000000,-1762.42504883,3284.23608398)) //Door 0
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de mo door.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaDoor[0],1487.00000000,-1762.42504883+1.25,3284.23608398,0.50);

			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1483.79003906,-1762.42504883,3284.23608398)) //Door 1
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de mo door.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaDoor[1],1483.79003906,-1762.42504883+1.25,3284.23608398,0.50);

			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1479.85998535,-1758.31994629,3284.23388672)) //Door 2
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de mo door.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaDoor[2],1479.85998535-1.25,-1758.31994629,3284.23388672,0.50);

			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1467.06701660,-1758.31994629,3284.23388672)) //Door 3
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de mo door.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaDoor[3],1467.06701660-1.25,-1758.31994629,3284.23388672,0.50);
			}
		}
		else if(strcmp(params, "dong", true) == 0)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0,1487.00000000,-1762.42504883,3284.23608398)) //Door 0
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de dong door.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaDoor[0],1487.00000000,-1762.42504883,3284.23608398,0.50);

			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1483.79003906,-1762.42504883,3284.23608398)) //Door 1
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de dong door.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaDoor[1],1483.79003906,-1762.42504883,3284.23608398,0.50);

			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1479.85998535,-1758.31994629,3284.23388672)) //Door 2
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de dong door.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaDoor[2],1479.85998535,-1758.31994629,3284.23388672,0.50);

			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1467.06701660,-1758.31994629,3284.23388672)) //Door 3
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de dong door.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaDoor[3],1467.06701660,-1758.31994629,3284.23388672,0.50);
			}
		}
	}
	else
		return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong phai la canh sat!");
	return true;
}

CMD:pdcell(playerid, params[])
{
	new string[128];
	if(IsACop(playerid))
	{
		if(isnull(params))
			return SendClientMessageEx(playerid, COLOR_GRAD1, "SU DUNG: /pdcell [open/close]");

		if(strcmp(params, "open", true) == 0)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1491.21484375,-1764.90002441,3284.25048828)) //Cell0
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de mo cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[0], 1491.21484375-1.25,-1764.90002441,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1494.41210938,-1764.90002441,3284.25048828)) //Cell1
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de mo cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[1], 1494.41210938-1.25,-1764.90002441,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1497.61132812,-1764.90002441,3284.25048828)) //Cell2
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de mo cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[2], 1497.61132812-1.25,-1764.90002441,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1500.81445312,-1764.90002441,3284.25048828)) //Cell3
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de mo cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[3], 1500.81445312-1.25,-1764.90002441,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1500.81994629,-1761.51000977,3284.25048828)) //Cell4
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de mo cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[4], 1500.81994629-1.25,-1761.51000977,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1491.22094727,-1761.50000000,3284.25048828)) //Cell5
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de mo cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[5], 1491.22094727-1.25,-1761.50000000,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1494.41894531,-1761.51000977,3284.25048828)) //Cell6
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de mo cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[6], 1494.41894531-1.25,-1761.51000977,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1497.61999512,-1761.51000977,3284.25048828)) //Cell7
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de mo cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[7], 1497.61999512-1.25,-1761.51000977,3284.25048828,0.50);
			}
		}
		else if(strcmp(params, "Dong", true) == 0)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1491.21484375,-1764.90002441,3284.25048828)) //Cell0
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de dong cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[0], 1491.21484375,-1764.90002441,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1494.41210938,-1764.90002441,3284.25048828)) //Cell1
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de dong cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[1], 1494.41210938,-1764.90002441,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1497.61132812,-1764.90002441,3284.25048828)) //Cell2
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de dong cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[2], 1497.61132812,-1764.90002441,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1500.81445312,-1764.90002441,3284.25048828)) //Cell3
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de dong cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[3], 1500.81445312,-1764.90002441,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1500.81994629,-1761.51000977,3284.25048828)) //Cell4
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de dong cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[4], 1500.81994629,-1761.51000977,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1491.22094727,-1761.50000000,3284.25048828)) //Cell5
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de dong cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[5], 1491.22094727,-1761.50000000,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1494.41894531,-1761.51000977,3284.25048828)) //Cell6
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de dong cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[6], 1494.41894531,-1761.51000977,3284.25048828,0.50);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1497.61999512,-1761.51000977,3284.25048828)) //Cell7
			{
				format(string, sizeof(string), "* %s su dung dieu khien tu xa de dong cac cuoc goi.", GetPlayerNameEx(playerid));
				ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				MoveDynamicObject(AkaCell[7], 1497.61999512,-1761.51000977,3284.25048828,0.50);
			}
		}
	}
	else
		return SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong phai la canh sat!");
	return true;
}

CMD:taginfo(playerid, params[])
{
	new string[64];
	for(new i = 0; i < MAX_GANGTAGS; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3, GangTags[i][gt_PosX], GangTags[i][gt_PosY], GangTags[i][gt_PosZ]) && GangTags[i][gt_Used] != 0)
		{
			if(GangTags[i][gt_Family] != INVALID_FAMILY_ID)
			{
				format(string, sizeof(string), "Day la tag cua %s.", FamilyInfo[GangTags[i][gt_Family]][FamilyName]);
				SendClientMessageEx(playerid, COLOR_YELLOW, string);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_YELLOW, "Khong co thong tin ve tag nay.");
			}
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o gan tag nao.");
	return 1;
}

CMD:spraytag(playerid, params[])
{
	if(PlayerInfo[playerid][pFMember] == INVALID_FAMILY_ID) return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong co trong family nao!");
	if(PlayerInfo[playerid][pRank] < 5) return SendClientMessageEx(playerid, COLOR_GREY, "Ban phai rank 5 moi co the su dung lenh nay!");
	new string[128];
	for(new i = 0; i < MAX_GANGTAGS; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3, GangTags[i][gt_PosX], GangTags[i][gt_PosY], GangTags[i][gt_PosZ]))
		{
			if(GangTags[i][gt_TimeLeft] > 0)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Tag nay da duoc  phun.");
				return 1;
			}
			if(GangTags[i][gt_Family] == PlayerInfo[playerid][pFMember])
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Day da la tag cua family cua ban.");
				return 1;
			}
			if(GangTags[i][gt_Time] > 0)
			{
				format(string, sizeof(string), "Tag nay se bat dau duoc phut sau %d phut(s).", GangTags[i][gt_Time]);
				SendClientMessageEx(playerid, COLOR_GREY, string);
				return 1;
			}
			format(string, sizeof(string), "{FF8000}** {C2A2DA}%s starts spraying something on the wall.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban bat dau phun tag cho family cua minh, cong viec se ket thuc sau 30 giay.");
			SendClientMessageEx(playerid, COLOR_WHITE, "Ban co the bam ban phim de ngung phun tuong.");
			GangTags[i][gt_TimeLeft] = 30;
			SetPVarInt(playerid, "gt_Spraying", 1);
			SetPVarInt(playerid, "gt_Spray", i);
			GangTags[i][gt_Timer] = SetTimerEx("SprayWall", 1000, true, "ii", i, playerid);
			ApplyAnimation(playerid, "SPRAYCAN", "spraycan_full", 4.0, 1, 1, 1, 0, 0, 1);
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "Ban khong o gan family tag!");
	return 1;
}



CMD:chapnhanvephat(playerid , params[])
{
	new szMessage[128];
	if(TicketOffer[playerid] != INVALID_PLAYER_ID) {
		if(IsPlayerConnected(TicketOffer[playerid])) {
			if (ProxDetectorS(5.0, playerid, TicketOffer[playerid])) {
				if(GetPlayerCash(playerid) >= TicketMoney[playerid]) {
					//new ip[32], ipex[32];
					//GetPlayerIp(playerid, ip, sizeof(ip));
					//GetPlayerIp(TicketOffer[playerid], ipex, sizeof(ipex));
					//format(szMessage, sizeof(szMessage), "[FACTION TICKET] %s (IP: %s) has paid $%d to %s (IP: %s)", GetPlayerNameEx(playerid), ip, TicketMoney[playerid], GetPlayerNameEx(TicketOffer[playerid]), ipex);
					// Log("logs/pay.log", szMessage);
					format(szMessage, sizeof(szMessage), "* Ban da tra tien ve phat $%d cho %s.", TicketMoney[playerid], GetPlayerNameEx(TicketOffer[playerid]));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, szMessage);
					format(szMessage, sizeof(szMessage), "* %s da chap nhan mot ve phat $%d.", GetPlayerNameEx(playerid), TicketMoney[playerid]);
					SendClientMessageEx(TicketOffer[playerid], COLOR_LIGHTBLUE, szMessage);
					format(szMessage, sizeof(szMessage), "* %s da tra tien ve phat.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - TicketMoney[playerid]);
					new money = floatround(TicketMoney[playerid] / 3), iGroupID = PlayerInfo[TicketOffer[playerid]][pMember];
					Tax += money;
					arrGroupData[iGroupID][g_iBudget] += money;
					new str[128], file[32];
					format(str, sizeof(str), "** %s da tra ve phat %s voi so tien $%d va $%d da duoc gui den %s quy ngan sach.",GetPlayerNameEx(playerid), GetPlayerNameEx(TicketOffer[playerid]), TicketMoney[playerid], money, arrGroupData[iGroupID][g_szGroupName]);
					new month, day, year;
					getdate(year,month,day);
					format(file, sizeof(file), "grouppay/%d/%d-%d-%d.log", iGroupID, month, day, year);
					Log(file, str);
					TicketOffer[playerid] = INVALID_PLAYER_ID;
					TicketMoney[playerid] = 0;
					if(GetPlayerCash(playerid) < 1) GivePlayerCash(playerid, 0);
					return 1;
				}
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "   Canh sat khong o gan ban!");
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "   Khong ai cung cap cho ban ve phat!");
	return 1;
}


CMD:truyduoi(playerid,params[])
{
    if (IsACop(playerid)  || PlayerInfo[playerid][pAdmin] > 2 || (arrGroupData[PlayerInfo[playerid][pMember]][g_iBugAccess] != 1) && PlayerInfo[playerid][pRank] >= arrGroupData[PlayerInfo[playerid][pMember]][g_iBugAccess])
    {
            new    iTargetID;
            if(sscanf(params, "u", iTargetID)) {
                return SendClientMessageEx(playerid, COLOR_GREY, "SU DUNG: /truyduoi [nguoi choi]");
            }
            else if(iTargetID == playerid) {
                return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung lenh nay cho ban.");
            }
            else if(IsACop(iTargetID))
            {
                return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the truy duoi nhan vien thi hanh phap luat.");
            }
            else if(!IsPlayerConnected(iTargetID)) {
                return SendClientMessageEx(playerid, COLOR_GREY, "Nguoi choi khong hop le.");
            }
            else if(GetPlayerInterior(iTargetID) != 0) {
                return SendClientMessageEx(playerid, COLOR_GREY, "Ban khong the su dung lenh nay trong khi dang o trong mot noi that.");
            }
            else if (GetPVarInt(playerid, "_SwimmingActivity") >= 1) {
                return SendClientMessageEx(playerid, COLOR_GRAD2, "Ban khong the tim thay nguoi nay trong khi dang boi loi.");
            }
            if(PlayerInfo[iTargetID][pTruyDuoi] == 1)
            {
                SendClientMessageEx(playerid, COLOR_GRAD2, "  Nguoi nay dang bi canh sat truy duoi");
                return 1;
            }
            if(!ProxDetectorS(200,playerid,iTargetID))
            {
                SendClientMessageEx(playerid, COLOR_GRAD2, "Ban phai gan nguoi nay trong pham vi 200m");
                return 1;
            }
            if (GetPVarInt(playerid, "_SwimmingActivity") >= 1)
            {
                SendClientMessageEx(playerid, COLOR_GRAD2, "  Ban phai dung boi! (/stopswimming)");
                return 1;
            }
                new str[128];
                //TimeTruyDuoi[playerid]=gettime()+300;
                format(str,128,"> Ban dang truy duoi %s",GetPlayerNameExt(iTargetID));
                SendClientMessageEx(playerid, COLOR_WHITE,str);
                SendClientMessageEx(iTargetID, COLOR_WHITE, "> Ban dang bi truy duoi");
                PlayerInfo[iTargetID][pTruyDuoi] = 1;
                timetrd[iTargetID] = SetTimerEx("TruyDuoiC",420000,false,"ii",iTargetID,playerid);
    }
    else  SendClientMessageEx(playerid, COLOR_GRAD1, "Ban khong duoc phep su dung lenh nay.");
    return 1;
}
